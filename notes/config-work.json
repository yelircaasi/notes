[
{"text": "[dev.to/thegeoffstevens/vs-code-settings-you-should-customize-5e75](https://dev.to/thegeoffstevens/vs-code-settings-you-should-customize-5e75)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[code.visualstudio.com/docs](https://code.visualstudio.com/docs)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[code.visualstudio.com/docs/remote/containers](https://code.visualstudio.com/docs/remote/containers)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[VS Code Top 10 Profi-Tipps](https://www.youtube.com/watch?v=eO_IFx6mR4E)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[Setting Up nix-shell and Visual Studio Code to Interact | Matthew Rhone dot Dev](https://matthewrhone.dev/nixos-vscode-environment)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[Color Theme | Visual Studio Code Extension API](https://code.visualstudio.com/api/extension-guides/color-theme%23create-a-new-color-theme)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[Creating our own color theme in vscode - DEV Community](https://dev.to/vinaybommana7/creating-our-own-color-theme-in-vscode-2b9m)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[Don't use VSCode - YouTube](https://www.youtube.com/watch?v%3DGUovhZYNO-M%26t%3D1625s)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[Visual Studio Code Themes](https://code.visualstudio.com/docs/getstarted/themes)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[Your First Extension | Visual Studio Code Extension API](https://code.visualstudio.com/api/get-started/your-first-extension)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[microsoft/vscode/issues/181533#issuecomment-1597187136](https://github.com/microsoft/vscode/issues/181533%23issuecomment-1597187136)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[nix-community/nix-vscode-extensions: Nix expressions for VSCode and OpenVSX extensions [maintainers: @deemp, @AmeerTaweel]](https://github.com/nix-community/nix-vscode-extensions)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[nix-community/nix4vscode](https://github.com/nix-community/nix4vscode)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[nix-community/vscode-nix-ide: Nix language support for VSCode editor [maintainer: @jnoortheen]](https://github.com/nix-community/vscode-nix-ide)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "Nexttry vscodium in container, test which extensions work (especially jupyter notebooks)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://youtu.be/rIa2UeMDXIg&sa=D&source=editors&ust=1711377830145454&usg=AOvVaw2_98xpxtFVFgkrDEZ1JB2j)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[VSCode Tutorial #2 - Settings (Local, Workspace, Sync)](https://www.google.com/url?q=https://youtu.be/rIa2UeMDXIg&sa=D&source=editors&ust=1711377830145756&usg=AOvVaw3xZyxDYJxI5-oIFA9aLdqE)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "ExtensionsreStructured TextPython Sphinx HighlighterautodocblocksPython MultiExtension Packauto DocstringAI Python Docstring GeneratorLinter (Nando Vieira) vs TrunkGit HistoryGit Project ManagerXML ToolsShellcheckBash IDE → configure for ZSHShell-formatNumbered BookmarksInstall Markdown All in One (for mathjax support)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://marketplace.visualstudio.com/items?itemName%3Dyzhang.markdown-all-in-one&sa=D&source=editors&ust=1711377830146190&usg=AOvVaw2mYhElK0ztQS1RJh3sbprt)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one](https://www.google.com/url?q=https://marketplace.visualstudio.com/items?itemName%3Dyzhang.markdown-all-in-one&sa=D&source=editors&ust=1711377830146456&usg=AOvVaw2lGzAp4STWrBsbojhFqFRE)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://marketplace.visualstudio.com/items?itemName%3Dgoessner.mdmath&sa=D&source=editors&ust=1711377830146684&usg=AOvVaw3hMNibGP9iaDOFSOR83h9i)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[marketplace.visualstudio.com/items?itemName=goessner.mdmath](https://www.google.com/url?q=https://marketplace.visualstudio.com/items?itemName%3Dgoessner.mdmath&sa=D&source=editors&ust=1711377830146906&usg=AOvVaw2SnYOF1L4P5gVv-USOfdSB)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://youtu.be/DNf6Bu7z4vw&sa=D&source=editors&ust=1711377830147103&usg=AOvVaw3JuGsDVRCsxs9eddiL-0zs)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[Best VSCode extensions in 2023](https://www.google.com/url?q=https://youtu.be/DNf6Bu7z4vw&sa=D&source=editors&ust=1711377830147319&usg=AOvVaw21vGrSRIIN1E1IKLiPJ0QE)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://www.youtube.com/watch?v%3DA2g4IwtAX_I&sa=D&source=editors&ust=1711377830147545&usg=AOvVaw1p9x2M9xnlZ78s15XbIPvY)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[Top 10 VSCode Extensions YOU MUST TRY! - YouTube](https://www.google.com/url?q=https://www.youtube.com/watch?v%3DA2g4IwtAX_I&sa=D&source=editors&ust=1711377830147755&usg=AOvVaw23tRYR4QweLvH0EJKTXRqr) Install Live Preview on Betsy (VSCode), also RedHat XML Toolsvscode extensions: rust-analyzer, crates, vscode-pyodide, Jupyter Power Tags, Gather, NeoVim UI Modifier", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://marketplace.visualstudio.com/items?itemName%3D076923.python-image-preview&sa=D&source=editors&ust=1711377830148020&usg=AOvVaw2AoDtoBUzpQGeJ18_dDBmP)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[marketplace.visualstudio.com/items?itemName=076923.python-image-preview](https://www.google.com/url?q=https://marketplace.visualstudio.com/items?itemName%3D076923.python-image-preview&sa=D&source=editors&ust=1711377830148292&usg=AOvVaw0_hn_57Dsu85SGo8TlNLjx) add Nix Extension Pack", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://levelup.gitconnected.com/5-trending-vs-code-extensions-for-productivity-92db5539c5c9&sa=D&source=editors&ust=1711377830148652&usg=AOvVaw1pfXgOD1gZivEFcVVbWObd)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[levelup.gitconnected.com/5-trending-vs-code-extensions-for-productivity-92db5539c5c9](https://www.google.com/url?q=https://levelup.gitconnected.com/5-trending-vs-code-extensions-for-productivity-92db5539c5c9&sa=D&source=editors&ust=1711377830148912&usg=AOvVaw2CxZjM7edYUQBYmIRiGSFw)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://github.com/benibenj/vscode-pythonCpp&sa=D&source=editors&ust=1711377830149106&usg=AOvVaw1T1UQ5hqXttoE_j3PkL2zY)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[benibenj/vscode-pythonCpp](https://www.google.com/url?q=https://github.com/benibenj/vscode-pythonCpp&sa=D&source=editors&ust=1711377830149305&usg=AOvVaw1Zf0EnXUULzRZ3QiR9-RqC)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://github.com/anas-araid/vscode-infinite-workspace&sa=D&source=editors&ust=1711377830149529&usg=AOvVaw0cZCl_uP-eYv9BneCW-6AL)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[anas-araid/vscode-infinite-workspace](https://www.google.com/url?q=https://github.com/anas-araid/vscode-infinite-workspace&sa=D&source=editors&ust=1711377830149735&usg=AOvVaw2kP06rPyHJRZi-XAy_XyFc)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "Dev Containers", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://www.youtube.com/watch?v%3D61M2takIKl8%26list%3DPLj6YeMhvp2S5G_X6ZyMc8gfXPMFPg3O31&sa=D&source=editors&ust=1711377830150186&usg=AOvVaw0iejLfnErg-WX9R1QjUTlL)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[Introduction", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[1 of 8 | Beginner's Series to: Dev Containers - YouTube](https://www.youtube.com/watch?v%3D61M2takIKl8%26list%3DPLj6YeMhvp2S5G_X6ZyMc8gfXPMFPg3O31)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://www.youtube.com/watch?v%3D0H2miBK_gAk&sa=D&source=editors&ust=1711377830150792&usg=AOvVaw0koHxF11Xcb6Z05gc1nTG9)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[How to create a great dev environment with Docker - YouTube](https://www.google.com/url?q=https://www.youtube.com/watch?v%3D0H2miBK_gAk&sa=D&source=editors&ust=1711377830151024&usg=AOvVaw23Oncw9tilSQT7MnYFUUjM)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://www.youtube.com/watch?v%3DSDa3v4Quj7Y&sa=D&source=editors&ust=1711377830151312&usg=AOvVaw1OPLwf4cLw0J2Hb_y78utZ)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[My Favorite Way To Handle Dev Environments | VS Code Devcontainers - YouTube](https://www.google.com/url?q=https://www.youtube.com/watch?v%3DSDa3v4Quj7Y&sa=D&source=editors&ust=1711377830151543&usg=AOvVaw0oz0OXGNwLvRG2drMEdoJo)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://youtu.be/0H2miBK_gAk&sa=D&source=editors&ust=1711377830151733&usg=AOvVaw3ThZ6WSY0cxiMk2f_GaXon)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[How to create a great dev environment with Docker](https://www.google.com/url?q=https://youtu.be/0H2miBK_gAk&sa=D&source=editors&ust=1711377830151913&usg=AOvVaw1p_BMMLt29mQUZsGoUV_sU)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://devblogs.microsoft.com/python/remote-python-development-in-visual-studio-code/&sa=D&source=editors&ust=1711377830152140&usg=AOvVaw3GB-IGqLAEPiwq13AhsSTl)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[Remote Python Development in Visual Studio Code](https://www.google.com/url?q=https://devblogs.microsoft.com/python/remote-python-development-in-visual-studio-code/&sa=D&source=editors&ust=1711377830152392&usg=AOvVaw0bYOZv3lsSpUNOASRkz_fX) start vscode remote development, esp for C/C++, Rust, Java, Go, etc.get VSCode Docker development working", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://www.youtube.com/watch?v%3DSDa3v4Quj7Y&sa=D&source=editors&ust=1711377830152633&usg=AOvVaw3HOQf2iOSrIQQW56gRaasR)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[My Favorite Way To Handle Dev Environments | VS Code Devcontainers - YouTube](https://www.google.com/url?q=https://www.youtube.com/watch?v%3DSDa3v4Quj7Y&sa=D&source=editors&ust=1711377830152929&usg=AOvVaw0qAfEmPJ0CwMCqKQVb_uri)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "Tips & Tricks", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://youtu.be/ifTF3ags0XI&sa=D&source=editors&ust=1711377830153416&usg=AOvVaw1N3XaOt1BcBdIZeubUMLRV)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[25 VS Code Productivity Tips and Speed Hacks](https://www.google.com/url?q=https://youtu.be/ifTF3ags0XI&sa=D&source=editors&ust=1711377830153693&usg=AOvVaw2O2vGsXcb4_Z9LTevhkdH_)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://www.youtube.com/shorts/zDiJpqVbszk&sa=D&source=editors&ust=1711377830153913&usg=AOvVaw3-g3N1YpaVk3rGVKDOQGAc)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[VSCode Multiple Cursors](https://www.google.com/url?q=https://www.youtube.com/shorts/zDiJpqVbszk&sa=D&source=editors&ust=1711377830154156&usg=AOvVaw2XkTLGWMcjGIaVQaMMll6n)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://www.youtube.com/watch?v%3DVXlBX8uLE3A&sa=D&source=editors&ust=1711377830154455&usg=AOvVaw3t2el1UJI6LE8FfJc_ar4h)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[Customizing VS Code's layout — An in-depth look at views, managing editors, and more! - YouTube](https://www.google.com/url?q=https://www.youtube.com/watch?v%3DVXlBX8uLE3A&sa=D&source=editors&ust=1711377830154689&usg=AOvVaw1UHWGmTGYYA5Z4JJu3y5-j)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://youtu.be/s3H6PmB4SZ4&sa=D&source=editors&ust=1711377830154870&usg=AOvVaw3jujzdcM2UQQlaiTV7inYP)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[Don't Use the Sidebar in VS Code!!](https://www.google.com/url?q=https://youtu.be/s3H6PmB4SZ4&sa=D&source=editors&ust=1711377830155056&usg=AOvVaw1Yia0E0CbODcjQnfzi0yte)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://www.heise.de/news/Visual-Studio-Code-liefert-konfigurierbare-Dateianzeige-im-Explorer-7370646.html&sa=D&source=editors&ust=1711377830155303&usg=AOvVaw1kKil4OGe2BderSZmVYJ7n)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[heise.de/news/Visual-Studio-Code-liefert-konfigurierbare-Dateianzeige-im-Explorer-7370646.html](https://www.google.com/url?q=https://www.heise.de/news/Visual-Studio-Code-liefert-konfigurierbare-Dateianzeige-im-Explorer-7370646.html&sa=D&source=editors&ust=1711377830155587&usg=AOvVaw3mfi6Iv6-h2cNCKmPC0BnT)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://code.visualstudio.com/docs/languages/markdown&sa=D&source=editors&ust=1711377830155842&usg=AOvVaw0AMes1ngBeoWCDCD99IJaC)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[Markdown editing with Visual Studio Code](https://www.google.com/url?q=https://code.visualstudio.com/docs/languages/markdown&sa=D&source=editors&ust=1711377830156061&usg=AOvVaw3JLBMKZLjBORwjto5yp15H)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://www.youtube.com/watch?v%3DElbGMWA6wA4&sa=D&source=editors&ust=1711377830156252&usg=AOvVaw0dWfeyC0BmYhCGBHHIyatC)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[Visualizing DS and Algorithms in VSCode](https://www.google.com/url?q=https://www.youtube.com/watch?v%3DElbGMWA6wA4&sa=D&source=editors&ust=1711377830156487&usg=AOvVaw2Ir6AHv2mDoEXG_FVIU1_7)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://docs.github.com/en/codespaces/overview&sa=D&source=editors&ust=1711377830156739&usg=AOvVaw1oK5DWnFoKpoOGsuZLcEaw)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[GitHub Codespaces overview - GitHub Docs](https://www.google.com/url?q=https://docs.github.com/en/codespaces/overview&sa=D&source=editors&ust=1711377830156938&usg=AOvVaw1s7kdlnZpLajyn0zDwxwBk)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "Fixes", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[Is it possible to have the Integrated Terminal open automatically on start of Visual Studio Code? - Stack Overflow](", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[stackoverflow.com/questions/45957618/is-it-possible-to-have-the-integrated-terminal-open-automatically-on-start-of-vi#:~:text=You just need to add,to auto-load your terminals.)](https://www.google.com/url?q=https://stackoverflow.com/questions/45957618/is-it-possible-to-have-the-integrated-terminal-open-automatically-on-start-of-vi%23:~:text%3DYou%2520just%2520need%2520to%2520add,to%2520auto%252Dload%2520your%2520terminals.)&sa=D&source=editors&ust=1711377830157447&usg=AOvVaw20njdNobBoZYbQ6g_CZacX) vscode nvim: how to use ctrl + R for redofigure out vscode neovim ctrl keyscheck out asvetliakov.vscode-neovim source code", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://www.google.com/search?q%3Dzsh%2Bterminal%2Bprompt%2Bcolors%2Bnot%2Bworking%2Bin%2BVSCode%26client%3Dubuntu%26hs%3DdlZ%26channel%3Dfs%26sxsrf%3DALiCzsZZCwxgodrFNiqLeJN_GFAwtxkGxA%253A1651735461970%26ei%3DpXtzYqrrOszekgWOnoPADg%26ved%3D0ahUKEwjq0eSL6sf3AhVMr6QKHQ7PAOgQ4dUDCA0%26uact%3D5%26oq%3Dzsh%2Bterminal%2Bprompt%2Bcolors%2Bnot%2Bworking%2Bin%2BVSCode%26gs_lcp%3DCgdnd3Mtd2l6EAMyBAgAEEcyBAgAEEcyBAgAEEcyBAgAEEcyBAgAEEcyBAgAEEcyBAgAEEcyBAgAEEc6BwgAEEcQsANKBAhBGABKBAhGGABQ1QVY1QVg1QZoAXACeACAAQCIAQCSAQCYAQCgAQHIAQjAAQE%26sclient%3Dgws-wiz&sa=D&source=editors&ust=1711377830157993&usg=AOvVaw1z1wdWaVTEF1iTxHfXTIio)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[Fix terminal prompt colors in VSCode](https://www.google.com/url?q=https://www.google.com/search?q%3Dzsh%2Bterminal%2Bprompt%2Bcolors%2Bnot%2Bworking%2Bin%2BVSCode%26client%3Dubuntu%26hs%3DdlZ%26channel%3Dfs%26sxsrf%3DALiCzsZZCwxgodrFNiqLeJN_GFAwtxkGxA%253A1651735461970%26ei%3DpXtzYqrrOszekgWOnoPADg%26ved%3D0ahUKEwjq0eSL6sf3AhVMr6QKHQ7PAOgQ4dUDCA0%26uact%3D5%26oq%3Dzsh%2Bterminal%2Bprompt%2Bcolors%2Bnot%2Bworking%2Bin%2BVSCode%26gs_lcp%3DCgdnd3Mtd2l6EAMyBAgAEEcyBAgAEEcyBAgAEEcyBAgAEEcyBAgAEEcyBAgAEEcyBAgAEEcyBAgAEEc6BwgAEEcQsANKBAhBGABKBAhGGABQ1QVY1QVg1QZoAXACeACAAQCIAQCSAQCYAQCgAQHIAQjAAQE%26sclient%3Dgws-wiz&sa=D&source=editors&ust=1711377830158631&usg=AOvVaw2PwcBQaRdf-VefWOjAWcSt)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://code.visualstudio.com/docs/editor/extension-marketplace%23_workspace-recommended-extensions&sa=D&source=editors&ust=1711377830158967&usg=AOvVaw3jNUVyilBCNHAqMSeII-RX)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[Managing Extensions in Visual Studio Code](https://www.google.com/url?q=https://code.visualstudio.com/docs/editor/extension-marketplace%23_workspace-recommended-extensions&sa=D&source=editors&ust=1711377830159214&usg=AOvVaw1AjZRsTX-An_mIJtmucwfe) Figure out fzf in VSCode terminalfix fzf keybindings in VSCode terminal", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "Debugging", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://code.visualstudio.com/docs/introvideos/debugging&sa=D&source=editors&ust=1711377830159605&usg=AOvVaw3tHbmsyCbcBRyiMxbLXzfe)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[Introduction to Debugging in Visual Studio Code](https://www.google.com/url?q=https://code.visualstudio.com/docs/introvideos/debugging&sa=D&source=editors&ust=1711377830159819&usg=AOvVaw2JpsSuYuCk5boSDuKunLQc)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[open-vsx.org/](https://www.google.com/url?q=https://open-vsx.org/&sa=D&source=editors&ust=1711377830160092&usg=AOvVaw028uVl8yY66fsYijVl94pc)", "type": "", "tags": ["config", "editor", "vscode", ""], "status": "toRead", "language": ""},
{"text": "[gitlab.com/domsch1988/domacs](https://gitlab.com/domsch1988/domacs)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://www.murilopereira.com/how-to-open-a-file-in-emacs/&sa=D&source=editors&ust=1711377894840182&usg=AOvVaw2YKtb2F3KICtNoIZe2FHU1)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[murilopereira.com/how-to-open-a-file-in-emacs/](https://www.google.com/url?q=https://www.murilopereira.com/how-to-open-a-file-in-emacs/&sa=D&source=editors&ust=1711377894840467&usg=AOvVaw3bm-scJUTN0kMioJlZVK_g)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://www.reddit.com/r/emacs/comments/nbzz8x/emacs_as_java_ide/&sa=D&source=editors&ust=1711377894840614&usg=AOvVaw2-lUiASFSJKBYaMJcGSUKE)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[r/emacs/comments/nbzz8x/emacs_as_java_ide/](https://www.google.com/url?q=https://www.reddit.com/r/emacs/comments/nbzz8x/emacs_as_java_ide/&sa=D&source=editors&ust=1711377894840757&usg=AOvVaw1kQle2rD4ZsE9Wk8OQUevi)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://github.com/rougier/nano-emacs&sa=D&source=editors&ust=1711377894840874&usg=AOvVaw0u4LCz3l6DmMFU4J6g7ZkY)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[rougier/nano-emacs](https://www.google.com/url?q=https://github.com/rougier/nano-emacs&sa=D&source=editors&ust=1711377894840991&usg=AOvVaw2iVAhaXHLvkPFdwJkxpUaE) cordova emacs", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://www.reddit.com/r/emacs/s/5z8frXlZd0&sa=D&source=editors&ust=1711377894841132&usg=AOvVaw0Umik2FAhk3Xe1u971odSf)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[r/emacs/s/5z8frXlZd0](https://www.google.com/url?q=https://www.reddit.com/r/emacs/s/5z8frXlZd0&sa=D&source=editors&ust=1711377894841253&usg=AOvVaw2erQ2inT4monUs07m5djyf)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "ChatGPT: As of my last knowledge update in September 2021, several popular Emacs distributions were widely used by the Emacs community. Keep in mind that the popularity of distributions can evolve over time, and new distributions may emerge. Here are some of the top Emacs distributions that were well-regarded:|||1. GNU Emacs: The official Emacs distribution, maintained by the Free Software Foundation. It provides a powerful and extensible platform for text editing and customization.|||2. Spacemacs: A community-driven Emacs distribution that combines the strengths of Emacs and Vim. It uses a layer system for configuration and includes a set of curated packages for a more modern and user-friendly experience.|||3. Doom Emacs: An Emacs configuration for developers who like Vim. It is fast, optimized for responsiveness, and comes with a set of bundled packages for various programming languages and tools.|||4. prelude-emacs: A configuration framework for Emacs, designed to be easy for Emacs newcomers yet feature-rich for power users. It comes with a curated set of packages and configurations.|||5. Emacs Live: A simple and opinionated Emacs configuration that focuses on providing a clean and productive environment for coding. It includes various packages and configurations for development.|||6. SpaceVim: Originally a Vim distribution, SpaceVim evolved to support both Vim and Emacs. It provides a set of curated plugins and a layer system for easy configuration.|||* Remember that these distributions often come with pre-configured settings, themes, and packages, making it easier for users to get started with Emacs or to switch between different configurations. It's important to explore and find the distribution that aligns with your workflow and preferences. Additionally, keep an eye on the latest updates and community feedback, as the landscape of Emacs distributions may have evolved since my last update.|||* ChatGPT emacs >> nvimApart from variable text sizes, what can emacs do that Neovim inherently cannot?ChatGPTWhile Neovim and Emacs share many features and functionalities, there are some aspects where Emacs offers unique capabilities or approaches. Here are some features or functionalities that Emacs has, and Neovim might not have them inherently or might implement them differently:|||1. Integrated Documentation and Help System:|||* Emacs has an extensive and integrated documentation system accessible through the describe-function, describe-variable, and other commands.|||* The Info system in Emacs provides detailed manuals and documentation within the editor.|||1. Customizable UI Elements:|||* Emacs allows for extensive customization of the user interface, including the ability to add custom toolbars, menu bars, and status bars.|||1. Elisp as a Configuration Language:|||* Emacs is configured using Emacs Lisp (Elisp), which allows users to extend and modify the editor using a Lisp dialect.|||* Neovim, in contrast, primarily uses Lua for configuration.|||1. Major Modes for Editing:|||* Emacs has a rich set of major modes that provide specific functionalities for different types of files (e.g., programming languages, text, org mode).|||* Neovim also has a concept of major modes, but the specifics might differ.|||1. Emacs Lisp as an Extension Language:|||* The entire Emacs environment is extensible using Emacs Lisp. Users can write their functions and commands to modify the behavior of the editor on the fly.|||* Neovim has a built-in Lua interpreter, and plugins are often written in Lua. However, the nature of customization can differ.|||1. Magit (Git Interface):|||* Magit is a powerful Git interface for Emacs, providing an interactive and efficient way to work with Git repositories.|||* While Neovim has plugins for Git integration, Magit is considered one of the most feature-rich Git interfaces.|||1. Dired Mode (File Manager):|||* Dired is a built-in file manager for Emacs that allows users to perform file operations within the editor.|||* Neovim does not have a built-in file manager, though plugins can provide similar functionality.|||1. ERC (Emacs IRC Client):|||* Emacs includes an IRC client (ERC) for chatting on IRC networks.|||* Neovim doesn't have a built-in IRC client.|||1. Built-in Web Browser (Eww):|||* Emacs has a simple web browser called Eww that allows users to browse the web within the editor.|||* Neovim relies on external browsers for web browsing.|||1. Tramp Mode (Remote File Editing):|||* Emacs includes Tramp mode, which allows seamless editing of files on remote machines over SSH or other protocols.|||* Neovim also supports remote file editing but may handle it differently.|||* It's important to note that both Emacs and Neovim are highly extensible, and many features that are not present in the core can be added through plugins or extensions. Users often choose their preferred editor based on personal workflow, philosophy, and the specific features that matter most to them.", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[top emacs distributions at DuckDuckGo](https://www.google.com/url?q=https://duckduckgo.com/?q%3Dtop%2Bemacs%2Bdistributions%26ia%3Dweb&sa=D&source=editors&ust=1711377894844334&usg=AOvVaw1kb8TQ1DAx5gEHWHY2PvVD)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://github.com/emacs-tw/awesome-emacs&sa=D&source=editors&ust=1711377894844597&usg=AOvVaw1FtHqJJVR2se9HM08tuTQj)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[emacs-tw/awesome-emacs: A community driven list of useful Emacs packages, libraries and other items.](https://www.google.com/url?q=https://github.com/emacs-tw/awesome-emacs&sa=D&source=editors&ust=1711377894844742&usg=AOvVaw0ayx2hI3ZzuE-UqkxxIP3P)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://www.dunebook.com/best-emacs-plugins/&sa=D&source=editors&ust=1711377894844873&usg=AOvVaw2nkN0nHrmTUCvDRi-bUb4y)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[21 Best Emacs Plugins - Dunebook](https://www.google.com/url?q=https://www.dunebook.com/best-emacs-plugins/&sa=D&source=editors&ust=1711377894845002&usg=AOvVaw22Fv42Usd2U0yZpjklSfP_)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://www.reddit.com/r/emacs/comments/w4gxoa/what_are_some_musthave_packages_for_emacs/&sa=D&source=editors&ust=1711377894845150&usg=AOvVaw1mBzo3XjppSQLkBvfS9MSY)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[What are some must-have packages for emacs? : r/emacs](https://www.google.com/url?q=https://www.reddit.com/r/emacs/comments/w4gxoa/what_are_some_musthave_packages_for_emacs/&sa=D&source=editors&ust=1711377894845307&usg=AOvVaw1i-58izz9gccQh6Rhr_cAK)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://duckduckgo.com/?q%3Dlatex%2Bin%2Bemacs%26ia%3Dweb&sa=D&source=editors&ust=1711377894845439&usg=AOvVaw1UNFjF5j0sVX2orpPdPLlb)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[latex in emacs at DuckDuckGo](https://www.google.com/url?q=https://duckduckgo.com/?q%3Dlatex%2Bin%2Bemacs%26ia%3Dweb&sa=D&source=editors&ust=1711377894845566&usg=AOvVaw39xkw_wanghQyCo2zQzhs7)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://michaelneuper.com/posts/efficient-latex-editing-with-emacs/&sa=D&source=editors&ust=1711377894845718&usg=AOvVaw0tp-wsYFTYPWD83kXFwf8Z)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[Efficient LaTeX Editing With Emacs - Michael](https://www.google.com/url?q=https://michaelneuper.com/posts/efficient-latex-editing-with-emacs/&sa=D&source=editors&ust=1711377894845861&usg=AOvVaw2RZ_FHie1bDd173J8ssFqq)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://opensource.com/article/18/4/how-create-latex-documents-emacs&sa=D&source=editors&ust=1711377894845997&usg=AOvVaw2Jg7X_4lq9KiV6Hea8dZoR)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[How to create LaTeX documents with Emacs | Opensource.com](https://www.google.com/url?q=https://opensource.com/article/18/4/how-create-latex-documents-emacs&sa=D&source=editors&ust=1711377894846136&usg=AOvVaw2AJrrQajf0yx0A0Pk_7WjG)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://www.gnu.org/software/emacs/manual/&sa=D&source=editors&ust=1711377894846254&usg=AOvVaw0ZUJIVz68tf7QTt7-ITYGW)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[GNU Emacs Manuals Online - GNU Project - Free Software Foundation](https://www.google.com/url?q=https://www.gnu.org/software/emacs/manual/&sa=D&source=editors&ust=1711377894846375&usg=AOvVaw2eFYukn_5IF0izL0-RQvdg)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://emacsredux.com/blog/2020/12/08/favorite-emacs-packages/&sa=D&source=editors&ust=1711377894846506&usg=AOvVaw1lHiDcLf8C-gyB8TqyYTKZ)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[Favorite Emacs Packages | Emacs Redux](https://www.google.com/url?q=https://emacsredux.com/blog/2020/12/08/favorite-emacs-packages/&sa=D&source=editors&ust=1711377894846645&usg=AOvVaw2CCr-_apNZGPdsfkKaiJzJ)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://www.masteringemacs.org/article/beginners-guide-to-emacs&sa=D&source=editors&ust=1711377894846798&usg=AOvVaw3b5U_8TQ08HeqIs-Wwc4_r)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[An Emacs Tutorial: Beginner's Guide to Emacs - Mastering Emacs](https://www.google.com/url?q=https://www.masteringemacs.org/article/beginners-guide-to-emacs&sa=D&source=editors&ust=1711377894846937&usg=AOvVaw0_2VjXH32hJYdbsCByDxYX)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://www.masteringemacs.org/&sa=D&source=editors&ust=1711377894847050&usg=AOvVaw2nQAW24MQ_DQgF04J6K6oj)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[Mastering Emacs](https://www.google.com/url?q=https://www.masteringemacs.org/&sa=D&source=editors&ust=1711377894847163&usg=AOvVaw1bAeffOvTH7LueLLy6mCAc)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://www.libhunt.com/topic/emacs-packages&sa=D&source=editors&ust=1711377894847282&usg=AOvVaw3P4T8-EmJf8NmeLPjbxGXc)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[Top 22 emacs-package Open-Source Projects (Dec 2023)](https://www.google.com/url?q=https://www.libhunt.com/topic/emacs-packages&sa=D&source=editors&ust=1711377894847403&usg=AOvVaw17pbJC-mOXiCvBi9beCIoY)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://www.maketecheasier.com/useful-emacs-packages/&sa=D&source=editors&ust=1711377894847527&usg=AOvVaw0WwRz1f0nNjrNtUpKURvHc)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[5 Useful Emacs Packages for Better Productivity - Make Tech Easier](https://www.google.com/url?q=https://www.maketecheasier.com/useful-emacs-packages/&sa=D&source=editors&ust=1711377894847675&usg=AOvVaw1uGr9AmmEhheXD33l4ljo-)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://melpa.org/%23/&sa=D&source=editors&ust=1711377894847792&usg=AOvVaw3GEhoAf-c-NtkhP3qaAejm)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[MELPA](https://www.google.com/url?q=https://melpa.org/%23/&sa=D&source=editors&ust=1711377894847904&usg=AOvVaw02B7a-gEVRuosT57yveCQT)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://melpa.org/%23/?sort%3Ddownloads%26asc%3Dfalse&sa=D&source=editors&ust=1711377894848021&usg=AOvVaw0V_jr1pw0aakZcxFOphWWJ)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[MELPA](https://www.google.com/url?q=https://melpa.org/%23/?sort%3Ddownloads%26asc%3Dfalse&sa=D&source=editors&ust=1711377894848134&usg=AOvVaw1xdb621jn9PpBAZD_e94NE)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://themkat.net/2021/09/13/recommended_emacs_packages.html&sa=D&source=editors&ust=1711377894848267&usg=AOvVaw280yUPSlqb41aOcdzjJlQb)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[Recommended Emacs packages](https://www.google.com/url?q=https://themkat.net/2021/09/13/recommended_emacs_packages.html&sa=D&source=editors&ust=1711377894848412&usg=AOvVaw3c59i-el1rAf_ue6iRdSaP)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://www.reddit.com/r/emacs/comments/axsnw8/your_favorite_packages_and_best_packages/&sa=D&source=editors&ust=1711377894848578&usg=AOvVaw1OUx7VCWlOsFmASmeY2TWD)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[Your favorite packages? And best packages? : r/emacs](https://www.google.com/url?q=https://www.reddit.com/r/emacs/comments/axsnw8/your_favorite_packages_and_best_packages/&sa=D&source=editors&ust=1711377894848734&usg=AOvVaw2GmV-5zjyIKGtTfLuTvyMO)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://www.xmodulo.com/best-plugins-to-increase-productivity-on-emacs.html&sa=D&source=editors&ust=1711377894848899&usg=AOvVaw1Vtv4rBDh0vp5Vip490UqH)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[What are the best plugins to increase productivity on Emacs](https://www.google.com/url?q=https://www.xmodulo.com/best-plugins-to-increase-productivity-on-emacs.html&sa=D&source=editors&ust=1711377894849046&usg=AOvVaw0_4ywSJY35jd5pz6d2pGnQ)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://github.com/doomemacs/doomemacs&sa=D&source=editors&ust=1711377894849161&usg=AOvVaw1yHjkv0FqA_ur3sBw2vNv8)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[doomemacs/doomemacs: An Emacs framework for the stubborn martian hacker](https://www.google.com/url?q=https://github.com/doomemacs/doomemacs&sa=D&source=editors&ust=1711377894849279&usg=AOvVaw0HYoN8Dn3bWTu1Y3P80vyU)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://www.reddit.com/r/git/comments/d071bw/alternatives_to_magit_for_cli_maybe/&sa=D&source=editors&ust=1711377894849443&usg=AOvVaw0u3Dl_X2D9SSeQkbaJc_kf)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[Alternatives to Magit? (For CLI maybe?) : r/git](https://www.google.com/url?q=https://www.reddit.com/r/git/comments/d071bw/alternatives_to_magit_for_cli_maybe/&sa=D&source=editors&ust=1711377894849605&usg=AOvVaw3lIVve6pcrOXvv-RjcplN_)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://jonas.github.io/tig/doc/manual.html&sa=D&source=editors&ust=1711377894849731&usg=AOvVaw1bXY-rSdDukA_kHsPonEMz)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[Manual · Tig - Text-mode interface for Git](https://www.google.com/url?q=https://jonas.github.io/tig/doc/manual.html&sa=D&source=editors&ust=1711377894849862&usg=AOvVaw1uJr2fo0vbtP-jA2UKKm5P)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://www.sobyte.net/post/2022-05/emacs/&sa=D&source=editors&ust=1711377894850007&usg=AOvVaw3v1fg1JXW1_u8FJG6NfgSw)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[Emacs Getting Started Guide: Why & How - SoByte](https://www.google.com/url?q=https://www.sobyte.net/post/2022-05/emacs/&sa=D&source=editors&ust=1711377894850132&usg=AOvVaw2zJFbMeo355NfF4RAIfx7m)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://www.gnu.org/software/emacs/tour/&sa=D&source=editors&ust=1711377894850247&usg=AOvVaw26mN_sLhxnIzKApJpZSDK2)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[GNU Emacs - Guided Tour - GNU Project](https://www.google.com/url?q=https://www.gnu.org/software/emacs/tour/&sa=D&source=editors&ust=1711377894850364&usg=AOvVaw2yh9phqtkiSPDOE-pVRD7B)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://emacs-ng.github.io/emacs-ng/&sa=D&source=editors&ust=1711377894850480&usg=AOvVaw0arJrPSz3WBkImCXo4AH1q)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[Overview - Emacs NG - A new approach to Emacs](https://www.google.com/url?q=https://emacs-ng.github.io/emacs-ng/&sa=D&source=editors&ust=1711377894850602&usg=AOvVaw1H3uzWvMD1dMrJBXFEpy0A)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://github.com/emacs-evil/evil&sa=D&source=editors&ust=1711377894850714&usg=AOvVaw3LQFqQE5rG7162uF-9nivk)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[emacs-evil/evil: The extensible vi layer for Emacs.](https://www.google.com/url?q=https://github.com/emacs-evil/evil&sa=D&source=editors&ust=1711377894850898&usg=AOvVaw3oRCDV6-ewkyYVvPJpWVZy)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://www.gnu.org/software/cflow/&sa=D&source=editors&ust=1711377894851022&usg=AOvVaw0nSUiqTmnEt6F-ygm8CGaU)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[Cflow - GNU Project - Free Software Foundation](https://www.google.com/url?q=https://www.gnu.org/software/cflow/&sa=D&source=editors&ust=1711377894851139&usg=AOvVaw27-tcED_wnT3HZWo01OEnw)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://github.com/janestreet/ecaml&sa=D&source=editors&ust=1711377894851251&usg=AOvVaw3Ji25DRlOcf-SY5F--OxHE)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[janestreet/ecaml: Writing Emacs plugin in OCaml](https://www.google.com/url?q=https://github.com/janestreet/ecaml&sa=D&source=editors&ust=1711377894851365&usg=AOvVaw0YSTQPsaq23AABQJp-Jdbv)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://www.emacswiki.org/emacs/List_Of_Major_And_Minor_Modes&sa=D&source=editors&ust=1711377894851500&usg=AOvVaw34QslnUr9uxYRWZdw7MZp8)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[EmacsWiki: List Of Major And Minor Modes](https://www.google.com/url?q=https://www.emacswiki.org/emacs/List_Of_Major_And_Minor_Modes&sa=D&source=editors&ust=1711377894851636&usg=AOvVaw3iuMmxR4IYhUwHh5pzZvJk)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[...](https://www.google.com/url?q=https://duckduckgo.com/?q%3Demacs%2Bconfig%2Bshowcase%26ia%3Dweb&sa=D&source=editors&ust=1711377894851763&usg=AOvVaw3CF6cGD8gcGY7NhztMaz3x)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[emacs config showcase at DuckDuckGo](https://www.google.com/url?q=https://duckduckgo.com/?q%3Demacs%2Bconfig%2Bshowcase%26ia%3Dweb&sa=D&source=editors&ust=1711377894851893&usg=AOvVaw26_w1JCmEcZRQum-NiM18S)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[Doom to Vanilla](https://www.google.com/url?q=https://www.youtube.com/watch?v%3DhoP4I9ounyQ&sa=D&source=editors&ust=1711377894852115&usg=AOvVaw3nElfzMUE4UoHAijvuQ_En)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[Overview - Emacs NG - A new approach to Emacs](https://emacs-ng.github.io/emacs-ng/)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[dotfiles/Emacs.org at master · daviwil/dotfiles](https://github.com/daviwil/dotfiles/blob/master/Emacs.org)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[dotfiles/Emacs.org at master · daviwil/dotfiles](https://github.com/daviwil/dotfiles/blob/master/Emacs.org)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[emacs 30 config](https://www.reddit.com/r/emacs/s/PvfAewpcci)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[http://libgen.rs/search.php?&req=emacs&phrase=1&view=simple&column=def&sort=year&sortmode=DESC](http://libgen.rs/search.php?%26req%3Demacs%26phrase%3D1%26view%3Dsimple%26column%3Ddef%26sort%3Dyear%26sortmode%3DDESC)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[MiniApollo/kickstart.emacs](https://github.com/MiniApollo/kickstart.emacs)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[emacswiki.org/emacs/StarterKits](https://www.emacswiki.org/emacs/StarterKits)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[r/NixOS/s/aMiyjPWmc1](https://www.reddit.com/r/NixOS/s/aMiyjPWmc1) emacs on nixos", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[r/emacs/s/PvfAewpcci](https://www.reddit.com/r/emacs/s/PvfAewpcci)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[marsam/emacspy: Program Emacs in Python instead of ELisp (i.e. write dynamic modules for Emacs in Python)](https://github.com/marsam/emacspy)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "perso [novoid (Karl Voit)](https://github.com/novoid/)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""},
{"text": "[protesilaos.com/emacs/denote](https://protesilaos.com/emacs/denote)", "type": "", "tags": ["config", "editor", "emacs", ""], "status": "toRead", "language": ""}
{"text": "[aurtzy](https://github.com/aurtzy/guix-config)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[autumnalantlers](https://github.com/AutumnalAntlers/old-guix-config)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[benoit J](https://git.sr.ht/~benoit/dotfiles/tree/rde/item/src/benoitj).", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[branjam4](https://github.com/branjam4/guixsd-config)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[demis balbach](https://github.com/minikN/dots).", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[dmyloco](https://github.com/dmyloco/guix-configs)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[engstrand](https://github.com/engstrand-config/guix-dotfiles) - wayland and dwl-guile", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[fstamour](https://github.com/fstamour/guix-configurations)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[handol-park](https://github.com/handol-park/guix-config)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[iambumblehead](https://github.com/iambumblehead/guix-home)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[izder456](https://github.com/Izder456/Guix-Config)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[jgart/confetti](https://git.sr.ht/~whereiseveryone/confetti).", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[krevedkokun](https://git.sr.ht/~krevedkokun/dotfiles/tree/master/item/config/home/yggdrasil)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[lambdanil](https://github.com/lambdanil/emacs-stuff)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[lrustand](https://github.com/lrustand/guix-config)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[nazar65](https://github.com/Nazar65/guix-config)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[newluhux](https://github.com/newluhux/guix-config)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[ray1729](https://github.com/ray1729/guix-config)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[reallanta](https://github.com/RealLanta/guix-config)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[ryan4yin](https://github.com/ryan4yin/guix-config)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[semilin](https://github.com/semilin/guix-config)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[serbanrobu](https://github.com/serbanrobu/guix-config)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[sherex](https://github.com/Sherex/guix-config)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[sleibrock](https://github.com/sleibrock/stove-guix)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[yoctocell](https://hg.sr.ht/~yoctocell/guixrc/browse/yoctocell/home)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[yvesoundi](https://github.com/yveszoundi/guix-config)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[zzkt](https://github.com/zzkt/guix)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[daviwil (system crafter guy)](https://git.savannah.gnu.org/cgit/guix.git) [broken link](https://config.daviwil.com/desktop)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[hiecaq](https://github.com/hiecaq/guix-config) - extremely helpful README", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[kabelo M'sobomvu Moiloa](https://git.sr.ht/~elevenkb/dotfiles).", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[mccd](https://git.mccd.space/)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[millak](https://github.com/Millak/guix-config) - sway, tofi, vim, etc - also pine64", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[rde - andrew Tropin part 1](https://git.sr.ht/~abcdw/rde/tree/master/item/examples), [part 2](https://github.com/abcdw/nonrde).", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[rde](https://git.sr.ht/~abcdw/rde)  [gh mirror](https://github.com/abcdw/rde)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[rde](https://trop.in/rde/) [manual](https://trop.in/rde/manual)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[wi11dey](https://github.com/wi11dey/guix-config) - julia, chromium, etc", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "***.", "language": ""},
{"text": "[bryal](https://github.com/bryal/guix-config) - old, but agda, haskell via stack, odin, etc", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "***.", "language": ""},
{"text": "[aartaka](https://github.com/aartaka/guix-config)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "[akagi](https://git.sr.ht/~akagi/guixrc)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "[alam0rt](https://github.com/alam0rt/guix-config)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "[carlosalbertofilho](https://github.com/carlosalbertofilho/guix-config)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "[lurdan](https://github.com/lurdan/guix-config) - little home config", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "[migalmoreno](https://github.com/migalmoreno/guix-config) - dwl-guile, dtao-guile, bemenu + j4-dmenu-desktop, nyxt, emacs, mpv", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "[nicolas-graves](https://github.com/nicolas-graves/dotfiles) - uses RDE and Python", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "[pusherofbrooms](https://github.com/pusherofbrooms/guix-config) - helpful README, xfce, sway", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "[tass0sm](https://github.com/Tass0sm/dotfiles) - beautiful bspwm", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "[worldofgeese](https://github.com/worldofgeese/guix-config) - good CLI programs", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "[dustonlyons](https://github.com/dustinlyons/guix-config) - old (moved to Nix)", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "***", "language": ""},
{"text": "[guiltydolphin](https://github.com/GuiltyDolphin/dotfiles) - quite old (4-9 years), but potentially still useful as a reference", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "***", "language": ""},
{"text": "[xade](https://codeberg.org/XADE) - quite small; part of very good nix config", "type": "dots", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "***", "language": ""},
{"text": "[guix.gnu.org/manual/fr/html_node/index.html#Top](https://guix.gnu.org/manual/fr/html_node/index.html%23Top)", "type": "reference", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[guix-science](https://github.com/guix-science/guix-science-nonfree)", "type": "reference", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[nonguix](https://gitlab.com/nonguix/nonguix)", "type": "reference", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[Packages — GNU Guix](https://packages.guix.gnu.org/)", "type": "reference", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[daviwil](https://systemcrafters.net/craft-your-system-with-guix/)", "type": "article", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[fishinthecalculator.me/blog/secrets-management-with-sops-guix.html](https://fishinthecalculator.me/blog/secrets-management-with-sops-guix.html)", "type": "article", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[Guix Sway](https://www.youtube.com/watch?v=OYbenLOm3Js)", "type": "article", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[Guix Playlist](https://www.youtube.com/playlist?app=desktop&list=PLEoMzSkcN8oNxnj7jm5V2ZcGc52002pQU)", "type": "article", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[guix podcast](https://hackerpublicradio.org/eps.php?id=2198)", "type": "article", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[guix.gnu.org](https://guix.gnu.org/en/blog/2023/the-full-source-bootstrap-building-from-source-all-the-way-down/)", "type": "article", "tags": ["config", "dots", "guix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "-> nix config critique [r/NixOS/s/TI2bPmWUYW](https://www.reddit.com/r/NixOS/s/TI2bPmWUYW)", "type": "discussion", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[nixos-dotfiles · GitHub Topics](https://github.com/topics/nixos-dotfiles)", "type": "resourceList", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "-> [exqisite custom-made nix designs](https://cybernews.com/editorial/the-sweet-fruits-of-hard-work-the-most-exquisite-custom-made-nix-designs/)", "type": "resourceList", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[vidbina](https://github.com/vidbina/nixos-configuration)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[foo-dogsquared](https://github.com/foo-dogsquared/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[jared-w](https://github.com/jared-w/nixos-configs)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[ttuegel](https://github.com/ttuegel/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[qazer2687](https://github.com/qazer2687/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[Gerschtli/nix-config](https://github.com/Gerschtli/nix-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[573/nix-config-1](https://github.com/573/nix-config-1)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[skelytoni](https://codeberg.org/SkelyToni/NixOS)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[matthewcroughan](https://gitlab.com/MatthewCroughan/darkflake/-/tree/master)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[gitlab.com](https://gitlab.com/nobodyinperson/flakes)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[felixkratz](https://github.com/FelixKratz/dotfiles/tree/0619040a8eebbf9896c5ce4fc9d312270426ed8f)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[...](https://bmcgee.ie/posts/2023/11/nix-my-workflow/)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[**nix-home-manager-config/home.nix at main · GustavoPeredo/nix-home-manager-config](https://github.com/GustavoPeredo/nix-home-manager-config/blob/main/home.nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[distribution-specific-guides/NixOS/nixos-configuration](https://www.ordinatechnic.com/distribution-specific-guides/NixOS/nixos-configuration)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[akirak/home.nix: My user configuration files written in Nix](https://github.com/akirak/home.nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[akirak/nix-config: NixOS + home-manager + Emacs configuration flake](https://github.com/akirak/nix-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[avnibilgin/dotfiles](https://github.com/avnibilgin/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[Awan/nix](https://github.com/Awan/nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[bbigras/nix-config](https://github.com/bbigras/nix-config)- [ ]  declarative installation of docker images?", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[danielsiepmann/nixpkgs: My own nixpkgs (for nix + home-manager). Used for nix on my current Ubuntu Setup. Lives * inside ~/.config/nixpkgs - nixpkgs - Forgejo of Daniel Siepmann](https://git.daniel-siepmann.de/danielsiepmann/nixpkgs)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[danth/stylix: System-wide colorscheming and typography for NixOS](https://github.com/danth/stylix/)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[dotfiles-nix/flake.nix at main · notusknot/dotfiles-nix](https://github.com/notusknot/dotfiles-nix/blob/main/flake.nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[dotfiles/home.nix at addf391401abc70eb97566f9ccdacbe6e6f96cd4 · bangn/dotfiles](https://github.com/bangn/dotfiles/blob/addf391401abc70eb97566f9ccdacbe6e6f96cd4/nixpkgs/home.nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[HugoReeves/nix-home: A Nix Home Manager setup. I've now moved to a new configuration system at hugoreeves/elemental](https://github.com/HugoReeves/nix-home)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[jakehamilton/config](https://github.com/jakehamilton/config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[jdisaacs.com](https://jdisaacs.com/blog/nixos-config/)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[librephoenix/nixos-config](https://github.com/librephoenix/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[lokeshmohanty/nix-config/blob/main/nixos/desktop-environment.nix](https://github.com/lokeshmohanty/nix-config/blob/main/nixos/desktop-environment.nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[LunNova/nixos-configs](https://github.com/LunNova/nixos-configs)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[monadplus/old-nixos-configuration](https://github.com/monadplus/old-nixos-configuration)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[nix-config: My pretty nice NixOS/home-manager configuration](https://sr.ht/~misterio/nix-config/)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[NixOS/nixos-artwork: Nix related artwork](https://github.com/NixOS/nixos-artwork)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[stylix](https://danth.github.io/stylix/index.html)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[unix.stackexchange.com](https://unix.stackexchange.com/questions/522822/different-methods-to-run-a-non-nixos-executable-on-nixos/522823%23522823)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "rice  [the-argus/gtk-nix: A gtk theme that can be configured with nix](https://github.com/the-argus/gtk-nix/)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "rice [github.com](https://github.com/danth/stylix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[yrashk/nix-home: Nix Home Manager](https://github.com/yrashk/nix-home)*", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[wiltaylor/dotfiles](https://github.com/wiltaylor/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[How I Nix](https://eevie.ro/posts/2022-01-24-how-i-nix.html)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[NyCodeGHG/dotfiles](https://github.com/NyCodeGHG/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[**my-nix-config/home.nix at master · SCOTT-HAMILTON/my-nix-config](https://github.com/SCOTT-HAMILTON/my-nix-config/blob/master/home.nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[blog.ocharles.org.uk](https://blog.ocharles.org.uk/blog/posts/2014-02-04-how-i-develop-with-nixos.html)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[CallMeCaleb94/KyniFlakes](https://github.com/CallMeCaleb94/KyniFlakes)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[davidak/nixos-config: NixOS configurations for server, desktop and mobile systems, including user specific config using Home Manager - nixos-config - Codeberg.org](https://codeberg.org/davidak/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[emmaboecker/dotfiles](https://github.com/emmaboecker/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[flake_inferno/home.nix at 4f3effcf938c564680d8d9b57e5715b77c9d20ad · PmicroTO/flake_inferno](https://github.com/PmicroTO/flake_inferno/blob/4f3effcf938c564680d8d9b57e5715b77c9d20ad/home/home.nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[FruitieX/home.nix: Home Manager configuration files](https://github.com/FruitieX/home.nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[henriquekirchheck/nixos-flake](https://github.com/henriquekirchheck/nixos-flake)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[hg.sr.ht](https://hg.sr.ht/~ab/)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[hyprland_nixos_catppuccin_for_all_apps/](https://www.reddit.com/r/unixporn/comments/15co6ns/hyprland_nixos_catppuccin_for_all_apps/)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[iharh/nixcfg/tree/6fab8a06850f47df37bd3cb0f027ecf11782cff4/hw](https://github.com/iharh/nixcfg/tree/6fab8a06850f47df37bd3cb0f027ecf11782cff4/hw)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[justinlime/dotfiles](https://github.com/justinlime/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[justinlime/dotfiles/tree/main](https://github.com/justinlime/dotfiles/tree/main)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[kbeerta/flake](https://github.com/kbeerta/flake)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[knoc-off/nixos](https://github.com/knoc-off/nixos)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[MasterofNull/nixos/](https://github.com/MasterofNull/nixos/)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[Misterio77/nix-starter-configs: Simple and documented config templates to help you get started with NixOS + home-manager + flakes. All the boilerplate you need!](https://github.com/Misterio77/nix-starter-configs)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[My NixOS Dotfiles Explained | Haseeb Majid](https://haseebmajid.dev/posts/2023-09-12-how-i-configure-nixos-as-part-of-my-development-workflow/)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[Nimor111/home.nix: Personal home manager configuration for non-nixos systems](https://github.com/Nimor111/home.nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[nixos-home/misc.nix at 7c5410e70f6f6db8d7a0a93a20bfd8be079b25f6 · RaitoBezarius/nixos-home](https://github.com/RaitoBezarius/nixos-home/blob/7c5410e70f6f6db8d7a0a93a20bfd8be079b25f6/misc.nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[notusknot/dotfiles-nix](https://github.com/notusknot/dotfiles-nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[redoracle/nixos](https://github.com/redoracle/nixos) -Alpine + Nix", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[rubyowo/dotfiles](https://github.com/rubyowo/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[spikespaz/dotfiles](https://github.com/spikespaz/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[srid/nixos-flake: A flake-parts module to manage NixOS and macOS machines, along with home-manager support, in a unified fashion.](https://github.com/srid/nixos-flake)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[tars0x9752/home](https://github.com/tars0x9752/home) (nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[Th0rgal/horus-nix-home](https://github.com/Th0rgal/horus-nix-home)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[thomascft/dotfiles/tree/nixos](https://github.com/thomascft/dotfiles/tree/nixos)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[TLATER/dotfiles: Dotfiles deployed with nix/home-manager. Feel free to take what you like!](https://github.com/TLATER/dotfiles/tree/master)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[yorodm/nixos-home: My home manager config](https://github.com/yorodm/nixos-home)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[zupo/nix](https://github.com/zupo/nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": " [gitlab.com](https://gitlab.com/librephoenix/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "$$$ [git.sr.ht](https://git.sr.ht/~darumaka/SnowISO)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "NixOS, Nix [reddit.com](https://www.reddit.com/r/unixporn/s/ESi62fFi1j)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "$$$ [exploitoverload/PwNixOS](https://github.com/exploitoverload/PwNixOS)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[Configure Global Cursor Theme - Breeze, Paper, etc...](https://github.com/NixOS/nixpkgs/issues/22652)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[http://reign-studios.com/wallpapers/nixos/NixOS_1440p.png](https://www.google.com/url?q=http://reign-studios.com/wallpapers/nixos/NixOS_1440p.png)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[Jetbrains IDEs don't use user cursor theme](https://github.com/NixOS/nixpkgs/issues/50344)*", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[please-help-fix-ugly-cursor-in-apps-installed-with-nix-env](https://discourse.nixos.org/t/please-help-fix-ugly-cursor-in-apps-installed-with-nix-env/11797)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[SenchoPens/base16.nix](https://github.com/SenchoPens/base16.nix) ", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "!!! [Set a consistent cursor theme for nix UI packages/guide-english/README.md · main · Javier Martínez / devtec-guides · GitLab](https://gitlab.com/javimarsal/devtec-guides)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[peppe.rs](https://git.peppe.rs/config/nixos/)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[mitchellh](https://github.com/mitchellh/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[Misterio77](https://github.com/Misterio77/nix-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[gvolpe](https://github.com/gvolpe/nix-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[sagikazarmark](https://github.com/sagikazarmark/nix-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[gitlab.com/bigbookofbug/nix-config-pub/-/raw/master/host-thinkpad/wallpapers/lainbg2.jpg?ref_type=heads](https://gitlab.com/bigbookofbug/nix-config-pub/-/raw/master/host-thinkpad/wallpapers/lainbg2.jpg?ref_type=heads)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[(1) NixOS My Own Setup A to Z (Goshs desktop) - YouTube](https://www.youtube.com/watch?v%3DMb5lIu_o6tQ)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[.files/HWD_Lenovo/etc/nixos at 9cced3edfa1ae0286fb0c22fa2dbe8828716a0e7 · mudrii/.files](https://github.com/mudrii/.files/tree/9cced3edfa1ae0286fb0c22fa2dbe8828716a0e7/HWD_Lenovo/etc/nixos)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[->](https://www.reddit.com/r/unixporn/comments/1bsw96y/2_years_later_swaywm/) nixos", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[->](https://www.reddit.com/r/unixporn/s/5iu6vaewBx) NixOS config", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[lilyinstarlight](https://github.com/lilyinstarlight/nixos-cosmic)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[dxcently](https://github.com/dxcently/dxflake)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[donovanglover](https://github.com/donovanglover/nix-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[juanbaut](https://github.com/JuanBaut/dotfiles/tree/nixos)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[selfmadesystem](https://github.com/SelfMadeSystem/nixdotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[nomisreual](https://github.com/nomisreual/nixdots)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[xade](https://codeberg.org/XADE/dotbin/wiki)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[iynaix](https://github.com/iynaix/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[zaneyos](https://gitlab.com/Zaney/zaneyos/) $$$$$$$$$", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[dmedinag](https://git.sr.ht/~dmedinag/d/commit/2793d3b751883e19dc56c6cd6e42f0ad3e1e69fe) nix config", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@aaronjanse's flake, with packages customized using wrappers](https://github.com/aaronjanse/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@alex3rd's config](https://github.com/wiedzmin/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@Andrew's configuration](https://gitlab.com/Andrew/configuration)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@areina's NixOS config](https://github.com/areina/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@axelf4's NixOS config](https://github.com/axelf4/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@badele's NixOS homelab configuration](https://github.com/badele/nix-homelab)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@baitinq's NixOS config](https://github.com/baitinq/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@balsoft's config](https://github.com/balsoft/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@barrucadu's NixOS config](https://github.com/barrucadu/nixfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@Baughn's NixOS config](https://github.com/Baughn/machine-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@bbigras's flake configs (NixOS + Home-Manager)](https://github.com/bbigras/nix-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@bddvlpr's NixOS + home-manager + deploy-rs config](https://github.com/bddvlpr/nix-dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@bennofs's NixOS config](https://github.com/bennofs/etc-nixos)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@bobbbay's NixOS + Home Manager + flake-utils-plus config](https://github.com/bobbbay/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@cab's flake](https://github.com/cab404/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@casept's NixOS config](https://github.com/casept/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@coreyoconnor's NixOS configs](https://github.com/coreyoconnor/nix_configs)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@CrazedProgrammer's NixOS config](https://github.com/CrazedProgrammer/nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@DAlperin's NixOS flake + home-manager](https://github.com/DAlperin/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@davidak's NixOS + home-manager config](https://codeberg.org/davidak/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@davidtwco NixOS & home-manager config](https://github.com/davidtwco/veritas)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@dieracdelta's NixOS + home-manager config](https://github.com/DieracDelta/flakes)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@drupol flake configs (NixOS + Home-Manager)](https://github.com/drupol/nixos-x260)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@eisfunke's NixOS + home-manager + flake config](https://git.eisfunke.com/config/nixos)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@FedericoSchonborn's NixOS + Nix on Droid + Home Manager config](https://github.com/FedericoSchonborn/nixfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@felschr's NixOS & home-manager config](https://gitlab.com/felschr/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@figsoda's NixOS config](https://github.com/figsoda/cfg)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@fufexan's NixOS + home-manager config](https://github.com/fufexan/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@gytis-ivaskevicius's NixOS + home-manager + flake-utils-plus config](https://github.com/gytis-ivaskevicius/nixfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@hutzdog's NixOS + home-manager + flake-utils-plus literate config](https://man.sr.ht/~hutzdog/dotfiles/)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@hyper_ch's NixOS config](https://github.com/sjau/nixos)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@iammrinal0's NixOS with home-manager using flakes config](https://github.com/iammrinal0/nix-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@infinisil's NixOS config](https://github.com/Infinisil/system)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@ixxie's NixOS config](https://github.com/ixxie/fluxstack)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@jwiegley's NixOS config](https://github.com/jwiegley/nix-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@K900's pile of configs](https://gitlab.com/K900/nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@kanashimia's config](https://github.com/kanashimia/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@kenranunderscore's NixOS + home-manager config](https://github.com/kenranunderscore/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@l0b0's NixOS config](https://gitlab.com/engmark/root)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@leosbotelho's NixOS config](https://github.com/leosbotelho/cartons)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@Lord-Valen's Hive](https://github.com/Lord-Valen/configuration.nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@luis's NixOS config](https://github.com/Luis-Hebendanz/nix-configs)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@mbledkowski's NixOS (and other) config](https://github.com/mbledkowski/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@mikeyobrien's NixOS + home-manager config](https://github.com/mikeyobrien/nix-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@mjm's NixOS + nix-darwin + home-manager flake](https://git.midna.dev/mjm/nix-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@mogria's NixOS config](https://github.com/mogria/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@mxjessie's NixOS config](https://github.com/mxjessie/nixos-configs)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@Myhlamaeus's NixOS & home-manager config](https://gitlab.com/Myhlamaeus/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@natto1784's NixOS & home-manager config](https://github.com/natto1784/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@netcave's NixOS config](https://github.com/netcave/nix-files)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@nickjanus's NixOS config](https://github.com/nickjanus/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@NobbZ flake](https://github.com/NobbZ/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@Nommy's flake](https://github.com/97nomad/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@Panadestein's flake + home-manager](https://github.com/Panadestein/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@pSub's NixOS config](https://github.com/pSub/configs/tree/master/nixos)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@periklis's Nix config for macOS](https://github.com/periklis/nix-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@prikhi's NixOS config](https://github.com/prikhi/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@rasendubi's NixOS config](https://github.com/rasendubi/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@roosemberth's NixOS config](https://gitlab.com/roosemberth/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@ryan4yin's flake for NixOS + macOS + home-manager, with a beginner-friendly tutorial](https://github.com/ryan4yin/nix-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@saksmt's config](https://github.com/saksmt/nix-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@samueldr's NixOS config](https://gitlab.com/samueldr/nixos-configuration)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@samuelgrf's NixOS config](https://gitlab.com/samuelgrf/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@savage42's config](https://github.com/vyorkin/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@SeTSeR's config](https://github.com/setser/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@selfuryon's config](https://github.com/selfuryon/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@semigroupoids's config](https://github.com/azahi/nixfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@sheenobu's NixOS + home manager config](https://hg.sr.ht/~sheenobu/config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@siraben's NixOS config](https://github.com/siraben/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@SnabbLab's NixOS config](https://github.com/snabblab/snabblab-nixos)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@Synthetica9's NixOS config](https://github.com/Synthetica9/configuration.nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@taktoa's NixOS config](https://github.com/taktoa/server-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@tejing's NixOS + home-manager flake config](https://github.com/tejing1/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@termslang's config](https://bitbucket.org/bzz/nixos)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@trishume's NixOS config](https://github.com/trishume/nixfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@utdemir NixOS & home-manager config](https://github.com/utdemir/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@Weathercold's modular NixOS & home-manager flake + package overlay](https://github.com/Weathercold/nixfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@yurrriq's NixOS & home-manager configs](https://github.com/yurrriq/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@yusdacra's NixOS & home-manager configs](https://github.com/yusdacra/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@Zaechus's NixOS flake + home-manager config](https://github.com/Zaechus/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[stockholm configuration and deployment of machines owned by the members of #krebs](http://cgit.krebsco.de/stockholm/tree/)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[NixOS configurations of the OpenLab Augsburg](https://github.com/openlab-aux/vuizvui) (@aszlig, @devhell, @sternenseemann, @Profpatsch)User configuration [@akavel's Nixpkgs config](https://github.com/akavel/nix-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@NobbZ' Home Manager configuration in a flake](https://github.com/NobbZ/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@matthewbauer's Nixpkgs config](https://github.com/matthewbauer/nixpkgs-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@pSub's Nixpkgs config](https://github.com/pSub/configs/blob/master/nix/.config/nixpkgs/config.nix) NixOps configuration [@headcounter's NixOps config](https://github.com/headcounter/deployment)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@LnL7's NixOS docker config](https://github.com/LnL7/nix-docker)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[@pSub's NixOps config](https://github.com/pSub/configs/tree/master/nixops/configurations)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[nixos.wiki/wiki/Configuration_Collection](https://nixos.wiki/wiki/Configuration_Collection)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[IOHK, blockchain startup, open-sources it's NixOps infrastructure.](https://github.com/input-output-hk/iohk-nixops)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[krops](https://cgit.krebsco.de/krops/about/) configuration [stockholm krops configuration](https://cgit.krebsco.de/stockholm/tree/krebs/krops.nix) Projects using nix ‣ - Provides an overlay for some of their projects. [Rhodecode](https://code.rhodecode.com/rhodecode-enterprise-ce/files/tip/) - Uses Nix for building their Python VCS server. [Zentralwerk Network](https://gitea.c3d2.de/zentralwerk/network) - Multi-tenant building network", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[~ben/cfg - sourcehut git](https://git.sr.ht/~ben/cfg)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[Configuration.nix / home.nix examples - Help - NixOS Discourse](https://discourse.nixos.org/t/configuration-nix-home-nix-examples/8185)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[Files · main · Richard Davis / Nix Dotfiles · GitLab](https://gitlab.com/davisrichard437/nix-dotfiles/-/tree/main)  [m7.rs/git/nix-config/](https://m7.rs/git/nix-config/)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[misterio77/nix-config](https://github.com/misterio77/nix-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[DavHau/nix-portable](https://github.com/DavHau/nix-portable)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[alex35mil/dotfiles](https://github.com/alex35mil/dotfiles) DOTS**", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[chadcat7/fuyu](https://github.com/chadcat7/fuyu)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[Reddit - Rice NixOS?](https://www.reddit.com/r/NixOS/comments/113ondu/rice_nixos/)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[wagdav/homelab](https://github.com/wagdav/homelab)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[infrastructure/default.nix at 706a72f151d4c0963458c1b9f05c5573df2a4b90 · devmattrick/infrastructure](https://github.com/devmattrick/infrastructure/blob/706a72f151d4c0963458c1b9f05c5573df2a4b90/nix/home/matt/profiles/desktop/default.nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[dotfiles/environment.nix at 61db8b29467947be9ffab54a7c55c0593cbcb59d · akkesm/dotfiles](https://github.com/akkesm/dotfiles/blob/61db8b29467947be9ffab54a7c55c0593cbcb59d/home/configuration/environment.nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[nix-config/xdg.nix at d3839ad57d9b254846d49d43f8651d1ed2966164 · MAHDTech/nix-config](https://github.com/MAHDTech/nix-config/blob/d3839ad57d9b254846d49d43f8651d1ed2966164/home/nix/files/xdg.nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[dotfiles/directories.nix at d343eba77c9543b56445b399fb0e7be6eedd7edd · superwhiskers/dotfiles](https://github.com/superwhiskers/dotfiles/blob/d343eba77c9543b56445b399fb0e7be6eedd7edd/modules/users/superwhiskers/directories.nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[dotfiles/default.nix at 49e5fcf1acdf5341804fbd0f9f847d057a155651 · Mikilio/dotfiles](https://github.com/Mikilio/dotfiles/blob/49e5fcf1acdf5341804fbd0f9f847d057a155651/modules/environment/default.nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[nixos-config/xdg-user-dirs.nix at 73584639e55b4335c89ea26fea3863ad0734cbc1 · jnsgruk/nixos-config](https://github.com/jnsgruk/nixos-config/blob/73584639e55b4335c89ea26fea3863ad0734cbc1/home/common/global/shell/xdg-user-dirs.nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[dotfiles/xdg.nix at a98fa78cabef00ca450136f30f1a8a909a60b417 · GaetanLepage/dotfiles](https://github.com/GaetanLepage/dotfiles/blob/a98fa78cabef00ca450136f30f1a8a909a60b417/home/tui/xdg.nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[config/borg.nix at 21620498d35975bc4cfc79955f7a5bd3b07debab · Prillan/config](https://github.com/Prillan/config/blob/21620498d35975bc4cfc79955f7a5bd3b07debab/nixpkgs/backup/borg.nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[NixOS-config/nvim.nix at 8b70128f9e74b652e12e91984622ded147ed8f41 · Simone-Alghisi/NixOS-config](https://github.com/Simone-Alghisi/NixOS-config/blob/8b70128f9e74b652e12e91984622ded147ed8f41/home-manager/modules/nvim.nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[nix-dotfiles/default.nix at 011b20e05e9d954b1dbd5638fd8328ba290bf1ba · h7x4/nix-dotfiles](https://github.com/h7x4/nix-dotfiles/blob/011b20e05e9d954b1dbd5638fd8328ba290bf1ba/home/config/xdg/default.nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[bbommarito/nixos-config: My Nix Flake system configuration](https://github.com/bbommarito/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[suderman/nixos: system configurations & dotfiles](https://github.com/suderman/nixos)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[reckenrode/nixos-configs: My NixOS and nix-darwin configs](https://github.com/reckenrode/nixos-configs)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[gmarmstrong/dotfiles](https://github.com/gmarmstrong/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[hxlcyxn/nixos](https://github.com/hxlcyxn/nixos)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[tadfisher/flake](https://github.com/tadfisher/flake)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[vkleen/machines: Using NixOS to configure some of my machines](https://github.com/vkleen/machines)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[kalbasit/soxincfg: Soxin configuration](https://github.com/kalbasit/soxincfg)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[ambroisie/nix-config: My NixOs configuration files. Only used for my self-hosted infra at the moment. - nix-config - Ambroisie's forge](https://gitea.belanyi.fr/ambroisie/nix-config/src/commit/d918bf279d8149168bde3580402306ad7523c805)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[~ben/cfg: linux.nix - sourcehut git](https://git.sr.ht/~ben/cfg/tree/master/item/linux.nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[alexpearce/dotfiles: My dotfiles.](https://github.com/alexpearce/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[eviefp/dotfiles](https://github.com/eviefp/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[lucperkins/nix-home-config: Nix configuration for my macOS laptop](https://github.com/lucperkins/nix-home-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[srid/nix-config: My NixOS configuration (DEPRECATED)](https://github.com/srid/nix-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[jamespwilliams/neovim-go-nix-develop: Set up a Go neovim development environment in one command using Nix](https://github.com/jamespwilliams/neovim-go-nix-develop)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[srid/nixos-config: KISS NixOS configuration based on Flakes & flake-parts (supports macOS too)](https://github.com/srid/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[m7.rs/git/nix-config/](https://m7.rs/git/nix-config/)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[hhoeflin.github.io/blog/devtools/using_nix/](https://hhoeflin.github.io/blog/devtools/using_nix/)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[maxhbr/myconfig: my Linux Configuration](https://github.com/maxhbr/myconfig)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[Reddit - GREEN [Sway] Tokyonight + left waybar + nixos + AI generated wallpaper](https://www.reddit.com/r/unixporn/comments/10ugzfn/sway_tokyonight_left_waybar_nixos_ai_generated/)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[Reddit NIXOS COLOR - [i3] First time ricing, I like transparency and blur.](https://www.reddit.com/r/unixporn/comments/wor3id/i3_first_time_ricing_i_like_transparency_and_blur/)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[Reddit - my dotfiles for a minimalistic Xmonad / nixOS environment (btw. how do you manage your dotfiles?)](https://www.reddit.com/r/dotfiles/comments/ml7vc3/my_dotfiles_for_a_minimalistic_xmonad_nixos/)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[Reddit - NIXOS GREEN [BSPWM/MATE] NixOS jungle](https://www.reddit.com/r/unixporn/comments/c0c8tf/bspwmmate_nixos_jungle/)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[Reddit - [sway] hopped on the nixos train ;)](https://www.reddit.com/r/unixporn/comments/xxu2pd/sway_hopped_on_the_nixos_train/)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[Reddit - [i3-gaps] finally finished™ my NixOS config. Everforest looks nice](https://www.reddit.com/r/unixporn/comments/108ybd1/i3gaps_finally_finished_my_nixos_config/)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[abdul2906/nixos-system-config](https://github.com/abdul2906/nixos-system-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[mcotocel/nixdots](https://github.com/mcotocel/nixdots)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[SheetKey/nixos-dotfiles](https://github.com/SheetKey/nixos-dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[winston0410/nixos-dotfiles](https://github.com/winston0410/nixos-dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[git.litschi.xyz/litschi/nix-darwin](https://git.litschi.xyz/litschi/nix-darwin)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[abdul2906/nixos-system-config](https://github.com/abdul2906/nixos-system-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[nix-config/home.nix at master · srid/nix-config](https://github.com/srid/nix-config/blob/master/nix/home.nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[nix-home/home.nix at master · yrashk/nix-home](https://github.com/yrashk/nix-home/blob/master/home.nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[b/home.nix at master · burke/b](https://github.com/burke/b/blob/master/etc/nix/home.nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[nixpkgs/home.nix at main - nixpkgs - Forgejo of Daniel Siepmann](https://git.daniel-siepmann.de/danielsiepmann/nixpkgs/src/branch/main/home.nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[Why I Threw Out My Dotfiles • davegallant](https://davegallant.ca/blog/2021/09/08/why-i-threw-out-my-dotfiles/)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[tadfisher/nixhome: My .nix home generator](https://github.com/tadfisher/nixhome)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[AloneER0/NixFiles](https://github.com/AloneER0/NixFiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[krutonium](https://gitea.krutonium.ca/Krutonium/NixOS)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[Icy-Thought/snowflake](https://github.com/Icy-Thought/snowflake) SwayWM GREEN NixOS [Ruixi-rebirth/flakes](https://github.com/Ruixi-rebirth/flakes)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[codeberg.org/quantenzitrone/nix-config/src/commit/4939103787da8e59f3cef8b0078718f638d8d919](https://codeberg.org/quantenzitrone/nix-config/src/commit/4939103787da8e59f3cef8b0078718f638d8d919)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[qwbarch/nix-config/tree/5fa822feaae405d8e44f7dafd6c0948d54159b51](https://github.com/qwbarch/nix-config/tree/5fa822feaae405d8e44f7dafd6c0948d54159b51)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[b/home.nix at master · burke/b](https://github.com/burke/b/blob/master/etc/nix/home.nix) vifm nix [git.xirion.net/0x76/nixpkgs/commit/c6588dd34103bcef573c2afaba40748076296d6f](https://git.xirion.net/0x76/nixpkgs/commit/c6588dd34103bcef573c2afaba40748076296d6f**)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[solomon-b/nixos-config](https://github.com/solomon-b/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[cprussin/dotfiles](https://github.com/cprussin/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[jumper149/dotfiles](https://github.com/jumper149/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[jkachmar/dotnix](https://github.com/jkachmar/dotnix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[shaunsingh/nix-darwin-dotfiles](https://github.com/shaunsingh/nix-darwin-dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[sahib/dotfiles](https://github.com/sahib/dotfiles) (nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[astro/skyflake](https://github.com/astro/skyflake)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[git.sr.ht/~trevdev/nix](https://git.sr.ht/~trevdev/nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[zachcoyle/flake-templates](https://github.com/zachcoyle/flake-templates)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[zachcoyle/nix-config](https://github.com/zachcoyle/nix-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[Wittano/nix-repo](https://github.com/Wittano/nix-repo)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[Wittano/nix-dotfiles](https://github.com/Wittano/nix-dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[ners/NixOS](https://github.com/ners/NixOS)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[sarveshrulz/nixos_config](https://github.com/sarveshrulz/nixos_config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[sum-rock/just-sum-nix](https://github.com/sum-rock/just-sum-nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[Misterio77/nix-starter-configs](https://github.com/Misterio77/nix-starter-configs)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[nixos.wiki/wiki/Configuration_Collection](https://nixos.wiki/wiki/Configuration_Collection)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[invesalius3_nix_develop/flake.nix at main · tfmoraes/invesalius3_nix_develop](https://github.com/tfmoraes/invesalius3_nix_develop/blob/main/flake.nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[sandmuel/minigui-flake](https://github.com/sandmuel/minigui-flake)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[purcell/dotfiles](https://github.com/purcell/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[utdemir/dotfiles-nix](https://github.com/utdemir/dotfiles-nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[Anomalocaridid/dotfiles](https://github.com/Anomalocaridid/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[erictossell/nixflakes](https://github.com/erictossell/nixflakes)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": " [...](https://gitlab.com/librephoenix/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[librephoenix](https://gitlab.com/librephoenix/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[jakehamilton](https://github.com/jakehamilton/config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[spikespaz](https://github.com/spikespaz/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[NyCodeGHG](https://github.com/NyCodeGHG/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[emmaboecker](https://github.com/emmaboecker/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[LunNova](https://github.com/LunNova/nixos-configs)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[thomascft](https://github.com/thomascft/dotfiles/tree/nixos)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[notusknot](https://github.com/notusknot/dotfiles-nix/blob/main/flake.nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[TLATER](https://github.com/TLATER/dotfiles/tree/master)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "NixOS, Nix [...](https://www.reddit.com/r/unixporn/s/ESi62fFi1j)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[AmadeusWM $$$$$](https://github.com/AmadeusWM/nixos-dots) * interesting flake split into many different outputs * moderate theming for qt and gtk, good firefox theming, some zathura theming * good copyq customzation * some vscode extensions examples * good ags bar with js or ts, some gnome stuff and keybinds, deepin-screen-recorder * flameshot, gcolor3, xclip * hyprland comprehensive config (cliphist dart-sass gtklockgrim # Screenshots hyprpaper hyprpicker networkmanagerapplet socat slurp swappy # Screenshot editor swaylock # swayidle swww wdisplays wf-recorder wl-clip-persist wl-clipboard wofi xorg.xhost), i3 (picom, feh) * launchers: anyrun and wofi * services: dunst, gtklock, swayidle * helix, kitty, nvim, starship, zsh", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "******", "language": ""},
{"text": "[anomalocaridid](https://github.com/Anomalocaridid/dotfiles) - includes Nyxt; wezterm, zsh, helix, nnn, bat, btop, eww, eza, fish, fuzzel, fzf, gaming, git, glow, hyprland,", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "******", "language": ""},
{"text": "[Aylur $$$$$](https://github.com/Aylur/dotfiles) * ags, sassc, home manager, wezterm, hyprland, gnome-shell theming, colorscript, * blackbox terminal, bash+zsh sharing configs, firefox, starship * tmux; lf, neofetch, obsidian, mpv with override, libreoffice spotify * caprine-bin, d-spy, easyeffects, github-desktop, gimp, transmission_4-gtk * discord, bottles, teams-for-linux, icon-library, dconf-editor * tools: bat, eza, ranger, fd, ripgrep, fzf, socat, jq, acpi, inotify-tools, ffmpeg * libnotify, killall, zip, unzip, glib * hyprland apps: wl-gammactl, wl-clipboard, wf-recorder, hyprpicker, wayshot, swappy, slurp * imagemagick, pavucontrol, brightnessctl, swww, fortune, jp2a, pywal * glow, vhs, gum, slides, charm, skate, yabridge, yabridgectl, wine-staging, distrobox * langs: nodejs, go, bun, sassc, typescript, meson, ninja, eslint", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "******", "language": ""},
{"text": "[donovanglover](https://github.com/donovanglover/nix-config) Nix Flakes, Home Manager, Stylix, and Hyprland. 10/10", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[JonathanReeve](https://github.com/JonathanReeve/dotfiles)  doom-emacs, R, cachix, sway colors, nushell, gnome, hyprland, python, waybar, nixos, cachix, doom emacs, r, cachix, sway, nushell, gnome, home manager, interesting nushell files", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[jonringer](https://github.com/jonringer/nixpkgs-config) good use of conditionals", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[ch1bo ](https://github.com/ch1bo/dotfiles) - nixos flake, home manager, z, bash, emacs, git, gpg, haskell, urxvt, vim, colortable", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "******", "language": ""},
{"text": "[coffee-is-power](https://github.com/coffee-is-power/nix-configuration) - alacritty, direnv, dunst, env-variables, eww, fcitx5, firefox, gh, git, gpg-agent, gtk-themes, helix, hyprland, hyprpaper, lazygit, mime-apps, networkmanager-dmenu-config, nushell, rofi, vscode, zellij", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[colemickens/nixcfg: NixOS and Home-Manager configs for my devices. dotfiles, but way better](https://github.com/colemickens/nixcfg) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[crystal ](https://github.com/chadcat7/crystal)chadcat7 - perfect nixos (flake) - awesome - [chadcat7 fuyu](https://github.com/chadcat7/fuyu/tree/the-awesome-config) // hyprland, zsh, wezterm, ncmpcpp, picom ([fdev31 fork](https://github.com/fdev31/picom/tree/animation-pr)), nvim ([config](https://github.com/chadcat7/lodo)) [dwm](https://github.com/chadcat7/dwm) [st](https://github.com/chadcat7/st) [contrun ](https://github.com/contrun/dotfiles) - nix flake, ammonite shell, ansible, haskell, cabal, nextcloud, alacritty, aria2, atuin, autokey, calibre, copyq, con, dunst, fcitx. fcron, foot, i3, i3blocks, i3status-rust, i3status, kakoune with lsp, karabiner, kupfer, latexmk, luakit, midnight commander, mpv, mutt, nixpkgs, nvim, nvimpager, papis, parcellite, fish, pry (ruby), qpdfview, qutebrowser, ranger, rclone, rofi, sslh, sway, sxkhd, syncthing-gtk, systemd, terminator, termite, termonad, tilda, todoman, tridactyl, uzbl, vdirsyncer, wezterm, xkeysnail, xmobar, youtube-dl, zathura, screenkey", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "******", "language": ""},
{"text": "[Misterio77](https://github.com/misterio77/nix-config) - author of the template I used; browsers:", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[rxyhn](https://github.com/rxyhn/yuki)  - nix flake", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[samiulbasirfahim](https://github.com/samiulbasirfahim/Flakes)**[[Hyprnix 2.0] yet another ricing. nixos | hyprland | flakes | catppuccin](https://www.youtube.com/watch?v=gBMBzTQR47M)**", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[datsfilipe](https://github.com/datsfilipe/dotfiles) - nix flake ###", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[ryan4yin](https://github.com/ryan4yin/nix-config) NixOS/macOS + home-manager + i3/hyprland + neovim/emacs + agenix - legendary 10/10", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[librephoenix](https://github.com/librephoenix/nixos-config) - very good theming and nix wrapper", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[mechatour/hyprland_amber_gold: Amber Gold theme. I like the old amber screen terminals. This is an approximation of the colouring.](https://github.com/mechatour/hyprland_amber_gold) - great amber theme for hyprland and an excellent wayland stack", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[sly-harvey](https://github.com/Sly-Harvey/NixOS)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[mohabaks/dotfiles: :computer: my ricing configs.](https://github.com/mohabaks/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[wochap](https://github.com/wochap/nix-config) - excellent cachix, bootloader | nice structure, lynx, neovim, taskwarrior... 10/10", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[gpskwlkr](https://github.com/gpskwlkr/nixos-hyprland-flake)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[frost-phoenix](https://github.com/Frost-Phoenix/nixos-config) - amazing rice, 10/10", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[gvolpe](https://github.com/gvolpe/nix-config) - phenomenal rice, 10/10", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[jamibear](https://github.com/jamibear/home.nix) - hyprland, kitty, bash, starship, ags - 10/10", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[pinpox](https://github.com/pinpox/nixos) - coloscheme, vim theme, wezterm, zellij, sway, pandoc, river, rofi, tmux, waybar, xdg, zk, obs-studio, nvim, dunst, alacritty, chromium, foot, git, go, gtk, etc - nice blog!", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[shaunsingh](https://github.com/shaunsingh) - Legendary (Nix, Nvim, and Nyxt) - [shaun-singh](https://github.com/shaunsingh/nix-darwin-dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[seyfullahgundogdu](https://github.com/SeyfullahGundogdu/nixos-config) - nice clean simple structure - hyprland, mako, pywal, alacritty, cava, dirnv, firefox, git, mangohud, plasma, spicetify, starship, vscode, waybar, zsh", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[theDummyUser/nixdots](https://github.com/TheDummyUser/nixdots) - dunst, eza, foot, fzf, git, hyprland, kde, kitty, nixvim, rofi, starship, swaylock, waybar, zathura", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[yusamock](https://github.com/yusamock/nixos) - nvim, starship, libbrewolf, waybar, hyprland", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[figsoda](https://github.com/figsoda/cfg) - excellent Nix code, from one of the top maintainers of NixOS", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[julius-boettger](https://github.com/julius-boettger/dotfiles) $$$$$$ - nixos, autokey, awesomewm, nix, firefox custom css, ideavim, gitnuro, neofetch, picom, circadian, sddm-sugar-candy, home manager, obs-studio, font-manager, pick-colour-picker, unstable.vscode, firefox-devedition, obsidian, libreoffice, barrier, discord, bitwarden, gimp-with-plugins, virtualbox, jetbrains.idea-ultimate, gparted, spotify, networkmanagerapplet, ventoy, unstable.stacer (system monitor), autokey (x11 desktop automation), unstable.darktable (photo editor and raw developer), inkscape-with-extensions (vector graphic editor), veracrypt (disk encryption), freefilesync (file backup), clipster (clipboard manager), alsa-scarlett-gui (control center for focusrite usb audio interface), unstable.git-credential-manager (gui authentication for git), vlc (video player), qview (image viewer), audacious (audio player), guvcview (camera), dconf (needed for home-manager gtk theming), sioyek (pdf reader), also available as programs.sioyek in hm, baobab (disk usage analyzer), (gtk theme), fluent-gtk-theme, virtualenv, alsa-utils (control volume), appimage-run (run app images on nixos), asciiquarium (ascii art aquarium), barrier, cbonsai (ascii art bonsai), clipster (clipboard manager), fortune (random quote), gcc, git, bash, wget, tree, neofetch, gphoto2fs (mount camera), gnome.nautilus (file manager), gnome.sushi (thumbnails in nautilus), gparted, gphoto2fs (mount camera), jdk, libsForQt5.qt5.qtwayland qt6.qtwayland (hyprland must-haves), lolcat (make things rainbow colored), lxde.lxmenu-data (required to discover applications), lxde.lxsession # just needed for lxpolkit (an authentication agent), lxqt.lxqt-powermanagement (turn off monitors on idle), nodejs_20, pcmanfm (file manager), pick-colour-picker, picom-jonaburg (compositor), pulseaudio (for pactl), python3Full, rustup, starship (shell prompt), install as program and package to set PATH, ulauncher (launcher), unclutter-xfixes (hide mouse on inactivity), unstable.eww-wayland (build custom widgets), unstable.grimblast (screenshot), unstable.swaynotificationcenter, unstable.swayosd (osd for volume changes), unstable.swww (wallpaper switching with animations), unstable.waybar (status bar), unstable.xssstate, variables.pkgs.circadian, variables.pkgs.hyprsome (awesome-like workspaces), xarchiver (archive manager), xprintidle,", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[anomalocaridid $$$](https://github.com/Anomalocaridid/dotfiles) - ly, bluetooth, persistence, pipewire, security, theming, vpn, wezterm, nyxt, tealdeer, xplr, zoxide, fish, eza, fuzzel, imv, other top CLI tools, 100 programming langages, ...", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[jakehamilton/config](https://github.com/jakehamilton/config) - good examples for how to use overlays from another flake", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[martinbaillie](https://github.com/martinbaillie/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[wiedzmin](https://github.com/wiedzmin/nixos-config) - cool use of justfile; nyxt, qutebrowser; nice structure", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[matthiasBenaets](https://github.com/MatthiasBenaets/nixos-config) js and python shells, river, sway, kde, gnome, hyprland, emacs, nvim, eww, accounts, alacritty, flatpak, kitty, obs, rofi, thunar - also really good documentation and links", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[vonfry](https://github.com/Vonfry/dotfiles) - nvim, emacs, haskell, julia, orgmode, agda, common lisp, rust", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[vyorkin](https://github.com/vyorkin/nixos-config) - emacs, vim, vscode, firefox with extensions, kitty, alacritty, themes & colors, sway, mako, wofi, etc", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[maxouverzou](https://github.com/maxouverzou/nixos-config) - doom emacs, vscode, direnv, firefox, fish, bash, good custom packaging, hyprland, starship, syncthing, terminal, tmux, zellij, zsh, nushell, git, etc - includes raspberry pi support", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[mruediger](https://github.com/mruediger/nixos-config) - git-crypt, templates, audio, bash, devops, emacs, thunar, firefox, fonts, git, go, gpg, go, nu, printer, python, rclone, sway, virtualization, xdg, nextcloud, good base shell env", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[rgbcube](https://github.com/RGBCube/NCC) - hyprland, nushell, bat, blueman, autofreq, btop, discord, dunst, endlessh-go, firefox, fonts, fuzzel, ghostty, git, gtk, helix, keyring, kitty, localisation, logind, nano, network-manager, nix, pipewire, python, rg, rust, ssh, thunar, w3m, waybar, etc", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[xiro-codes](https://github.com/xiro-codes/dotfiles.v2.nix) - eww, fiish, hyprland, joshuto, kitty, lf, mako, mpd, neovim, niri, nixvim, nnn, ranger, rofi, sway, waybar", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[rice-cracker-dev](https://github.com/rice-cracker-dev/nixos-config) - hyprland, ags, git, quickshell, rofi, spicetify, stylix, vscode, neovim-flake $$$- looks great", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[null4833902](https://gitlab.com/null4833902/nixos) - greetd, mpd, nix-ld, nvidia, swaylock, thunar, zoxide, tmux, starship, gtk, neovim, ncmcpp, dunst, hypr, waybar, wofi, alacritty, bat, tmux, good shell config, good package, list, doas", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[birdeeHub/birdeeSystems](https://github.com/BirdeeHub/birdeeSystems)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[yunfachi](https://github.com/yunfachi/nix-config) - good readme, sops, boot, codium, eww, firefox, bash, discord, starship, git, eza, ncmcpp, wpaperd, bat", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[daru-san](https://github.com/Daru-san/Snowflake-dots) hyprland, anyrun, zsh, oh-my-posh, antidote, prezto, custom neovim snowyvim, waybar, linux zen kernel, hypridle, hyprlock", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[xe](https://github.com/Xe/nixos-configs) - uses NUR, tailscale, etcher, sway, telegram, virtualbox, etc", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[dustinlyons](https://github.com/dustinlyons/nixos-config) Nix configuration for MacOS / NixOS + starter templates and step-by-step guides ✨ - great readme, cachix, emacs, p10k, zsh, vim, alacritty, ssh, tmux", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[nobbZ](https://github.com/NobbZ/nixos-config) - interesting hosts, including phone and VM-secrets, zoxide, lots of languages, solid programs incl emacs, eza, inxync, rustic, awesome, rofi, cachix, etc", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[ChrisTitusTech](https://github.com/ChrisTitusTech/nixos-titus) - good example of using hm as nixos module", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[HeinzDev](https://github.com/HeinzDev/Hyprland-dotfiles (nix) ) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[IllustratedMan-code dotfiles](https://github.com/IllustratedMan-code/dotfiles)  - (nix), hyprland, gnuplot, doom emacs, dunst, eww, gtk, i3, kitty,", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[IllustratedMan-code nixconfig](https://github.com/IllustratedMan-code/nixconfig)   * nix (flake)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[sezryo](https://github.com/sezryo/presez)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[Reddt](https://www.reddit.com/r/unixporn/comments/11st101/swaywmnyxt_friendship_ended_with_backlights/)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[strager](https://github.com/strager/dotfiles)  * → nice green, firefox, fish, zsh, fzf, git, nix, ssh, systemd, tmux, vim, xmonad, gnome-terminal", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[xade](https://codeberg.org/XADE/dotbin)  - alacritty, alsa, aria2, bspwm, conky, guix, helix, nvim, nixos, wayland, qtile, qutebrowser,", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[notusknot](https://github.com/notusknot/dotfiles-nix)- -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[nuxshed](https://github.com/nuxshed/dotfiles)  * NixOS (flake), perfect green theme - awesome, emacs, herbstluftwm, tint2, zsh, good scripts - [screenshot](https://www.reddit.com/media?url=https%3A%2F%2Fi.redd.it%2Fc0ilzexndo881.png) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "*****", "language": ""},
{"text": "[nequissimus](https://github.com/NeQuissimus/DevSetup) - conky, emacs, skhd, yabai, chromium, etc", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****.", "language": ""},
{"text": "[pnotequalnp nix dots with sops](https://github.com/pnotequalnp/dotfiles/tree/473a4a76219f4fe6701524ad8973898fd31ab62c)) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****.", "language": ""},
{"text": "[redyf](https://github.com/redyf/nixdots) - nix config with Nvidia GPU, neovim, firefox, chrome, zsh, hyprland, foot,", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****.", "language": ""},
{"text": "[ruixi-rebirth](https://github.com/Ruixi-rebirth/flakes)[YouTube Rice - NixOS hyprland](https://www.youtube.com/watch?v=efm2XEVM4RQ)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****.", "language": ""},
{"text": "[sebastiant](https://github.com/sebastiant/dotfiles) - emacs, polybar, sway, syncorate, tmux, waybar, zsh, alacritty, git, picom, vscode, wayland-overlay, xmonad", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****.", "language": ""},
{"text": "[yqrashawn](https://github.com/yqrashawn/yqdotfiles) - includes doom emacs", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****.", "language": ""},
{"text": "[magnetophon](https://github.com/magnetophon/nixosConfig)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****.", "language": ""},
{"text": "very good / interesting architecture choices: [calops](https://github.com/calops/nix) - very similar design choices to my own config- ironbar, logseq, sway. etc", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "very good / interesting architecture choices: [gxnum](https://github.com/gxnum/dot-nix) - hyprland, waybar, firefox, fuzzel, kitty, wlogout, gtk, mpd, cava, etc -> look at for coherent hyprland config", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "very good / interesting architecture choices: [malob](https://github.com/malob/nixpkgs) - interesting color system, kitty, neovim, git, fish, delta, starship", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "very good / interesting architecture choices: [anubhavuniyal $$$](https://github.com/anubhavuniyal/flakenix) nixvim, firefox, zsh, zellij, starship, nvidia, hyprland, alacritty, catpuccin, btop,0xproto font", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "very good / interesting architecture choices: [srid](https://github.com/srid/nixos-config) KISS NixOS configuration based on Flakes & flake-parts (supports macOS too) - emacs doom, nushell, 1password, bash, direnv, git, helix, himalaya, just, kitty, neovim, nix, powershell, ssh, starship, terminal, tmux, vscode, zellij, zsh - good design", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "very good / interesting architecture choices: [jjba-projects](https://gitlab.com/jjba-projects/dotfiles) - emacs, wlogout, scala, etc - nice rice, good config structure", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "very good / interesting architecture choices: [erictossell](https://github.com/erictossell/nixflakes) - bash, cava, starship, tmux, foot, gnupg, polkit, hyprland, homepage, tailscale, ssh, agenix, firefox, obsidian, zathura, vscode, libreoffice, 1password", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "very good / interesting architecture choices: [alexNabokikh](https://github.com/AlexNabokikh/nix-config) - good scripts, hyprland, ulauncher, waybar, nvim, hyprland, corectrl -> solid terminal environment", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "very good / interesting architecture choices: [balsoft.ru/balsoft/nixos-config](https://code.balsoft.ru/balsoft/nixos-config) [balsoft/nixos-config: Mirror of](https://github.com/balsoft/nixos-config) - good color propagation approach, emacs, vscodium, firefox, aerc", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "very good / interesting architecture choices: [euclidianAce/dotfiles](https://github.com/euclidianAce/dotfiles/tree/main) - awesomewm, scripts, colors, firefox, git, kitty, nix-shells, neovim, wezterm, zathura, bash, tmux, bash prompt script in C", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "very good / interesting architecture choices: [alt-f4-llc !!!](https://github.com/ALT-F4-LLC/dotfiles-nixos) - looks good, quality streamer, but minimalistic", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "very good / interesting architecture choices: [savedra1](https://github.com/savedra1/nixos-build) - hyprland, hyprpaper, alacritty, helix, lsd, mako, rofi, swappy, waybar - interesting example of nix design", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "very good / interesting architecture choices: [iqubic](https://github.com/IQubic/nixos-config) - nice simple structure: emacs, xmonad, alacritty, dunst, flameshot, picom, zsh", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "very good / interesting architecture choices: [lenny0939/Nix-Config](https://github.com/Lenny0939/Nix-Config) - eww, hyprland, fastfetch, firefox, git, i3, kity, lf, mako, mangohud, nixvim, spotify, themes, wofi, zsh", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "very good / interesting architecture choices: [mccd](https://git.mccd.space/) - ./nixos somewhat minimal, nice cgit.css, seems almost server-like; ./dotfiles: sway, emacs, waybar, bemenu+scripts, mbsync, msmtprc, tig, zsh, snippets.el, aerc, foot, kakoune, khal, lf, vdirsyncer, zathura", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "very good / interesting architecture choices: [pwnwriter](https://github.com/pwnwriter/nix) - starship, wezterm, tmux, git, bat, wazi, ssh - nice simple (flat) structure, very clean", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "very good / interesting architecture choices: [ksevelyar](https://github.com/ksevelyar/idempotent-desktop) - fish, neovim, leftwm, good app list, firefox, etc - also includes a live-uusb", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "very good / interesting architecture choices: [the-argus](https://github.com/the-argus/nixsys) - ly, plymouth, sway, typst, gtk, firefox, etc - nice readme, nice app list", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "very good / interesting architecture choices: [oelmas](https://github.com/oelmas/nixos_dot_files) - 2 files only, hyprland", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "very good / interesting architecture choices: [mitchellh/nixos-config: My NixOS configurations.](https://github.com/mitchellh/nixos-config) - interesting setup primarily for VM", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "very good / interesting architecture choices: [san7o](https://github.com/San7o/nixos-dotfiles) - git, cache-server, network-manager, nvidia, hyprland, hyprpaper, i3, neofetch, ranger, rofi, waybar, neovim, shells, kitty, fhs, zsh, bash, alacritty,powertop, keymap.kbd etc", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "very good / interesting architecture choices: [mcdonc/.nixconfig: NixOS configurations for my personal systems](https://github.com/mcdonc/.nixconfig)cachix, diverse hosts, emacs... interesting structure and approach, not many apps", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "very good / interesting architecture choices: [utdemir](https://github.com/utdemir/dotfiles-nix) - old, but good readme, qutebrowser, etc", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "very good / interesting architecture choices: [zxen-xi](https://codeberg.org/zxen-xi/old-nixos-config) - neovim, qutebrowser, gtk, qt, foot, kitty, river, waybar -> void-dots for riverwm config", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "****", "language": ""},
{"text": "[arvigeus](https://github.com/arvigeus/nixos-config) bash chromium firefox helix mpv plasma-desktop starship steam vscode yt-dlp", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[Baughn](https://github.com/Baughn/machine-config) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[Ericson2314](https://github.com/Ericson2314/nixos-configuration) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[FlafyDev](https://github.com/FlafyDev/nixos-config) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[Gako358](https://github.com/Gako358/dotfiles) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[JaKooLit](https://github.com/JaKooLit/NixOS-configs) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[LamprosPitsillos](https://github.com/LamprosPitsillos/nixos-config) -> [search](https://github.com/search?q=home-manager+qutebrowser+nix+language%3ANix&type=code&l=Nix) -> See also [nixpkgs maintainer list](https://github.com/NixOS/nixpkgs/blob/master/maintainers/maintainer-list.nix).", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[akirak](https://github.com/akirak/emacs-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[archived](https://github.com/akirak/home.nix) ???", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[akirak](https://github.com/akirak/nixos-config) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[arianvp](https://github.com/arianvp/nixos-stuff) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[auntieNeo](https://github.com/auntieNeo/nixrc) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[baitinq](https://github.com/baitinq/nixos-config ) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[bennofs](https://github.com/bennofs/etc-nixos) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[boj](https://github.com/boj/nixos-config) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[budevg](https://github.com/budevg/nix-conf) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[cleverca22](https://github.com/cleverca22/nixos-configs) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[coreyoconnor](https://github.com/coreyoconnor/nix_configs) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[cstrahan](https://github.com/cstrahan/nixos-config) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[danieldk](https://github.com/danieldk/nix-home) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[davidtwco](https://github.com/davidtwco/veritas) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[dejanr](https://github.com/dejanr/dotfiles) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[evanjs](https://github.com/evanjs/nixos_cfg) - nixos, emacs, vim, haskell, rust, xmonad, firefox, dunst, taffybar, xmobar, alacritty, kitty, dunst,", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[foo-dogsquared](https://github.com/foo-dogsquared/nixos-config/blob/refs%2Fheads%2Fmaster/configs%2Fhome-manager%2Ffoo-dogsquared%2Fmodules%2Fdotfiles.nix ) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[fufexan](https://github.com/fufexan/dotfiles) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[garry-cairns](https://gitlab.com/garry-cairns/nixos-config) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[grahamc](https://github.com/grahamc/nixos-config) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[h7x4](https://github.com/h7x4/nix-dotfiles) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[hlissner](https://github.com/hlissner/dotfiles) - old but wrth looking through - nix (flake), awesomewm, bspwm, rofi, autoclicker, gitinfo, good scripts (like nix wrapper), docker, emacs, gimp, git, ncmcpp, qutebrowser, stumpwm, sxkhd, tmux, zsh, fennel, trackma, git-keep", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[infinidim-enterprises](https://github.com/infinidim-enterprises/hive)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[jwiegley](https://github.com/jwiegley/nix-config) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[kampfschlaefer](https://github.com/kampfschlaefer/nixconfig) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[kukininj](https://github.com/kukininj/dotfiles) - nixos, flake, helix, neovim, sway, alacritty, git, waybar, wofi, jq, fzf, bat, libreoffice, keepassxc, yt-dlp, mpv, imv, nnn, zip, unzip, imagemagick, fonts, xdg, ffmpeg", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[lambdael](https://github.com/lambdael/nixosconf) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[lauroro](https://github.com/lauroro/hyprland-dotfiles) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[leotaku](https://github.com/leotaku/nixos-config) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[lovesegfault](https://github.com/lovesegfault/nix-config) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[mahmoudk1000](https://github.com/mahmoudk1000/nix-config) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[martijnboers](https://github.com/martijnboers/nixos) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[mateiadrielrafael](https://github.com/Mateiadrielrafael/everything-nix) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[matt1432](https://git.nelim.org/matt1432/nixos-configs/src/branch/master/devices/binto/modules/gpu-replay.nix) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[novoid](https://github.com/novoid/nixos-config)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[pSub](https://github.com/pSub/configs) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[peel](https://github.com/peel/dotfiles) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[periklis](https://github.com/periklis/nix-config) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[puffnfresh](https://github.com/puffnfresh/nix-files) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[rasendubi](https://github.com/rasendubi/dotfiles) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[ribosomerocker](https://git.sr.ht/~ribosomerocker/nixos-config) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[romatthe](https://github.com/romatthe/ronix) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[rummik](https://github.com/rummik/nixos-config) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[ry755](https://github.com/ry755/dotfiles) - alacritty, kakoune, nixos, tmux, picom, i3, polybar, rofi, autorandr, awesomewm", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[sachnr](https://github.com/sachnr/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[awesomewm](https://github.com/sachnr/awesomewm-dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[Reddit](https://www.reddit.com/r/unixporn/comments/11zir2x/awesomewm_some_benefits_of_having_a_declarative/) Nix flake,", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[samueldr](https://gitlab.com/samueldr/nixos-configuration) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[proxyVT/nixos-system](https://github.com/ProxyVT/nixos-system/tree/main) - nice list of applications, most configs simple", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[sherubthakur](https://github.com/sherubthakur/dotfiles)  * nixos, kitty, zsh, oh-my-zsh, nushell, neovim, xmonad, taffybar, picom, betterlockscreen, rofi, deadd, eww, firefox, home manager", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[smravec](https://github.com/smravec/nixos-config)- [Reddit - !!!Minimalistic [Sway] + waybar + Nixos (full silent boot)](https://www.reddit.com/r/unixporn/comments/124yjwy/minimalistic_sway_waybar_nixos_full_silent_boot/)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[talyz](https://github.com/talyz/nixos-config) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[tars0x9752](https://github.com/tars0x9752/home) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[tentypekmatus](https://gitlab.com/TenTypekMatus/nixos-infra) - nixos with nvidia (?)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[therealpxc](https://github.com/therealpxc/pxc.nix.d) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[tycho01](https://github.com/tycho01/nix-config) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[utdemir](https://github.com/utdemir/dotfiles)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[uwap](https://github.com/uwap/nixos-configs)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[vdemeester](https://gitlab.com/vdemeester/home)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[vinnyA3](https://github.com/vinnyA3/dotfiles)  * gnu stow, nix, popos, popos tiling wm, xmonad, polybar, neovim, zsh, alacritty, st, fzf, ripgrep, silver searcher (ag), vim, tmux, xresources, dunst, bat, btop, cava, compton, fontconfig, gitui, gtk, home manager, mps-youtube, mpv, neofetch, qutebrowser, sxiv, systemd, xmobar, zathura, lynx, redshift, starship, bash, zk (zettelkasten)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[virus lounge monorepo](https://git.tazj.in/about/)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[yacinehmito](https://github.com/yacinehmito/yarn-nix)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[yrashk](https://github.com/yrashk/nix-home)", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[yurrriq](https://github.com/yurrriq/dotfiles)  * colortest, toggle-touchpad, xmonad, xmobar, neovim, polybar, qt, rofi, shell, vscode, sway, xournalpp, zathura, bash, spacemacs, zsh, autorandr, flameshot, waybar, hyprland, waybar, xmonad, python, shell, sxhkd, wall, wezterm, x11, kwallet, firefox, zsh, qemu, asound, exrc, git, helix, neovim, brave,", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "", "language": ""},
{"text": "[nixlenovodot/home-common.nix](https://github.com/mudrii/nixlenovodot) - actually quite good list of apps, but not updated in the past 2 years", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "***", "language": ""},
{"text": "[jovian-experiments](https://github.com/Jovian-Experiments/Jovian-NixOS) - mostly for steam deck, but good structure", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "***", "language": ""},
{"text": "[a-schaefers](https://github.com/a-schaefers/nix-config.old) -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "***", "language": ""},
{"text": "[HugoReeves](https://github.com/HugoReeves/nix-home) - old", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "***", "language": ""},
{"text": "[ghuntley](https://github.com/ghuntley/dotfiles-nixos) old -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "***", "language": ""},
{"text": "[glines](https://github.com/glines/nixrc) old -", "type": "dots", "tags": ["config", "dots", "nix"], "status": "toRead", "rating": "***", "language": ""},
{"text": "[somecho](https://github.com/somecho/utility-scripts)", "type": "scripts", "tags": ["config", "scripts", ""], "status": "toRead", "rating": "", "language": ""},
{"text": "[bash-snippets](https://github.com/alexanderepstein/Bash-Snippets)", "type": "scripts", "tags": ["config", "scripts", ""], "status": "toRead", "rating": "", "language": ""},
{"text": "[root_informatica](https://git.disroot.org/root_informatica/others) -> [Reddit - [ wms ] alternating border color as low battery alert](https://www.reddit.com/r/unixporn/comments/1239m15/wms_alternating_border_color_as_low_battery_alert/)", "type": "scripts", "tags": ["config", "scripts", ""], "status": "toRead", "rating": "", "language": ""},
{"text": "[Soliprem/scripts](https://github.com/Soliprem/scripts)", "type": "scripts", "tags": ["config", "scripts", ""], "status": "toRead", "rating": "", "language": ""},
{"text": "[matejc/helper_scripts](https://github.com/matejc/helper_scripts)", "type": "scripts", "tags": ["config", "scripts", ""], "status": "toRead", "rating": "", "language": ""},
{"text": "[arch-linux-configs/bashrc-setup.sh at cc3ce35e32bcb7c50ccedd4c25651ad63a9e8845 · akaminer11/arch-linux-configs](https://github.com/akaminer11/arch-linux-configs/blob/cc3ce35e32bcb7c50ccedd4c25651ad63a9e8845/scripts/bashrc-setup.sh)", "type": "scripts", "tags": ["config", "scripts", ""], "status": "toRead", "rating": "", "language": ""},
{"text": "[scripts](https://github.com/casjay-dotfiles/scripts)casjay-dotfiles [dfmgr](https://github.com/dfmgr)", "type": "scripts", "tags": ["config", "scripts", ""], "status": "toRead", "rating": "", "language": ""},
{"text": "[...]([scripts](https://github.com/casjay-dotfiles/scripts)casjay-dotfiles [dfmgr](https://github.com/dfmgr) )", "type": "scripts", "tags": ["config", "scripts", ""], "status": "toRead", "rating": "", "language": ""},
{"text": "[anhyo](https://gitlab.com/anhvo8836/scripts)", "type": "scripts", "tags": ["config", "scripts", ""], "status": "toRead", "rating": "", "language": ""},
{"text": "Treediff: show differences between branches or directories in tree format, either one tree with different colors, or side-by-side treesIncluding visualization for magnitude of changes, as in hitRespect .gitignore", "type": "scripts", "tags": ["config", "scripts", ""], "status": "toRead", "rating": "", "language": ""},
{"text": "[karshPrime/silly_scripts](https://github.com/karshPrime/silly_scripts)", "type": "scripts", "tags": ["config", "scripts", ""], "status": "toRead", "rating": "", "language": ""},
{"text": "[linuxcommandlibrary.com/basic/oneliners](https://linuxcommandlibrary.com/basic/oneliners)", "type": "scripts", "tags": ["config", "scripts", ""], "status": "toRead", "rating": "", "language": ""},
{"text": "[http://libgen.is/book/index.php?md5=3E343930F940A39296D35869A5525D45](http://libgen.is/book/index.php?md5%3D3E343930F940A39296D35869A5525D45)", "type": "scripts", "tags": ["config", "scripts", "perl"], "status": "toRead", "rating": "", "language": ""},
{"text": "[trizen/perl-scripts](https://github.com/trizen/perl-scripts) 5 great Perl scripts to keep in your sysadmin toolbox", "type": "scripts", "tags": ["config", "scripts", "perl"], "status": "toRead", "rating": "", "language": ""},
{"text": "[redhat.com/sysadmin/perl-scripts](https://www.redhat.com/sysadmin/perl-scripts)", "type": "scripts", "tags": ["config", "scripts", "perl"], "status": "toRead", "rating": "", "language": ""},
{"text": "scripts: write utility scripts to list contents of all nvim-relevant directories, such as those on packpath and rtp -> require first running headless nvim redir commands", "type": "scripts", "tags": ["config", "scripts", ""], "status": "toRead", "rating": "", "language": ""},
{"text": "Steve Oualline - Wicked Cool Perl Scripts : Useful Perl Scripts That Solve Difficult Problems", "type": "scripts", "tags": ["config", "scripts", ""], "status": "toRead", "rating": "", "language": ""},
{"text": "[Qtile_NotWin_Theme](https://github.com/ADVisual161/Qtile_NotWin_Theme)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qtile"]}},
{"text": "[dt qtile](https://gitlab.com/dwt1/dotfiles/-/tree/master/.config/qtile) → [video](https://www.youtube.com/watch?v=9NO2DJARbU0)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qtile"]}},
{"text": "[Qtile Playlist](https://www.youtube.com/playlist?list=PL5--8gKSku15-C4mBKRpQVcaat4zwe4Gu)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qtile"]}},
{"text": "[Modifying Qtile on Debian Stable - Simple configuration](https://www.youtube.com/watch?v=o1-d90BBKuI)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qtile"]}},
{"text": "[Qtile Layouts - Manage And Configure Window Layouts](https://www.youtube.com/watch?v=GmJlwVTKTmg)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": [qtile""]}},
{"text": "[qtile gnome](https://docs.qtile.org/en/latest/manual/install/gnome.html)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qtile"]}},
{"text": "[KDE + qtile](https://www.reddit.com/r/unixporn/comments/rhviab/kde_qtile_am_i_doing_tiling_wms_right/)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qtile"]}},
{"text": "[r/qtile/comments/ynxnvd/how_to_make_sticky_window/](https://www.reddit.com/r/qtile/comments/ynxnvd/how_to_make_sticky_window/)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qtile"]}},
{"text": "[mail-archive.com/qtile-dev@googlegroups.com/msg00983.html](https://www.mail-archive.com/qtile-dev@googlegroups.com/msg00983.html)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qtile"]}},
{"text": "[qtile-plasma](https://github.com/numirias/qtile-plasma)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qtile"]}},
{"text": "[qtile.org/videos/](http://www.qtile.org/videos/)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qtile"]}},
{"text": "[google.com/search?q=qtile+drop-down+window&oq=qtile+drop-down+window&aqs=chrome..69i57j33i160l2.6008j0j4&sourceid=chrome&ie=UTF-8](https://www.google.com/search?q=qtile+drop-down+window&oq=qtile+drop-down+window&aqs=chrome..69i57j33i160l2.6008j0j4&sourceid=chrome&ie=UTF-8)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qtile"]}},
{"text": "[Qtile Playlist](https://www.youtube.com/playlist?list=PL8vZ_N0-ziZP1gm2-CBiCBPZNFrlge8Nb)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qtile"]}},
{"text": "[google.com/search?q=qtile+sticky+window&oq=qtile+sticky+window&aqs=chrome..69i57j69i60.10030j0j9&sourceid=chrome&ie=UTF-8](https://www.google.com/search?q=qtile+sticky+window&oq=qtile+sticky+window&aqs=chrome..69i57j69i60.10030j0j9&sourceid=chrome&ie=UTF-8) * - [dioptricdesign.com/2021/08/20/qtile-chameleon-update/](https://www.dioptricdesign.com/2021/08/20/qtile-chameleon-update/)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": [""]}},
{"text": "[Tuff Gniuz qtile Playlist](https://www.youtube.com/playlist?list=PLIHtvvGZ1O3hgLjh-Gt42-XrVmR0a4hEi)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qtile"]}},
{"text": "[archcraft-qtile](https://github.com/archcraft-os/archcraft-qtile)/tree/main * - [r/qtile/comments/12sdtfp/how_to_make_translucent_kde_konsole/](https://www.reddit.com/r/qtile/comments/12sdtfp/how_to_make_translucent_kde_konsole/)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qtile"]}},
{"text": "[video](https://www.youtube.com/@nyxt-browser)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["nyxt"]}},
{"text": "[How to take notes in the Nyxt browser?](https://www.youtube.com/watch?v=8fmWWgU_gk4)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["nyxt"]}},
{"text": "[video](https://www.youtube.com/@nyxtacademy5956)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["nyxt"]}},
{"text": "[Vieb: More Than Jus](https://www.youtube.com/watch?v=6DPDExXs77Q)t A Vim Inspired Browser", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["nyxt"]}},
{"text": "[I'm leaving Firefox, and this is](https://www.youtube.com/watch?v=DgFS1Do_1As) the browser I picked...", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["nyxt"]}},
* Nyxt Intro Video [video](https://www.youtube.com/watch?v=8yBjfjFE0fk&t=193s)
{"text": "[Crafting the Nyxt Browser](https://www.youtube.com/watch?v=Hvlkca98tyw)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["nyxt"]}},
{"text": "[Nyxt Is The Most Custo](https://www.youtube.com/watch?v=SVteSEjKytw&t=175s)mizable Web Browser EVER", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["nyxt"]}},
{"text": "[Nyxt Web Browser - Keyboard driven, Lisp](https://www.youtube.com/watch?v=1TydtiWwZgQ&t=116s) Powered, And Does What I", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["nyxt"]}},
{"text": "[Nyxt: The Internet on your terms / Pierre](https://www.youtube.com/watch?v=wCHnb8pvneE) Neidhardt / GambiConf EU", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["nyxt"]}},
{"text": "[EmacsConf 2021: Emacs with Nyxt: extend your](https://www.youtube.com/watch?v=XarwuynpWkA) editor with the power of", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["nyxt"]}},
{"text": "[How-to Theme Nyxt (the easy way) - YouTube](https://m.youtube.com/watch?v%3DtaNNvTWL3zo)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["nyxt"]}},
{"text": "[aartaka/nyxt-config](https://github.com/aartaka/nyxt-config)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["nyxt"]}},
{"text": "[search?q=nyxt&type=repositories&s=updated&o=desc](https://github.com/search?q%3Dnyxt%26type%3Drepositories%26s%3Dupdated%26o%3Ddesc)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["nyxt"]}},
{"text": "[search?q=nyxt+config&type=repositories&s=updated&o=desc](https://github.com/search?q%3Dnyxt%2Bconfig%26type%3Drepositories%26s%3Dupdated%26o%3Ddesc)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["nyxt"]}},
{"text": "[aartaka.me.eu.org/nyxt-to-surf](https://www.aartaka.me.eu.org/nyxt-to-surf)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["nyxt"]}},
{"text": "[r/Nyxt/comments/18ir89v/how_to_bind_custom_hotkeys_in_nyxt/](https://www.reddit.com/r/Nyxt/comments/18ir89v/how_to_bind_custom_hotkeys_in_nyxt/)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["nyxt"]}},
{"text": "[r/Nyxt/s/qMGTPsBpek](https://www.reddit.com/r/Nyxt/s/qMGTPsBpek) Nyxt dark", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["nyxt"]}},
{"text": "[anomalocaridid](https://github.com/Anomalocaridid/dotfiles/blob/main/home/nyxt.nix)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["nyxt"]}},
{"text": "[userscripts](https://nyxt.atlas.engineer/documentation#user-scripts)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["nyxt"]}},
{"text": "[ii.com: Getting Started With qutebrowser](http://www.ii.com/qutebrowser-getting-started/)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qutebrowser"]}},
{"text": "[hallonfras/qutewal](https://github.com/hallonfras/qutewal)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qutebrowser"]}},
{"text": "[qutebrowser/qutebrowser at maint/flaky_js_tests](https://github.com/qutebrowser/qutebrowser/tree/maint/flaky_js_tests)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qutebrowser"]}},
{"text": "[qutebrowser/qutebrowser at maint/flaky_js_tests](https://github.com/qutebrowser/qutebrowser/tree/maint/flaky_js_tests)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qutebrowser"]}},
{"text": "[Support URL patterns for more settings (per-domain settings) · Issue #3636 · qutebrowser/qutebrowser](https://github.com/qutebrowser/qutebrowser/issues/3636) [davidinspace/qutebrowser_dark_solarized: Dark solarized css stylesheet for qutebrowser. Make the web like your terminal ! :)](https://github.com/davidinspace/qutebrowser_dark_solarized)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qutebrowser"]}},
{"text": "[qutebrowser-themes/onedark.py at master · leosolid/qutebrowser-themes](https://github.com/leosolid/qutebrowser-themes/blob/master/themes/onedark.py)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qutebrowser"]}},
{"text": "[My qutebrowser config](https://gist.github.com/Ape/d0c48b3f7ec9c8efaecf48eaa1e75d0d)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qutebrowser"]}},
{"text": "[List type settings errors · Issue #3104 · qutebrowser/qutebrowser](https://github.com/qutebrowser/qutebrowser/issues/3104) [change qutebrowser config editor - Google Search](https://www.google.com/search?client=firefox-b-d&q=change+qutebrowser+config+editor)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qutebrowser"]}},
{"text": "[cheatsheet-big.png (PNG Image, 3342 × 2060 pixels) — Scaled (46%)](https://qutebrowser.org/img/cheatsheet-big.png)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qutebrowser"]}},
{"text": "[Why I use qutebrowser and how I configure it - adblocking, note taking, and colors](https://youtu.be/Av8Sfaprcb4) [ii.com: qutebrowser Tips and Fragments](https://www.ii.com/qutebrowser-tips-fragments/)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qutebrowser"]}},
{"text": "[ii.com: qutebrowser’s Template config.py](https://www.ii.com/qutebrowser-configpy/)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qutebrowser"]}},
{"text": "[Configuring qutebrowser | qutebrowser](https://qutebrowser.org/doc/help/configuring.html)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qutebrowser"]}},
{"text": "[HS 2018 2019-SA-EP-Bruhin-Qutebrowser Made Extendible.pdf](https://eprints.ost.ch/id/eprint/743/1/HS%25202018%25202019-SA-EP-Bruhin-Qutebrowser%2520Made%2520Extendible.pdf)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qutebrowser"]}},
{"text": "[How to use the qutebrowser.commands.cmdutils.register function in qutebrowser | Snyk](https://snyk.io/advisor/python/qutebrowser/functions/qutebrowser.commands.cmdutils.register)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qutebrowser"]}},
{"text": "[Qutebrowser + Ranger = Pure Awesome - YouTube](https://www.youtube.com/watch?v%3Dce2NOmTBWfo)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qutebrowser"]}},
{"text": "[Qutebrowser 2.0 | Hacker News](https://news.ycombinator.com/item?id%3D25940453)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qutebrowser"]}},
{"text": "[Why I Use Qutebrowser as My Daily Browser (but You Probably Shouldn't) - The Net Blog](https://the-net-blog.netlify.app/post/why-i-use-qutebrowser-as-my-daily-browser-but-you-probably-shouldnt/)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qutebrowser"]}},
{"text": "[hicolour/awesome-qutebrowser: Qutebrowser userscripts trips & tricks](https://github.com/hicolour/awesome-qutebrowser)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qutebrowser"]}},
{"text": "[ii.com: qutebrowser’s Template config.py](https://www.ii.com/qutebrowser-configpy/)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qutebrowser"]}},
{"text": "[qutebrowser - ArchWiki](https://wiki.archlinux.org/title/qutebrowser)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["qutebrowser"]}},
{"text": "[ulrichschinz](https://github.com/ulrichschinz/taskwarrior)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["taskwarrior"]}},
{"text": "[00dani](https://github.com/00dani/dot-task)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["taskwarrior"]}},
{"text": "[markeganfuller](https://github.com/markeganfuller/taskrc/blob/master/taskrc)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["taskwarrior"]}},
{"text": "[](https://github.com/AidanTilgner/taskwarrior-config)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["taskwarrior"]}},
{"text": "[](https://github.com/Tylryan/taskwarrior-config)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["taskwarrior"]}},
{"text": "[](https://github.com/kevinstadler/taskwarrior-vit-config)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["taskwarrior"]}},
{"text": "[](https://github.com/Spreadcat/ansible-role-timewarrior)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["taskwarrior"]}},
{"text": "[sway migration](https://www.reddit.com/r/swaywm/s/uafu7rzdOD)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["sway"]}},
{"text": "[...](https://www.reddit.com/r/swaywm/s/f60rY9AMIV) DE experience on Sway", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["sway"]}},
{"text": "[Commits · WillPower3309/swayfx](https://github.com/WillPower3309/swayfx/commits/master/)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["sway"]}},
{"text": "[NixOS Search - Packages - swayfx](https://search.nixos.org/packages?channel%3D23.11%26show%3Dswayfx%26from%3D0%26size%3D50%26sort%3Drelevance%26type%3Dpackages%26query%3Dswayfx)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["sway"]}},
{"text": "[Some loose ends for sway on nixos which we should fix - Development - NixOS Discourse](https://discourse.nixos.org/t/some-loose-ends-for-sway-on-nixos-which-we-should-fix/17728/5)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["sway"]}},
{"text": "[swayfx/flake.nix at master · WillPower3309/swayfx](https://github.com/WillPower3309/swayfx/blob/master/flake.nix)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["sway"]}},
{"text": "[swaywm/sway: i3-compatible Wayland compositor](https://github.com/swaywm/sway)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["sway"]}},
{"text": "[bryant-the-coder/hyprland-dots](https://github.com/bryant-the-coder/hyprland-dots)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland"]}},
{"text": "[hyprland](https://www.reddit.com/r/unixporn/comments/13gz5kq/hyprland_my_summer_rice/)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland"]}},
{"text": "[s-prechtl](https://github.com/s-prechtl/dotfiles) [reddit](https://www.reddit.com/r/unixporn/comments/135crcm/hyprland_took_me_about_10h/)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland"]}},
{"text": "[Example configuration for river wayland compositor in lua5.4](https://gist.github.com/FollieHiyuki/f598db7c548f3397e2a68e4340ac9fdc)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["riverwm"]}},
{"text": "[fish config](https://codeberg.org/anhsirk0/shell-config)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["fish"]}},
{"text": "[mathisasbynens](https://github.com/mathiasbynens/dotfiles) - .files, including ~/.osx — sensible hacker defaults for OS X", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["mac"]}},
{"text": "[flutter_background_bar](https://github.com/flafydev/flutter_background_bar)", "type": "dotsSingleApp", "tags": ["config", "bar", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": [""]}},
{"text": "[nyxt](https://github.com/aartaka/nyxt-config)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": [""]}},
{"text": "[startpages](https://www.reddit.com/r/startpages/ )", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": [""]}},
{"text": "[make firefox great again](ff video [youtu.be/dwZpjKH8nbo?si=8C4JJvXkJjpWF5a3](https://youtu.be/dwZpjKH8nbo?si=8C4JJvXkJjpWF5a3) )", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": [""]}},
{"text": "[alanRizzo](https://github.com/alanRizzo/dot-files)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": [""]}},
{"text": "[polybar](https://github.com/tuffgniuz/polybar)tuffgniuz", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": [""]}},
{"text": "[i3](https://github.com/tuffgniuz/i3)tuffgniuz", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": [""]}},
{"text": "[picom.conf](https://github.com/tuffgniuz/picom.conf)tuffgniuz", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": [""]}},
{"text": "[firefox-css](https://github.com/tuffgniuz/firefox-css)tuffgniuz", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": [""]}},
{"text": "[kitty](https://github.com/tuffgniuz/kitty)tuffgniuz", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": [""]}},
{"text": "[fish.config](https://github.com/tuffgniuz/fish.config)tuffgniuz", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": [""]}},
{"text": "[christitustech/mybash](https://github.com/ChrisTitusTech/mybash)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": [""]}},
{"text": "[titus-conky](https://github.com/ChrisTitusTech/titus-conky) - conky", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": [""]}},
{"text": "[Titus bash](https://github.com/ChrisTitusTech/mybash)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": [""]}},
{"text": "[DT Starship](https://gitlab.com/dwt1/dotfiles/-/blob/e0277a1031f1493deca9ac8acfebe187d6dc1bf3/.config/starship.toml)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": [""]}},
{"text": "[DT Qutebrowser](https://gitlab.com/dwt1/dotfiles/-/tree/e0277a1031f1493deca9ac8acfebe187d6dc1bf3/.config/qutebrowser)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": [""]}},
{"text": "[Solarized-xmonad-xmobar](https://github.com/dmxt/Solarized-xmonad-xmobar)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": [""]}},
{"text": "[...](https://github.com/eekrain/dotfiles/blob/7c948066821437f79521ba78e8e9042dfb090b13/nixos/hyprland/default.nix%23L24) - may be the solution", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/paulcomte/dotfiles/blob/14419839ccea1a7bd495d9cd9ee4cee388df8403/nixos/services.nix%23L44) - look into logind extraConfig", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/elkebirmed/dotfiles_nixos/blob/main/hosts/optional/sddm.nix)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/elkebirmed/dotfiles_nixos/blob/main/hosts/optional/hyprland.nix) good examples", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/Azeved00/.files/blob/5c00de90d9a770dd44a331a89bef03142ae22c03/nixos/modules/wayland.nix%23L14) - simple config", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/mslxl/nix-config/tree/main/modules/nixos/desktop/desktop-env)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/A7R7/nixos-config/blob/baae8a1be5566a8863aed2f9de897cfba0b6a538/host/configuration.nix)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/GGORG0/nix-config/blob/9dd592385f632851a0ce825855638ac4105ffcb7/modules/nixos/sddm.nix)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/LichHunter/nixos-dotfiles/blob/f27d2e58cbacb59aad2ca4dbfa0e7be7b7bf1bc9/modules/rice/Frost-Phoenix/hyprland/hyprland.nix)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/richtigerkiko/nixos-hyprland/blob/main/nixos/configuration.nix)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/ryan4yin/nix-config/blob/77bd038f3295fee21f8f3842639e5b93fa9272ab/home/linux/desktop/hyprland/values/hyprland.nix%23L9)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/ryan4yin/nix-config/blob/77bd038f3295fee21f8f3842639e5b93fa9272ab/modules/nixos/desktop.nix%23L74)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/simonrw/nix-config/blob/main/system/nixos/astoria/wm/hyprland.nix)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/simonrw/nix-config/blob/main/system/nixos/astoria/wm/sway.nix)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/baracunatana/santuario/blob/main/flake.nix)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/darichey/my-nix-config/blob/4015b7f0d3724a2848fc2c6423a5df627be92d8c/system/common.nix%23L52)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/Jan130/nixos-config/blob/main/system/wm/hyprland.nix)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/Builditluc/dotnix/blob/52ea85bbbbeddf3de5642cb9a8ee40c09762eaa7/system/wm/hyprland.nix%23L4) nice and simple", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/deadendpl/dotfiles/blob/f0986be75c675397543afbc46e841021a1515d40/nixos/README.org%23graphical-environment)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/Vagahbond/nix-config/blob/9ab6b278c1d0ebc7726421fcfa41a3f5e8cf7417/modules/desktop/hyprland/default.nix%23L13)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/michaelkeates/nixos-config/blob/1bb37ce52ab4e71743e7a07dfaed210941634ef7/templates/default/nixos/default.nix%23L124)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/mjschwenne/dotfiles/blob/main/system/graphical.nix) - good example of custom config", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/nyawox/nixboxes/blob/2af52077059e9d38a327c42f3843d373a272668c/modules/nixos/desktop/sddm.nix%23L23)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/iynaix/dotfiles/blob/5c2eca4e184df332b06373007248457ae4cb9d69/nixos/hyprland.nix%23L7)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/vulpi/viperML-dotfiles/blob/0e0dacf03489596359d97fd8292da4921f902f29/modules/nixos/desktop-hyprland.nix%23L9)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/owatta/dotfiles/blob/94bff267af7cd8b6e3342d7b586e6db622cdeaa5/nixos/licorice.nix%23L18)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/mkeco/dotfile/blob/2783c3325a9459bedbdcaa36bbf60cee046e25c7/desk-nixos/configuration.nix%23L23)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/Liberontissauri/NixOS-Config-/blob/e1c91582fbffc82bba0088ca06b9d2202635d8c1/modules/nixos/desktop.nix%23L9)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/benvonh/.snowflake/blob/9d617835ad63699259513a6ff784c038174966a3/systems/share/hyprland/default.nix%23L4)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/gabyx/dotfiles/blob/6421270138b40c26a93011e7e20082ab965c253c/modules/nixos/windowing.nix%23L13)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/JosiahABrown/nixdots/blob/main/system/base.nix)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/JosiahABrown/nixdots/blob/main/system/base.nix)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/adamgoose/nixpkgs/blob/440e787cb769c44ed0ff0390c5010f9e29bc7f4f/nix/nixos/nixosModules/hyprland.nix%23L17)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland", "sddm"]}},
{"text": "[...](https://github.com/search?q%3Dprograms.dconf.profiles%26type%3Dcode)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["gdm"]}},
{"text": "[...](https://unix.stackexchange.com/questions/517759/how-to-fix-service-start-request-repeated-too-quickly-on-custom-service)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["gdm"]}},
{"text": "[...](https://github.com/search?q%3Dlightdm.enable%2B%253D%2Btrue%26type%3Dcode)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["gdm"]}},
{"text": "[...](https://github.com/search?q%3Dgreetd%2Blanguage%253Anix%26type%3Dcode)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["greetd"]}},
{"text": "[...](https://github.com/the-argus/nixsys/tree/b234fe6f3bd71ce07725cf6b0ca0d46335858619)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["ly"]}},
{"text": "[...](https://github.com/the-argus/nixsys/blob/b234fe6f3bd71ce07725cf6b0ca0d46335858619/modules/ly.nix%23L11)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["ly"]}},
{"text": "[...](https://github.com/meatcar/dots/blob/26581bf4440fbc30db95cef57fc70d737cfc7cf4/modules/ly.nix%23L8)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["ly"]}},
{"text": "[...](https://github.com/nix-community/nur-combined/blob/85ece5ad820302eaf1a541142942559deaa33ad7/repos/fgaz/modules/ly/default.nix%23L120)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["ly"]}},
{"text": "[...](https://github.com/dmayle/dotfiles/blob/b67d63022cf3002bbc4c7eaa651c8625b1006dfc/nixos-backup/configuration_old.nix%23L1176)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["ly"]}},
{"text": "[...](https://github.com/iharh/nixcfg/tree/6fab8a06850f47df37bd3cb0f027ecf11782cff4/hw)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": [""]}},
{"text": "[...](https://github.com/lokeshmohanty/nix-config/blob/main/nixos/desktop-environment.nix)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": [""]}},
{"text": "[awesomewm config in fennel](https://gitlab.com/Erik.Lundstedt/dotconfigfiles/-/tree/master/.config/awesome)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["fennel"]}},
{"text": "[xplr config in fennel](https://gitlab.com/Erik.Lundstedt/dotconfigfiles/-/tree/master/.config/xplr)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["fennel"]}},
{"text": "[wezterm config in fennel](https://gitlab.com/fennel-scripts/weztermconfig)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["fennel"]}},
{"text": "[tym config in fennel](https://gitlab.com/Erik.Lundstedt/dotconfigfiles/-/tree/master/.config/tym)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["fennel"]}},
{"text": "my website and the library i use to build it, all written in fennel [gitlab.com/my-webstuff](https://gitlab.com/my-webstuff)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["fennel"]}},
{"text": "[A Compositor For i3: PiCom ⋅ Plume](https://fediverse.blog/~/Cmm/a-compositor-for-i3-pi-com/)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["picom"]}},
{"text": "[picom - ArchWiki](https://wiki.archlinux.org/title/picom)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["picom"]}},
{"text": "[Transparent windows backgrounds with picom on Arch Linux | ejmastnak](https://www.ejmastnak.com/tutorials/arch/picom/)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["picom"]}},
{"text": "[polybar](https://pastebin.com/dtF6nFBZ)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["polybar"]}},
{"text": "[s0la](https://github.com/s0la/orw/blob/e98fad490a6ac182a90b3e01bd4802fa22211c70/dotfiles/.config/gtk-3.0/gtk.css.bak#L28)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["thunar"]}},
{"text": "[nix-config/modules/nixos/programs/gui/thunar/default.nix at 2e257e236cc7ccea32578f95423743558058891a · wochap/nix-config](https://github.com/wochap/nix-config/blob/2e257e236cc7ccea32578f95423743558058891a/modules/nixos/programs/gui/thunar/default.nix%23L37)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["thunar"]}},
{"text": "[JaKooLit/Hyprland-v2.1/tree/main/config%2FThunar](https://github.com/JaKooLit/Hyprland-v2.1/tree/main/config%2FThunar)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["thunar"]}},
{"text": "[urielzo](https://github.com/urielzo/archlabs-i3-gaps/blob/35a5dec665547912bd0a3d557adde3a45fa3a149/.config/gtk-3.0/gtk.css.back-blur#L5)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["thunar"]}},
{"text": "[...](https://docs.xfce.org/xfce/thunar/hidden-settings%23customising_thunar_with_css)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["thunar"]}},
{"text": "[...](https://docs.xfce.org/xfce/thunar/start)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["thunar"]}},
{"text": "[...](https://search.nixos.org/packages?channel%3Dunstable%26from%3D0%26size%3D50%26sort%3Drelevance%26type%3Dpackages%26query%3Dnemo)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["nemo"]}},
{"text": "[gtk-theme-collections](https://github.com/addy-dclxvi/gtk-theme-collections)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["gtk"]}},
{"text": "[jjba-projects](https://gitlab.com/jjba-projects/dotfiles/-/blob/master/nix/nixos/users/joe/hyprland.nix?ref_type=heads) - nix", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["hyprland"]}},
{"text": "[eww](https://www.reddit.com/r/unixporn/comments/19cv7wu/oc_custom_nodejs_website_that_displays_the/?share_id=wPog8ryMtWtsYjVXWwDTS) (see Drive, Betsy)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["eww"]}},
{"text": "[DT EWW](https://gitlab.com/dwt1/dotfiles/-/tree/e0277a1031f1493deca9ac8acfebe187d6dc1bf3/.config/eww/bar)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["eww"]}},
{"text": "[nixpkgs/nixos/modules/programs/spacefm.nix at 23ae4dfc223d75ed1265f43775f9ba1e76feb517 · obsidiansystems/nixpkgs](https://github.com/obsidiansystems/nixpkgs/blob/23ae4dfc223d75ed1265f43775f9ba1e76feb517/nixos/modules/programs/spacefm.nix%23L21)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["spacefm"]}},
{"text": "[nixpkgs/pkgs/applications/misc/spacefm/default.nix at f6daa33900a71529aa7835cb5dbed5ddf854ec32 · ComputeCanada/nixpkgs](https://github.com/ComputeCanada/nixpkgs/blob/f6daa33900a71529aa7835cb5dbed5ddf854ec32/pkgs/applications/misc/spacefm/default.nix%23L25)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["spacefm"]}},
{"text": "[nixpkgs/pkgs/desktops/lxqt/pcmanfm-qt/default.nix at 0c7cc93361cb0462abebea439783e348ad7f04aa · feijoas/nixpkgs](https://github.com/feijoas/nixpkgs/blob/0c7cc93361cb0462abebea439783e348ad7f04aa/pkgs/desktops/lxqt/pcmanfm-qt/default.nix%23L5)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["spacefm"]}},
{"text": "[pkgs/data/nixpkgs/outputs/spaceFM.json at 730c522af5d6944c4130b267eb6b913b9b670d48 · on-nix/pkgs](https://github.com/on-nix/pkgs/blob/730c522af5d6944c4130b267eb6b913b9b670d48/data/nixpkgs/outputs/spaceFM.json%23L9)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["spacefm"]}},
{"text": "[dotfiles/.config/spacefm/spacefm.conf at f76d4d1d2ae960d35aff764277ad96c3ecdf109b · henninb/dotfiles](https://github.com/henninb/dotfiles/blob/f76d4d1d2ae960d35aff764277ad96c3ecdf109b/.config/spacefm/spacefm.conf%23L4)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["spacefm"]}},
{"text": "[guix/gnu/packages/lxde.scm at 8d2a0ca74a26d0857945f4ca6d34e3cc97f8f06f · Millak/guix](https://github.com/Millak/guix/blob/8d2a0ca74a26d0857945f4ca6d34e3cc97f8f06f/gnu/packages/lxde.scm%23L392)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["spacefm"]}},
{"text": "[idempotent-desktop/users/shared/spacefm/spacefm.conf at c7251ecf774c451bf8d092d6bcff0346f8227bbb · ksevelyar/idempotent-desktop](https://github.com/ksevelyar/idempotent-desktop/blob/c7251ecf774c451bf8d092d6bcff0346f8227bbb/users/shared/spacefm/spacefm.conf%23L4)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["spacefm"]}},
{"text": "[spacefm/configure.ac at 191e585d624e32f078af6c1f731ea9624431a671 · acidburn0zzz/spacefm](https://github.com/acidburn0zzz/spacefm/blob/191e585d624e32f078af6c1f731ea9624431a671/configure.ac%23L241)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["spacefm"]}},
{"text": "[spacefm/etc/spacefm.conf at e6f291858067e73db44fb57c90e4efb97b088ac8 · IgnorantGuru/spacefm](https://github.com/IgnorantGuru/spacefm/blob/e6f291858067e73db44fb57c90e4efb97b088ac8/etc/spacefm.conf%23L4)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["spacefm"]}},
{"text": "[thingos/package/Config.in at a650815d39d2aafbb15a26b3fdf1ddebdf8cff67 · ccrisan/thingos](https://github.com/ccrisan/thingos/blob/a650815d39d2aafbb15a26b3fdf1ddebdf8cff67/package/Config.in%23L110)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["spacefm"]}},
{"text": "[wok/spacefm/receipt at 86cfc9d82cfe669cb23142955dd8e313459dbde6 · SliTaz-official/wok](https://github.com/SliTaz-official/wok/blob/86cfc9d82cfe669cb23142955dd8e313459dbde6/spacefm/receipt%23L57)", "type": "dotsSingleApp", "tags": ["config", "", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {"software": ["spacefm"]}},

# Non-Nix Dotfiles

* ( ) [newsletter $$$](https://substack.com/@dotfiles)
* ( ) [unixporn-dots.github.io](https://unixporn-dots.github.io/)
* ( ) [@mylinuxforwork](https://www.youtube.com/@mylinuxforwork)

## Single-app

* ( ) [alphaTechnolog eww](https://github.com/AlphaTechnolog/eww-dotfiles)
* ( ) [testertech eww](https://github.com/TesterTech/eww-from-scratch) [video](https://www.youtube.com/watch?v=rYlXF722RNw)
* ( ) [deepaknegilachu](https://codeberg.org/deepaknegilachu/.dotfiles) - yambar) -
* ( ) [How I use wezterm as toggle terminal](https://www.reddit.com/r/neovim/s/Lic4pxEQiZ)

## Raw - to sort

* -> see riverwm files on drive

* ( ) -(https://github.com/Psyhackological/dotfiles)
* ( ) [dnaaun](https://github.com/dnaaun/dotfiles)
* ( ) [stefan-radu](https://github.com/Stefan-Radu/dotfiles)
* ( ) [kaiec](https://github.com/kaiec/dotfiles)
* ( ) [k4y4k](https://github.com/k4y4k/dotfiles)
* ( ) [kevcui](https://github.com/KevCui/dotfiles)
* ( ) [selfhosted](https://github.com/TheBeachLab/selfhosted?tab=readme-ov-file)
* ( ) [mrusme](https://github.com/mrusme/dotfiles) taskwarrior ...
* (2) [grappas](https://github.com/grappas/dotfiles)
* (1) [nChain-example](https://github.com/Nocxium/nChain-example) $$$$$$$$$
* ( ) [?](https://www.reddit.com/r/unixporn/comments/1btyy6k/hyprland_green/) great color ideas
* ( ) [12kc/dotfiles/tree/openbox](https://github.com/12kc/dotfiles/tree/openbox)
* ( ) [abc123id](https://github.com/abc123id/dots)
* ( ) [abhra00](https://github.com/Abhra00/dotfiles)
* ( ) [about Dotfiles - Dotfiles (UK)](https://dotfiles.io/about/)
* ( ) [abxh](https://github.com/abxh/dotfiles)
* ( ) [accmeboot](https://github.com/accmeboot/dotfiles)
* ( ) [addy-dclxvi/almighty-dotfiles](https://github.com/addy-dclxvi/almighty-dotfiles)
* ( ) [adi1090x](https://github.com/adi1090x/widgets)
* ( ) [ageldama/configs: ageldama's configs.](https://github.com/ageldama/configs)
* ( ) [ahmed-alllam](https://github.com/ahmed-alllam/dotfiles)
* ( ) [ahmedSaadi0/my-hyprland-config](https://github.com/AhmedSaadi0/my-hyprland-config)
* ( ) [alexmyczko](https://github.com/alexmyczko)
* ( ) [alphabetsAlphabets](https://github.com/AlphabetsAlphabets/dotfiles)
* ( ) [alpraz](https://codeberg.org/alpraz/dotfiles)
* ( ) [amanhex](https://github.com/amanhex/dotfiles)
* ( ) [andofwinds](https://github.com/andofwinds/Fcfg)
* ( ) [andofwinds](https://github.com/andofwinds/simple_hyprland_conf)
* ( ) [anhovo8836](https://gitlab.com/anhvo8836/dracula)
* ( ) [anofio](https://codeberg.org/Anofio/Void-Dots)
* ( ) [anomalocaridid](https://github.com/Anomalocaridid/dotfiles/tree/main/pkgs)
* ( ) [antoniosarosi](https://github.com/antoniosarosi/dotfiles)
* ( ) [anufrievroman/dotfiles: Personal dotfiles](https://github.com/anufrievroman/dotfiles)
* ( ) [archgabs](https://github.com/archgabs/dotfiles)
* ( ) [argosatcore/Deb_Dots](https://codeberg.org/argosatcore/Deb_Dots)
* ( ) [argosatcore/Deb_Dots](https://codeberg.org/argosatcore/Deb_Dots) blank slate config
* ( ) [ariakh55](https://github.com/ariakh55/dotfiles)
* ( ) [artaz0l](https://github.com/artaz0l/dotfiles)
* ( ) [ashprids](https://github.com/ashprids/dotfiles)
* ( ) [atarashiryo](https://github.com/atarashiryo/dotfiles)
* ( ) [augustotx](https://github.com/augustotx/dotfiles)
* ( ) [avnibilgin](https://github.com/avnibilgin/dotfiles)
* ( ) [aw4ki](https://www.github.com/aw4ki/dotfiles)
* ( ) [awesomeWM doing something awesome : r/unixporn](https://www.reddit.com/r/unixporn/comments/1azyh3b/awesomewm_doing_something_awesome/)
* ( ) [axarva](https://github.com/Axarva/dotfiles-2.0)
* ( ) [axenide](https://github.com/Axenide/Dotfiles)
* ( ) [aylur/dotfiles?tab=readme-ov-file](https://github.com/Aylur/dotfiles?tab%3Dreadme-ov-file)
* ( ) [aymanLyesri](https://github.com/AymanLyesri/hyprland-conf)
* ( ) [BA_usr/dotfiles-for-hyperland/](https://gitlab.com/BA_usr/dotfiles-for-hyperland/)
* ( ) [bamos](https://github.com/bamos/dotfiles)
* ( ) [barbaross93/Nebula](https://github.com/Barbaross93/Nebula)
* ( ) [bbenzikry](https://github.com/bbenzikry/dotfiles)
* ( ) [beelzebubofgluttony](https://github.com/BeelzebubOfGluttony/dotfiles/tree)
* ( ) [beelzebubofgluttony](https://github.com/BeelzebubOfGluttony/dotFiles2.0)
* ( ) [berthosefin](https://github.com/berthosefin/dotfiles) $$$
* ( ) [best](https://www.reddit.com/r/unixporn/comments/1c8x92h/bspwm_feelin_good/)
* ( ) [beyond9thousand](https://github.com/beyond9thousand/dotfiles)
* ( ) [bibjaw99/workstation](https://github.com/bibjaw99/workstation) - i3
* ( ) [bigbeastishank](https://github.com/BIGBEASTISHANK/dotfile)
* ( ) [bitterhalt](https://github.com/bitterhalt/Sway-Dotfiles)
* ( ) [bluebyt](https://github.com/bluebyt/Wayfire-dots)
* ( ) [BRBWaffles](https://gitlab.com/BRBWaffles/dotfiles)
* ( ) [brodieRobertson](https://github.com/BrodieRobertson/dotfiles)
* ( ) [bspwm Magenta & Cyan - Imgur](https://imgur.com/a/fBXmx)
* ( ) [bspwm Magenta & Cyan : r/unixporn](https://www.reddit.com/r/unixporn/comments/7eapfy/bspwm_magenta_cyan/)
* ( ) [cadadr/configuration: My configs: OS setups, dotfiles, scripts and more.](https://github.com/cadadr/configuration)
* ( ) [caughtquick](https://github.com/caughtquick/dotfiles)
* ( ) [chadcat7/crystal](https://github.com/chadcat7/crystal)
* ( ) [cherrynoize](https://github.com/cherrynoize/dotfiles)
* ( ) [chrono00/Hypr-is-not-Land](https://github.com/Chrono00/Hypr-is-not-Land)
* ( ) [cilde/hyprconf](https://github.com/Cilde/hyprconf)
* ( ) [clepnicx](https://github.com/Clepnicx/dotfiles)
* ( ) [clxxiii/dots](https://github.com/clxxiii/dots)
* ( ) [codesmith28](https://github.com/Codesmith28/archConfig)
* ( ) [codingjerk](https://github.com/codingjerk/dotfiles)
* ( ) [coopydood/HyperFluent-GRUB-Theme](https://github.com/Coopydood/HyperFluent-GRUB-Theme)
* ( ) [crag666](https://github.com/CRAG666/dotfiles)
* ( ) [cybardev](https://github.com/cybardev/dotfiles)
* ( ) [cybersnake223](https://github.com/Cybersnake223/Hypr)
* ( ) [cybersnake223/Hypr](https://github.com/Cybersnake223/Hypr) hyprland
* ( ) [d0nut-dev](https://github.com/d0nut-dev/u-ricing)
* ( ) [d4yr41n](https://github.com/d4yr41n/dotfiles)
* ( ) [darrenldl/docfd](https://github.com/darrenldl/docfd)
* ( ) [datsfilipe](https://github.com/datsfilipe/dotfiles)
* ( ) [datsfilipe/dotfiles/tree/main/shells](https://github.com/datsfilipe/dotfiles/tree/main/shells)
* ( ) [daUnknownCoder](https://github.com/daUnknownCoder/dotfiles)
* ( ) [davidarrieta](https://github.com/davidarrieta/dotfiles/blob/c5f9152e3997a36e2af8ae5b09488711577ff4fd/README.md?plain%3D1%23L14)
* ( ) [denysdovhan](https://github.com/denysdovhan/dotfiles)
* ( ) [dharmx](https://github.com/dharmx/vile)
* ( ) [divu050704](https://github.com/divu050704/dots)
* ( ) [doctorfree](https://github.com/doctorfree/dotfiles-linux)  * cabal, google drive, kitty, oh my zsh, w3m, bash, conky, editorconfig, git, newsrc, p10k, tmux, vim, xbindkeys, asciiville, autostart, beets, btop, got, jml, kitty, lsd, mopidy, mpcplus, mpd, mppcava, navidrome, neofetch, meomutt, newsboat, nix, ranger, tmuxp, tuir, wtf, yadm, yt-dlp
* ( ) [dofiles](https://gitlab.com/roosemberth/dotfiles/-/tree/master/)
* ( ) [dog-blood/utterly-unorganized-latex-code](https://github.com/dog-blood/utterly-unorganized-latex-code)
* ( ) [dotphiles](https://github.com/dotphiles/dotphiles)
* ( ) [dybdeskarphet](https://github.com/dybdeskarphet/dotfiles)
* ( ) [ec2854](https://github.com/EC2854/Hyprland-Dots)
* ( ) [eC2854](https://github.com/EC2854/Hyprland-Dots)
* ( ) [eh8](https://github.com/eh8/chenglab)
* ( ) [elal](https://git.wych.dev/elal/dotfiles)
* ( ) [elenapan](https://github.com/elenapan/dotfiles)
* ( ) [elkip](https://github.com/Elkip/dotfiles)
* ( ) [end-4.github.io/dots-hyprland-wiki/en/](https://end-4.github.io/dots-hyprland-wiki/en/)
* ( ) [end-4](https://github.com/end-4/dots-hyprland)
* ( ) [end-4](https://github.com/end-4/dots-hyprland/tree/illogical-impulse)
* ( ) [end-4/CirnOS](https://github.com/end-4/CirnOS)
* ( ) [erikdubois/Archi3: Automated script to install i3 and all its programs on Arch Linux](https://github.com/erikdubois/Archi3)
* ( ) [evangelospro](https://github.com/Evangelospro/dotfiles)
* ( ) [exoess](https://github.com/exoess/.files)
* ( ) [ezerinz](https://github.com/ezerinz/dotfiles)
* ( ) [ezerinz](https://github.com/ezerinz/dotfiles) $$$$$$$$$
* ( ) [f0x48/ricemood](https://github.com/f0x48/ricemood)
* ( ) [f1rq](https://github.com/f1rq/dotfiles)
* ( ) [facundo-c-c/labwc-solus-dotefiles](https://github.com/Facundo-c-c/labwc-solus-dotefiles)
* ( ) [fairyglade/ly](https://github.com/fairyglade/ly)
* ( ) [faizan-2.0](https://github.com/faizan-20/.dotfiles)
* ( ) [farParticul](https://github.com/FarParticul/DotFilesNord-Far)
* ( ) [fgmsd](https://github.com/fgmsd/dotfiles)
* ( ) [FireStreaker2](https://github.com/FireStreaker2/dotfiles/tree/main/hyprland)
* ( ) [flick0](https://github.com/flick0/dotfiles)
* ( ) [floodedcodeboy/hyprland-dots](https://github.com/floodedcodeboy/hyprland-dots)
* ( ) [flrian/dotfiles-public/tree/main/.config%2Ffastfetch](https://github.com/Flrian/dotfiles-public/tree/main/.config%252Ffastfetch)
* ( ) [forcing-conditions](https://github.com/forcing-conditions/disco-dots)
* ( ) [fosslife/awesome-ricing](https://github.com/fosslife/awesome-ricing)
* ( ) [fustigate8933](https://github.com/Fustigate8933/dotfiles)
* ( ) [fuxino](https://github.com/Fuxino/dotfiles)
* ( ) [gBonvenuto/Awesome-Nord/](https://github.com/gBonvenuto/Awesome-Nord/tree/main)
* ( ) [gedon76](https://github.com/gedon76/my-bspwm)
* ( ) [gekoiz](https://git.sr.ht/~gekoiz/dots)
* ( ) [genograche/Archlinuxhyprdots](https://github.com/Genograche/Archlinuxhyprdots)
* ( ) [geryzhydrox](https://github.com/geryzhydrox/Dotfiles)
* ( ) [gh0stzk](https://github.com/gh0stzk/dotfiles)
* ( ) [gixoXYZ/HyprlandDotFiles](https://github.com/GixoXYZ/HyprlandDotFiles)
* ( ) [gksudo](https://codeberg.org/gksudo/dot)
* ( ) [gmr458/.dotfiles](https://github.com/gmr458/.dotfiles)
* ( ) [gnulinux-projects/My_Linux_Files/-/tree/main/Debian/Sway/.config?ref_type=heads](https://gitlab.com/gnulinux-projects/My_Linux_Files/-/tree/main/Debian/Sway/.config?ref_type%3Dheads) dotfiles
* ( ) [greatbot6120](https://github.com/greatbot6120/yellowarch)
* ( ) [gridex118](https://github.com/Gridex118/arch-configs)
* ( ) [gruensys](https://github.com/gruensys/dotfiles) -
* ( ) [guywhochad](https://github.com/GuyWhoChad/Dotdots)
* ( ) [gwynsav/gwileful](https://github.com/Gwynsav/gwileful)
* ( ) [haardispro](https://github.com/Haardispro/Arch_Rice)
* ( ) [hackster.io/roni-bandini/reggaeton-be-gone-e5b6e2](https://www.hackster.io/roni-bandini/reggaeton-be-gone-e5b6e2)
* ( ) [haruno19](https://github.com/Haruno19/dotfiles)
* ( ) [haruzona/penguinDotfiles](https://github.com/Haruzona/penguinDotfiles)
* ( ) [helixoid/hyprland-wallust](https://github.com/helixoid/hyprland-wallust)
* ( ) [hiltson87/NewVegasDots](https://github.com/Hiltson87/NewVegasDots)
* ( ) [hollow](https://git.sr.ht/~hollow/dotfiles/tree)
* ( ) [horhik](https://github.com/Horhik/dotfiles)
* ( ) [husseinhareb](https://github.com/husseinhareb/my-dotfiles)
* ( ) [hydroakri](https://github.com/hydroakri/dotfiles)
* ( ) [hyprland + ags](https://www.reddit.com/r/unixporn/s/sRGBbz3Czx)
* ( ) [hyprland so, the future is the reproduciability? : r/unixporn](https://www.reddit.com/r/unixporn/comments/1b0w6do/hyprland_so_the_future_is_the_reproduciability/)
* ( ) [iAmCall3](https://github.com/IAmCall3/OBdotfiles) - kitty, feh, tint2, picom, wireplumber, scrot, xbindkeys, dunst, rofi
* ( ) [ikz87](https://github.com/ikz87/dots-2.0) - acpi, alsa-utils, blueman, brave, bspwm, colorpicker, dunst, eww, flameshot, hsetroot, imagemagick, jq, kitty, light, lm_sensors, lxappearance, mantablockscreen, network-manager-applet, pa-applet, picom-ftlabs, playerctl, polkit-gnome, polybar, pqiv, pulseaudio, python3, rofi, scrot, sox, spicetify-cli, spotify, sxhkd, sysstat, thunar, tumbler, ttc-iosevka-curly, ttf-hack, wmctrl, wpgtk, xclip, xdotool, xprintidle, xorg, xorg-xinit, xwininfo, [pop_report](https://github.com/ikz87/pop_report), scripts
* ( ) [iluvgirlswithglasses](https://github.com/iluvgirlswithglasses/dotfiles)
* ( ) [inphormatic](https://github.com/inphormatic/dotfiles)
* ( ) [iomonad/dotfiles: Messy configuration repository / Gentoo / Coreboot / XMonad / Ergodox / Home Cooked ZSH microframework / Eye candy stuff / Miscellaneous hacks](https://github.com/iomonad/dotfiles)
* ( ) [itaranto](https://gitlab.com/itaranto/dotfiles)
* ( ) [itsProfessional](https://github.com/ItsProfessional/dotfiles)
* ( ) [jackDerksen/tmux](https://github.com/JackDerksen/tmux)
* ( ) [jagajaga](https://github.com/jagajaga/my_configs)
* ( ) [jakoolit](https://github.com/JaKooLit/Debian-Hyprland)
* ( ) [jaKooLit/Hyprland-Dots](https://github.com/JaKooLit/Hyprland-Dots)
* ( ) [janleigh](https://github.com/janleigh/dotfiles)
* ( ) [jefrecantuledesma/.config](https://github.com/jefrecantuledesma/.config)
* ( ) [jekor](https://github.com/jekor/.config)
* ( ) [jemhv](https://github.com/jemhv/hypr-dune)
* ( ) [jesuarzm](https://github.com/Jesuarzm/Dotfiles)
* ( ) [jifuwater](https://github.com/jifuwater/Cattendeavour)
* ( ) [jjba-projects](https://gitlab.com/jjba-projects/dotfiles)
* ( ) [joepigott](https://github.com/joepigott/dots)
* ( ) [jonathas-conceicao](https://github.com/Jonathas-Conceicao/dotfiles)
* ( ) [jordanFaust](https://github.com/JordanFaust/dotfiles)
* ( ) [joseluisgomes](https://github.com/joseluisgomes/dotfiles)
* ( ) [jsinisin](https://github.com/Jsinisin/Figs)
* ( ) [julius-boettger](https://github.com/julius-boettger/dotfiles)
* ( ) [juminai](https://github.com/juminai/dotfiles)
* ( ) [junnunkarim/dotfiles_home](https://github.com/junnunkarim/dotfiles_home)
* ( ) [junnunkarim/dotfiles_home](https://github.com/junnunkarim/dotfiles_home)# MD
* ( ) [justmike80386/dots/tree/main/2022.07.02.i3gaps_blueprint](https://github.com/justmike80386/dots/tree/main/2022.07.02.i3gaps_blueprint)
* ( ) [kaoxk27](https://git.disroot.org/kaoxk27/labwc-dots)
* ( ) [koiyae](https://github.com/koiyae/dotfiles-blue.git)
* ( ) [koiyae](https://github.com/koiyae/dotfiles)
* ( ) [ksenia-portu](https://github.com/ksenia-portu/flake)
* ( ) [laurigates](https://github.com/laurigates/dotfiles)
* ( ) [ldelossa](https://github.com/ldelossa/dotfiles)
* ( ) [leerv474](https://github.com/Leerv474/.dotfiles)
* ( ) [levizor hyprland](https://github.com/Levizor/dotfiles_hyprland)
* ( ) [levizor i3](https://github.com/Levizor/dotfiles_i3)
* ( ) [lierB](https://github.com/LierB/dotfiles) $$$
* ( ) [linkfrg](https://github.com/linkfrg/dotfiles)
* ( ) [locomotiv1](https://github.com/locomotiv1/dotfiles)
* ( ) [luh-code/57cf19c27257bf0542b3ff3a7db29432](https://gist.github.com/Luh-code/57cf19c27257bf0542b3ff3a7db29432) waybar
* ( ) [luyu-wu/Config](https://github.com/luyu-wu/Config)
* ( ) [lxbx44](https://github.com/lxbx44/dotfiles)
* ( ) [lyaguxafrog](https://github.com/lyaguxafrog/dotfiles)
* ( ) [magnusiwy](https://github.com/MagnuSiwy/dotfilesQtile)
* (2) [markpendlebury/HyprDots](https://github.com/markpendlebury/HyprDots) thunar, btop, gtk-3.0, hyprland, kitty, mako, neotech, scripts, swaylock, vscode, wallpapers, waybar, wofi, zsh, rtorrent, sdt (sddm), Tokyonight-Storm-BL-LB
* ( ) [mathix420](https://github.com/mathix420/dotfiles)
* ( ) [matjam/i3dots](https://github.com/matjam/i3dots)
* ( ) [matjam/qtile-dots](https://github.com/matjam/qtile-dots)
* ( ) [maulve](https://github.com/Maulve/dotfiles)
* ( ) [mbednarek360/dots](https://gitlab.com/mbednarek360/dots)
* ( ) [mbilker/dotfiles: My dotfiles for Linux](https://github.com/mbilker/dotfiles)
* ( ) [mechatour/hyprland_dotfiles](https://github.com/mechatour/hyprland_dotfiles)
* ( ) [mierak](https://github.com/mierak/dotfiles)
* ( ) [miguel-Gotor](https://github.com/Miguel-Gotor/dotfiles)
* ( ) [mischavandenburg](https://github.com/mischavandenburg/dotfiles)
* ( ) [mrvivekrajan](https://github.com/MrVivekRajan/Hypr-Dots)
* ( ) [mrVivekRajan/Hypr-Dots](https://github.com/MrVivekRajan/Hypr-Dots)
* ( ) [mubinmuhammad](https://github.com/MubinMuhammad/MinimalSwayFX)
* ( ) [muspelheim](https://github.com/Barbaross93/Muspelheim)
* ( ) [myTerminal](https://github.com/myTerminal/dotfiles)
* ( ) [n6v26r/.dotfiles](https://github.com/n6v26r/.dotfiles)
* ( ) [narmis-E/hyprland-dots](https://github.com/Narmis-E/hyprland-dots)
* ( ) [naturePixels/Space-Theme-dotfiles](https://github.com/NaturePixels/Space-Theme-dotfiles)
* ( ) [nekonako](https://github.com/nekonako/dotfiles)
* ( ) [nekowinston](https://github.com/nekowinston/dotfiles)
* ( ) [nespoliBT/.dotfiles](https://github.com/NespoliBT/.dotfiles) - ags
* ( ) [nicejji](https://github.com/nicejji/dotfiles)
* ( ) [niksingh710](https://github.com/niksingh710/gdots)
* ( ) [normalNvim/NormalNvim](https://github.com/NormalNvim/NormalNvim)
* ( ) [notkimu/starlight](https://github.com/notKimu/dotfiles/tree/master/Starlight)
* ( ) [nxy7](https://github.com/nxy7/dotfiles)
* ( ) [nyx6965/.dotfiles/tree/master](https://github.com/nyx6965/.dotfiles/tree/master)
* ( ) [oak](https://codeberg.org/oak/dots/) [dwl fork](https://codeberg.org/oak/dwl)
* ( ) [omerxx](https://github.com/omerxx/dotfiles) - good nvim
* ( ) [oncomouse](https://github.com/oncomouse/dotfiles/blob/3e67d5c0a863acdce56957b3f33c2cee0957a84e/stow/scripts/dot-local/bin/dotfiles-fm%23L6)
* ( ) [openSauce04/sway-dotfiles](https://github.com/OpenSauce04/sway-dotfiles)
* ( ) [openSauce04/waybar-dotfiles](https://github.com/OpenSauce04/waybar-dotfiles)
* ( ) [orbita2d](https://github.com/orbita2d/.juniper)
* ( ) [orw/dotfiles/.config/gtk-3.0/thunar.css at 4e9ee94f406f63387a237409913fba72a24a9220 · s0la/orw](https://github.com/s0la/orw/blob/4e9ee94f406f63387a237409913fba72a24a9220/dotfiles/.config/gtk-3.0/thunar.css%23L107)
* ( ) [osiNubis99](https://github.com/OsiNubis99/dotFiles)
* ( ) [oYakate](https://github.com/oYakate/dotfiles)
* ( ) [oYakate/dotfiles: my arch(btw) linux dotfiles](https://github.com/oyakate/dotfiles)
* ( ) [pansy27](https://github.com/pansy27/Dotfiles)
* ( ) [paranoidbarbie](https://github.com/paranoidbarbie/Hypr-Blue)
* ( ) [pastebin.com/Y5EQvhHm](https://pastebin.com/Y5EQvhHm)
* ( ) [pineedaa](https://github.com/pineedaa/dotfiles/tree/master)
* ( ) [prasanthrangan](https://github.com/prasanthrangan/hyprdots)
* ( ) [protonnumber](https://github.com/ProtonNumber/Dotfiles,)
* ( ) [pwnedbyisa](https://github.com/pwnedbyisa/dots)
* ( ) [pyramorphix](https://github.com/Pyramorphix/Arch-dotfiles)
* ( ) [pyramorphix](https://github.com/Pyramorphix/Arch-dotfiles/blob/master/colorscheme)
* ( ) [pyramorphix](https://github.com/Pyramorphix/Arch-dotfiles/tree/master/nvim)
* ( ) [qtile First Rice :) : r/unixporn](https://www.reddit.com/r/unixporn/comments/1b224gw/qtile_first_rice/)
* ( ) [qxb3/gruvbox.hypr](https://github.com/qxb3/gruvbox.hypr)
* ( ) [qxb3/gruvbox.hypr/tree/vim_styled](https://github.com/qxb3/gruvbox.hypr/tree/vim_styled)
* ( ) [r/hyprland/s/MvO7z1LdrZ](https://www.reddit.com/r/hyprland/s/MvO7z1LdrZ) waybar
* ( ) [r/hyprland/s/RB9tJny7yS](https://www.reddit.com/r/hyprland/s/RB9tJny7yS)
* ( ) [r/swaywm/s/BAFR2Ez9kk](https://www.reddit.com/r/swaywm/s/BAFR2Ez9kk) * ( ) [r/swaywm/s/E1c3DjLRPh](https://www.reddit.com/r/swaywm/s/E1c3DjLRPh) dotfiles
* ( ) [r/unixporn/comments/146j8gx/hyprland_waydroid_is_amazing_feat_my_custom/](https://www.reddit.com/r/unixporn/comments/146j8gx/hyprland_waydroid_is_amazing_feat_my_custom/)
* ( ) [r/unixporn/comments/vil0mp/bspwm_first_rice_nature_is_everything/](https://www.reddit.com/r/unixporn/comments/vil0mp/bspwm_first_rice_nature_is_everything/) dots
* ( ) [r/unixporn/s/1pGuJ9c49D](https://www.reddit.com/r/unixporn/s/1pGuJ9c49D)
* ( ) [r/unixporn/s/5MDR8LNPIu](https://www.reddit.com/r/unixporn/s/5MDR8LNPIu) * ( ) [r/unixporn/s/5df0HZuOEn](https://www.reddit.com/r/unixporn/s/5df0HZuOEn) Dracula
* ( ) [r/unixporn/s/7BK4nY4pV3](https://www.reddit.com/r/unixporn/s/7BK4nY4pV3)
* ( ) [r/unixporn/s/8wW3aHmrTJ](https://www.reddit.com/r/unixporn/s/8wW3aHmrTJ) hyprland
* ( ) [r/unixporn/s/9yuK7ZrOmJ](https://www.reddit.com/r/unixporn/s/9yuK7ZrOmJ)
* ( ) [r/unixporn/s/c2XQRk9SMN](https://www.reddit.com/r/unixporn/s/c2XQRk9SMN) minimalist config
* ( ) [r/unixporn/s/cgWQ6MAP0X](https://www.reddit.com/r/unixporn/s/cgWQ6MAP0X) pywal suckless arch
* ( ) [r/unixporn/s/CUbkAsCxR2](https://www.reddit.com/r/unixporn/s/CUbkAsCxR2)
* ( ) [r/unixporn/s/DoOlUPlMjw](https://www.reddit.com/r/unixporn/s/DoOlUPlMjw)
* ( ) [r/unixporn/s/gYVDbLC9IC](https://www.reddit.com/r/unixporn/s/gYVDbLC9IC) dotfiles
* ( ) [r/unixporn/s/gZRyLFqhQd](https://www.reddit.com/r/unixporn/s/gZRyLFqhQd) dotfiles
* ( ) [r/unixporn/s/IK1cer88Bu](https://www.reddit.com/r/unixporn/s/IK1cer88Bu)
* ( ) [r/unixporn/s/JtYMGH5i29](https://www.reddit.com/r/unixporn/s/JtYMGH5i29) dotfiles wlr-shell
* ( ) [r/unixporn/s/Ka2Pxgy2yY](https://www.reddit.com/r/unixporn/s/Ka2Pxgy2yY) Hyprland
* ( ) [r/unixporn/s/kFIDonkGB7](https://www.reddit.com/r/unixporn/s/kFIDonkGB7) bspwm
* ( ) [r/unixporn/s/leD5dFiNdR](https://www.reddit.com/r/unixporn/s/leD5dFiNdR) dots
* ( ) [r/unixporn/s/m0kCY84yIK](https://www.reddit.com/r/unixporn/s/m0kCY84yIK) sway android kotlin nvim
* ( ) [r/unixporn/s/MaVbupvoPy](https://www.reddit.com/r/unixporn/s/MaVbupvoPy) hyprland
* ( ) [r/unixporn/s/mvA6EhXF0t](https://www.reddit.com/r/unixporn/s/mvA6EhXF0t)
* ( ) [r/unixporn/s/Nf1zruC7dF](https://www.reddit.com/r/unixporn/s/Nf1zruC7dF)
* ( ) [r/unixporn/s/o7eTb34jhu](https://www.reddit.com/r/unixporn/s/o7eTb34jhu) dots nordic
* ( ) [r/unixporn/s/pHPB7n5LA6](https://www.reddit.com/r/unixporn/s/pHPB7n5LA6) mint dotfiles
* ( ) [r/unixporn/s/PZfxclDJXh](https://www.reddit.com/r/unixporn/s/PZfxclDJXh) hyprland
* ( ) [r/unixporn/s/qsBAkTyyxa](https://www.reddit.com/r/unixporn/s/qsBAkTyyxa) hyprland gruvminimal eww
* ( ) [r/unixporn/s/rR0LCxnYtC](https://www.reddit.com/r/unixporn/s/rR0LCxnYtC) uniform theming
* ( ) [r/unixporn/s/S4N6ykltXz](https://www.reddit.com/r/unixporn/s/S4N6ykltXz)
* ( ) [r/unixporn/s/sRGBbz3Czx](https://www.reddit.com/r/unixporn/s/sRGBbz3Czx)
* ( ) [r/unixporn/s/SUTHjLNCFs](https://www.reddit.com/r/unixporn/s/SUTHjLNCFs) material-you plasma
* ( ) [r/unixporn/s/sYg968syn9](https://www.reddit.com/r/unixporn/s/sYg968syn9)
* ( ) [r/unixporn/s/tdjNY4PC4Z](https://www.reddit.com/r/unixporn/s/tdjNY4PC4Z)
* ( ) [r/unixporn/s/uR9ho1I0Mf](https://www.reddit.com/r/unixporn/s/uR9ho1I0Mf) dotfiles
* ( ) [r/unixporn/s/W5vf8eRRFU](https://www.reddit.com/r/unixporn/s/W5vf8eRRFU)
* ( ) [r/unixporn/s/WvOl2LnvwE](https://www.reddit.com/r/unixporn/s/WvOl2LnvwE) openbox dots
* ( ) [r/unixporn/s/xcMCSiBoZL](https://www.reddit.com/r/unixporn/s/xcMCSiBoZL) tokyonight rice
* ( ) [r/unixporn/s/YcQemYe494](https://www.reddit.com/r/unixporn/s/YcQemYe494)
* ( ) [r/unixporn/s/ZcUGf38MG9](https://www.reddit.com/r/unixporn/s/ZcUGf38MG9)
* ( ) [r/UsabilityPorn/s/CK9RLqKhQD](https://www.reddit.com/r/UsabilityPorn/s/CK9RLqKhQD) dotfiles
* ( ) [rascal999/maxos](https://github.com/rascal999/maxos)
* ( ) [raulMurillo/dotfiles-gui](https://github.com/RaulMurillo/dotfiles-gui)
* ( ) [raw.githubusercontent.com/MaxSh12/bepis/main/config.conf](https://raw.githubusercontent.com/MaxSh12/bepis/main/config.conf)
* ( ) [raw.githubusercontent.com/ronasimi/dotfiles/t490/home/.config/gtk-3.0/gtk.css](https://raw.githubusercontent.com/ronasimi/dotfiles/t490/home/.config/gtk-3.0/gtk.css) thunar CSS
* ( ) [re1san/K-Dots](https://github.com/re1san/K-Dots)
* ( ) [recleun](https://github.com/recleun/dotfiles)
* ( ) [redas24](https://github.com/redas24/dotcommon )
* ( ) [redpenguinyt/dots](https://github.com/redpenguinyt/dots)
* ( ) [remyIsCool](https://github.com/RemyIsCool/dotfiles)
* ( ) [rhyhn](https://github.com/rxyhn/tokyo)
* ( ) [riviox](https://github.com/riviox/dotfiles)
* ( ) [rochacbruno/dotfiles: My Environment Configurations](https://github.com/rochacbruno/dotfiles)
* ( ) [rome6315/.config/tree/master](https://github.com/rome6315/.config/tree/master)
* ( ) [romeovs](https://github.com/romeovs/creep)
* ( ) [ronasimi](https://github.com/ronasimi/dotfiles)
* ( ) [ronasimi](https://github.com/ronasimi/dotfiles/tree/t490)
* ( ) [rs221122](https://codeberg.org/rs221122/dotfiles)
* ( ) [rusty-electron](https://github.com/rusty-electron/dotfiles) [video](https://www.youtube.com/watch?v=cAm2kKakN5U)
* ( ) [rxtsel](https://github.com/rxtsel/dot)
* ( ) [ryanb](https://github.com/ryanb/dotfiles)
* ( ) [s0la](https://github.com/s0la/orw)
* ( ) [s4nkalp](https://github.com/S4NKALP/gh0stzk-dotfile)
* ( ) [s4NKALP](https://github.com/S4NKALP/hyprland)
* ( ) [sabrehagen/desktop-environment: ☁️ From tty to production in one command, on the desktop and in the cloud.](https://github.com/sabrehagen/desktop-environment)
* ( ) [sadmantariq](https://github.com/SadmanTariq/dotfiles)
* ( ) [sadparadiseinhell/dotfiles: Dotfiles](https://github.com/sadparadiseinhell/dotfiles)
* ( ) [sahib/dotfiles/blob/master/bin%2Fexecutable_toggle-dark-light.sh](https://github.com/sahib/dotfiles/blob/master/bin%252Fexecutable_toggle-dark-light.sh)
* ( ) [sane1090x/dotfiles/tree/tomorrow-night](https://github.com/sane1090x/dotfiles/tree/tomorrow-night)
* ( ) [sanktAfra-notsoofficial/LinuxRice](https://github.com/SanktAfra-notsoofficial/LinuxRice) qtile
* ( ) [sansdotsh](https://codeberg.org/SansDOTSH/dotfiles)
* ( ) [sebTalbot/comfy_guration](https://github.com/SebTalbot/comfy_guration)
* ( ) [shentxt/NordicBreeze](https://github.com/Shentxt/NordicBreeze)
* ( ) [shotnectarine](https://github.com/shotnectarine/Tokyo-Night-Hyprland)
* ( ) [shvedes](https://github.com/shvedes/dotfiles)
* ( ) [siduck](https://github.com/siduck/chadwm)
* ( ) [sioodmy](https://github.com/sioodmy/dotfiles)
* ( ) [slicetext/awm_dots](https://github.com/slicetext/awm_dots)
* ( ) [slicetext/awm_dots/tree/master](https://github.com/slicetext/awm_dots/tree/master)
* ( ) [snxwmn](https://github.com/Snxwman/rancid)
* ( ) [soulhotel/bf890d7023636ecfeca3db6690a9fd2e](https://gist.github.com/soulhotel/bf890d7023636ecfeca3db6690a9fd2e)
* ( ) [spelis](https://github.com/Spelis/dotfiles)
* ( ) [spelljinxer](https://github.com/Spelljinxer/dotfiles)
* ( ) [spreadiesInSpace/cinnamon-dotfiles: Dots for a person who is WAY too addicted to the Cinnamon DE and Gruvbox Theme](https://github.com/SpreadiesInSpace/cinnamon-dotfiles)
* ( ) [sprinter05](https://github.com/Sprinter05/my-dots)
* ( ) [sSKT7/i3-xfce](https://github.com/SSKT7/i3-xfce)
* ( ) [ssubezZ](https://github.com/SsubezZ/hyprland-dots)
* ( ) [stardust-kyun](https://github.com/stardust-kyun/dotfiles)
* ( ) [starfarm](https://github.com/fhill2/dotfiles/blob/2bc73af4486c3a51c9f070e35929e814fec46b40/config/starfarm/tags.yaml%23L40)
* ( ) [steelAtomic/lunixdotfiles](https://github.com/SteelAtomic/lunixdotfiles)
* ( ) [stephan-raabe](https://gitlab.com/stephan-raabe/dotfiles)
* ( ) [swayFX Minimal and Immutable Nord with Fedora Sericea : r/unixporn](https://www.reddit.com/r/unixporn/comments/1b0uvwg/swayfx_minimal_and_immutable_nord_with_fedora/)
* ( ) [swayKh](https://github.com/SwayKh/dotfiles) $$$ [r/unixporn/comments/1c8284c/hyprland_my_dark_and_minimal_rice](https://www.reddit.com/r/unixporn/comments/1c8284c/hyprland_my_dark_and_minimal_rice)
* ( ) [sweetbbak/dots/tree/main/.config](https://github.com/sweetbbak/dots/tree/main/.config)
* ( ) [syndrizzle](https://github.com/Syndrizzle/hotfiles)
* ( ) [talfaza](https://github.com/Talfaza/dotfiles)
* ( ) [tasath26](https://github.com/tasath26/dotfiles)
* ( ) [tasnimalam](https://github.com/tasnimAlam/dot-files)
* ( ) [tensorfiles/etc/dotfiles/config/pcmanfm/default/pcmanfm.conf at 220ba6d7f53cfc412451e83ab4677dc88fe7e52a · tsandrini/tensorfiles](https://github.com/tsandrini/tensorfiles/blob/220ba6d7f53cfc412451e83ab4677dc88fe7e52a/etc/dotfiles/config/pcmanfm/default/pcmanfm.conf%23L4)
* ( ) [theBeeBoi](https://github.com/TheBeeBoi/dotfiles)
* ( ) [thecaprisun](https://github.com/thecaprisun/dotfiles)
* ( ) [theSmallTeaBoi/frogix](https://github.com/TheSmallTeaBoi/frogix)
* ( ) [tmux config](https://www.reddit.com/r/unixporn/s/1pGuJ9c49D)
* ( ) [tobiaisu/hyprland-dotfiles](https://codeberg.org/tobiaisu/hyprland-dotfiles)
* ( ) [tootyourflute/laptop-dotfiles](https://gitlab.com/tootyourflute/laptop-dotfiles)
* ( ) [tottitov](https://github.com/Tottitov/.dotfiles)
* ( ) [tottitov](https://github.com/Tottitov/dotfiles)
* ( ) [traap](https://github.com/Traap/dotfiles)
* ( ) [tymscar](https://github.com/tymscar/dotfiles)
* ( ) [uday-sudo/dotfiles/tree/main](https://github.com/uday-sudo/dotfiles/tree/main)
* ( ) [unixporn-dots/unixporn-dots.github.io: A collection of dotfiles and icons from the r/unixporn community](https://github.com/unixporn-dots/unixporn-dots.github.io)
* ( ) [unwiredfromreality](https://github.com/unwiredfromreality/dotfiles)
* ( ) [vague2k/.dotfiles-arch](https://github.com/vague2k/.dotfiles-arch)
* ( ) [vallen217](https://github.com/Vallen217/dotfiles)
* ( ) [vallen217/dotfiles/tree/main/.config%2Fnvim](https://github.com/Vallen217/dotfiles/tree/main/.config%252Fnvim)
* ( ) [varikvalefor](https://github.com/varikvalefor/personalconfig)
* ( ) [vicky-dot-bat](https://github.com/vicky-dot-bat/archvillainette-dotfiles-pub)
* ( ) [vidy007](https://github.com/vidy007/dotfiles)
* ( ) [voidlinux-dotfiles](https://github.com/Darrkhan/VoidLinux-dotfiles/tree/Hyprland)
* ( ) [wallsified/nordflow](https://github.com/wallsified/nordflow) * ( ) [warpje5/hyprland-dotfiles-gruvbox](https://github.com/warpje5/hyprland-dotfiles-gruvbox)
* ( ) [welpyes](https://github.com/welpyes/welpyes-dotfiles)
* ( ) [wetfloo](https://github.com/wetfloo/dotfiles)
* ( ) [whiteBlackGoose](https://github.com/WhiteBlackGoose/dotfiles)
* ( ) [wick3dr0se](https://github.com/wick3dr0se/dots)
* ( ) [wiltaylor](https://github.com/wiltaylor/dotfiles)
* ( ) [winterSunset95](https://github.com/WinterSunset95/conky)
* ( ) [xdiban/awesome](https://github.com/xdiban/awesome)
* ( ) [xeome/dots: dotfiles for laptop, modified version of normal dots](https://github.com/xeome/dots)
* ( ) [xero](https://github.com/xero/dotfiles)
* ( ) [yam-1111](https://github.com/yam-1111/dotfiles)
* ( ) [yashneuro](https://github.com/yashneuro/dotfiles)# Untitled
* ( ) [yees7/polybar-dots](https://github.com/yees7/polybar-dots)
* ( ) [yurihikari](https://github.com/yurihikari/garuda-sway-config)
* ( ) [yusamock](https://github.com/yusamock/dotfiles)
* ( ) [zakar98k/hyprland-catppuccin-dotz](https://github.com/Zakar98k/hyprland-catppuccin-dotz)
* ( ) [zaruhev](https://github.com/zaruhev/arch-i3-dots)
* ( ) [zDyanTB/HyprNova](https://github.com/zDyanTB/HyprNova)
* ( ) [zDyanTB/HyprNova/tree/master/.config%2Fswaync](https://github.com/zDyanTB/HyprNova/tree/master/.config%252Fswaync)
* ( ) [zeak-z/dots2/tree/main/config%2Frofi](https://github.com/zeak-z/dots2/tree/main/config%252Frofi)
* ( ) [zer0tonin/Mikochi](https://github.com/zer0tonin/Mikochi)
* ( ) [zirixCZ](https://github.com/ZirixCZ/dotfiles)
* ( ) [zmeyka3310](https://github.com/zmeyka3310/dotfiles-hyprland)
* ( ) [zwork101](https://github.com/Zwork101/dotfiles)

## Bare

* ( ) [Riverwm with Yambar](https://www.reddit.com/r/UsabilityPorn/s/oE9xxCZZJq ) -
* ( ) [alexmuxika](https://github.com/AlexMuxika/configs) -  [init](https://raw.githubusercontent.com/AlexMuxika/configs/main/init) -
* ( ) [alexvzyl](https://github.com/AlexvZyl/.dotfiles) -
* ( ) [Anomalocaridid](https://github.com/Anomalocaridid/dotfiles)
* ( ) [Aquarius0715](https://github.com/Aquarius0715/HomeDirectory) - dbus, emacs, intellij idea, ipython, java, ssh, vim, vimware, Xauthority, xsession, zsh, gstreamer, ibus
* ( ) [argosatcore](https://codeberg.org/argosatcore/Deb_Dots) - debian, sway, emacs, bash, vim, inputrc, environment.d, foot, fuzzel, kanshi, libreoffice, mako, mpd, mpv, nvim, sway, swayimg, swaylock, waybar, wlogout, mimeapps.list
* ( ) [ashenoy463](https://github.com/ashenoy463/dotfiles) -
* ( ) [aworldc](https://www.github.com/Aworldc/dots) -
* ( ) [BA_usr](https://gitlab.com/BA_usr/dotfiles-for-hyperland/)
* ( ) [BeelzebubOfGluttony ](https://github.com/BeelzebubOfGluttony/dotfiles) - kitty, dunst, polybar, firefox, rofi, ranger, neovim (nvchad), cascadia code, iosevka term, nerdfont, weather icons, materia
* ( ) [bibjaw99](https://github.com/bibjaw99/workstation) -
* ( ) [chadcat7/crystal](https://github.com/chadcat7/crystal) -
* ( ) [chasyxx](https://github.com/Chasyxx/bspwm-purple) -
* ( ) [cherrynoize ](https://github.com/cherrynoize/dash-dotfiles) dark-light color switcher, Xresources, bash, feh, git, inputrc, vim, xinit, zsh, alacritty, bash-git-prompt, bspwm, conky, dunst, fish, neofetch, nvim, picom, polybar, ranger, redshift, rofi, sxhkd, vlc, starship
* ( ) [command-z-z](https://github.com/command-z-z/Arch-dotfiles)
* ( ) [crzjp](https://codeberg.org/crzjp/dotfiles) -
* ( ) [danielo515](https://github.com/danielo515?tab=repositories) - neovim
* ( ) [datsfelipe](https://github.com/datsfilipe/dotfiles) -
* ( ) [deepaknegilachu](https://codeberg.org/deepaknegilachu/.dotfiles)
* ( ) [distilledx](https://github.com/distilledx/dotfiles)
* ( ) [euro20179](https://github.com/Euro20179/.files) -
* ( ) [Fedora-Titus](https://github.com/ChrisTitusTech/Fedora-Titus) -
* ( ) [gnulinux-projects](https://gitlab.com/gnulinux-projects/My_Linux_Files)
* ( ) [husseinhareb](https://github.com/husseinhareb/my-dotfiles) -
* ( ) [iil4](https://github.com/ii14/dotfiles) -
* ( ) [jason-goon](https://github.com/Jason-Goon/dwm_dotfiles) -
* ( ) [jjba-projects](https://gitlab.com/jjba-projects/dotfiles) -
* ( ) [jjba-projectsk](https://gitlab.com/jjba-projects/dotfiles)
* ( ) [justinlime](https://github.com/justinlime/dotfiles) -
* ( ) [jwalke23](https://github.com/jwalke23/mydotfiles)
* ( ) [karshprime](https://github.com/karshPrime/dotfiles) -
* ( ) [kelpwave](https://github.com/kelpwave/river-dots) - river, fuzzel, kitty, librewolf
* ( ) [kernelpanic95](https://github.com/kernelpanic95/dotfiles)
* ( ) [lauriset](https://github.com/lauriset) -
* ( ) [linuxdabbler (Gitlab profile)](https://github.com/linuxdabbler)  -
* ( ) [linuxdabbler](https://github.com/linuxdabbler/personal-dot-files/tree/master/config) -
* ( ) [linuxdabbler](https://gitlab.com/linuxdabbler/dotfiles) -
* ( ) [magnotec1 !!!](https://github.com/Magnotec1/photosynthesis-dots) - firefox, kitty, neofetch, polybar, rofi, startpage
* ( ) [mahmoudk1000](https://github.com/mahmoudk1000/dotfiles) -
* ( ) [mahmoudk1000/awedots](https://github.com/mahmoudk1000/awedots) -
* ( ) [mahmoudk1000/startpage](https://github.com/mahmoudk1000/startpage) -
* ( ) [mandri97](https://github.com/Mandri97/dotfiles) -
* ( ) [mariasol0s](https://github.com/MariaSolOs/dotfiles) -
* ( ) [martinbaillie](https://github.com/martinbaillie/dotfiles)
* ( ) [maydayv7](https://github.com/maydayv7/dotfiles)
* ( ) [meain](https://github.com/meain/dotfiles/blob/refs%2Fheads%2Fmaster/nyxt%2F.config%2Fnyxt%2Fconfig.lisp)
* ( ) [mizzunet](https://github.com/mizzunet/dots) -
* ( ) [muppetcode](https://github.com/muppetcode/dotfiles-manjaro) -
* ( ) [myagko](https://github.com/myagko/dotfiles)
* ( ) [myterminal](https://github.com/myTerminal/dotfiles) -
* ( ) [nickjj](https://github.com/nickjj/dotfiles)
* ( ) [post](https://nickjanetakis.com/blog/the-tools-i-use) - zsh, vim, ruby, git, tmux, zsh
* ( ) [nitestack](https://github.com/linuxdabbler/personal-dot-files)
* ( ) [nitestack](https://github.com/nitestack/dotfiles) -
* ( ) [nmdra](https://nmdra.github.io)
* ( ) [gh](https://github.com/nmdra/Dotfiles)
* ( ) [uses](https://nmdra.github.io/uses/)
* ( ) [nonamescm](https://github.com/nonamescm/dotfiles) -
* ( ) [noriaku](https://github.com/noriaku/dotfiles-arch) -
* ( ) [Onizuka893](https://github.com/Onizuka893/dotfiles)
* ( ) [oxalica](https://github.com/oxalica/nil) -
* ( ) [rifsxd](https://github.com/rifsxd/oh-my-awesomewm-dots) -
* ( ) [Riverwm video](https://www.youtube.com/watch?v=MwnK6arB2Rc)) -
* ( ) [seraph036](https://github.com/seraph036/nekravol)
* ( ) [solidiquis](https://github.com/solidiquis/dotfiles) -
* ( ) [ssamin69](https://github.com/ssamin69/new-dots)
* ( ) [sspaeti](https://github.com/sspaeti/dotfiles) -
* ( ) [Stardust-kyun ](https://github.com/Stardust-kyun/dotfiles) - endeavorOS, awesomewm, nemo, librewolf, st, bash, vim, gtk. Xresources, picom
* ( ) [stephan.raabe](https://gitlab.com/stephan.raabe)
* ( ) [szelwiga](https://github.com/Szelwiga/dots) -
* ( ) [tectonic-typesetting](https://github.com/tectonic-typesetting/tectonic) -
* ( ) [theooo](https://codeberg.org/theooo/wayland) - dunst, foot, rofi, sway, waybar
* ( ) [Tottitov ](https://github.com/Tottitov/dotfiles) - beets, dunst, firefox, fontconfig, foot, git, gnnupam, gtk, kanshi, mbsync @@@, mpd, mpv, msmtp @@@, mutt, ncmcpp, newsboat, nvim, pipewire, river, scripts, shell, tofi, transmission, tremc @@@, vim, waybar, whipper, zsh
* ( ) [tottitov](https://github.com/Tottitov/.dotfiles) -
* ( ) [ValdezFOmar](https://github.com/ValdezFOmar/.dotfiles)
* ( ) [vallen217](https://github.com/vallen217/dotfiles) -
* ( ) [vidfurlan](https://github.com/VidFurlan/Dotfiles) -
* ( ) [waffle87](https://github.com/waffle87/dots/tree/kepler) → see other branches -
* ( ) [xero](https://github.com/xero/dotfiles) -
* ( ) [xinux-org](https://github.com/xinux-org/configs) -

## hyprland

* ( ) [jakoolit](https://github.com/JaKooLit/Hyprland-Dots) - editorconfig, scripts, kvantum, btop, cava, kitty, qt5ct, qt6ct, rofi, swappy, swaylock, swaync, wal, waybar, wlogout
* ( ) [ipg0](https://github.com/ipg0/dotfiles-hypr) -
* ( ) [kannakalyan05](https://github.com/kannakalyan05/hyprland) -
* ( ) [nyxfr](https://github.com/nyxfr/.dotfiles) - btop, cava, dunst, fish, hypr, kitty, mc, neofetch, nvim, paru, rofi, swaybg, swaylock, tmux, waybar, wlogout, starship, scripts, fonts
* ( ) [soldoestech](hyprland [SolDoesTech/HyprV2/tree/main)](https://github.com/SolDoesTech/HyprV2/tree/main)) -
* ( ) [tentypematus](https://gitlab.com/TenTypekMatus/tokyonight-dots) i3, alacritty, fish, BetterDiscord, gtk, hypr, neofetch, nvim, polybar, rofi, picom
* ( ) [nord hyprland](https://github.com/clamsfeel2/dots)  -
* ( ) [danielgafni](https://github.com/danielgafni/dotfiles) - zsh, hyprland nvidia launcher, alacritty, btoop, common, eww, helix, hypr, kitty, mako, nvim, ranger, sheldon, swaylock, waybar, wlogout, wofi, zathura, zellij, starship, zoomus
* ( ) [lauroro](https://github.com/lauroro/hyprland-dotfiles) -
* ( ) [end-4](https://github.com/end-4/dots-hyprland) -
* ( ) [aymanlyesri](https://github.com/AymanLyesri/hyprland-conf) -
* ( ) [husseinhareb](https://github.com/husseinhareb/hyprland-eww) -
* ( ) [narmis-e](https://github.com/Narmis-E/hyprland-dots) -
* ( ) [jakoolit](https://github.com/JaKooLit/Hyprland-Dots) -
* ( ) [aymanlyesri](https://github.com/AymanLyesri/hyprland-conf) -
* ( ) [cybersnake223](https://github.com/Cybersnake223/Hypr) -
* ( ) [delacerate](https://github.com/delacerate/hyprdots/tree/hypr-dots) -
* ( ) [delacerate](https://github.com/delacerate/hyprdots) -
* ( ) [smravec](https://github.com/smravec/.dotfiles)-hyprland - hyprland, fish, alacritty, eww, vim, mpd, pipewire
* ( ) [1arsna1](https://github.com/1Arsna1/HyprStream.git)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/12v4zyn/hyprland_i_think_i_installed_some_melware/)
* ( ) [alyanser](https://github.com/alyanser/dotfiles) - arch wayland, fontconfig, gtk-3.0, hypr, mpd, ncmcpp, nvim, waybar, wofi, xremap, bash, inputrc
* ( ) [amadeusWM](https://github.com/AmadeusWM/hyprland-winter)
* ( ) [anhvo8836](https://gitlab.com/anhvo8836/hyprland)
* ( ) [axenide Dotfiles](https://github.com/Axenide/Dotfiles) - hyprland
* ( ) [axenide Dots-2023-03-28](https://github.com/Axenide/Dots-2023-03-28)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/124ta5r/hyprland_this_is_the_longest_i_have_gone_without/) hyprland
* ( ) [chiefdinkan](https://github.com/chiefdinkan/dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/12s2l1p/hyprlandwaybarrofi_visuosymmetriphilia/)
* ( ) [chrisTitusTech](https://github.com/ChrisTitusTech/hyprland-titus)- dunst, hyprland, kitty, pipewire, rofi, swaylock, waybar, wlogout
* ( ) [darshanCommits](https://github.com/darshanCommits/dotfiles) - [scripts](https://github.com/darshanCommits/Linux-Scripts-Dots) Wallpaper: [I see a door and I want to paint it black](https://github.com/darshanCommits/Linux-Scripts-Dots/blob/master/goatv2.png) GTK: [Dracula](https://draculatheme.com/gtk) Music Player: [MusicMeister](https://greeed-music.netlify.app/)
* ( ) [Git Repo](https://github.com/darshanCommits/musicMeister.git) That goofy app: [Jadoo](https://greeed-jadoo.netlify.app/)
* ( ) [Git Repo](https://github.com/darshanCommits/Jadoo.git/) - foot, helix, hyprland, keyd, mako, rofi, waybar, wezterm, yazi, zathura, zsh, mimeapps, surfing-keys.js
* ( ) [end-4](https://github.com/end-4/dotfiles)
* ( ) [end-4](https://github.com/end-4/dotfiles)
* ( ) [error-404](https://github.com/ERROR-404-NULL-NOT-FOUND/librepad-dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/12nah01/hyprland_beneath_the_surface/)
* ( ) [flick0](https://github.com/flick0/dotfiles)
* ( ) [folke ](https://github.com/folke/dot) - alacritty, aria2, atuin, avizo, bashtop, bat, bspwm, doom-emacs, dunst, environment.d, fish, gtk, hyprland, karabiner, kitty, lazygit, mako, nitrogen, paru, picom, polybar, procs, qutebrowser, rofi, rtx, skhd, sway, swayidle,swaylock sxhkd, tmux, ubersicht, wal, waybar, wezterm, wlogout, yabai, rave, starship, topgrade
* ( ) [hyprdots](https://github.com/prasanthrangan/hyprdots)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/12uy6q6/hyprland_first_time_trying_a_wm_ended_up)
* ( ) [hyprland-dots](https://github.com/linuxmobile/hyprland-dots)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/121k20u/hyprland_my_first_tiling_window_manager_rice/) hyprland
* ( ) [hyprland-titus](https://github.com/ChrisTitusTech/hyprland-titus)
* ( ) [illegitimiate-egg](https://github.com/illegitimate-egg/dotfiles-improved)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/12sel5t/hyprland_black_white_rice/)
* ( ) [imRlyQt wallpad](https://github.com/ImRlyQt/wallpad)ImRlyQt - hyprland, kitty, waybar, waybar, wofi, zsh, p10k
* ( ) [imrayy](https://github.com/ImRayy/dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/12dbp8v/hyprland_my_first_rice)
* ( ) [JaKooLit](https://github.com/JaKooLit/Hyprland-Dots)
* ( ) [joshM-Yoru](https://github.com/JoshM-Yoru/dotfiles) - tmux, catpuccin, cava, snippets, hypr, kitty, lvim, neofetch, neovim, sway, swaylock, waybar, wofi, youtubemusic (ytmdesktop), zathura, kitty, picom, starship, zsh
* ( ) [k0SS4](https://github.com/K0SS4/.dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/12sel5t/hyprland_black_white_rice/)
* ( ) [linuxdotexe](https://github.com/linuxdotexe/.dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/1246eeo/kde_first_rice_nord_minimal_and_simple_just_a/) hyprland
* ( ) [linuxmobile](https://github.com/linuxmobile/hyprland-dots)linuxmobile - [Hyprland](https://github.com/hyprwm/Hyprland), [Zsh](https://www.zsh.org/) 🐚, [starship](https://github.com/starship/starship) , [WezTerm](https://github.com/wez/wezterm), [Waybar](https://aur.archlinux.org/packages/waybar-hyprland-git)🍧 (patched waybar following hyprland faq), [Dunst](https://github.com/dunst-project/dunst) 🍃, [Rofi](https://github.com/davatorium/rofi) 🚀 , [Ranger](https://github.com/ranger/ranger)🔖(custom!), [NvChad-V2](https://github.com/linuxmobile/nvchad-v2)
* ( ) [lokesh-krishna ](https://github.com/lokesh-krishna/dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/12nah01/hyprland_beneath_the_surface/)
* ( ) [madpro25](https://github.com/madpro25/dotfiles) - cava, coc, dunst, gtk, hyprland, kitty, neo, neovim, rofi, waybar, wlogout, zathura, git
* ( ) [mathisP75](https://github.com/MathisP75/summer-day-and-night)
* ( ) [mrbman](https://github.com/mrbman/hyprland-dotfiles.git)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/120am20/hyprland_this_is_where_i_currently_live/) hyprland
* ( ) [my-new-desktop-hyprland](https://christitus.com/my-new-desktop-hyprland)
* ( ) [oman395](https://github.com/Oman395/hyprland-dots)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/12qpcmz/hyprland_did_you_know_lofi_girl_made_a_synthwave/)
* ( ) [parapsychic](https://github.com/parapsychic/dot-files/)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/12rx8gr/hyprland_finally_moved_to_wayland_still_havent/)
* ( ) [prasanthrangan](https://github.com/prasanthrangan/hyprdots)
* ( ) [video](https://www.youtube.com/watch?v=WuZ2T6D_9yI)
* ( ) [prettykool](https://github.com/prettykool/dots)prettykool - with drop-shadow - [eww](https://github.com/elkowar/eww), [hyprland,](https://github.com/hyprwm/Hyprland)
* ( ) [emacs,](https://www.gnu.org/software/emacs/)
* ( ) [rofi,](https://github.com/davatorium/rofi)
* ( ) [swww,](https://github.com/Horus645/swww)
* ( ) [nnn,](https://github.com/jarun/nnn)
* ( ) [zathura,](https://git.pwmt.org/pwmt/zathura)
* ( ) [alacritty,](https://github.com/alacritty/alacritty)
* ( ) [newsboat,](https://github.com/newsboat/newsboat)
* ( ) [ncmpcpp,](https://github.com/ncmpcpp/ncmpcpp)
* ( ) [opensuse tumbleweed](https://get.opensuse.org/tumbleweed/)
* ( ) [proxzima](https://github.com/PROxZIMA/.dotfiles/)PROxZIMA - archcraft, vscode, neovim, firefox, zsh, btop, ryzen 7, nvidia, hyprland, kitty, tokyonight-dark-bl-lb, tokyonight-moon icons, caskadiyacove nerd font, trivago
* ( ) [shvedes](https://github.com/shvedes/dotfiles) - arch, hyprland, dunst swaybg, alacritty, thunar, neovim, firefox, chrome, fish, mpv, rofi
* ( ) [shvedes](https://github.com/shvedes/dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/12s456k/ochyprland_various_themes_through_the_rofi_menu/)
* ( ) [snaapsh0t12](https://github.com/snaapsh0t12/dotfiles) hyprland
* ( ) [thuanowa](https://github.com/thuanowa/dotfiles) - neovim, bash, git, vim, hyprland, ssh, wofi, tmux, editorconfig, ripgrep, crontab, vscode, surfingkeys.js, touchcursor, nvchad, lazyvim, fish, foot, zellij, alacritty, git, helix, ssh, npm,
* ( ) [unixrises](https://github.com/Qeatrix/UnixRises)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/11clpem/hyprland_serenity_dark/) hyprland
* ( ) [visual-dawg](https://github.com/Visual-Dawg/space_dots)
* ( ) [VladimirPapazov88](https://github.com/VladimirPapazov88/Everforest-Hyprland)
* ( ) [wayland-dotfiles](https://github.com/liamrahum/wayland-dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/12uad6j/hyprland_waylands_looking_promising)
* ( ) [yelojello](https://github.com/yelojello/hyprlandcfg)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/12ta6d3/hyprland_new_to_arch_heres_my_rice/)
* ( ) [yousifm](https://github.com/yousifm/dotfiles)
* ( ) [reddit](https://www.reddit.com/r/unixporn/comments/132yzuw/hyprland_catppuccin_everything/)
* ( ) [zerodya](https://github.com/Zerodya/dotfiles) - bemenu, cava, dunst, fish, hypr, kitty, carbonfox, mako, networkmanager-dmenu, nvim, picom, polybar, presets, sway, waybar, wofi, zathura

## river

* ( ) [river-rice](https://github.com/Soliprem/river-rice)- foot, river, rofi, waybar, wpg
Robert Duchesneau RiverWM dotfiles)
* ( ) [justinesmithies](https://codeberg.org/JustineSmithies/river-dotfiles) -

## i3

* ( ) [rx-py](https://github.com/rx-py/i3wm-dotfi) -
* ( ) [testertech i3](https://github.com/TesterTech/rice-i3-from-scratch-pywal) -
* ( ) [berthosefin ](https://github.com/berthosefin/dotfiles) - keybind list, lightdm, webkit2 greeter, xfce, i3-gaps, rofi, ulauncher, polybar, picom-jonabug-git, lxappearance, nordic-darker, nord-darker icons, roboto font, iosevka custom, thunar, ranger, firefox, brave, htop, tlp (power manager), viewnior, feh, pulseaudio, alacritty, zsh, file-roller, dunst, gimp, vim, vscodium, ncmcpp, rythmbox, mixxx, clementine, mpv, vlc, polkit-gnome, scrot, feh, pywal
* ( ) [drewgrif](https://github.com/drewgrif/dotfiles) - bash, dwm, scripts, polybar, pulseaudio, alacritty, bspwm, dk, sxhkd, dunst, i3, kitty, neofetch, nvim, picom, polybar, qtile, rofi, suckless, sway, waybar, wofi
* ( ) [edu-flores](https://github.com/edu-flores/linux-dotfiles) - automated theme switching, alacritty, dunst, i3, picom, polybar, rofi, zsh, scripts
* ( ) [lanej ](https://github.com/lanej/dotfiles) - ck, alacritty, bash, bat, scripts, bspwm, ctags, fish, git, i3, iterm, kitty, nvim, oni, polybar, powerline, python, qute, ruby, sh, spotify-player, termite, vim, zsh
* ( ) [Elteoremadebeethoven](https://github.com/Elteoremadebeethoven?tab=repositories) - nvim, manim, i3, i3blocks, rofi, lunarvim, manim-revealjs,
* ( ) [2kabhishek ](https://github.com/2kabhishek) - nvim, bash, bat, broot, cmus, git, htop, python, ranger, tmux, vim, zsh, autorandr, delta, fish, i3, kitty, konsole, lazygit, xplr, dmenu, inputrc, conky
* ( ) [6xnd0c (reddit)](https://www.reddit.com/r/unixporn/comments/6xnd0c/i3gaps_polybar_solarized_dark/) i3 [GTK Theme](https://github.com/apheleia/solarc-theme)
* ( ) [Firefox Theme](https://github.com/tilpner/solarc-firefox-theme)
* ( ) [Polybar](https://pastebin.com/D7Y9yzDY)
* ( ) [i3](https://pastebin.com/rgvkU2wJ)
* ( ) [Termite](https://pastebin.com/rG2cqWkC)
* ( ) [.Xresources](https://pastebin.com/UpR3uBe6)
* ( ) [addy-dclxvi](https://github.com/addy-dclxvi/i3-starterpack)addy ^
* ( ) [alexvzyl](https://github.com/AlexvZyl/.dotfiles)AlexvZyl - Arch, [Nordic](https://github.com/AlexvZyl/nordic.nvim), Polybar [config](https://github.com/AlexvZyl/.dotfiles/tree/main/.config/polybar), i3 [config](https://github.com/AlexvZyl/.dotfiles/tree/main/.config/i3), Neovim [config](https://github.com/AlexvZyl/.dotfiles/tree/main/.config/nvim), Kitty [config](https://github.com/AlexvZyl/.dotfiles/tree/main/.config/kitty), Wallpaper:) Combination of AI and Nord [here](https://github.com/AlexvZyl/.dotfiles/tree/main/.wallpapers)
* ( ) [aminvandh](https://github.com/aminvandh/dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/110udd9/i3gaps_no_bar_play_rpcs3/)
* ( ) [anhvo8836](https://gitlab.com/anhvo8836/KDE)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/1218ddk/i3wm_dracula_first_wm_and_first_rice/) i3
* ( ) [arch-config](https://github.com/Bloodface2/arch-config)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/12522b1/i3_blast_from_the_past/) i3
* ( ) [arch-linux-configs](https://github.com/akaminer11/arch-linux-configs)nvim and i3 - alacritty, i3, nvim, picom, scripts, terminator, vifm, wallpapers
* ( ) [calinLeafShade](https://github.com/CalinLeafshade/dots)CalinLeafshade - x11, alacritty, bash, dunst, gtk, i3, mpd, ncmcpp, nvim, picom, polybar, redshift, rofi, termite, wallpapers
* ( ) [chiarelloNicolo](https://github.com/ChiarelloNicolo/dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/112iink/i3wmpolybar_first_simple_rice/)
* ( ) [chick2d](https://github.com/Chick2D/dotfiles)
* ( ) [reddit](https://www.reddit.com/r/unixporn/comments/12s7ril/i3gaps_first_time_using_i3_ever/)  [i3 config](https://qubix.s-ul.eu/PRg0ci3e)
* ( ) [Polybar](https://qubix.s-ul.eu/7GSq9OIQ)
* ( ) [Picom](https://qubix.s-ul.eu/IMKVjH1E)
* ( ) [cloud-computer ](https://github.com/cloud-computer/dotfiles) - for running on desktop and in the cloud, Docker install scripts, [acpi](https://github.com/dortania/Getting-Started-With-ACPI) (hardware stuff), alsa-utils, apt-file, apt-utils, arandr, asciinema, autoconf, autorandr, bat, bc, build-essential, cargo, cava, cmake, matrix, colorized-logs, curl, dbus-x11, dnsmasq, dnsutils, [docker.io](http://docker.io/), exa, feh, fzf, ffmpeg, figlet, fonts-font-awesome, fonts-noto-color-emoji, g++, gcc, gimp, git, golang-go, gtk-theme-switch, gtk+3.0, htop, i3 dunst-, i3blocks, iftop, iputils-ping, jq, keychain, ksnip, libnotify-bin, libnss3-tools, libterm-readkey-perl, lsb-release, maim, make, man-db, mpd, mpv, nano, ncdu, ncmpcpp, neovim, net-tools, netcat-openbsd, numlockx, openssl, openvpn, pavucontrol-qt, pcmanfm, perl, pipx, pkg-config, pulseaudio, pulseaudio-module-zeroconf, pulsemixer, python3, python3-pip, ranger, redshift, ruby, slop, software-properties-common, ssh, sshpass, strace, stress, sudo, tig, tigervnc-scraping-server, tigervnc-standalone-server, tmux, transmission-cli, transmission-common, transmission-daemon, tree, unclutter-xfixes, vcsh, vim, wdiff, wmctrl, xauth, xautolock, xclip, xdotool, xinit, xinput, xorg, xsel, xserver-xorg, xterm, zathura, zsh, alacritty, arc (archiver), aws-cli, bandwhich, beekeeper studio, bluetuith, chrome, discord, dive, docker-compose, dunst, fastfetch, gh, gotop, gping, i3lock, i3 extras, invidtui, jobber, jump, kdenlive, lazyvim, mopidy, nerd fonts, nodejs, novnc, op, picom, pywal, speedtest, thorium, timeago, tldr, ueberzugapp, vscode, shfmt, vs-wal, xava, xcolor, yarn, openvpn, clipboard-cli, diff-so-fancy, github-email, http-server, imgur-uploader-cli, localtunnel, nativefier, nodemon, rebase-editor
* ( ) [clyde80](https://github.com/clyde80/i3-configuration)
* ( ) [black, green, and white rice](https://imgur.com/gallery/CNCaK)
* ( ) [crivotz ](https://github.com/crivotz/dot_files)- i3, zinit, tmux, tmuxinator, st, kitty, polybar, ranger, rofi, wezterm
* ( ) [desktop-config](https://github.com/Zedjones/desktop-config)Zedjones - moded i3lock, pywal, node-did, vim, zsh with pure prompt,
* ( ) [direwolf-arch-rice](https://github.com/ibrahimbutt/direwolf-arch-rice)- (old) dconf, i3, polybar, ranger
* ( ) [f1rq](https://github.com/f1rq/dotfiles)
* ( ) [gideonwolfe](https://github.com/GideonWolfe/dots)- i3-gaps, fish, firefox, chameleon (color switch script), dunst, polybar, picom, rofi, xmenu, neovim, latex, gnuplot, matplotlib, bashtop, gotop, s-tui, zathura, nautilus, ranger, pavucontrol, khal, khard, peaclock, cava, dijo,
* ( ) [jessfraz](https://github.com/jessfraz/dotfiles) - fontconfig, gnupg, i3, irssi, urxvt, slack, yubikey, bash, docker, gtk, inputrc, systemd, slim, x11, modprobe, pulse, ssh, sysctl, motd, systemd, mpd, gnupg
* ( ) [joshrandall8478](https://github.com/joshrandall8478/kde-rice)joshrandall8748 - arch, kitty, yaquake, latte-dock, Breeze theme, kitty, ranger, i3lock-fancy, zathura, rofi, jetbrains font
* ( ) [k-vernooy](https://github.com/k-vernooy/dotfiles) - arch, dunst, eww, glava, i3, macchina, mpv, neovim, picom, polybar, rofi, vis, zathura, firefox custom css, bash, inputrc, scripts
* ( ) [kaiec](https://github.com/kaiec/dotfiles) - bash, doom emacs, mutt, offlineimap, reveal.js, screenlayout, taskwarrior, timewarrior, tmux, urxvt, vim, xkb, inputrc, todo.txt, notmuch-mutt, xonsh, zsh, conky, i3, i3blocks, i3status, khal, kitty, neovim, polybar, powerline-shell, rofi, vdirsyncer, vifm, wtf, zathura, flake8, mimeapps, msmtp, offlineimap
* ( ) [knyfic/kgruvbox](https://github.com/knyfic/kgruvbox)- tty-clock, kitty, spicetify, cava, i3-gaps, dunst, dmenu, polybar,
* ( ) [l00sed](https://github.com/l00sed/.dotfiles-public)100sed - dotter, xresources, alacritty, arbtt, bash, coc, compton, dBug, flake8, fusuma, i3, .inputrc, kitty, pipe-viewer, python, ripgrep, rofi, screenkey, scripts, tmate, tmux, vim, zsh
* ( ) [LASER-WOLF](https://github.com/LASER-WOLF/dotfiles) - i3, picom, feh, good notes, mplayer, vim, bash, urxvt, rofi, fonts
* ( ) [liamrahum](https://github.com/liamrahum/dotfiles)i3
* ( ) [lordmzte](https://git.mzte.de/LordMZTE/dotfiles) - rust, ssh, nvim, zig, nvim in zig and fennel,
* ( ) [lsdrfrx](https://github.com/lsdrfrx/dotfiles) - i3, kitty, lvim, polybar, ranger, xborder, picom
* ( ) [mauromotion ](https://github.com/mauromotion/dotfiles) - [beautiful green/gray](https://github.com/mauromotion/dotfiles) - TauonMusicBox, bash, dunst, fish, i3, kitty, nvim, nvim_mauro, picom, polybar, pulse, rofi, tmux, wezterm, zsh - almost perfect stack
* ( ) [osx-dotfiles](https://github.com/madeline-xoxo/osx-dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/1227ydn/i3wm_picom_aquaish/) i3
* ( ) [ParallaxWave $$$$$$$$$](https://github.com/ParallaxWave/blood_i3)
* ( ) [ParallaxWave $$$](https://github.com/ParallaxWave/minimal_nord_i3)
* ( ) [ParallaxWave $$$$$$$$$](https://github.com/ParallaxWave/material_green_i3)
* ( ) [ParallaxWave](https://github.com/ParallaxWave/dotfiles) - i3gaps, compton, rofi, vim, tint2
* ( ) [penguinRice](https://github.com/p3nguin-kun/penguinRice)
* ( ) [percybolmer](https://github.com/percybolmer/dotfiles) - i3, nvim, polybar, git, tmux, zsh
* ( ) [phantas0s](https://github.com/Phantas0s/.dotfiles) - Arch Linux with i3 / nvim / tmux / urxvt / zsh
* ( ) [ranjan](https://codeberg.org/ranjan/dotfiles)
* ( ) [rtisma](https://github.com/rtisma/i3-dotfiles)rtisma - dunst, i3, i3status, compton.conf, urxvt, Xresources, xsettings, ncmcpp
* ( ) [seniorMars ](https://github.com/SeniorMars/dotfiles) - neovim, i3, zsh, flameshot, neomutt, alacritty, tex, firefox
* ( ) [seniorMars](https://github.com/SeniorMars/dotfiles) - i3, picom, nvim, flameshot, zsh, neomutt, alacritty, gruvbox, zathura, feh, tmux, neofetch, gotop, cmus, pipessh, vis, firefox, BetterDiscord, [vis](https://github.com/martanne/vis)
* ( ) [shenawy29](https://github.com/shenawy29/.dotfiles)
* ( ) [shiro69420](https://github.com/Shiro69420/dotfiles) - i3, kitty, neofetch, nitrogen, picom, polybar
* ( ) [sommaa](https://github.com/sommaa/dots)- ubuntu, x11, picom, polybar, rofi, neovim, dunst, astronvim, i3-gaps, kitty, zsh, p10k, zathura, ranger, nala, spicetify, ePapirus-Dark, xborders, i3_alternating_layout, [firefox css](https://github.com/sommaa/Mantis/tree/main/dots/chrome), [nighttab](https://addons.mozilla.org/it/firefox/addon/nighttab/)
* ( ) [sweet_i3](https://github.com/Siryu6/sweet_i3)
* ( ) [Reddit](https://www.reddit.com/r/i3wm/comments/emfsor/i3gaps_sweet_i3gaps_conf_with_polybar_rofi_with/) i3
* ( ) [thecrawler1](https://github.com/thecrawler1/.dotfiles)
* ( ) [theglitchh](https://github.com/theglitchh/dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/12lndfy/i3wmgruvbox_light_theme)
* ( ) [thelinuxcast ](https://gitlab.com/thelinuxcast/my-dots) - newsboat, vim, alacritty, awesome, bash, bspwm, dunst, dwm, firefox, chrome, i3, kitty, mpd, ncmcpp, neofetch, openbox, picom, polybar, qtile, qutebrowser, ranger, rofi, waybar, xmobar, xmonad, zsh
* ( ) [theopn](https://github.com/theopn/dotfiles) i3
* ( ) [theprimeagen ](https://github.com/ThePrimeagen/.dotfiles) - i3, nvim, tmux, awesomewm, xkb, perl scripts, zsh
* ( ) [u-ricing](https://github.com/d0nut-dev/u-ricing)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/110s08g/i3_gentoo_feels_like_home/) i3
* ( ) [urielzo/eww-pywal-colors](https://gitlab.com/urielzo/eww-pywal-colors)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/13pdfb2/i3_and_eww_setup)
* ( ) [vallen217](https://github.com/Vallen217/dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/12jlpuz/i3_i_spent_longer_on_the_color_scheme_than_id)
* ( ) [willPower3309](https://github.com/WillPower3309/dotfiles) - plasma, i3-gaps, compton (tryone), rofi, oh-my-zsh, latte dock, feh, conky-cairo, flashfocus, unimatix, redshift, unclutter

## sway

* ( ) [Madic-/Sway-DE: 🏠 Sway desktop environment dotfile installation for Arch Linux](https://github.com/Madic-/Sway-DE)
* ( ) [gnulinux-projects](https://gitlab.com/gnulinux-projects/My_Linux_Files/-/tree/main/Debian/Sway/.config)
* ( ) [testertech swaywm eww](https://github.com/TesterTech/swaywm-eww) -
* ( ) [1amsimple](https://github.com/1amSimp1e/dots)1amsimple - firefox vscodium, webcord, alacritty, kitty, lazygit, neofetch, nvim, starship, ranger, spicetify, sway, tmux
* ( ) [aspectsides](https://github.com/aspectsides/dotfiles) - [WezTerm](https://wezfurlong.org/wezterm/)) with tmux-like keybindings, [Neovim](https://neovim.io/),) JetBrains IdeaVim config, [Taskwarrior](https://taskwarrior.org/), [Starship](https://starship.rs/) Firefox[Oxocarbon](https://github.com/nyoom-engineering/oxocarbon.nvim)) theme, [sway](https://swaywm.org/)**
* ( ) [cleggacus](https://github.com/cleggacus/sway-ricey-boi)
* ( ) [Facundo-c-c](https://github.com/Facundo-c-c/Solus-sway-dotfiles)
* ( ) [hkupty ](https://github.com/hkupty/dotfiles) - kitty, nvim, sway, waybar
* ( ) [kislball](https://github.com/kislball/dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/111j6h4/sway_bocchi_the_ricer/)
* ( ) [krudjan](https://gitlab.com/Krudjan/dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/b7rgch/sway_gruvbox_themed_setup/)
* ( ) [manit989](https://github.com/manit989/dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/125i5u6/sway_switched_to_wayland/)
* ( ) [probitjk](https://github.com/ProbitJK/Dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/112ghyk/swaywm_riced_my_fedora_setup_to_replace_dmenu/)

## qtile

* ( ) [aaditeynair](https://github.com/aaditeynair/dots)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/134isxl/qtile_borders_all_around/)
* ( ) [barbaross93 ](https://github.com/Barbaross93/Nebula) - [Qtile](https://github.com/qtile/qtile), Alacritty, zsh, Firefox,with [nightTab](https://github.com/zombieFox/nightTab), [firefox-nordic-theme](https://github.com/EliverLara/firefox-nordic-theme) Userchrome, FiraCode [Nerd Font](https://github.com/ryanoasis/nerd-fonts) for general text and [Font Awesome 6 Free](https://fontawesome.com/) for icons, Lollypop for music, [Nordic-darker](https://github.com/EliverLara/Nordic) GTK theme, Nautilus, [Doom Emacs](https://github.com/hlissner/doom-emacs), Discord with [BetterDiscord](https://github.com/rauenzi/BetterDiscordApp) and [srain](https://github.com/SrainApp/srain) irc client, Neofetch, [Eww](https://github.com/elkowar/eww) Widgets, Dunst with scripts for a rofi based notification center (see [here](https://github.com/Barbarossa93/Genome/blob/4a08d3cfd0900807aefaa9f9241a6dbf926c549b/.config/dunst/dunstrc#L77)
* ( ) [here](https://github.com/Barbarossa93/Genome/blob/main/.local/bin/dunst_logger.sh)
* ( ) [here](https://github.com/Barbarossa93/Genome/blob/main/.local/bin/rofi_notif_center.sh)), [Picom](https://github.com/yshui/picom), Lightdm with modified enkel theme, Colorscheme [Nord](https://www.nordtheme.com/) with extra dark color #242831
* ( ) [bibjaw99 workstation](https://github.com/bibjaw99/workstation)- bash, tmux, zsh, alacritty, autostart, cava, dunst, i3, kitty, neovim, picom, polybar, qtile, ranger, rofi, wezterm, zsh, starship
* ( ) [catppuccinQtile](https://github.com/AadityaThapa/CatppuccinQtile)- [YouTube](https://youtu.be/9DBGPk38OCo) - nitrogen (wallpaper) picom, mate-session, udiskie, [networkmanager](https://networkmanager.dev/) + nm-applet, pipewire + volumeicon, dunst, flameshot, Qtile's Built in bar, Firefox, mousepad, vs code, neovim, pcmanfm, ranger, Kitty, Fish, htop, neofetch, betterlockscreen, lightdm
* ( ) [depredox](https://github.com/Depredox/Dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/13oori7/qtile_first_rice)
* ( ) [dunkmania101](https://gitlab.com/dunkmania101/Dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/112n1wd/qtile_i_am_tim_cooks_worst_nightmare/)
* ( ) [dwt1 ](https://gitlab.com/dwt1/dotfiles) - Awesome | Bspwm | Dwm | Herbstluftwm | i3-gaps | JWM | LeftWM | Openbox | Qtile | Spectrwm | XMonad; Alacritty, Bash, Dmenu, Doom Emacs, Fish, Neovim, Polybar, Rofi, St, Shell Color Scripts, Surf, Sxhkd, Wallpapers, Xmobar, Zsh
* ( ) [feeeeddmmeee](https://github.com/Feeeeddmmmeee/dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/121khqv/qtile_my_new_arch_rice/)
* ( ) [kiefciman](https://github.com/Kiefciman/dotfiles) - bash, xinit, alacritty, dunst, eww, fish, kitty, neovim, omf, picom, qtile, rofi, starship
* ( ) [leonKj](https://gitlab.com/leonKj/dotfiles) - [Purple Qtile Rice YouTube](https://youtu.be/XOce_3QEV18)
* ( ) [Qtile](https://github.com/baskerville/bspwm)
* ( ) [QtileBar](https://github.com/polybar/polybar)
* ( ) [Rofi](https://github.com/davatorium/rofi)
* ( ) [Picom](https://archlinux.org/packages/community/x86_64/picom/)
* ( ) [Kitty](https://github.com/alacritty/alacritty)
* ( ) [ElKowars wacky widgets](https://github.com/elkowar/eww)
* ( ) [mpd](https://archlinux.org/packages/extra/x86_64/mpd/)- [ncmpcpp](https://archlinux.org/packages/community/x86_64/ncmpcpp/)
* ( ) [Nautilus](https://archlinux.org/packages/extra/x86_64/thunar/)
* ( ) [Zsh](https://archlinux.org/packages/extra/x86_64/zsh/)
* ( ) [Yay](https://github.com/Morganamilo/paru)
* ( ) [longervV](https://gitlab.com/LongerHV/.dotfiles/)
* ( ) [perfect manjaro](https://qtile.org/screenshots/longerhv/) qtile [config](https://gitlab.com/LongerHV/.dotfiles/blob/master/.config/qtile/config.py) - qtile contiguration, alacritty configuration, nvim configuration, zsh configuration (with plugins as submodules), zsh, nvim (nightly), qtile, alacritty, dmenu, picom (ibhagwan), lxqt-session (for polkit), pcmanfm-qt, feh, LightDM, Light-locker, playerctl, Nerd Fonds (Hack and Ubuntu), Brave browser, pipewire, pipewire-pulse, pipewire-jack, pavucontrol-qt, redshift-gtk, qt5ct, kvantum, adapta-gtk-theme
* ( ) [luxirio ](https://github.com/luxirio/linux)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/10bxn70/qtile_my_first_rice_everforest/)
* ( ) [marcoobaid](https://github.com/marcoobaid/qtile)marcoobaid - green qtile 
* ( ) [qtile/qtile-examples](https://github.com/qtile/qtile-examples)collection of qtile examples 
* ( ) [raven2cz](https://github.com/raven2cz/dotfiles) - ansible, git, xinit, zsh, cool scripts, alacritty, awesomewm, conky, doom emacs, fish, gtk, i3, kitty, neovim, openbox, parcellite, picom, polybar, qimgv, qtile, ranger, rofi, wezterm, xmenu, conky, starship
* ( ) [robertorolo](https://github.com/robertorolo/dotfiles) - bash, nano, xinit, scripts, alacritty, dunst, fontconfig, i3, kitty, neovim, picom, polybar, qtile, qutebrowser, ranger, rofi, sxiv, zathura
* ( ) [thelinuxcast](https://gitlab.com/thelinuxcast/my-dots) -  bash, newsboat, vim, xmonad, alacritty, awesome, bash, bspwm, dunst, dwm, firefox, chrome, i3, kitty, mpd, mpv, ncmpcpp, neofetch, openbox, picom, polybar, qtile, qutebrowser, ranger, xmobar, zsh
* ( ) [tuffgniuz jqtile](https://github.com/tuffgniuz/qtile)tuffgniuz - perfect green
* ( ) [wittano ](https://github.com/Wittano/dotfiles) - qtile, doom-emacs, ideavim, tmux, zsh, gtk, git, scripts, alacritty, bspwm. conky, dunst, fish, i3, jetbrains, kitty, nitrogen, nvim, omf, openbox, picom, polybar, qutebrowser, ranger, rofi, sxhkd, terminator, tint2, yadm, redshift
* ( ) [wittano](https://github.com/Wittano/dotfiles) - doom emacs, qtile, scripts. alacritty, bspwm, conky, dunst, fish, gtk, i3, jetbrains, kitty, nitrogen, nvim, omf, oh-my-fish, openbox, openttd, picom, polybar, qtile, qutebrowser, ranger, rofi, sxhkd, terminator, tint2, yadm, redshift

## Wayfire

* ( ) [Wayfire-dots](https://github.com/bluebyt/Wayfire-dots)

## awesomewm

* ( ) [3nwt](https://github.com/3NWT/mydotfilez)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/10cfhf0/solarized_nokto_awesomewm_my_first_rice/)
* ( ) [aapo-kossi](https://github.com/aapo-kossi/dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/111kjas/awesome_i_was_inspired_by_the_stormlight_archive/)
* ( ) [alphaTechnolog](https://github.com/AlphaTechnolog/dotfiles) - awesomewm, dwm, openbox, dkwm, bspwm, void liux, st, hilbish, neovim, picom, rofi, kitty, st build
* ( ) [amitabha37377](https://github.com/Amitabha37377/Awful-DOTS)- AwesomeWM, Picom ([fdev31's fork](https://github.com/fdev31/picom)), nm-applet, Alsa Utils, acpi) (for battery widget), Nitrogen, Playerctl, Redshift) (bluelight filter widget), Scrot) (screenshot tool), Gpick (Color picker), Font: Ubuntu Nerd, CaskaydiaCove, JetbrainsMono nerd, Papirus icon theme, Lavanda Dark Compact Tokyonight GTK Theme,) Thunar, Kitty, Firefox
* ( ) [anhsirk0 ](https://codeberg.org/anhsirk0) - fish, rofi, awesome, emacs, myshell, kmonad, quodlibet, gtk, wezterm
* ( ) [apeiros-46B](https://github.com/Apeiros-46B/awesome-dots)
* ( ) [arch-Nord-Desktop](https://github.com/jackdiorio/Arch-Nord-Desktop)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/12sic1a/awesome_cold_comfy_nord_rice/)
* ( ) [chocolatebread799](https://github.com/ChocolateBread799/dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/q941ym/awesomewm_life_problems/)
* ( ) [chrisTitusTech debian-yoru ](https://github.com/ChrisTitusTech/debian-yoru) - awesome, wezterm, zsh, neovim, picom, rofi, ncmcpp, and others
* ( ) [devraza](https://github.com/devraza/aweful)
* ( ) [edjubert](https://github.com/edjubert/dotfiles) - githooks, kvantum, alacritty, awesomewm, neovide+lunarvim, conky, deadd, dwm (chadwm), eww, fish, fontconfig, fusuma, go scripts, gtk, hypr, lvim, lxsession, mpd, mpv, ncmcpp, nvim, omf, picom, qt5, rofi, scripts, sway, swww, waybar, wlogout
* ( ) [elenapan](https://github.com/elenapan/dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/a900p7/awesome_mechanical_love/)
* ( ) [gboncoffee](https://github.com/gboncoffee/home)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/zd854t/awesome_recently_moved_from_xmonad_because_i_like/)
* ( ) [goodBoyNeon](https://github.com/GoodBoyNeon/dotfiles) - alacritty, awesomewm, btop, dmenu, fish, neofetch, nitrogen, neovim, picom, polybar, starship, tmux
* ( ) [joepigott ](https://github.com/joepigott/dotfiles) - awesome, wibar & naughty (awesome modules), picom, polybar, rofi, zathura, kitty, nvim
* ( ) [joepigott](https://github.com/joepigott/dots)joepigott - awesomewm, kitty, nvim, picom, polybar, rofi, screenshots, zathura
* ( ) [kosorin](https://github.com/kosorin/awesome-rice)
* ( ) [manilarome/the-glorious-dotfiles](https://github.com/manilarome/the-glorious-dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/fhd70d/awesomewm_floppier/)
* ( ) [manilarome/the-glorious-dotfiles](https://github.com/manilarome/the-glorious-dotfiles)eromatiya - arch, fish, awesomewm, kitty, picom, rofi, inter-font
* ( ) [meledojames](https://github.com/MeledoJames/awesome-setup)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/124bcnh/awesomewm_another_catppuccin_themed_rice/)
* ( ) [micro-hawk/awesomight](https://github.com/micro-hawk/awesomight)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/121holo/awesomewm_just_loving_this_tokyo_night_feel_btw/)
* ( ) [myagko](https://github.com/Myagko/dotfiles) - alacritty, awesome, fontconfig, gtk, nvim, picom
* ( ) [pablonoya](https://github.com/pablonoya/dotfiles)
* ( ) [reddit](https://www.reddit.com/r/unixporn/comments/135arko/awesome_dotfiles_for_an_awesome_desktop_experience) - firefox, kitty, neofetch, plasma clor schemes, xresources, conda, fusuma, starship, zsh, nvm
* ( ) [pavletto](https://github.com/pavletto/dotfiles) - urxvt, dirclors, eslint, git, tmux, vim, xinit, xprofile, zsh, awesomewm, ranger, compton, nodejs
* ( ) [port19x](https://github.com/port19x/dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/12v05jl/awesome_emacs_has_saved_my_soul/)
* ( ) [potamides](https://github.com/potamides/dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/i60b10/awesome_streets_of_gruvbox/)
* ( ) [rxyhn/yoru](https://github.com/rxyhn/yoru)
* ( ) [saimoomedits](https://github.com/saimoomedits/dotfiles)
* ( ) [strazil001](https://github.com/Strazil001)
* ( ) [tmux-config](https://github.com/Strazil001/tmux-config)
* ( ) [Dotfiles-AwesomeWM](https://github.com/Strazil001/Dotfiles-AwesomeWM)
* ( ) [Scripts-AwesomeWM](https://github.com/Strazil001/Scripts-AwesomeWM)
* ( ) [Picom-config](https://github.com/Strazil001/Picom-config)
* ( ) [kitty](https://github.com/Strazil001/kitty)
* ( ) [rofi-dots](https://github.com/Strazil001/rofi-dots)
* ( ) [Nvim](https://github.com/Strazil001/Nvim)
* ( ) [p10K](https://github.com/Strazil001/p10K)
* ( ) [qutebrowser-config](https://github.com/Strazil001/qutebrowser-config)
* ( ) [Dotfiles-Xmonad](https://github.com/Strazil001/Dotfiles-Xmonad)
* ( ) [traap](https://github.com/Traap/dotfiles) - thunar, alacritty, awesomewm, bash, bspwm, dconf, dunst, git, hacks, kitty, latex, picom, polybar, ranger, remmina, rofi, screenkey, sxhkd. volumeicon, zsh, alsa
* ( ) [willpower3309](https://github.com/WillPower3309/awesome-dotfiles)- zsh, awesomewm, feh, picom-ibhagwan, rofi, imagemagick, alacritty
* ( ) [zazedd](https://github.com/zazedd/.dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/1250f66/awesomewm_iceberg/)

## bspwm

* ( ) [abxh](https://github.com/abxh/dotfiles) bspwm, dunst, kitty, mpv, nvim, picom, polybar, qutebrowser, rofi, scripts, sxhkd, xorg, zathura, zsh, stow
* ( ) [alexMeuer](https://github.com/AlexMeuer/dotfiles) - void linux, alacritty, astronvim, bspwm, dunst, fish, kitty, lvim, nap, polybar, ranger, river, rofi, sxhkd
* ( ) [Anormix](https://github.com/Anormix/dotfiles)
* ( ) [barbaross93](https://github.com/Barbaross93/Muspelheim)- Void Linux, [Herbstluftwm](https://github.com/herbstluftwm/herbstluftwm), [alacritty](https://github.com/alacritty/alacritty)
* ( ) [zsh](https://www.zsh.org/)
* ( ) [qutebrowser](https://github.com/qutebrowser/qutebrowser)
* ( ) [yambar](https://codeberg.org/dnkl/yambar), Fonts: [spleen](https://github.com/fcambus/spleen) for , primary text, [Cozette](https://github.com/slavfox/Cozette) for terminal icons, and [Siji](https://github.com/stark/siji) for bar icons, [cmus](https://github.com/cmus/cmus)
* ( ) [lf](https://github.com/gokcehan/lf)
* ( ) [vim](https://github.com/vim/vim)
* ( ) [mutt](https://gitlab.com/muttmua/mutt)
* ( ) [remind](https://git.skoll.ca/Skollsoft-Public/Remind) with [wyrd](https://gitlab.com/wyrd-calendar/wyrd/)
* ( ) [taskwarrior](https://github.com/GothenburgBitFactory/taskwarrior)
* ( ) [vit](https://github.com/vit-project/vit)
* ( ) [weechat](https://github.com/weechat/weechat)
* ( ) [newsboat](https://github.com/newsboat/newsboat)
* ( ) [rofi](https://github.com/davatorium/rofi)
* ( ) [tiramisu](https://github.com/Sweets/tiramisu)
* ( ) [picom](https://github.com/yshui/picom)
* ( ) [xsecurelock](https://github.com/google/xsecurelock)
* ( ) [alduin](https://github.com/AlessandroYorba/Alduin)
* ( ) [cybi00000](https://github.com/cybi00000/Normie-rice)blue and green - [bspwm](https://github.com/baskerville/bspwm), [Arch](https://archlinux.org/)
* ( ) [Alacritty](https://github.com/alacritty/alacritty)
* ( ) [zsh](https://wiki.archlinux.org/index.php/Zsh)
* ( ) [eww](https://github.com/elkowar/eww)
* ( ) [picom](https://github.com/yshui/picom)
* ( ) [Waterfox](https://www.waterfox.net/)
* ( ) [rofi](https://github.com/davatorium/rofi)
* ( ) [Polybar](https://github.com/polybar/polybar)
* ( ) [Dunst](https://github.com/dunst-project/dunst)
* ( ) [Wallpaper](https://raw.githubusercontent.com/cybi00000/Normie-rice/main/Dot%20files/house.jpg)
* ( ) [Pfetch-btw](https://github.com/FedericoAntoniazzi/pfetch-btw)
* ( ) [Ranger](https://github.com/ranger/ranger)
* ( ) [Zathura](https://pwmt.org/projects/zathura)
* ( ) [Spicetify](https://spicetify.app/)
* ( ) [dochi77](https://gitlab.com/dochi77/arch-rices)
* ( ) [eeowaa](https://github.com/eeowaa/stow-dotfiles)
* ( ) [empyrean-Void](https://github.com/Empyrean-Void/bspwm)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/12371xd/bspwm_polybar_voyage/)
* ( ) [gh0stzk](https://github.com/gh0stzk/dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/110lnn4/bspwm_clean_and_minimal/)
* ( ) [janleigh](https://github.com/janleigh/dotfiles) - firefox (custom css), bspwm, alacritty, zsh, eww, picom, neovim, dunst, thunar, rofi, git lfs, starship, cava, jgmenu, sxhkd, mpDris2, spicetify
* ( ) [kai-dg](https://github.com/kai-dg/dotfiles) - arch, konsole, acpibash, bspwm, fzf, gtk, kitty, misc, neovim, picom, polybar, rofi, scripts, starship, sxkhd, systemd, vim, x
* ( ) [lucifer10607](https://github.com/lucifer10607/My-bspwm-dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/112txzd/bspwm_first_ricehope_everyone_likes_it/)
* ( ) [marques576](https://github.com/marques576/dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/u8pbc8/bspwm_arch_linux_solarized_dark/)
* ( ) [myagko](https://github.com/Myagko/dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/112jp6l/bspwm_one_more_rice_for_my_collection/)
* ( ) [noCymer](https://github.com/NoCymer/orange-minimalist)- playerctl, flameshot, bspwm, sxhkd, wmname, polybar, nm-connection-editor, picom-rounded-corners, neofetch, cli-visualizer, kitty, nitrogen, albert, imagemagick
* ( ) [probe2k](https://github.com/probe2k/bspwm_rice)
* ( ) [rexDoisPontoZero](https://github.com/RexDoisPontoZero/bspwm-dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/xh5eab/bspwm_any_suggestions/)
* ( ) [siduck](https://github.com/siduck/dotfiles) - bspwm, st, ncmcpp, mpd, ncmcpp-ueberzug, mpc, neovim, gtk, polybar, fluxbox, openbox
* ( ) [singularisArt](https://github.com/SingularisArt/Singularis) - bspwm, polybar, xmenu, rofi, kdeconnect, flameshot, giph, slop, xclip, kitty, neomutt, Telegram desktop, nctelegram, discord, cordless, weechat, tuir, rainbowstream, kdeconnect-sms, how2, NeoVim, Qalculate!, gnuplot, Anki, dijo, manuskript, Ugene, pymol, GROMACS, Desmos-Destkop, celestia, inkscape, Goobook, Calcurse, castero, newsboat, ncmpcpp, mpd, tetris-terminal, tty-solitaire, bs, bsdgames, dopewars, Cures of War, pipes.sh, rain.sh, unimatrix, asciiquarium, bonsai.sh, termtracker, genact, ckb-next, baobab, diskonaut, dust, dunst, zathura, lf, gpick, s-tui, gotop, bashtop, glances, iotop, nmon, atop, powertop, nvtop, kmon, dnstop, ethstatus, jnettop, nload, bmon, termshark, cointop, mop, stonks, synonym, mapscii, translate-shell, wtfuitil, iponmap - finder, Pass, Rofi, pywal (haishoku, colorthief, and colorz python modules for pywal backends), Chameleon, Zathura-Pywal, qutewal, oomox, lxappearance, Archdroid Icons, qt5ct, qtcurve-qt5, qt5-styleplugins, Pywalfox, pywal
* ( ) [SuvanshRao](https://github.com/SuvanshRao/dotfiles) [neofetch](https://github.com/SuvanshRao/dotfiles/blob/main/neofetch/config.conf)
* ( ) [bspwm](https://github.com/SuvanshRao/dotfiles/blob/main/bspwm/bspwmrc)
* ( ) [polybar](https://github.com/SuvanshRao/dotfiles/tree/main/polybar)
* ( ) [picom](https://github.com/SuvanshRao/dotfiles/blob/main/picom/picom.sample.conf)
* ( ) [sxhkdrc](https://github.com/SuvanshRao/dotfiles/blob/main/sxhkd/sxhkdrc))
* ( ) [swiftyChicken](https://github.com/SwiftyChicken/dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/haogs0/bspwm_i_have_spent_too_much_time_on_this/)
* ( ) [tanbinislam34](https://gitlab.com/Tanbinislam34/dotfiles) - arch, bspwm, st, alacritty, neofetch, neovim, firefox
* ( ) [vaughnValle](https://github.com/VaughnValle/blue-sky)- alacritty, bspwm, dunst, picom, polybar, slim, slimlock, spicetify+dribblish, wallpapers, vim, picom, spotify-client, sxhkd, rofi

## xmonad

* ( ) [altercation](https://github.com/altercation/dotfiles-tilingwm)altercation - xcape, xmonad, xresources, compton, dunst, xinit, xprofile, xscreensaver, taffybar
* ( ) [axarva 2.0 *](https://github.com/Axarva/dotfiles-2.0) - xmonad, eww, firefox, rofi, ,[tint2-1,](https://github.com/Axarva/tint2-1,)acpi, playerctl, [brightnessctl](https://github.com/Hummer12007/brightnessctl), [candy-icons](https://github.com/EliverLara/candy-icons), dunst, Spotify, feh, NetworkManager, greenclip, alacritty, picom (fork of ibhagwan or jonaburg), jq, maim, xclip, mpv, alacritty, picom (fork of ibhagwan or jonaburg)
* ( ) [axarva](https://github.com/Axarva/dotfiles-2.0)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/knv0r4/xmonad_youhavenoideawhatspossible_edition/)
* ( ) [dtos ](https://distro.tube/dtos/) - xmonad, emacs - good keybinding reference
* ( ) [geeky-hamster](https://github.com/geeky-hamster/xmocat)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/10qvmv6/xmonad_minimal_catppuccin/)
* ( ) [naurissteins](https://github.com/naurissteins/dotfiles) - xmonad, bash, vim, xmobar, xprofile, zsh, alacritty, cava, conky, dunst, fish, flameshot, gcolor3, mpd, mpv, ncmcpp, neofetch, neovim, polybar, ranger, rofi, terminator
* ( ) [neshhari](https://github.com/NeshHari/XMonad)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/10tdr29/xmonad_ep_2_the_dark_arts_xmonad_starter_kit/)
* ( ) [strazil001](https://github.com/Strazil001/Dotfiles-Xmonad)dark purple [Reddit](https://www.reddit.com/r/unixporn/comments/y8kj5m/xmonad_all_catppuccin_these_days/)
* ( ) [strazil001](https://github.com/Strazil001/dotfiles)
* ( ) [szeligBalazs](https://github.com/SzeligBalazs/xmonad-dotfiles)- alacritty, picom, rofi, wallpaper, xmobar, xmonad - beautiful wallpaper colors

## dwm

* ( ) [6gk/polka](https://github.com/6gk/polka)- kiwmi, bspwm, openbox, dwm, good scripts and aliases, colours, dunst, feh, fontconfig, git, gtk, htop, mpd, mpv, ncmcpp, nvim, sh, startpage, sxhkd, xorg, picom, good css files!, chrome, discord, kmonad, torrent, rc,
* ( ) [alexMuxika](https://github.com/AlexMuxika/configs)AlexMuxika - [Reddit - Live wallpaper using xwinwrap and mpv [dwm] Workflow](https://www.reddit.com/r/unixporn/comments/11532cj/comment/j8zdkmb/) - dmenu, dwm, st, surf, tabbed, picom. xinit, cmus, qutebrowser, vifm
* ( ) [bachoSeven](https://github.com/BachoSeven/dotfiles) - [ungoogled-chromium](https://github.com/BachoSeven/dotfiles/blob/master/.config/browser) with Gtk theme, duckduckgo with `gruvboxytheme` , `[Vieb](https://vieb.dev/)`, [custom startpage](https://github.com/BachoSeven/startpage), [system configs](https://github.com/BachoSeven/sysdots), [Pacgraph,](http://github.com/keenerd/pacgraph)
* ( ) [dmenu](https://github.com/BachoSeven/dmenu), [dwm](https://github.com/BachoSeven/dwm),[st](https://github.com/BachoSeven/st),)
* ( ) [xss](https://github.com/9wm/xss)+[slock](https://github.com/BachoSeven/slock), zsh,)
  [p10k themes](...), [fsh](https://github.com/zdharma/fast-syntax-highlighting), [neovim](https://github.com/BachoSeven/dotfiles/blob/master/.config/nvim), [stig](https://github.com/rndusr/stig), [ncmpcpp](https://github.com/BachoSeven/dotfiles/blob/master/.config/ncmpcpp)) with `mpd`, [cava](https://github.com/BachoSeven/dotfiles/blob/master/.config/cava/config), [kunst](https://github.com/sdushantha/kunst), [ncspot](https://github.com/hrkfdn/ncspot), [lf](https://github.com/gokcehan/lf), [neomutt](https://github.com/BachoSeven/dotfiles/blob/master/.config/mutt)) as an email client, [ungoogled-chromium](https://github.com/Eloston/ungoogled-chromium), [sxiv](https://github.com/muennich/sxiv), [zathura](https://github.com/BachoSeven/dotfiles/blob/master/.config/zathura/zathurarc), [bottom](https://github.com/ClementTsang/bottom), [copyq](https://github.com/hluk/CopyQ), [dunst](https://github.com/BachoSeven/dotfiles/blob/master/.config/dunst/dunstrc), [redshift](https://github.com/BachoSeven/dotfiles/blob/master/.config/redshift/redshift.conf), [newsboat](https://github.com/BachoSeven/dotfiles/blob/master/.config/newsboat), [paru](https://github.com/BachoSeven/dotfiles/blob/master/.config/paru/paru.conf), [mimi](https://github.com/BachoSeven/mimi)**
* ( ) [basilioss](https://github.com/basilioss/dotfiles) - [dwm](https://github.com/basilioss/dwm), [alacritty](https://github.com/zenixls2/alacritty), [dmenu](https://github.com/basilioss/dmenu), [Tokyo Night](https://github.com/enkia/tokyo-night-vscode-theme), [NvChad](https://github.com/NvChad/NvChad), [zathura](https://pwmt.org/projects/zathura/), [Tauon Music Box](https://github.com/Taiko2k/TauonMusicBox), [mpv](https://mpv.io/), [nsxiv](https://nsxiv.codeberg.page/), git, glow, keepmenu, nvim, nvchad, espanso, alacritty, botton, dunst, gdu, mpv, neofetch, newsboat, paru, picom, starship, sxhkd, tmux, warpd, x11, zathura, zk, zsh, betterlockscreen
* ( ) [chrisTitusTech](https://github.com/ChrisTitusTech/dwm-titus)
* ( ) [...](https://github.com/chyanurag/dotfiles)
* ( ) [erik.Lundstedt](https://gitlab.com/Erik.Lundstedt/dotconfigfiles) - zsh, arduino, logseq, ncmcpp, emacs, textadept, oomox, kodi, java, scripts (fennel, perl), jq,[kristall,](https://github.com/MasterQ32/kristall,)conky, lua, xinit, inputrc, git-modules, Xdefaults, Xresources, scratchpads, [j](https://www.jsoftware.com/#/), barscript, amfora, dmenu + dmscripts, udiskie, st (variations), surf,  tydras, Kvantum, [aerc](https://aerc-mail.org/), awesome,[catgirl,](https://github.com/deifactor/catgirl), emacs, doublecmd, fnlFetch, fzf, hilbish, icons, kde colour, kitty, luakit, luamark, miniterm, mopidy, neon-logout, newsboat, qt5ct, [snownews](https://sourceforge.net/projects/snownews/), ssh, tmux, [tuifeed](https://github.com/veeso/tuifeed), tym, [wallset](https://github.com/terroo/wallset) →[oguri,](https://github.com/vilhalmer/oguri,) wezterm, xbindkeys, xpls, yadm, kate + katevi, ncpamixer
* ( ) [fitrh](https://github.com/fitrh/dotfiles) - good script collection, fish, nvim, effishient,  alacritty, berrywm, bottom, dunst, dwm, foot, fuzzel, git, kitty, lf, mako, picom, river, rofi, starship, sxhkd, tmux, xmobar, xmonad, yambar,
* ( ) [fmash16 ](https://github.com/fmash16/dotfiles) - [dark green](https://www.reddit.com/r/unixporn/comments/irur6n/dwm_minimalist_suckless_darkpastelgreen_themed/) - dwm, st, zsh, Comic Sans, picom, ranger, zathura suckless surf with tabbed tmux, firefox custom css
* ( ) [gasparVardanyan/solarized](https://gitlab.com/GasparVardanyan/solarized)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/trfsxv/dwm_solarized_dark/)
* ( ) [gasparVardanyan](https://gitlab.com/GasparVardanyan/dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/sso1o8/dwm_solarized_dark_simple_perfection/)
* ( ) [dwm](https://gitlab.com/GasparVardanyan/dwm)
* ( ) [st](https://gitlab.com/GasparVardanyan/st)
* ( ) [junnunkarim ](https://github.com/junnunkarim/dotfiles-linux)junnunkarim - dwm bar, luastatus, slock-flexipatch, arch, alacritty, fish, neovim, tdrop, deadd, paru, xfce power manager, brightnessctl, picom, starship, nnn, thunar, zathura, qview, mpv, flameshot, feh, gpick, greenclip, rofi-calc, networkmanager-dmenu, macchina,
* ( ) [kaihendry](https://github.com/kaihendry/dotfiles) - flameshot, gtk, kitty, neovim, sway, systemd, chromium-flags, mimeapps, dwm, scroll, st, gnupg,
* ( ) [metis-os ](https://github.com/metis-os) - dwm, neovide, neovim, zoxide, scripts, eww, wezterm
* ( ) [motolla](https://github.com/motolla/dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/111yesz/dwm_i_think_rose_pine_is_my_new_colorscheme/)
* ( ) [nico-roman64](https://github.com/nico-roman64/dwm-rice)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/112czh6/dwm_arch_linux_rice/)
* ( ) [nico-roman64](https://github.com/nico-roman64/dwm-rice)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/12shwom/dwm_just_a_simple_rice_i_havent_used_dwm_before/)
* ( ) [proycon](https://github.com/proycon/dotfiles) - Arch, dwm, [alacritty](https://github.com/alacritty/alacritty), tmux, zsh, [Neovim](https://neovim.org/), [ncmpcpp](https://rybczak.net/ncmpcpp/)
* ( ) [newsboat](https://newsboat.org/)
* ( ) [vocage](https://github.com/proycon/vocage)
* ( ) [OC], [neomutt](https://neomutt.org/)
* ( ) [picom](https://github.com/yshui/picom)Home status: a custom script obtaining home automation status from home assistant over MQTT [OC], firefox, sxiv/feh
* ( ) [samsja](https://github.com/samsja/dotfiles) - [build of dmenu](https://github.com/jasonliang-dev/dmenu/), st, feh, [picom with rounded corners](https://github.com/ibhagwan/picom), [lemonbar with xft](https://gitlab.com/protesilaos/lemonbar-xft)) - patch for non-bitmap fonts, jq - parse tag/workspace info, xprop - window info, acpi - battery info, amixer - volume info, Roboto Mono - required by dwm, lemonbar, st, and emacs, Font Awesome 5
* ( ) [seeingangelz](https://github.com/seeingangelz/dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/1219al5/dwm_my_bloated_config_with_pywal_and_clickable/)
* ( ) [tch69](https://github.com/tch69/tavodotfiles)- dwm, dwmblocks, st, dmenu, Xresources, xinit, scripts, dwmbar, fontconfig, gtk, nvim

## dwl

* ( ) [VoidLinux-FreeBSD](https://github.com/willgreen946/VoidLinux-FreeBSD)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/12v4ixj/dwl_fully_riced_now_feeling_content/)

## other

* ( ) [3r3bu5x9](https://github.com/3r3bu5x9/prismatic-night)
* ( ) [ahmetb](https://github.com/ahmetb/dotfiles) - macOS, but vim, tmux, editorconfig, vim, git, copilot-cli, karabiner, ssh, vscode, zsh, gnupg, go scripts
* ( ) [alex35mil ](https://github.com/alex35mil/dotfiles) - neovim, zellij (with custom tools), zsh, alacritty, raycast, starship, btop, direnv, git, lazygit, karabiner (macos)
* ( ) [bluebyt](https://github.com/bluebyt/Wayfire-dots)- [Wayfire](https://github.com/WayfireWM/wayfire), [Waybar](https://github.com/Alexays/Waybar), [eww](https://github.com/elkowar/eww), [Mako](https://github.com/emersion/mako), [Graphite-gtk-theme](https://github.com/vinceliuice/Graphite-gtk-theme), [Tela-circle-icon-theme](https://github.com/vinceliuice/Tela-circle-icon-theme#tela-circle-icon-theme), [Fish shell](https://github.com/fish-shell/fish-shell), [Startship prompt](https://starship.rs/), [nitch](https://github.com/ssleert/nitch), [SwayOSD](https://github.com/ErikReider/SwayOSD), [Text editor](https://apps.gnome.org/TextEditor/), [Ulauncher](https://ulauncher.io/), [Grimshot-pv](https://github.com/ferdiebergado/grimshot-pv), [Xava](https://github.com/nikp123/xava#programming-opengl-shaders), [ncmpcpp](https://github.com/ncmpcpp/ncmpcpp), [G4music](https://github.com/neithern/g4music), Caskaydiacove nerd font
* ( ) [cmdywrtr27](https://github.com/cmdywrtr27/dots) - alacritty, dunst, mpd, ncmcpp, openbox, polybar, ranger, rofi, tint2, zsh, starship
* ( ) [davidosomething ](https://github.com/davidosomething/dotfiles) - wezterm, zsh, neovim, ack, neofetch, ag, checkstyle, r, uncrustify, yaml, js, chromium, git
* ( ) [drasite ](https://drasite.com/dotfiles) - bash, zsh, git, qt, bashtiop, neofetch, p2k, lsd, pfetch
* ( ) [eminarican](https://github.com/eminarican/dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/12r7dzv/yabai_emerald_essence)
* ( ) [holman](https://github.com/holman/dotfiles) oh-my-zsh, osx, zsh, vi, ruby, git, …
* ( ) [jez](https://github.com/jez/dotfiles) - dircolors (for ls), ctags, many useful scripts, bash, ack, ag, amethystwm, devbox, editrc, fd, ruby, haskell, gvim, lesskey, ideavim, ripgrep, sc-im, slite, tmux, zsh, rcm (rcrc)
* ( ) [jlervin](https://github.com/JLErvin/dotfiles) - berrywm, arch, urxvt, chromium, zsh, neovim, lemonbar, dmenu
* ( ) [josean-dev ](https://github.com/josean-dev/dev-environment-files) - neovim, tmux, zsh, skhd, yabai
* ( ) [joshmedeski](https://github.com/joshmedeski/dotfiles)
* ( ) [page](https://dotfiles.joshmedeski.com/quick-start.html) - macos, act, bash, git, spacemacs, wget, zsh, brew, cspell, vimium, espanso, docker, alacritty, bat, btop, fish, gh-dash, htop, kitty, lf, lvim, neofetch, neovim, tmux, wezterm, starship
* ( ) [kutsan ](https://github.com/kutsan/dotfiles) - zsh, neovim, git, node, npm, fx, bitwarden, lua, rust, findutils, fzf, htop, openssl, nmap, ffmpeg, transmission, gcal, bind, mpv, lf, wireguard, oauth-toolkit, gptfdisk, oopenssh, coreutils
* ( ) [lauriset/Dotfiles-Green](https://github.com/lauriset/Dotfiles-Green)
* ( ) [lauriset/openbox](https://github.com/lauriset/openbox)
* ( ) [lauriset](https://github.com/lauriset/dotfiles)
* ( ) [linuxdabbler/debian-install-scripts](https://gitlab.com/linuxdabbler/debian-install-scripts)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/121w4pz/spectrwm_floating_scratchpad_and_gruvboxed/)
* ( ) [mathiasbynens](https://github.com/mathiasbynens/dotfiles) - “sensible hacker defaults for macos” - vim, bin, bash, aliases, curl, editorconfig, gdb, git gvim, mercurial, inputrc, screen, tmux, vim, wget, brew
* ( ) [owl4ce](https://github.com/owl4ce/dotfiles)
* ( ) [pin/netbsd](https://codeberg.org/pin/netbsd) pin - alacritty, elvish, feather, d, gtk, iamb, lsd, macchina, marswm, qt6ct, redshift, spotify-player, tuifeed, weathercrab, vim, git, xinit, dua,
* ( ) [pin/void-musl](https://codeberg.org/pin/void-musl) pin - alacritty, gtk, leftwm, neofetch, pcmanfm, vim, bash, xinit, X11, dracut, modprobe
* ( ) [pyratebeard](https://gitlab.com/pyratebeard/dotfiles)  2bwm (floating wm), cmus (music player), cron, dmenu, dunst, git, gpg (encrypt and sign tool), latexmk, lightdm, lynx, mpv (video player), mutt, newsboat (rss reader), qutebrowser, tmux, tuir, urxvt, vim, xbindkeys (key grabbing tool), xinit (x system initialiser), zathura, zsh
* ( ) [rdbo](https://github.com/rdbo/sigma-linux)
* ( ) [rebelot](https://github.com/rebelot/dotfiles) tmux, vim, yabai, zsh
* ( ) [s0la](https://github.com/s0la/orw/tree/master/dotfiles/.config) thunar, x11, alacritty, cava, dunst, gtk, mpd, ncmcpp, newsboat, neovim, openbox, picom, qutebrowser, rofi, sxiv, termite, tint2, tmux, vifm, xfce4, zathura, compton, i3lock, [video](https://www.youtube.com/watch?v=oIlOsT4qPXw&list=PLvxw6g7kMvV_gelBLBgRU6g4fLKz5ogWk)
* ( ) [squagels](https://github.com/squagels/dots)squagels - xinit, zsh, gtk3, openbox, picom, polybar, rofi
* ( ) [tcmmichaelb139](https://github.com/tcmmichaelb139/.dotfiles)
* ( ) [Reddit](https://www.reddit.com/r/unixporn/comments/11nxpwh/yabai_tokyo_nice_looks_too_good/)
* ( ) [tetzng/dotfiles: my dotfiles](https://github.com/tetzng/dotfiles) - fish, neovim, wezterm, macos
* ( ) [whatsthatsmell](https://github.com/whatsthatsmell/dots) - alfred, bacom, broot, cargo, rust, gh-prs, gitui, iterm, lazygit, ripgrep, vifm, nvim, vimium, zsh, tmux, alacritty, starship* ( ) [yusa](https://codeberg.org/yusa/dotfiles)

## ?

* ( ) [cpow](https://github.com/cpow/cpow-dotfiles)- tmux, nvim
* ( ) [dark-evangelion-dotfiles](https://github.com/hiitsmatan/dark-evangelion-dotfiles)- zsh, astronvim. alacritty, Tokyo-Storm-BL-LB colors, Tela-purple-dark icons, spicetify, Gnome with extensions
* ( ) [davidmytton](https://github.com/davidmytton/dotfiles) - alacritty, dotbot, git, regolith, shell, vim, chezmoi
* ( ) [dimbleby](https://github.com/dimbleby/dotfiles) - rust, bat, git, nvim, ptpython, poetry, tmux, xfce4/terminal, yamllint, tmux,
* ( ) [jakewies](https://github.com/jakewies/.dotfiles)jakewies - git, kitty, neovim, p10k, tmux, zsh
* ( ) [joepigott](https://github.com/joepigott/dots) - kitty, nvim, picom, polybar, rofi, zathura
* ( ) [nicknisi](https://github.com/nicknisi/dotfiles) - alacritty, git, kitty, nvim, ripgrep, skhd, tmux, wezterm
* ( ) [paulirish](https://github.com/paulirish/dotfiles) - cron, fish, aliases, bash, dircolors, eslint, js, ruby, ssh, inputrc, tmux, chromium,
* ( ) [paulmillr](https://github.com/paulmillr/dotfiles) (OSX) - vscode, git, vim, ruby, zsh, fish, git-extras
* ( ) [pysan3](https://github.com/pysan3/dotfiles) - zsh, neovim, alacritty, git, latexmk, npm, tmux, vifm, wezterm, wget, npm
* ( ) [realestninja](https://github.com/realestninja/dotfiles) - git, kanshi, kitty, ffmpeg, youtube-dl, nvim, ranger, sway, waybar, zsh
* ( ) [skanev](https://github.com/skanev/dotfiles) - bash, ranger, kitty, mutt, nvim, scratchpad, vim, vscode, wezterm, zsh, ruby, git, gvim, tmux, xmodmap, zsh
* ( ) [thoughtbot ](https://github.com/thoughtbot/dotfiles) - vim, tmux, ruby on rails, zsh
* ( ) [vallen217](https://github.com/Vallen217/dotfiles) - arch, polybar, fish, kitty, neovim, ranger, bottom, dunst, rofi
* ( ) [voidrice](https://github.com/LukeSmithxyz/voidrice)- very useful scripts, vim/nvim, zsh, lf, mpd/ncmpcpp, nsxiv, mpv, mutt-wizard
* ( ) [xer0 ](https://github.com/xero/dotfiles) - perfect earthy green nvim, git, ssh, gpg, bash, tmux
* ( ) [yorurxyhn](https://github.com/rxyhn/yorurxyhn)- zsh, starship, mpDris2, mpd, ncmcpp, wezterm

# Malina

* [Jente Hidskes' website - A purpose-built Linux OS for my Raspberry Pi 3B+ home automation system](https://www.hjdskes.nl/projects/rpi-linux/)
* [RPI](http://libgen.rs/search.php?%26req%3Draspberry%2Bpi%26phrase%3D1%26view%3Dsimple%26column%3Ddef%26sort%3Dyear%26sortmode%3DDESC)
* [forums.raspberrypi.com/viewtopic.php?t=312104](https://forums.raspberrypi.com/viewtopic.php?t%3D312104) Definitive guide to configure extremely lightweight GUI with Raspbian Lite + Openbox. - Raspberry Pi Forums

## 1) Raspberry Pi OS

* install
* install Nix
* run nebokrai flake (with poetry2nix preferWheels = true;)
* look into differences with regular iso to understand why changes are automatically written to the SD card

## 2) Raspberry Pi OS Lite

* read [downloads.raspberrypi.com/raspios_lite_arm64/release_notes.txt](https://downloads.raspberrypi.com/raspios_lite_arm64/release_notes.txt)
* 2) Alpine Server (no DE)
* read: [garrym/raspberry-pi-alpine](https://github.com/garrym/raspberry-pi-alpine)
* [blog.svedr.in/posts/how-to-run-an-arm-vm-on-a-x86-host/](https://blog.svedr.in/posts/how-to-run-an-arm-vm-on-a-x86-host/)
* → [duckduckgo.com/?q=run+arm64+vm&ia=web](https://duckduckgo.com/?q=run+arm64+vm&ia=web)
* [graalvm.org/latest/reference-manual/native-image/](https://www.graalvm.org/latest/reference-manual/native-image/)
* [graalvm.github.io/native-build-tools/latest/gradle-plugin.html](https://graalvm.github.io/native-build-tools/latest/gradle-plugin.html)
* [graalvm.org/22.0/reference-manual/native-image/ARM64/](https://www.graalvm.org/22.0/reference-manual/native-image/ARM64/)
* [bell-sw.com/blog/static-images-with-liberica-native-image-kit/](https://bell-sw.com/blog/static-images-with-liberica-native-image-kit/)
* [liberica native image kit](https://bell-sw.com/announcements/2021/10/22/the-new-liberica-native-image-kit-21-3-based-on-liberica-17-and-11-is-out/)
* [bell-sw.com/blog/static-images-with-liberica-native-image-kit/](https://bell-sw.com/blog/static-images-with-liberica-native-image-kit/)
* [hub.docker.com/r/bellsoft/liberica-openjdk-alpine-musl](https://hub.docker.com/r/bellsoft/liberica-openjdk-alpine-musl)
* [stmxcsr.com/micro/raspberry-signal-client.html](https://stmxcsr.com/micro/raspberry-signal-client.html)
* [bell-sw/Liberica/blob/master/docker/repos/liberica-openjre-alpine/17/Dockerfile](https://github.com/bell-sw/Liberica/blob/master/docker/repos/liberica-openjre-alpine/17/Dockerfile)
* [docker.com/blog/multi-arch-images/](https://www.docker.com/blog/multi-arch-images/)
* [stmxcsr.com/micro/raspberry-signal-client.html](https://stmxcsr.com/micro/raspberry-signal-client.html)
* [lwesterhof/semaphore](https://github.com/lwesterhof/semaphore)
* [signald.org/](https://signald.org/)  [gitlab.com/signald/signald](https://gitlab.com/signald/signald)
* [erlangen-sheppy.medium.com/setting-up-signal-cli-on-linux-7831b27c0790](https://erlangen-sheppy.medium.com/setting-up-signal-cli-on-linux-7831b27c0790)
* [Sidneys1/signal-bot](https://github.com/Sidneys1/signal-bot)
* [boxdot/gurk-rs](https://github.com/boxdot/gurk-rs)
* [signalapp/libsignal](https://github.com/signalapp/libsignal)
* [whisperfish/libsignal-service-rs](https://github.com/whisperfish/libsignal-service-rs)
* [whisperfish/presage/](https://github.com/whisperfish/presage/)
* [rust-lang.github.io/rustup/cross-compilation.html](https://rust-lang.github.io/rustup/cross-compilation.html)

## 3) Alpine Sigma OS

* fork repo:  [rdbo/sigma-linux](https://github.com/rdbo/sigma-linux)
* read [jensd.be/1126/linux/cross-compiling-for-arm-or-aarch64-on-debian-or-ubuntu](https://jensd.be/1126/linux/cross-compiling-for-arm-or-aarch64-on-debian-or-ubuntu)
* create appropriate container
* adapt build script for cross-compilation inside Alpine Docker container
* make changes needed to run on SD card (see Alpine Server)
* try build

## 4) NixOS Pi

* read [nix-community/nixos-generators](https://github.com/nix-community/nixos-generators) 
* read [discourse.nixos.org/t/nixos-image-for-raspberry-pi-3b-armv7/18430](https://discourse.nixos.org/t/nixos-image-for-raspberry-pi-3b-armv7/18430)
* read [nix.dev/tutorials/nixos/installing-nixos-on-a-raspberry-pi.html](https://nix.dev/tutorials/nixos/installing-nixos-on-a-raspberry-pi.html)
* read (slightly outdated) [nixos.wiki/wiki/NixOS_on_ARM/Raspberry_Pi](https://nixos.wiki/wiki/NixOS_on_ARM/Raspberry_Pi)
* read [nixos.wiki/wiki/NixOS_on_ARM/Raspberry_Pi_3](https://nixos.wiki/wiki/NixOS_on_ARM/Raspberry_Pi_3)
* read [myme.no/posts/2022-12-01-nixos-on-raspberrypi.html](https://myme.no/posts/2022-12-01-nixos-on-raspberrypi.html)
* read [lucernae/nixos-pi](https://github.com/lucernae/nixos-pi)
* read [discourse.nixos.org/t/raspberry-pi-3-documentation/11426/3](https://discourse.nixos.org/t/raspberry-pi-3-documentation/11426/3) & follow links
* read [eisfunke.com/posts/2023/nixos-on-raspberry-pi.html](https://www.eisfunke.com/posts/2023/nixos-on-raspberry-pi.html)
* read [zupo/nix](https://github.com/zupo/nix) (maybe best)
* read [stianlagstad.no/2022/11/how-to-install-nixos-on-a-raspberry-pi-3b/](https://stianlagstad.no/2022/11/how-to-install-nixos-on-a-raspberry-pi-3b/) (looks really good)
* read [citizen428.net/blog/installing-nixos-raspberry-pi-3/](https://citizen428.net/blog/installing-nixos-raspberry-pi-3/)
* read [r/NixOS/comments/kk0zfu/help_installing_on_a_raspberry_pi_3b/](https://www.reddit.com/r/NixOS/comments/kk0zfu/help_installing_on_a_raspberry_pi_3b/)
* read [discourse.nixos.org/t/boot-config-txt-related-questions-for-raspberry-pi/3650/2](https://discourse.nixos.org/t/boot-config-txt-related-questions-for-raspberry-pi/3650/2)
* read [discourse.nixos.org/t/problems-booting-on-raspberry-pi-3b/24952](https://discourse.nixos.org/t/problems-booting-on-raspberry-pi-3b/24952)
* read [mtlynch.io/nixos-pi4/](https://mtlynch.io/nixos-pi4/)
* read [labs.quansight.org/blog/2020/07/nixos-rpi-wifi-router](https://labs.quansight.org/blog/2020/07/nixos-rpi-wifi-router)

## 5) TinyCore RPI

 read [tinycorelinux.net/9.x/armv6/releases/RPi/README](http://tinycorelinux.net/9.x/armv6/releases/RPi/README)

 # Phone

 * [blisslauncher](https://f-droid.org/packages/foundation.e.blisslauncher/)
 * Next Steps
 * [ ]  Make sure online banking still works on iPhone
 * [ ]  [ ]
 * Operating Systems
 * PostmarketOS    * [postmarketos.org/download/](https://postmarketos.org/download/)
 * [wiki.postmarketos.org/wiki/QEMU_amd64_(qemu-amd64)](https://wiki.postmarketos.org/wiki/QEMU_amd64_(qemu-amd64))
 * [lineageos.org/](https://lineageos.org/)
 * [lineageos.org/](https://lineageos.org/)
 * [wiki.lineageos.org/devices/FP4/install](https://wiki.lineageos.org/devices/FP4/install)
 * [wiki.lineageos.org/faq](https://wiki.lineageos.org/faq)
 * [androidauthority.com/lineageos-install-guide-893303/](https://www.androidauthority.com/lineageos-install-guide-893303/)
 * [...](https://e.foundation/e-os/)
 * [e.foundation/e-os/](https://e.foundation/e-os/)
 * [...](https://grapheneos.org/)
 * [grapheneos.org/](https://grapheneos.org/)
 * [...](https://www.android-x86.org/)
 * [android-x86.org/](https://www.android-x86.org/)
 * [...](https://github.com/ubports/ubuntu-touch)
 * [ubports/ubuntu-touch](https://github.com/ubports/ubuntu-touch)
 * [...](https://ubuntu-touch.io/)
 * [ubuntu-touch.io/](https://ubuntu-touch.io/)
 * [...](https://ubports.com/en/)
 * [ubports.com/en/](https://ubports.com/en/)
 * [...](https://wiki.ubuntu.com/Touch/Emulator)
 * [wiki.ubuntu.com/Touch/Emulator](https://wiki.ubuntu.com/Touch/Emulator)
 * [...](https://gitlab.com/CalyxOS/calyxos)
 * [gitlab.com/CalyxOS/calyxos](https://gitlab.com/CalyxOS/calyxos)
 * [...](https://gitlab.com/CalyxOS)
 * [gitlab.com/CalyxOS](https://gitlab.com/CalyxOS)
 * [...](https://calyxos.org/)
 * [calyxos.org/](https://calyxos.org/)
 * [...](https://divestos.org/)
 * [divestos.org/](https://divestos.org/)
 * [...](https://replicant.us/)
 * [replicant.us/](https://replicant.us/)
 * [...](https://www.tizen.org/)
 * [tizen.org/](https://www.tizen.org/)
 * [...](https://mobian-project.org/)
 * [mobian-project.org/](https://mobian-project.org/)
 * [...](https://plasma-mobile.org/)
 * [video](https://www.youtube.com/watch?v%3DbRDdAaC0g28)
 * [...](https://community.kde.org/Plasma/Mobile/DevGuide)
 * [community.kde.org/Plasma/Mobile/DevGuide](https://community.kde.org/Plasma/Mobile/DevGuide)
 * [...](https://en.wikipedia.org/wiki/Plasma_Mobile)
 * [en.wikipedia.org/wiki/Plasma_Mobile](https://en.wikipedia.org/wiki/Plasma_Mobile)
 * [...](https://blogs.gnome.org/shell-dev/2022/09/09/gnome-shell-on-mobile-an-update/)[Gnome for Mobile](https://blogs.gnome.org/shell-dev/2022/09/09/gnome-shell-on-mobile-an-update/)
 * [...](https://iode.tech/)
 * [iode.tech/](https://iode.tech/)
 * [...](https://pureos.net/)
 * [pureos.net/](https://pureos.net/) → [...](https://www.fairphone.com/en/)
 * [fairphone.com/en/](https://www.fairphone.com/en/) - [...](https://forum.fairphone.com/t/operating-systems-for-fairphones/11425%23heading--fp4)
 * [forum.fairphone.com/t/operating-systems-for-fairphones/11425#heading--fp4](https://forum.fairphone.com/t/operating-systems-for-fairphones/11425%23heading--fp4) → [...](https://tuxphones.com/2022-linux-on-phone-guide/)
 * [tuxphones.com/2022-linux-on-phone-guide/](https://tuxphones.com/2022-linux-on-phone-guide/)
 * Actual Phones [...](https://www.pine64.org/pinephone/)
 * [pine64.org/pinephone/](https://www.pine64.org/pinephone/)
 * [...](https://puri.sm/products/)[Purism](https://puri.sm/products/) - Liberty Phone and Librem 5
 * Browsers [...](https://github.com/GrapheneOS/Vanadium)
 * [GrapheneOS/Vanadium](https://github.com/GrapheneOS/Vanadium)
 * [...](https://github.com/midori-browser/midori-android)
 * [midori-browser/midori-android](https://github.com/midori-browser/midori-android)
 * [...](https://github.com/torappinfo/uweb)
 * [torappinfo/uweb](https://github.com/torappinfo/uweb)
 * [...](https://github.com/bromite/bromite)
 * [bromite/bromite](https://github.com/bromite/bromite)
 * Apps [...](https://simplemobiletools.github.io/)[Simple Mobile Tools](https://simplemobiletools.github.io/) - Android apps with customizable widgets, without annoying ads and unnecessary permissions. [...](https://github.com/fandreuz/TUI-ConsoleLauncher)
 * [fandreuz/TUI-ConsoleLauncher](https://github.com/fandreuz/TUI-ConsoleLauncher)
 * [...](https://joaoapps.com/join/)
 * [joaoapps.com/join/](https://joaoapps.com/join/)
 * [...](https://github.com/TeamNewPipe/NewPipe/)
 * [...](https://zerkc.gitlab.io/whatsdesk/)[WhatsDesk](https://zerkc.gitlab.io/whatsdesk/) - WhatsDesk is a unofficial client of WhatsApp.Switch email and storage to Proton? [...](https://proton.me/mail/download)
 * [proton.me/mail/download](https://proton.me/mail/download)
 * [...](https://github.com/libre-tube/LibreTube)
 * [libre-tube/LibreTube](https://github.com/libre-tube/LibreTube)
 * [...](https://newpipe.schabi.org/)[NewPipe](https://newpipe.schabi.org/) - Lightweight YouTube frontend for Android. ([GNU GPLv3](https://github.com/TeamNewPipe/NewPipe/blob/master/LICENSE)) [...](https://github.com/iSoron/uhabits)
 * [iSoron/uhabits](https://github.com/iSoron/uhabits)
 * [...](https://github.com/LNReader/lnreader)
 * [LNReader/lnreader](https://github.com/LNReader/lnreader)
 * [...](https://github.com/adrcotfas/Goodtime)
 * [adrcotfas/Goodtime](https://github.com/adrcotfas/Goodtime)
 * Ricing [...](https://play.google.com/store/apps/details?id%3Dcom.lb.lwp_plus%26hl%3Den_US)[LWP+](https://play.google.com/store/apps/details?id%3Dcom.lb.lwp_plus%26hl%3Den_US), [...](https://www.apkmirror.com/apk/androiddeveloperlb/lwp-live-wallpaper-with-customized-colors/lwp-live-wallpaper-with-customized-colors-2-62-release/lwp-dynamic-colors-2-62-android-apk-download/%23description)[apk mirror](https://www.apkmirror.com/apk/androiddeveloperlb/lwp-live-wallpaper-with-customized-colors/lwp-live-wallpaper-with-customized-colors-2-62-release/lwp-dynamic-colors-2-62-android-apk-download/%23description)
 * [...](https://repainter.app/)[Repainter App](https://repainter.app/) Android Repainter [...](https://play.google.com/store/apps/details?id%3Ddev.kdrag0n.dyntheme)
 * [play.google.com/store/apps/details?id=dev.kdrag0n.dyntheme](https://play.google.com/store/apps/details?id%3Ddev.kdrag0n.dyntheme)
 * Other Utilities [...](https://kdeconnect.kde.org/)
 * [kdeconnect.kde.org/](https://kdeconnect.kde.org/)
 * [...](https://github.com/Genymobile/scrcpy)[scrcpy](https://github.com/Genymobile/scrcpy) - Display and control your Android device. [...](https://www.dev47apps.com/)[Droidcam](https://www.dev47apps.com/) - DroidCam turns your Android device into a wireless webcam for your PC. [...](https://github.com/sromku/adb-export)[adb-export](https://github.com/sromku/adb-export) - Export Android content providers to CSV format [...](https://github.com/dsixda/Android-Kitchen)[Android-Kitchen](https://github.com/dsixda/Android-Kitchen) - A text-based kitchen for Android ROM customization. Uses shell scripts and works with Cygwin/OS X/Linux
 * [sailfishos.org/](https://sailfishos.org/)
 * ? [Step By Step: How to Enable root access on Lineage Os](https://rootmygalaxy.net/root-access-on-lineage-os/)
 * [How to Root LineageOS 20 with Magisk - YouTube](https://www.youtube.com/watch?v%3D8o5YILpoIvs)
 * [LineageOS/android_device_fairphone_FP4](https://github.com/LineageOS/android_device_fairphone_FP4)
 * [LineageOS - Wikipedia](https://en.wikipedia.org/wiki/LineageOS)
 * [LineageOS for microG](https://lineage.microg.org/)
 * [(3) List of all AOSP custom ROMs / alternative OS's for Fairphone 4 : fairphone](https://www.reddit.com/r/fairphone/comments/128tooq/list_of_all_aosp_custom_roms_alternative_oss_for/)
 * [Latest wiki topics - Fairphone Community Forum](https://forum.fairphone.com/tag/wiki)
 * [Fairphone 4 (fairphone-fp4) - postmarketOS](https://wiki.postmarketos.org/wiki/Fairphone_4_(fairphone-fp4))
 * [wiki.postmarketos.org/wiki/Fairphone_4_(fairphone-fp4)](https://wiki.postmarketos.org/wiki/Fairphone_4_(fairphone-fp4))
 * [wiki.postmarketos.org/wiki/Devices](https://wiki.postmarketos.org/wiki/Devices)
 * [plasma-mobile.org/get/](https://plasma-mobile.org/get/)
 * [docs.halium.org/en/latest/index.html](https://docs.halium.org/en/latest/index.html)
 * [r/fairphone/comments/128tooq/list_of_all_aosp_custom_roms_alternative_oss_for/](https://www.reddit.com/r/fairphone/comments/128tooq/list_of_all_aosp_custom_roms_alternative_oss_for/)
 * [startpage.com/do/dsearch?query=plasma+mobile+on+fairphone+4&cat=web&pl=ext-ff&language=english&extVersion=1.3.0](https://www.startpage.com/do/dsearch?query%3Dplasma%2Bmobile%2Bon%2Bfairphone%2B4%26cat%3Dweb%26pl%3Dext-ff%26language%3Denglish%26extVersion%3D1.3.0)
 * [devices.ubuntu-touch.io/device/fp4/](https://devices.ubuntu-touch.io/device/fp4/)
 * [medium.com/@camden.o.b/the-ultimate-linux-phone-guide-28d0cce9929](https://medium.com/@camden.o.b/the-ultimate-linux-phone-guide-28d0cce9929)
 * [f-droid.org/en/packages/com.termux.nix/](https://f-droid.org/en/packages/com.termux.nix/)
 * [r/NixOS/comments/sgjksu/today_i_learned_that_you_can_run_nixos_on_a/](https://www.reddit.com/r/NixOS/comments/sgjksu/today_i_learned_that_you_can_run_nixos_on_a/)
 * [nix-on-droid.unboiled.info/](https://nix-on-droid.unboiled.info/)
 * [nix-community/nix-on-droid](https://github.com/nix-community/nix-on-droid)
 * [NixOS/mobile-nixos](https://github.com/NixOS/mobile-nixos)
 * [rheinneckar.social/@0x17@corteximplant.com/111288413485361531](https://rheinneckar.social/@0x17@corteximplant.com/111288413485361531)
 * [rheinneckar.social/@0x17@corteximplant.com](https://rheinneckar.social/@0x17@corteximplant.com)
 * [...](https://www.hacker-kultur.de/episodes.html)
 * [hacker-kultur.de/episodes.html](https://www.hacker-kultur.de/episodes.html)
 * [nixos.wiki/wiki/PinePhone](https://nixos.wiki/wiki/PinePhone)
 * [The Nix Phone and the End of Android](https://www.youtube.com/watch?v%3D0UIpg19KECw)
 * [Clarifying some stuff about nix-on-droid installation](https://www.youtube.com/watch?v%3DVb8-Dc9KVHE)
 * [pretalx.c3voc.de/camp2023/talk/QRPQCL/](https://pretalx.c3voc.de/camp2023/talk/QRPQCL/)
 * [nlnet.nl/project/mobile-nixos/](https://nlnet.nl/project/mobile-nixos/)
 * [NixOS/mobile-nixos](https://github.com/NixOS/mobile-nixos) → see latest updates → contribute to site to make it look more up-to-date?
 * [mobile.nixos.org/](https://mobile.nixos.org/)
 * [media.ccc.de/v/nixcon-2023-36022-daily-driving-nixos-on-the-librem-5](https://media.ccc.de/v/nixcon-2023-36022-daily-driving-nixos-on-the-librem-5)
 * [rheinneckar.social/@yelircaasi/111403832780248129](https://rheinneckar.social/@yelircaasi/111403832780248129)
 * [repainter.app/](https://repainter.app/)
 * [play.google.com/store/apps/details?id=com.looper.seeker&hl=en&gl=US](https://play.google.com/store/apps/details?id%3Dcom.looper.seeker%26hl%3Den%26gl%3DUS)
 * [iamlooper/Seeker](https://github.com/iamlooper/Seeker)
 * [zacharee/Tweaker](https://github.com/zacharee/Tweaker)
 * [zacharee/SystemUITunerRedesign](https://github.com/zacharee/SystemUITunerRedesign)
 * [zacharee/RootActivityLauncher](https://github.com/zacharee/RootActivityLauncher)
 * [play.google.com/store/apps/details?id=com.ksmobile.launcher.theme.neonlife&hl=gsw](https://play.google.com/store/apps/details?id%3Dcom.ksmobile.launcher.theme.neonlife%26hl%3Dgsw)
 * [developer.android.com/codelabs/basic-android-kotlin-training-change-app-theme](https://developer.android.com/codelabs/basic-android-kotlin-training-change-app-theme)
 * [developer.android.com/develop/ui/views/theming/themes](https://developer.android.com/develop/ui/views/theming/themes)
 * [shizuku.rikka.app/introduction/](https://shizuku.rikka.app/introduction/)
 * crdroid
 * [crdroidandroid/android](https://github.com/crdroidandroid/android)
 * [crdroidandroid](https://github.com/crdroidandroid)
 * [crdroid.net/downloads](https://crdroid.net/downloads)
 * [r/degoogle/comments/tdumva/my_opinion_on_e_os_on_fairphone_4/](https://www.reddit.com/r/degoogle/comments/tdumva/my_opinion_on_e_os_on_fairphone_4/)
 * [calyxos.org/](https://calyxos.org/)
 * [wiki.installgentoo.com/images/4/42/AndroidRicingGeneralDrawingwithChalk.png](https://wiki.installgentoo.com/images/4/42/AndroidRicingGeneralDrawingwithChalk.png)
 * [r/androidricing/comments/2entyl/g_approved_android_apps_and_xposed_modules/](https://www.reddit.com/r/androidricing/comments/2entyl/g_approved_android_apps_and_xposed_modules/)
 * [r/androidricing/](https://www.reddit.com/r/androidricing/)
 * bliss
 * [blisslabs.org/](https://blisslabs.org/)
 * [blissroms.org/](https://blissroms.org/)
 * [microsoft.com/en-us/swiftkey?activetab=pivot_1%3Aprimaryr2](https://www.microsoft.com/en-us/swiftkey?activetab%3Dpivot_1%253Aprimaryr2)
 * [docs.ubports.com/en/latest/index.html](https://docs.ubports.com/en/latest/index.html)
 * [docs.ubports.com/en/latest/porting/configure_test_fix/Sound.html](https://docs.ubports.com/en/latest/porting/configure_test_fix/Sound.html)
 * ** [...](https://support.fairphone.com/hc/en-us/articles/10492476238865)
 * [support.fairphone.com/hc/en-us/articles/10492476238865](https://support.fairphone.com/hc/en-us/articles/10492476238865)
 * [fairphone.com/en/bootloader-unlocking-code-for-fairphone-3/](https://www.fairphone.com/en/bootloader-unlocking-code-for-fairphone-3/)
 * [askubuntu.com/questions/799882/ubuntu-touch-change-system-settings-from-command-line-silent-mode-specifically](https://askubuntu.com/questions/799882/ubuntu-touch-change-system-settings-from-command-line-silent-mode-specifically)
 * [askubuntu.com/questions/756379/how-to-set-the-new-suru-dark-theme-as-default-theme-in-ubuntu-touch](https://askubuntu.com/questions/756379/how-to-set-the-new-suru-dark-theme-as-default-theme-in-ubuntu-touch)
 * [devices.ubuntu-touch.io/device/fp4/](https://devices.ubuntu-touch.io/device/fp4/)
 * [myaccount.google.com/signinoptions/two-step-verification?rapt=AEjHL4O_VvacNtE6OBDCuMIUuUDJfMFNO5qyUXRBtuxrdQVYlnqzs2UPMBZXpdqs0Enjc261ZApkj58Vish5IrvFDGcW0px2oRe0CKxaNcE77CoYqnnem1E](https://myaccount.google.com/signinoptions/two-step-verification?rapt%3DAEjHL4O_VvacNtE6OBDCuMIUuUDJfMFNO5qyUXRBtuxrdQVYlnqzs2UPMBZXpdqs0Enjc261ZApkj58Vish5IrvFDGcW0px2oRe0CKxaNcE77CoYqnnem1E)
 * [murena.com/shop/smartphones/brand-new/murena-fairphone-5/](https://murena.com/shop/smartphones/brand-new/murena-fairphone-5/)
 * [nix-community/robotnix](https://github.com/nix-community/robotnix)
 * [Lifesaver Instruction Video](https://www.youtube.com/watch?v%3DUmLD1c5Qcb8) (LineageOS))
 * [...](https://mindthegapps.com/download/%23mind-the-gapps-for-lineage-os-20-android-13)
 * [mindthegapps.com/download/#mind-the-gapps-for-lineage-os-20-android-13](https://mindthegapps.com/download/%23mind-the-gapps-for-lineage-os-20-android-13)
 * [librearts.org](http://librearts.org)
 * [e.foundation/](https://e.foundation/)
 * Apps
 * [mhss1/MyBrain](https://github.com/mhss1/MyBrain)
 * Apps on FairPhone Android
 * [ ]  Anki
 * [ ]  ReadEra Premium
 * [ ]  Foreground
 * [ ]  Todometer
 * [ ]  Termux
 * [ ]  Das tägliche Wetter
 * [ ]  Headway
 * [ ]  Librera FD
 * [ ]  Routines Bot (Telegram app)- [ ]  Notion
 * [ ]  DB Navigator
 * [ ]  Mein Blau
 * [ ]  Adblock Browser
 * [ ]  Pomodoro
 * [ ]  Forza
 * [ ]  Google Drive
 * [ ]  DuckDuckGo
 * [ ]  Wikipedia
 * [ ]  Coursera
 * [ ]  Stepik
 * [ ]  Google News
 * [ ]  Udemy
 * [ ]  Play Store
 * [ ]  Spotify
 * [ ]  Google Podcasts
 * [ ]  Castbox
 * [ ]  Google Sheets
 * [ ]  Skype
 * [ ]  Discord
 * [ ]  Reddit
 * [ ]  Teams
 * [ ]  Outlook
 * [ ]  Notepad
 * [ ]  Viber
 * [ ]  Instagram
 * [ ]  Messenger
 * [ ]  Snapchat
 * [ ]  Runkeeper
 * [ ]  Netflix
 * [ ]  DeepL
 * [ ]  Reverso Context
 * [ ]  Nabu Vogelwel
 * [ ]  Audiorecorder
 * [ ]  iNaturalist
 * [ ]  Forest
 * [ ]  Tandem
 * [ ]  Zettel Notes
 * [ ]  QR-Scanner
 * [ ]  kicktipp
 * [ ]  RadioPlayer
 * [ ]  Linux Commands
 * [ ]  GitHub
 * [ ]  HelloChinese
 * [ ]  DuoReader
 * [ ]  Bitmoji
 * [ ]  GitJournal
 * [ ]  GitTrends
 * [ ]  LingoCards Traditional Chinese
 * [ ]  Vived (tech news)- [ ]  Confluence
 * [ ]  Tundra (not working)- [ ]  Moshidon
 * [ ]  Amazon App
 * [ ]  Uber
 * [ ]  HelloTalk
 * [ ]  Speaky
 * [ ]  Mastodon
 * [ ]  Tor Browser
 * [ ]  Revolt
 * [ ]  Tusky
 * [ ]  Planta
 * [ ]  Jerboa for Android
 * [ ]  lemmur
 * [ ]  Fedilab
 * [ ]  Husky
 * [ ]  Bible grec
 * [ ]  BLB
 * [ ]  ParallelText
 * [ ]  Greek New Testament
 * [ ]  Hebrew/Greek Bible
 * [ ]  arabdict
 * [ ]  Interlinear Bible
 * [ ]  DailyArt
 * [ ]  Confluence
 * [ ]  Markor
 * [ ]  LWP+- [ ]  Repainter
 * [ ]  Hoplite Keyboard
 * [ ]  Zulip
 * [ ]  (Slack)- [ ]  F-Droid
 * [ ]  Vived
 * [ ]  Bumble
 * [ ]  (Obsidian)- [ ]  Goodreads
 * [ ]  TickTick
 * [ ]  Joplin
 * [ ]  Brave
 * [ ]  21done
 * [ ]  [ ] [...](https://koreader.rocks/)
 * [koreader.rocks/](https://koreader.rocks/)
 * [medevel.com/my-brain/](https://medevel.com/my-brain/)
 * [media.ccc.de/v/nixcon-2023-36022-daily-driving-nixos-on-the-librem-5](https://media.ccc.de/v/nixcon-2023-36022-daily-driving-nixos-on-the-librem-5)
 * [ ]  GhostCloud app for Ubuntu Touch
 * phone [...](https://plasma-mobile.org/get/)
 * [plasma-mobile.org/get/](https://plasma-mobile.org/get/)
 * [...](https://github.com/developer-vivek/Android-Home-Screen-Setups)
 * [developer-vivek/Android-Home-Screen-Setups](https://github.com/developer-vivek/Android-Home-Screen-Setups)
 * [...](https://f-droid.org/packages/com.jkuester.unlauncher/)
 * [f-droid.org/packages/com.jkuester.unlauncher/](https://f-droid.org/packages/com.jkuester.unlauncher/)
 * [...](https://alternativeto.net/software/postmarketos/)
 * [alternativeto.net/software/postmarketos/](https://alternativeto.net/software/postmarketos/)
 * [...](https://f-droid.org/packages/com.ismartcoding.plain/)
 * [f-droid.org/packages/com.ismartcoding.plain/](https://f-droid.org/packages/com.ismartcoding.plain/)
 * [...](https://www.reddit.com/r/GooglePixel/comments/shmgje/free_alternative_to_repainter_for_android_12/)
 * [r/GooglePixel/comments/shmgje/free_alternative_to_repainter_for_android_12/](https://www.reddit.com/r/GooglePixel/comments/shmgje/free_alternative_to_repainter_for_android_12/)
 * [...](https://codeberg.org/XADE/LinuxDroid)[XADE/LinuxDroid: boot linux on android - Codeberg.org](https://codeberg.org/XADE/LinuxDroid)
 * [...](https://ubuntu-touch.io/get-ubuntu-touch)[wrong fairphone version number? - Get Ubuntu Touch | Ubuntu Touch](https://ubuntu-touch.io/get-ubuntu-touch)
 * [...](https://play.google.com/store/apps/details?id%3Dcom.freddyt_studio.sublimemusicmanager)[Sublime Music Manager: Wifi Tr - Aplicaciones en Google Play](https://play.google.com/store/apps/details?id%3Dcom.freddyt_studio.sublimemusicmanager)
 * [...](https://en.wikipedia.org/wiki/Android_(operating_system))
 * [en.wikipedia.org/wiki/Android_(operating_system)](https://en.wikipedia.org/wiki/Android_(operating_system))
 * [...](https://github.com/Mahmud0808/ColorBlendr)
 * [Mahmud0808/ColorBlendr](https://github.com/Mahmud0808/ColorBlendr)
 * [...](https://www.reddit.com/r/Magisk/comments/107cz62/tutorial_make_banking_apps_work_on_rooted_phones/)
 * [r/Magisk/comments/107cz62/tutorial_make_banking_apps_work_on_rooted_phones/](https://www.reddit.com/r/Magisk/comments/107cz62/tutorial_make_banking_apps_work_on_rooted_phones/)
 * [...](https://github.com/ThePBone/awesome-shizuku%23customization)
 * [ThePBone/awesome-shizuku#customization](https://github.com/ThePBone/awesome-shizuku%23customization)
 * [...](https://shizuku.rikka.app/)
 * [shizuku.rikka.app/](https://shizuku.rikka.app/)
 * [...](https://github.com/NixOS/mobile-nixos)
 * [NixOS/mobile-nixos](https://github.com/NixOS/mobile-nixos)
 * [...](https://github.com/grwlf/mobile-nixos-cfg)
 * [grwlf/mobile-nixos-cfg](https://github.com/grwlf/mobile-nixos-cfg)
 * [...](https://github.com/mobile-nixos)
 * [mobile-nixos](https://github.com/mobile-nixos)
 * [...](https://www.reddit.com/r/NixOS/comments/sgjksu/today_i_learned_that_you_can_run_nixos_on_a/)
 * [r/NixOS/comments/sgjksu/today_i_learned_that_you_can_run_nixos_on_a/](https://www.reddit.com/r/NixOS/comments/sgjksu/today_i_learned_that_you_can_run_nixos_on_a/)
 * [...](https://hydra.nixos.org/eval/1802582?filter%3Dpine%26compare%3D1802499%26full%3D%23tabs-still-succeed)
 * [hydra.nixos.org/eval/1802582?filter=pine&compare=1802499&full=#tabs-still-succeed](https://hydra.nixos.org/eval/1802582?filter%3Dpine%26compare%3D1802499%26full%3D%23tabs-still-succeed)
 * [...](https://news.ycombinator.com/item?id%3D30010178)
 * [news.ycombinator.com/item?id=30010178](https://news.ycombinator.com/item?id%3D30010178)
 * [...](https://pinephone.de/flyer.pdf)[Linux on Mobile Summary (PDF)](https://pinephone.de/flyer.pdf)
 * [...](https://linuxstans.com/linux-phone/)
 * [linuxstans.com/linux-phone/](https://linuxstans.com/linux-phone/)
 * [...](https://www.reddit.com/r/NixOS/comments/15f2csd/adhoc_waydroid_services/)
 * [r/NixOS/comments/15f2csd/adhoc_waydroid_services/](https://www.reddit.com/r/NixOS/comments/15f2csd/adhoc_waydroid_services/)
 * [...](https://news.ycombinator.com/item?id%3D31806639)
 * [news.ycombinator.com/item?id=31806639](https://news.ycombinator.com/item?id%3D31806639) (search NixOS)
 * [video](https://www.youtube.com/watch?v%3DunR0XGd9bxM)
 * [...](https://medium.com/@camden.o.b/the-ultimate-one-year-review-daily-driving-the-pinephone-25bc41a05533)
 * [medium.com/@camden.o.b/the-ultimate-one-year-review-daily-driving-the-pinephone-25bc41a05533](https://medium.com/@camden.o.b/the-ultimate-one-year-review-daily-driving-the-pinephone-25bc41a05533)
 * [...](https://www.zknotes.com/page/nixos-on-pinephone)
 * [zknotes.com/page/nixos-on-pinephone](https://www.zknotes.com/page/nixos-on-pinephone)
 * [...](https://www.phoronix.com/news/Generic-USB-Display-GUD-5.13)
 * [phoronix.com/news/Generic-USB-Display-GUD-5.13](https://www.phoronix.com/news/Generic-USB-Display-GUD-5.13)
 * [...](https://lemmy.world/post/3326384)
 * [lemmy.world/post/3326384](https://lemmy.world/post/3326384)
 * [...](https://forums.puri.sm/t/alternative-system-softwares-keyboard-shell-os-etc-on-librem-5/20093/5)
 * [forums.puri.sm/t/alternative-system-softwares-keyboard-shell-os-etc-on-librem-5/20093/5](https://forums.puri.sm/t/alternative-system-softwares-keyboard-shell-os-etc-on-librem-5/20093/5)
 * [...](https://forums.puri.sm/t/will-the-liberty-phone-replace-the-librem-5/21229)
 * [forums.puri.sm/t/will-the-liberty-phone-replace-the-librem-5/21229](https://forums.puri.sm/t/will-the-liberty-phone-replace-the-librem-5/21229)
 * [...](https://pine64.org/documentation/)
 * [pine64.org/documentation/](https://pine64.org/documentation/)
 * [...](https://academic-accelerator.com/encyclopedia/linux-for-mobile-devices)
 * [academic-accelerator.com/encyclopedia/linux-for-mobile-devices](https://academic-accelerator.com/encyclopedia/linux-for-mobile-devices)
 * [...](https://www.reddit.com/r/pinephone/comments/132dczh/users_thoughts_on_the_state_of_the_pinephone_pro/)
 * [r/pinephone/comments/132dczh/users_thoughts_on_the_state_of_the_pinephone_pro/](https://www.reddit.com/r/pinephone/comments/132dczh/users_thoughts_on_the_state_of_the_pinephone_pro/)
 * [...](https://www.reddit.com/r/linuxquestions/comments/16hayzi/whats_the_state_of_mobile_linux_in_2023/)
 * [r/linuxquestions/comments/16hayzi/whats_the_state_of_mobile_linux_in_2023/](https://www.reddit.com/r/linuxquestions/comments/16hayzi/whats_the_state_of_mobile_linux_in_2023/)
 * [...](https://github.com/NixOS/nixos-hardware)
 * [NixOS/nixos-hardware](https://github.com/NixOS/nixos-hardware)
 * [...](https://ahoneybun.net/blog/)
 * [ahoneybun.net/blog/](https://ahoneybun.net/blog/)
 * [...](https://github.com/NixOS/nixos-hardware/issues/716)
 * [NixOS/nixos-hardware/issues/716](https://github.com/NixOS/nixos-hardware/issues/716)
 * [...](https://uninsane.org/blog/mobile-nixos-pinephone/)
 * [uninsane.org/blog/mobile-nixos-pinephone/](https://uninsane.org/blog/mobile-nixos-pinephone/)
 * [...](https://www.reddit.com/r/NixOS/comments/12nw2n9/nixos_on_pinephone_install_log/)
 * [r/NixOS/comments/12nw2n9/nixos_on_pinephone_install_log/](https://www.reddit.com/r/NixOS/comments/12nw2n9/nixos_on_pinephone_install_log/)
 * $$$ [revanced.app/](https://revanced.app/)
 * [AryanVBW/LinuxDroid: The most powerful security toolkit for Android: without rooting your device. Run security tools like Nmap, Metasploit, and Wireshark on your Android device without voiding your warranty. Access a wide range of penetration testing tools and utilities, right from your Android phone or tablet.](https://github.com/AryanVBW/LinuxDroid)
 * [codeberg.org/XADE/LinuxDroid](https://codeberg.org/XADE/LinuxDroid)
 * phone * [...](https://ubports.com/en/)
 * {phone} [halium](https://halium.org/)
 * {phone} [lrustand/guix-pinephonepro: Fork of Andrew Tropin's Guix system config for Pinephone Pro](https://github.com/lrustand/guix-pinephonepro)
 * {phone app} [acode](https://f-droid.org/packages/com.foxdebug.acode/)
 * {phone browser} [bromite/bromite](bromite)
 * {phone sync} [librera-sync](https://github.com/jumper047/librera-sync)
 * ( ) [localsend](https://f-droid.org/packages/org.localsend.localsend_app/)
 * ( ) [blisslauncher](https://f-droid.org/packages/foundation.e.blisslauncher/)
 * ( ) [...](https://williamvds.me/blog/nixos-on-librem-5/)

 # Nix

## Notes

* Project idea: add .drv syntax highlighting to bat, or create a bat-based tool to format and display .drv all-in-one

Talk about pure functional programming, esp in terms of input → out and no side effects, no state
* Talk about package hashing as a means of unique identification of a package and its dependencies and the guarantees that brings with it
* Talk about links, soft and hard, and how they are used in Nix
* Talk about what exactly Nix expressions are, as well as flakes
* Then about how Nix code is organized, such as imports
* Go over each point in the desiderata (still a fee to add) and talk about how each relates to pure functional programming
* Do an informal proof of how each desideratum follows from and is required by the definition of pure functional programming
* Then finally go over what Nix does with different commands
* contrast old and new syntax
* Emphasize commonalities among commands, common theme and design goals, etc
* Ideas
* Create tool to populate pyproject.toml with exact versiions supplied by Nix packages, with option for stable or unstable (reference: [github.com](https://github.com/peterldowns/nix-search-cli)
* [peterldowns/nix-search-cli](https://github.com/peterldowns/nix-search-cli)
* Create language server / parser / highlighter for .drv files, add .drv support to bat
* Look at Poetry2Nix and modify it to use pre-built: [github.com](https://github.com/lazamar/nix-package-versions)
* [lazamar/nix-package-versions](https://github.com/lazamar/nix-package-versions) →https://github.com/nix-community/pip2nix?
* Set up git inside nix container
* Next rebuild switch: firefox, ublock origin for firefox and chrome, userscript for all browsers for domain-specific css using pilit stylesheets for wikimedia, github, mdbook, sops-nix secrets, kvantum qt styling, zathura, wezterm keybinds for pane and tab navigation, neovim window and tab navigation <leader>hjkl; neotree open and close keybinds, terminal navigation shortcuts, floating terminal shortcuts, "open file in split" shortcut
* Yet Another Nix Playlist - multilingual audio & subtitles, short, single-topic videos, quality visuals

challenge: synchronize languages and features with init.lua
* buildNvimHM { lib, pkgs, g, features, languages , ...}
* home.packages = [];
* include each (language x feature) file in its own self-contained file; combine in default.nix and call lua formatter
* include lua-ls config file in each directory to ignore missing (vim) imports
* nixmacs - like nixide for emacs -> precompile elisp?
* nix-utils - make as flake
* nixide - flake, also app and shell outputs
* clinix - returns HM and other outputs for CLI dev environment
* move nvim out into its own flake, with languages and features declared externally
* Makes sense to have the config complete and stable first, then to move it into its own flake and add nix-powered modularized configuration
* nixfetch - neofetch for nixos
* Why does chromium via nix have a different hover icon?
* [nix-community/nixos-generators](https://github.com/nix-community/nixos-generators)
* [r/NixOS/comments/y1xo2u/how_to_create_an_iso_with_my_config_files/?rdt=61989](https://www.reddit.com/r/NixOS/comments/y1xo2u/how_to_create_an_iso_with_my_config_files/?rdt=61989)
* Look into Nix as a build tool -> Nix vs Just
* Try out Nix container -> how much lighter? how minimal can it be?
* Write garbage collection scripts for Nix & home-manager
* Read source code:
* poetry2nix
* system-manager
* home-manager
* stylix
* nix-colors
* nixpkgs.lib (esp relevant)
* Nix
* Read docs:
* nix manual
* nixpkgs manual
* nixos manual
* home-manager docs
* How to use Nix to modify and act on other Nix file? (wrap, override, etc)
* good discussion: [r/NixOS/comments/1bzvaof/nixos_alternatives](https://www.reddit.com/r/NixOS/comments/1bzvaof/nixos_alternatives)
* write nixfetch: special fetch for NixOS, write in Haskell, use SVG image
* just use Greetd as greeter
* Write script to view entire nix config as one big nix/dhall/json file -> nix eval --expr, etc.
* nix: write insertIf function in Nix to interpolate string if some option is set, otherwise empty stringkeep in separate files and then bring together in Nix. Call files that are incorrect as standalone .luaPiece (for exampke) and in nvim turn on highlighting with false positive errors turned off
* NixOS and Ubuntu are two different Linux distributions with distinct design philosophies and approaches to system management. While both have security features, NixOS incorporates certain design principles that contribute to its security posture. Here are some aspects in which NixOS might be considered more secure than Ubuntu:
* Immutable System Configuration:
* NixOS: NixOS follows an immutable infrastructure model, meaning that the system configuration is treated as a whole, and changes are applied by creating new configurations rather than modifying existing ones. This can reduce the risk of configuration drift and unintended changes that might introduce security vulnerabilities.
* Ubuntu: In traditional Linux distributions like Ubuntu, system configurations are often modified directly, and changes can accumulate over time. This can potentially lead to a less predictable and more complex system state.
* Declarative System Configuration:
* NixOS: NixOS configurations are declarative and specify the desired state of the system. This approach can enhance system predictability and make it easier to audit and understand the system's configuration.
* Ubuntu: While modern Ubuntu versions have introduced tools like Ansible and systemd for system configuration management, they may not enforce the same level of declarative and immutable principles as NixOS.
* Atomic Upgrades and Rollbacks:
* NixOS: NixOS supports atomic upgrades and rollbacks, allowing users to easily switch between different system configurations. This feature can be valuable for system recovery and provides a safety net in case an upgrade introduces unexpected issues.
* Ubuntu: While Ubuntu provides package management tools for upgrading and downgrading individual packages, NixOS's approach extends this to the entire system configuration, including the kernel.
* Package Management and Isolation:
* NixOS: Nix, the package manager used by NixOS, provides a functional and isolated approach to package management. Each package is isolated from others, reducing the potential for conflicts and dependency issues.
* Ubuntu: Ubuntu's package management system, based on APT (Advanced Package Tool), also isolates packages, but it may not enforce the same level of functional package management principles as Nix.
* Enhanced Reproducibility:
* NixOS: The declarative and functional nature of NixOS configurations contributes to enhanced reproducibility. Given the same configuration, a NixOS system can be replicated reliably across different environments.
* Ubuntu: While Ubuntu strives for package consistency, NixOS's functional approach can offer more explicit control over the entire system's state.
* It's important to note that security is a multifaceted aspect, and the effectiveness of security measures depends on various factors, including the specific use case, the user's expertise, and the threat landscape. Both NixOS and Ubuntu have security features, and the choice between them should consider factors beyond security alone, such as community support, package availability, and ease of use.
* Are there, conversely, ways in which Ubuntu is more secure than NixOS?
* ChatGPT
* While NixOS and Ubuntu both prioritize security, they have different design philosophies and approaches to system management. Ubuntu, being one of the most widely used Linux distributions, has its own set of security features and advantages. Here are some aspects where Ubuntu might be considered more secure than NixOS:
* AppArmor and Security Profiles:
* Ubuntu: Ubuntu incorporates AppArmor, a mandatory access control (MAC) framework that restricts the capabilities of individual programs. AppArmor uses security profiles to define what actions specific programs are allowed to perform, enhancing the overall security of the system.
* NixOS: While NixOS supports various security features, including SELinux integration, it might not have the same level of integration and community support for AppArmor as Ubuntu.
* Wide Adoption and Community Support:
* Ubuntu: Being one of the most popular Linux distributions, Ubuntu benefits from a large and active user and developer community. This means that security issues are often discovered and addressed promptly, and there is a wealth of community knowledge and support available.
* NixOS: While NixOS has a dedicated and growing community, it may not be as large or mature as Ubuntu's community. The wider adoption of Ubuntu can contribute to a more extensive security-focused ecosystem.
* Security Patching and Updates:
* Ubuntu: Ubuntu has a well-established system for providing security updates and patches promptly. The Ubuntu Security Team actively monitors vulnerabilities and releases updates to address them in a timely manner.
* NixOS: NixOS also emphasizes security updates, but the update process and release cycle may differ. Ubuntu's regular release schedule and Long-Term Support (LTS) versions provide predictable maintenance and support.
* Ease of Use and User Base:
* Ubuntu: Ubuntu is known for its user-friendly approach, making it accessible to a wide range of users, including those who may not have extensive Linux experience. A user-friendly environment can contribute to better security practices as users are more likely to follow best practices when the system is easy to use.
* NixOS: NixOS has a unique configuration model that may have a steeper learning curve for users unfamiliar with functional programming and declarative configuration. While this design contributes to security, ease of use is also a security consideration.
* Security Documentation and Resources:
* Ubuntu: Ubuntu has extensive documentation, security guides, and community forums that provide resources for users to enhance the security of their systems. The availability of well-documented security practices contributes to overall system security.
* NixOS: NixOS documentation is comprehensive, but the community resources and documentation may not be as extensive or user-friendly for security-related topics as those for Ubuntu.
* It's essential to consider the specific security requirements, user expertise, and the overall ecosystem when choosing between Ubuntu and NixOS. Both distributions have their strengths, and the choice often depends on factors beyond security, including the intended use case, user preferences, and community support.
* The security of software repositories, including Nixpkgs for NixOS and the repositories for Ubuntu and Debian, involves multiple factors, and it's not straightforward to declare one as universally more secure than the others. Each package management system has its own set of security features and practices. Here are some considerations for each:
* Nixpkgs (NixOS):
* Functional Package Management: Nixpkgs uses a functional approach to package management. Each package is built in isolation, and dependencies are explicitly defined. This can help reduce dependency issues and conflicts.
* Reproducibility: Nixpkgs emphasizes reproducibility, meaning that given the same configuration, the build process for packages should produce identical results. This can enhance the trustworthiness of packages.
* Immutable Infrastructure: NixOS follows an immutable infrastructure model, where the entire system configuration is treated as a whole. This can reduce the risk of configuration drift and unintended changes.
* Ubuntu and Debian Repositories:
* Wide Adoption and Community Scrutiny: Ubuntu and Debian have large user communities, and their repositories undergo significant scrutiny. Security vulnerabilities are actively monitored, and updates are provided promptly. The Debian Security Team and the Ubuntu Security Team play key roles in managing security updates.
* Package Signing: Packages in Debian and Ubuntu repositories are signed with cryptographic keys, providing a mechanism to verify the authenticity and integrity of the packages. This helps prevent tampering during the download process.
* Stable Release Process: Debian's stable release process is known for its focus on stability and security. Ubuntu, which is based on Debian, inherits many of these security practices, particularly in Long-Term Support (LTS) releases.
* Ultimately, the security of a software repository depends on various factors, including the development and maintenance practices, community involvement, and the responsiveness to security vulnerabilities. It's crucial to note that security is a holistic concern, and no system is entirely immune to security issues. Regularly applying security updates, using package signing mechanisms, and following security best practices are critical regardless of the chosen distribution.
* When evaluating the security of a system, users should consider their specific security requirements, the threat landscape, and their own expertise in maintaining and securing the system. Additionally, using additional security measures, such as intrusion detection systems and firewalls, can further enhance the security of any Linux distribution.
* Between Nixpkgs and Ubuntu, which confirms more closely to ISO27001?
* ChatGPT
* ISO/IEC 27001 is a widely recognized international standard for information security management systems (ISMS). It provides a systematic approach to managing sensitive company information, ensuring its confidentiality, integrity, and availability. ISO 27001 doesn't prescribe specific technical measures but focuses on establishing a framework for information security governance.
* Comparing Nixpkgs (NixOS) and Ubuntu in the context of ISO 27001 compliance involves considering how each aligns with the standard's principles and practices. Here are some considerations:
* ISO 27001 Framework:
* Nixpkgs (NixOS): NixOS and Nixpkgs provide a unique approach to system configuration and package management with a focus on immutability and declarative specifications. While the ISO 27001 standard doesn't prescribe specific technical solutions, the principles of transparency, traceability, and accountability can align well with Nixpkgs's functional and reproducible system configuration.
* Ubuntu: Ubuntu, as a widely used Linux distribution, has a broad user base and established security practices. It offers tools and features that can be integrated into an ISO 27001 compliant environment. Additionally, Ubuntu's Long-Term Support (LTS) releases may align well with the stability and reliability requirements of ISO 27001.
* Security Updates and Patch Management:
* Nixpkgs (NixOS): Nixpkgs has a strong emphasis on reproducibility and the ability to roll back changes. Security updates can be systematically applied, and the functional package management model allows for clear tracking of changes.
* Ubuntu: Ubuntu has well-defined processes for security updates and patch management. The Ubuntu Security Team actively monitors vulnerabilities and releases timely updates. The Ubuntu ecosystem benefits from widespread adoption and community scrutiny.
* Auditability and Compliance:
* Nixpkgs (NixOS): The functional and declarative nature of Nixpkgs allows for clear specification of system configurations. This can contribute to auditability and compliance efforts, aligning with ISO 27001 principles.
* Ubuntu: Ubuntu's popularity and wide usage contribute to the availability of tools, documentation, and community knowledge, which can facilitate auditability and compliance checks.
* Documentation and Reporting:
* Nixpkgs (NixOS): Nixpkgs and NixOS documentation provide insights into the system's configuration and package management. Clear documentation is essential for ISO 27001 compliance.
* Ubuntu: Ubuntu has extensive documentation and resources that can aid in understanding and implementing security best practices. This can be valuable for documentation and reporting requirements.
* Ultimately, both Nixpkgs (NixOS) and Ubuntu can be used in environments seeking ISO 27001 compliance. The choice depends on factors beyond security alone, such as the specific needs of the organization, the expertise of the team, and the desired system configuration and management model. Organizations should conduct their own risk assessments and carefully consider their unique security and compliance requirements when choosing an operating system and configuration management approach.
* How could one convince his or her supervisors that NixOS is suitable for use in a business context with sensitive data? Currently only Ubuntu and Devian are allowed.
* ChatGPT
* Convincing supervisors to consider NixOS in a business context, especially when Ubuntu and Debian are already established, may require a thoughtful approach that addresses specific concerns related to security, manageability, and business needs. Here are some points and strategies you might consider:
* Security and Reproducibility:
* Emphasize the functional and declarative nature of NixOS, which allows for reproducible system configurations. This can enhance security and traceability, aligning with best practices for managing sensitive data.
* Immutable Infrastructure:
* Highlight the benefits of an immutable infrastructure model, where system configurations are treated as a whole and changes are made by creating new configurations. This can reduce the risk of configuration drift and unauthorized changes.
* Rollback and Recovery:
* Showcase NixOS's ability to perform atomic upgrades and rollbacks, providing a safety net for system changes. This feature can be crucial in ensuring system stability and recovery from unexpected issues.
* Documentation and Auditability:
* Point out the clear documentation provided by NixOS and Nixpkgs. The functional and declarative configuration model makes it easier to document and understand the system state, contributing to auditability.
* Community Support:
* Discuss the growing and active community around NixOS. While Ubuntu and Debian have established communities, NixOS's community is enthusiastic and supportive, and it actively contributes to the development and improvement of the system.
* Integration with Existing Infrastructure:
* Demonstrate how NixOS can integrate with existing infrastructure and tools. Showcase compatibility with standard Linux software and services to reassure that the migration would not disrupt current workflows.
* Pilot Project:
* Propose a pilot project or proof-of-concept to evaluate NixOS in a controlled environment. This can help mitigate concerns, demonstrate the benefits, and provide tangible evidence of NixOS's suitability.
* Educational Resources:
* Provide educational resources and training opportunities for team members to learn about NixOS. Familiarity with the system can alleviate concerns and build confidence in its use.
* Risk Mitigation and Contingency Planning:
* Address concerns about potential risks by discussing mitigation strategies and contingency plans. Explain how NixOS's features contribute to a more resilient and manageable infrastructure.
* Cost and Resource Considerations:
* Highlight any potential cost savings or resource efficiency gained by using NixOS. This might include reduced maintenance efforts, faster system recovery, or improved development workflows.
* Remember to tailor your communication to your supervisors' priorities and concerns. Providing concrete examples, case studies, or success stories of organizations using NixOS for sensitive data can further strengthen your case. Additionally, being open to feedback and collaborating with relevant stakeholders can foster a more inclusive decision-making process.
* Are there any known security risks in NixOS and its packaging system?
* ChatGPT
* As of my last knowledge update in January 2022, NixOS has generally been considered a secure and well-designed Linux distribution, and the Nix package manager is known for its unique and functional approach to package management. However, it's important to note that no software system is entirely immune to security risks, and vulnerabilities can be discovered or addressed over time.
* Here are some considerations regarding security in NixOS and its packaging system:
* Security Practices:
* NixOS follows certain security practices, such as isolating packages and providing a functional and declarative approach to system configuration. This can contribute to a more secure and auditable system.
* Reproducibility:
* NixOS emphasizes reproducibility in package builds. The ability to reproduce builds ensures that the same source code and dependencies result in identical binaries, reducing the risk of tampering and providing transparency in the build process.
* Community Scrutiny:
* NixOS benefits from an active and growing community. Community scrutiny is an essential factor in discovering and addressing security issues. The larger the community, the more eyes are on the codebase, which can contribute to early detection of vulnerabilities.
* Security Updates:
* Like any Linux distribution, NixOS provides security updates for its packages. Regularly applying these updates is crucial for addressing known vulnerabilities. Users should stay informed about security advisories and apply updates promptly.
* Limited Attack Surface:
* Nix's functional approach to package management can potentially limit the attack surface by isolating packages and dependencies. Each package is built in its own environment, reducing the risk of conflicts and shared library vulnerabilities.
* Centralized Configuration:
* NixOS's centralized and declarative system configuration can contribute to better security by providing a clear overview of the system state. This can facilitate auditing and compliance efforts.
* While NixOS has its security strengths, it's essential to stay informed about the latest developments, security advisories, and updates in the NixOS community. Regularly checking the official NixOS Security page, participating in community discussions, and monitoring security mailing lists are good practices for staying informed about security-related matters.
* Additionally, the security landscape can evolve, and new information may have emerged since my last update in January 2022. Therefore, it's advisable to check the latest sources and security advisories for the most up-to-date information regarding NixOS security.
* → make script to pull relevant system-specific infor from output of nixos-generate-config command
* sudo nixos-rebuild switch —extra-experimental-features “nix-command flakes” —flake .#hank
* figure out audio config
* remove all traces of snaps; raise issue on nix-snap
* → solve the mystery of $PATH
* package landscape-client with nix → how to look inside .deb and .snap packages?
* try landscape-client in distrobox?
* → build iridium browser for Nix
* → build waveterm for Nix
* Goal: To create a Python develop environment where everything just works
* → make script to pull relevant system-specific infor from output of nixos-generate-config command
* sudo nixos-rebuild switch —extra-experimental-features “nix-command flakes” —flake .#hank
* figure out audio config
* remove all traces of snaps; raise issue on nix-snap
* → solve the mystery of $PATH
* package landscape-client with nix → how to look inside .deb and .snap packages?
* try landscape-client in distrobox?
* → build iridium browser for Nix
* → build waveterm for Nix
* create script: nixos-report: like ls for all relevant directories, following all links to real file; also other important information
* go through all xdg options on mynixos
* Create nand2tetris for NixOS → add to nixpkgs

Roadmap

* [x] install Nix
* [x] try out Nix package manager
* [x] install NixOS
* [x] configure NixOS with flakes and install basic packages
* [x] install Hyprland and get it working
* [x] use Home Manager to create the first config
* [x] try out home manager in a docker container on Hank to get a feel for it
* [x] write poetry2nixpkgs → found a way to use overrides instead
* [ ] create poetry2nix-playground repo to demo problem with editable installation
* [ ] create post on Nix discourse asking for help with poetry2nix editable installs
* [ ] back up current configs on Hank
* [ ] add configs to home-manager config:

Notes

* Talk about pure functional programming, esp in terms of input → out and no side effects, no state
* Talk about package hashing as a means of unique identification of a package and its dependencies and the guarantees that brings with it
* Talk about links, soft and hard, and how they are used in Nix
* Talk about what exactly Nix expressions are, as well as flakes
* Then about how Nix code is organized, such as imports
* Go over each point in the desiderata (still a fee to add) and talk about how each relates to pure functional programming
* Do an informal proof of how each desideratum follows from and is required by the definition of pure functional programming
* Then finally go over what Nix does with different commands
* contrast old and new syntax
* Emphasize commonalities among commands, common theme and design goals, etc
* Ideas
* Create tool to populate pyproject.toml with exact versiions supplied by Nix packages, with option for stable or unstable (reference: [github.com](https://github.com/peterldowns/nix-search-cli)
* [peterldowns/nix-search-cli](https://github.com/peterldowns/nix-search-cli)
* Create language server / parser / highlighter for .drv files, add .drv support to bat
* Look at Poetry2Nix and modify it to use pre-built: [github.com](https://github.com/lazamar/nix-package-versions)
* [lazamar/nix-package-versions](https://github.com/lazamar/nix-package-versions) → [nix package versions](https://github.com/nix-community/pip2nix)

```nix
* buildPythonPackage {
* pname = "TODO";
* version = "TODO";
* src = fetchPypi {
* inherit pname version;
* sha256 = ""; # TODO

};
```

* note: add reasonably-minimal container CL environment to Nix flake
* notes: create different configuration expressions to wrap and manage window managers and widgets and login managers etc: hyprland-ags.nix  hyprland-basic.nix  sway.nix  swayfx.nix riverwm.nix popos.nix

## Code

snippet * deploy = homeManager.makeModule { modules = [ config.nixos ]; };

```nix

{ lib, pkgs, neovimUtils, wrapNeovimUnstable, neovim-nightly-src, ... }:
* let
  binpath = lib.makeBinPath (with pkgs; [
    lua-language-server
    stylua

    nodePackages.prettier
    nodePackages.pyright

    # I can't install this with the rest of the python packages b/c this needs to be in path
    python3Packages.jupytext
    lua
  ]);
  neovimConfig = pkgs.neovimUtils.makeNeovimConfig {
    extraLuaPackages = p: [ p.magick ];
    extraPython3Packages = p: with p; [
      pynvim
      jupyter-client
      cairosvg
      ipython
      nbformat
    ];
    extraPackages = p: with p; [
      imageMagick
    ];
    withNodeJs = true;
    withRuby = true;
    withPython3 = true;
    # [NixOS/nixpkgs/issues/211998](https://github.com/NixOS/nixpkgs/issues/211998)
    customRC = "luafile ~/.config/nvim/init.lua";
  };
* in

{
  nixpkgs.overlays = [
    (_: super: {
      neovim-custom = pkgs.wrapNeovimUnstable
        # (neovim-nightly.overrideAttrs (oldAttrs: {
        (super.neovim-unwrapped.overrideAttrs (oldAttrs: {
          buildInputs = oldAttrs.buildInputs ++ [ super.tree-sitter ];
          src = neovim-nightly-src;
        }))
        (neovimConfig // {
          wrapperArgs = lib.escapeShellArgs neovimConfig.wrapperArgs
            + " --prefix PATH : ${binpath}";
        });
    })
  ];

  environment.systemPackages = with pkgs; [
    neovim-custom
  ];

}

```

### Haskell CLI in Flake

```sh
my-haskell-flake/
├── src/
│   └── Main.hs        # Haskell source file containing your CLI program
├── flake.nix          # Nix flake definition
└── default.nix        # Optional, used if you prefer to use default.nix for overrides
```

```hs
-- src/Main.hs
module Main where
* import Options.Applicative
* data Options = Options
  { name :: String
  } deriving (Show)
* parseOptions :: Parser Options
parseOptions = Options
  <$> strOption
    ( long "name"
    <> short 'n'
    <> metavar "NAME"
    <> help "Your name" )
* main :: IO ()
main = do
  options <- execParser opts
  putStrLn $ "Hello, " ++ name options ++ "!"
  where
    opts = info (parseOptions <**> helper)
      ( fullDesc
     <> progDesc "Print a greeting for NAME"
     <> header "hello - a simple greeting program" )
```

```nix

# flake.nix

{
  description = "My Haskell Flake with CLI functionality";

  inputs = {
    nixpkgs.url = "github:nixos/nixpkgs";
  };

  outputs = { self, nixpkgs }: {
    # Define an executable output that builds and runs the Haskell CLI program
    executable = {
      # Specify the path to your Haskell source file
      command = "src/Main.hs";

      # Optionally specify additional dependencies
      # dependencies = [ pkgs.haskellPackages.somePackage ];

      # Optionally specify environment variables or other settings
    };
  };
}
```

```nix

# tree.nix

{ lib, nixpkgs ? import <nixpkgs> {} }:
* let

# Function to print a tree structure

printTree = prefix: node: tree:
* if lib.isAttrs node
* then
* let
* attrs = lib.attrValues node;
* attrNames = lib.attrNames node;
* lines = lib.mapAttrsToList (name: value: "${name}: ${value}") node;
* subtree = lib.mapAttrsToList (name: value: printTree (prefix + "  ") value tree) node;
* in
* if lib.length attrs > 0
* then "${prefix}${lib.concatStringsSep "\\n" (lib.mapAttrsToList (name: value: "${name}: ${value}") node)}"
* else

"${prefix}${lib.concatStringsSep "\\n" (lib.mapAttrsToList (name: value: "${value}") node)}"

+ (lib.concatStringsSep "\\n" subtree)
* else "${prefix}${node}";

# Function to build the import tree

* buildImportTree = derivation:
* let
* buildTree = drv:
* let
* inputs = lib.foldl' (acc: input: acc + [input])
* [] drv.buildInputs;
* in

{ ${lib.foldl' (acc: input: acc + [input]) "" inputs} } // (lib.foldl' (acc: input: acc + buildTree input) {} inputs);
* importTree = buildTree derivation;
* in
* printTree "" importTree importTree;
* in

{ buildImportTree, printTree }
* This script defines two functions: printTree for printing the tree structure and buildImportTree for building the import tree. The example assumes you have the nixpkgs attribute set available.To use this script, you can import it into another Nix expression and call the buildImportTree function, passing the derivation for the desired output. For example:nixCopy code
```

```nix

# example.nix

{ lib, nixpkgs ? import <nixpkgs> {}, tree ? import ./tree.nix { nixpkgs = nixpkgs; } }:
* let
* myOutput = nixpkgs.myPackage.outputs.defaultPackage.x86_64-linux;
* importTree = tree.buildImportTree myOutput;
* in
* tree.printTree "" importTree importTree
```

```nix
buildPythonPackage {
  pname = "TODO";
  version = "TODO";
  src = fetchPypi {
  inherit pname version;
  sha256 = ""; # TODO
};
```

 You How could I print out a tree representation of the imports of a given output?ChatGPTChatGPT To print out a tree representation of the imports of a given output in a Nix flake, you can leverage the nixpkgs attribute set and the buildInputs attribute of the derivation for the specified output. You can create a recursive function to traverse the import tree and print it in a tree-like structure.Here's an example script in Nix that demonstrates how you can achieve this

```nix

# tree.nix

{ lib, nixpkgs ? import <nixpkgs> {} }:
let
  # Function to print a tree structure
  printTree = prefix: node: tree:
    if lib.isAttrs node
  then let
    attrs = lib.attrValues node;
    attrNames = lib.attrNames node;
    lines = lib.mapAttrsToList (name: value: "${name}: ${value}") node;
    subtree = lib.mapAttrsToList (name: value: printTree (prefix + "  ") value tree) node;
  in
    if lib.length attrs > 0
    then "${prefix}${lib.concatStringsSep "\\n" (lib.mapAttrsToList (name: value: "${name}: ${value}") node)}"
    else "${prefix}${lib.concatStringsSep "\\n" (lib.mapAttrsToList (name: value: "${value}") node)}" + (lib.concatStringsSep "\\n" subtree)
* else "${prefix}${node}";

# Function to build the import tree

* buildImportTree = derivation:
* let
* buildTree = drv:
* let
* inputs = lib.foldl' (acc: input: acc + [input])
* [] drv.buildInputs;
* in

{ ${lib.foldl' (acc: input: acc + [input]) "" inputs} } // (lib.foldl' (acc: input: acc + buildTree input) {} inputs);
* importTree = buildTree derivation;
* in
* printTree "" importTree importTree;
* in

{ buildImportTree, printTree }
* This script defines two functions: printTree for printing the tree structure and buildImportTree for building the import tree. The example assumes you have the nixpkgs attribute set available.To use this script, you can import it into another Nix expression and call the buildImportTree function, passing the derivation for the desired output. For example:nixCopy code

# example.nix

{ lib, nixpkgs ? import <nixpkgs> {}, tree ? import ./tree.nix { nixpkgs = nixpkgs; } }:
* let
* myOutput = nixpkgs.myPackage.outputs.defaultPackage.x86_64-linux;
* importTree = tree.buildImportTree myOutput;
* in
* tree.printTree "" importTree importTree
```

* Replace myPackage with the actual package name or output you want to inspect. Running the example.nix script should print the import tree structure for the specified output.

* Flake CLI QuestionHow can I add a CLI functionality to a Nix flake?ChatGPTChatGPT To add command-line interface (CLI) functionality to a Nix flake, you can use the programs attribute in the flake's outputs section. Here's a step-by-step guide:
* Create a directory structure: In your flake's directory, create a directory for your CLI program. For example:plaintextCopy code
* my-flake/

```txt
├── flake.nix

└── src/

└── my-cli/

└── Main.hs
* 1.
* Write your CLI program: Write your CLI program in the Main.hs file. For example:haskellCopy code
* - src/my-cli/Main.hs
* module Main where
* import System.Environment
* main :: IO ()
* main = do
* args <- getArgs
* putStrLn $ "Hello, CLI! Args: " ++ show args
* 1.
* Update your flake.nix file: Update your flake.nix file to include the programs attribute. Here's an example:nixCopy code

{
* description = "My Flake with CLI";
* inputs = {
* nixpkgs.url = "github:nixos/nixpkgs/nixos-21.11";

};
* outputs = { self, nixpkgs }: {
* defaultPackage.x86_64-linux = self.packages.haskellPackages.callPackage ./src/my-cli {};
* programs.hello-cli = {
* enable = true;
* package = self.defaultPackage.x86_64-linux;

};

};

}
```

* 1. In this example, hello-cli is the name of your CLI program. The package attribute points to the Haskell package generated from your source code.
* Build and run your CLI program: Run the following commands to build and run your CLI program:bashCopy code
* nix build
* ./result/bin/hello-cli
* 1. Replace hello-cli with the name you specified in your programs attribute.
* Now, your Nix flake includes a CLI program that can be easily built and run. You can customize the programs attribute further based on your specific requirements. [...](https://lh3.googleusercontent.com/a/AEdFTp7iti-r88FvOL2bvykuZfqt0KtgKeReZeLGIIrZyA%3Ds96-c)
* [...](https://lh3.googleusercontent.com/a/AEdFTp7iti-r88FvOL2bvykuZfqt0KtgKeReZeLGIIrZyA%3Ds96-c) You What are the possible values for the atributes of the output of a flake?ChatGPTChatGPT In a Nix flake, the outputs attribute is used to specify the outputs that will be produced by the flake. Each output can have its own set of attributes. Here are some common attributes that can be used in the outputs section of a flake:
* defaultPackage: This attribute specifies the default output for the flake. It usually points to the main result produced by the flake. For example:nixCopy code


```txt
* outputs = { self, nixpkgs }: {
* defaultPackage.x86_64-linux = self.packages.x86_64-linux.myPackage;

};
* 1.
* packages: This attribute is used to define one or more packages produced by the flake. Each package can have its own set of attributes like packagePrefix, meta, etc.nixCopy code
* outputs = { self, nixpkgs }: {
* packages.x86_64-linux.myPackage = self.packages.haskellPackages.myHaskellPackage;

};
* 1.
* programs: This attribute is used to define executable programs produced by the flake. It allows you to specify which packages to use and whether the program should be enabled or not.nixCopy code
* outputs = { self, nixpkgs }: {
* programs.myProgram = {
* enable = true;
* package = self.packages.x86_64-linux.myPackage;

};

};
* 1.
* documentation: This attribute is used to specify documentation generated by the flake. It can include attributes like html, man, etc.nixCopy code
* outputs = { self, nixpkgs }: {
* documentation.html = self.defaultPackage.x86_64-linux + "/share/doc/myPackage/html";

};
* 1.
* dev: This attribute is used to specify development files produced by the flake.nixCopy code
* outputs = { self, nixpkgs }: {
* dev = self.defaultPackage.x86_64-linux + "/lib/myPackage-dev";

};
* 1.
* These are just examples, and the actual attributes you use will depend on the nature of your flake and the kind of outputs you want to produce. The key is to define the outputs you need and customize their attributes accordingly. Always refer to the Nixpkgs manual or Nix documentation for the most up-to-date and detailed information on available attributes. [...](https://lh3.googleusercontent.com/a/AEdFTp7iti-r88FvOL2bvykuZfqt0KtgKeReZeLGIIrZyA%3Ds96-c)
* [...](https://lh3.googleusercontent.com/a/AEdFTp7iti-r88FvOL2bvykuZfqt0KtgKeReZeLGIIrZyA%3Ds96-c) You How could I print out a tree representation of the imports of a given output?ChatGPTChatGPT To print out a tree representation of the imports of a given output in a Nix flake, you can leverage the nixpkgs attribute set and the buildInputs attribute of the derivation for the specified output. You can create a recursive function to traverse the import tree and print it in a tree-like structure.Here's an example script in Nix that demonstrates how you can achieve this:nixCopy code
* Replace myPackage with the actual package name or output you want to inspect. Running the example.nix script should print the import tree structure for the specified output.
```

* code * [t.me](https://t.me/nixos_en/114808?single)

## Resources

* {resource} [snowfallorg/lib](https://github.com/snowfallorg/lib)
* {resource} [...](https://github.com/nix-community/NUR)
* {resource} [...](https://www.nixhub.io/)
* {resource} [corps/nix-kernel](https://github.com/corps/nix-kernel) - need to create
* {resource} [CuBeRJAN/nix-problems](https://github.com/CuBeRJAN/nix-problems) 
* {resource} [DavHau/nix-portable: Nix - Static, Permissionless, Installation-free, Pre-configured](https://github.com/DavHau/nix-portable)
* {resource} [DavidEGrayson/nixcrpkgs](https://github.com/DavidEGrayson/nixcrpkgs) - expressions for cross-compiling
* {resource} [determinate systems](https://determinate.systems/)
* {resource} [devos $$$](https://devos.divnix.com/index.html)
* {resource} [discourse.nixos.org](https://discourse.nixos.org/search?q=learning) journey working group meeting notes [/r/NixOS/comments/r8bj9l/aoc_2021_using_nix/](https://www.reddit.com/r/NixOS/comments/r8bj9l/aoc_2021_using_nix/)
* {resource} [divnix book intro](https://book.divnix.com/ch02-00-introduction.html)
* {resource} [divnix](https://github.com/divnix)
* {resource} [divnix/digga?](https://github.com/divnix/digga?))
* {resource} [divnix/std](https://github.com/divnix/std)
* {resource} [flakehub](https://flakehub.com/)
* {resource} [GitHub - mikeroyal/NixOS-Guide: NixOS Guide. Learn all about the immutable Nix Operating System and the declarative Nix Expression Language.](https://github.com/mikeroyal/NixOS-Guide)
* {resource} [GitHub - numtide/system-manager: Manage system config using nix on any distro - Links - NixOS Discourse](https://discourse.nixos.org/t/github-numtide-system-manager-manage-system-config-using-nix-on-any-distro/27064)
* {resource} [github-numtide-system-manager-manage-system-config-using-nix-on-any-distro](https://discourse.nixos.org/t/github-numtide-system-manager-manage-system-config-using-nix-on-any-distro/27064/13)
* {resource} [Latest Help topics - NixOS Discourse](https://discourse.nixos.org/c/learn/9)
* {resource} [mynixos.com](https://mynixos.com/pricing)
* {resource} [Nix & NixOS CheatSheet](https://nixcademy.com/cheatsheet.html)
* {resource} [Nix By Example · Nix Cookbook](https://ops.functionalalgebra.com/nix-by-example/)
* {resource} [Nix language — Dan's Cheat Sheets 1 documentation](https://cheat.readthedocs.io/en/latest/nixos/nix_lang.html)
* {resource} [Nix language basics — nix.dev documentation](https://nix.dev/tutorials/nix-language)
* {resource} [Nix Reference Manual](https://nix.dev/manual/nix/2.19/)
* {resource} [nix-community/haumea](https://github.com/nix-community/haumea)
* {resource} [nix-community/nixpkgs-wayland: Automated, pre-built packages for Wayland (sway/wlroots) tools for NixOS. [maintainers=@colemickens, @Artturin]](https://github.com/nix-community/nixpkgs-wayland)
* {resource} [nix-community/nixpkgs.lib: nixpkgs lib for cheap instantiation [maintainer=@github-action] (with initial help from @blaggacao)](https://github.com/nix-community/nixpkgs.lib)
* {resource} [nix-community/NUR](https://github.com/nix-community/NUR)
* {resource} [nix.dev concepts](https://nix.dev/concepts/%23concepts)
* {resource} [nix4noobs](https://nix4noobs.com/)
* {resource} [nixhub](https://www.nixhub.io/)
* {resource} [NixOS Discourse - NixOS community forum](https://discourse.nixos.org/)
* {resource} [nixos.asia](https://nixos.asia/en/)
* {resource} [practical nixos - the book](https://drakerossman.com/blog/practical-nixos-the-book)
* {resource} [system-manager/examples/example.nix at main · numtide/system-manager](https://github.com/numtide/system-manager/blob/main/examples/example.nix)
* {resource} [target/nix-fetchers](https://github.com/target/nix-fetchers)
* {resource} [thiagokokada/nix-alien: Run unpatched binaries on Nix/NixOS](https://github.com/thiagokokada/nix-alien)
* {resource} [tinkering.xyz](https://tinkering.xyz/)
* {resource} [tweag.github.io](https://tweag.github.io/nixpkgs/file-sets/manual.html%23preface)
* {resource} [Wil Taylor's NixOS series](https://www.youtube.com/watch?v%3DQKoQ1gKJY5A%26list%3DPL-saUBvIJzOkjAw_vOac75v-x6EzNzZq-)
* {resource} [zero to nix - concepts](https://zero-to-nix.com/concepts)
* {resource} [zero to nix](https://zero-to-nix.com/start)
* {resource video} [Nix Hour Playlist](https://www.youtube.com/playlist?list%3DPLyzwHTVJlRc8yjlx4VR4LU5A5O44og9in)
* {resources} [nixos.org](https://nixos.org/manual/nixos/stable/)
* {resources} [nixos.org](https://nixos.org/manual/nixpkgs/stable/)
* {resources} [ryantm.github.io](https://ryantm.github.io/nixpkgs/)

### Blogs

* [cola-gang industries](https://cola-gang.industries/)
* [tweag-nix-dev-update-16](https://discourse.nixos.org/t/tweag-nix-dev-update-16/14379)
* [tweag-nix-dev-update-17](https://discourse.nixos.org/t/tweag-nix-dev-update-17/15037)

### People

* [/user/matthew-croughan/](https://www.reddit.com/user/matthew-croughan/)
* {person} [ahoneybun blog](https://ahoneybun.net/blog/)
* {person} [video](https://www.youtube.com/@Emergent_Mind)
* {person} [chetanbhasin.com](https://chetanbhasin.com/articles)
* {person} [emergent mind (yt channel)](https://www.youtube.com/@Emergent_Mind)
* {person} [Geoffrey Huntley](https://ghuntley.com/)
* {person} [Julia Evans](https://jvns.ca/) (Nix)
* {person} [NyCodeGHG (Marie)](https://github.com/nycodeghg)
* {person} [srid.ca](https://srid.ca/rust-nix)

## Learning Nix

### Nix Reading Roadmap

* [ ]  stylix
* [ ]  poetry2nix source code
* [ ]  poetry2nix docs
* [ ]  nixCats source code
* [ ]  nix-colors
* [ ]  nix language source code implementation
* [ ]  my own lib
* [ ]  home-manager docs
* [ ]  home-manager code

### Nix Internals

* {internal} [nix-release-schedule-and-roadmap](https://discourse.nixos.org/t/nix-release-schedule-and-roadmap/14204)
internal * $$$ [jonathanlorimer.dev](https://jonathanlorimer.dev/posts/nix-thesis.html)
* {internals } [Derivations (Nix From First Principles: Flake Edition #5) - Tony Finn](https://tonyfinn.com/blog/nix-from-first-principles-flake-edition/nix-5-derivation-intro/)
* {internals} [/r/Nix/comments/12yg5tj/eli5_how_can_i_upgrade_a_package/](https://www.reddit.com/r/Nix/comments/12yg5tj/eli5_how_can_i_upgrade_a_package/)
* {internals} [a-proposal-for-replacing-the-nix-worker-protocol](https://discourse.nixos.org/t/a-proposal-for-replacing-the-nix-worker-protocol/20926/5)
* {internals} [Building a Nix Package | Karim's Blog](https://elatov.github.io/2022/01/building-a-nix-package/)
* {internals} [Development Roadmap, with Mention of 3.0 and 4.0](https://discourse.nixos.org/t/nix-release-schedule-and-roadmap/14204)
* {internals} [Gabriella Gonzalez, "How to Write a Nix Derivation" - YouTube](https://www.youtube.com/watch?v%3DbbW6kgB5F2M)
* {internals} [How do i install a package from source? : NixOS](https://www.reddit.com/r/NixOS/comments/4enwa2/how_do_i_install_a_package_from_source/)
* {internals} [How do Nix builds work?](https://jvns.ca/blog/2023/03/03/how-do-nix-builds-work-/)
* {internals} [How to install package from github? - Help - NixOS Discourse](https://github.com/how-to-install-package-from-github/444)
* {internals} [nixos.org](https://nixos.org/manual/nix/stable/package-management/profiles)
* {internals} [nixos.wiki](https://nixos.wiki/wiki/Ca-derivations)
* {internals} [packaging - How to package my software in nix or write my own package derivation for nixpkgs - Unix & Linux Stack Exchange](https://unix.stackexchange.com/questions/717168/how-to-package-my-software-in-nix-or-write-my-own-package-derivation-for-nixpkgs)
* ( ) [(Towards) stable C bindings for libutil, libexpr by yorickvP · Pull Request #8699 · NixOS/nix](https://github.com/NixOS/nix/pull/8699)

## ## Nix Tools

* {tool} [argoproj/argo-workflows](https://github.com/argoproj/argo-workflows)
* {tool} [crane](https://crane.dev/)
* {tool} [Deterministic systems with Nix](https://www.bekk.christmas/post/2021/13/deterministic-systems-with-nix)
* {tool} [erikarvstedt/extra-container](https://github.com/erikarvstedt/extra-container)
* {tool} [Is anyone working on a GUI tool to manage packages? - NixOS Discourse](https://discourse.nixos.org/t/is-anyone-working-on-a-gui-tool-to-manage-packages/5540)
* {tool} [Mic92/nix-update](https://github.com/Mic92/nix-update)
* {tool} [Nix-lite, or Nix without the store, for templating - NixOS Discourse](https://discourse.nixos.org/t/nix-lite-or-nix-without-the-store-for-templating/38577)
* {tool} [Nix's very own graphical UI - Matej Cotman's Blog](https://blog.matejc.com/blogs/myblog/nixs-very-own-graphical-ui)
* {tool} [pkgs.nix-tree](...)
* {tool} [primamateria.github.io](https://primamateria.github.io/blog/haumea-cheatsheet/)
* {tool} [prmadev/willow](https://github.com/prmadev/willow)
* {tool} [purenix post](https://functor.tokyo/blog/2022-01-10-why-purenix)
* {tool} [PureNix: Write PureScript and transpile it to Nix : r/NixOS](https://www.reddit.com/r/NixOS/comments/sw3zpp/purenix_write_purescript_and_transpile_it_to_nix/)
* {tool} [Quickstart](https://snowfall.org/guides/lib/quickstart/)
* {tool} [RaitoBezarius/buildxyz](https://github.com/RaitoBezarius/buildxyz)
* {tool} [search?q%3Drepo%253Anumtide%252Fsystem-manager](https://github.com/search?q%3Drepo%253Anumtide%252Fsystem-manager)
* {tool} [summer.nixos.org](https://summer.nixos.org/blog/callpackage-a-tool-for-the-lazy/)
* {tool} [symphorien/nix-du: Visualise which gc-roots to delete to free some space in your nix store](https://github.com/symphorien/nix-du)
* {tooling} [nix-community/rnix-parser: A Nix parser written in Rust [maintainer=@oberblastmeister]](https://github.com/nix-community/rnix-parser)
* {tooling} [nixos-infect/nixos-infect at master · elitak/nixos-infect](https://github.com/elitak/nixos-infect/blob/master/nixos-infect)
* {tooling} [nuenv](https://determinate.systems/posts/nuenv)
* {tooling} [overview of nix formatters](https://drakerossman.com/blog/overview-of-nix-formatters-ecosystem)
* {tools} [[RFC 0166] Nix formatting, take two #166](https://github.com/NixOS/rfcs/pull/166)
use! [github.com](https://github.com/zhaofengli/colmena)
* ai [Nixified AI](https://nixified.ai/)
* → [github.com](https://github.com/nix-community/awesome-nix)
* [peterldowns/nix-search-cli](https://github.com/peterldowns/nix-search-cli)
* [nmattia/niv](https://github.com/nmattia/niv)
* [lazamar.co.uk](https://lazamar.co.uk/nix-versions/)
* [app.cachix.org](https://app.cachix.org/)
* [NixOS/nix/pull/4577](https://github.com/NixOS/nix/pull/4577)
* [docs.cachix.org](https://docs.cachix.org/)
* [blog.cachix.org](https://blog.cachix.org/posts/2022-07-29-cachix-deploy-public-beta/)
* {cachix} [nix-community cachix](https://app.cachix.org/cache/nix-community) 
* [mobile.nixos.org](https://mobile.nixos.org/) ‣*
* [madjar/nox](https://github.com/madjar/nox)
* [nix-community/nix-direnv](https://github.com/nix-community/nix-direnv)
* [nix-community/awesome-nix](https://github.com/nix-community/awesome-nix)
* $$$$$ [hugoreeves/elemental](https://github.com/hugoreeves/elemental)
* $$$$ [DeterminateSystems/nix-installer](https://github.com/DeterminateSystems/nix-installer)
* [nixops.readthedocs.io](https://nixops.readthedocs.io/en/latest/index.html)
* [divnix/digga: A flake utility library to craft shell-, home-, and hosts- environments.](https://github.com/divnix/digga)
* [fzakaria/nix-home: A nix home development environment](https://github.com/fzakaria/nix-home)
* [Introduction - Alternative Haskell Infrastructure for Nixpkgs](https://input-output-hk.github.io/haskell.nix/index.html)
* [blitz/tuxedo-nixos](https://github.com/blitz/tuxedo-nixos)
* [DavHau/nix-portable](https://github.com/DavHau/nix-portable)
* [HugoReeves/elemental: Elemental, the component parts of a Nix/OS development system.](https://github.com/hugoreeves/elemental)
* [infra/localhost: Fully reproducible localhost - localhost - code.dumpstack.io](https://code.dumpstack.io/infra/localhost)
* [kamadorueda/alejandra: The Uncompromising Nix Code Formatter](https://github.com/kamadorueda/alejandra)
* [nix-community/nurl](https://github.com/nix-community/nurl)
* [nix-community/nix-init](https://github.com/nix-community/nix-init)
* [devenv.sh](https://devenv.sh/)
* [devenv.sh](https://devenv.sh/getting-started/)  [nix-community/dream2nix: Automate reproducible packaging for various language ecosystems [maintainer=@DavHau]](https://github.com/nix-community/dream2nix)
* [nix-community/nix-direnv: A fast, persistent use_nix/use_flake implementation for direnv [maintainer=@Mic92 / @bbenne10]](https://github.com/nix-community/nix-direnv)
* [NixOS/nixos-hardware: A collection of NixOS modules covering hardware quirks.](https://github.com/NixOS/nixos-hardware)
* [flyx/Zicross](https://github.com/flyx/Zicross)
* [nixery.dev](https://nixery.dev/)
* [Tvix: We Are Rewriting Nix | Hacker News](https://news.ycombinator.com/item?id=29412971)
* [cs.tvl.fyi](https://cs.tvl.fyi/depot/-/tree/tvix)
* [TVL's blog: Tvix: We are rewriting Nix](https://tvl.fyi/blog/rewriting-nix)
* [Introduction | Nixpacks](https://nixpacks.com/docs)
* [Integrated Haskell Platform: Rapid Prototyping mit Haskell und Nix | heise online](https://www.heise.de/hintergrund/Integrated-Haskell-Platform-Rapid-Prototyping-mit-Haskell-und-Nix-7538849.html)
* [ihp.digitallyinduced.com](https://ihp.digitallyinduced.com/)
* [nix-community.github.io](https://nix-community.github.io/dream2nix/)
* [nixpacks.com](https://nixpacks.com/docs)
* [hub.docker.com](https://hub.docker.com/r/nixos/nix)
* [nix-community/NixNG](https://github.com/nix-community/NixNG)
* [kamadorueda/nixel](https://github.com/kamadorueda/nixel)
* [kamadorueda/b3](https://github.com/kamadorueda/b3) Totos - Nix in Rust [github.com](https://github.com/cleverca22/not-os)
* [haskell-nix/hnix](https://github.com/haskell-nix/hnix)
* [nix-community/nixos-anywhere](https://github.com/nix-community/nixos-anywhere)
* [numtide.com](https://numtide.com/blog/nixos-anywhere-intro/)
* [the-nix-way/dev-templates](https://github.com/the-nix-way/dev-templates)  [haskell-nix/hnix](https://github.com/haskell-nix/hnix)
* [nickel-lang/nickel-nix: An experimental Nix toolkit to use nickel as a language for writing nix packages, shells and more.](https://github.com/nickel-lang/nickel-nix)
* [cachix/pre-commit-hooks.nix](https://github.com/cachix/pre-commit-hooks.nix)
* [cachix/cachix](https://github.com/cachix/cachix)
* [git.neet.dev](https://git.neet.dev/zuckerberg/AoC-2022-Nix)
* [cachix/pre-commit-hooks.nix](https://github.com/cachix/pre-commit-hooks.nix)
* [divnix/Fractal](https://github.com/divnix/Fractal)
* [ArctarusLimited/xnlib](https://github.com/ArctarusLimited/xnlib)
* [mirkolenz/flocken](https://github.com/mirkolenz/flocken)
* [kamadorueda/alejandra](https://github.com/kamadorueda/alejandra)
* [crazazy/aoc2020](https://github.com/crazazy/aoc2020)
* [figsoda/utf8](https://github.com/figsoda/utf8)
* [GitHub - akirak/nix-env-install: Emacs frontend to installing packages using Nix](https://github.com/akirak/nix-env-install) ‣ [nixified.ai](https://nixified.ai/)
* [canva-public/js2nix: Node.js modules installation using Nix](https://github.com/canva-public/js2nix)
* [direnv.net](https://direnv.net/)
* [Installation | direnv](https://direnv.net/docs/installation.html)
* [/docs/guides/install-nixos-on-linode/](https://www.linode.com/docs/guides/install-nixos-on-linode/)
* [Advent of Code 2019](https://adventofcode.com/2019)
* [Nix · direnv/direnv Wiki](https://github.com/direnv/direnv/wiki/Nix)
* [nix-community/nix-direnv: A fast, persistent use_nix/use_flake implementation for direnv [maintainer=@Mic92 / @bbenne10]](https://github.com/nix-community/nix-direnv)
* [Nixd: nix language server - Announcements - NixOS Discourse](https://discourse.nixos.org/t/nixd-nix-language-server/28910)
* [Nixhub.io | A Nix Packages Registry](https://www.nixhub.io/)
* [The Determinate Nix Installer](https://zero-to-nix.com/concepts/nix-installer)* - nixos-anywhere*
* [nixos-anywhere-1-0-release](https://discourse.nixos.org/t/nixos-anywhere-1-0-release/33145)
* [numtide.com](https://numtide.com/blog/nixos-anywhere-1-0-release/)*
* [determinate.systems](https://determinate.systems/posts/nuenv)
* [flox.dev](https://flox.dev/)
* [reproducible-builds.org](https://reproducible-builds.org/)
* [Nickel](https://nickel-lang.org/) ‣

## Neovim via Nix

* {nvim} [(3) Neovim on NixOS? : neovim](https://www.reddit.com/r/neovim/comments/196fqno/neovim_on_nixos/)
* {nvim} [(4) Manage Neovim plugins (and more!) with Nix and Home Manager : neovim](https://www.reddit.com/r/neovim/comments/106letr/manage_neovim_plugins_and_more_with_nix_and_home/)
* {nvim} [Authoring a Plugin — NixOps 2.0 documentation](https://nixops.readthedocs.io/en/latest/plugins/authoring.html)
* {nvim} [b-src/lazy-nix-helper.nvim: Neovim plugin allowing a single neovim configuration with the Lazy plugin manager to be used on NixOS and other platforms](https://github.com/b-src/lazy-nix-helper.nvim)
* {nvim} [gaelle / nix-nvim · GitLab](https://framagit.org/vegaelle/nix-nvim)
* {nvim} [home-manager/modules/programs/neovim.nix at master · nix-community/home-manager](https://github.com/nix-community/home-manager/blob/master/modules/programs/neovim.nix%23L47)
* {nvim} [LnL7/vim-nix/](https://github.com/LnL7/vim-nix/)
* {nvim} [Neovim and Nix home-manager: Supercharge Your Development Environment - YouTube](https://www.youtube.com/watch?v%3DYZAnJ0rwREA)
* {nvim} [Neovim and Nix home-manager: Supercharge Your Development Environment](https://www.youtube.com/watch?v=YZAnJ0rwREA&pp=ygUQbml4IGhvbWUgbWFuYWdlcg%3D%3D)
* {nvim} [NixNeovim/flake.nix at main · NixNeovim/NixNeovim](https://github.com/NixNeovim/NixNeovim/blob/main/flake.nix)
* {nvim} [nixos-config/home-manager/programs/nvim/nvim.nix at main · LamprosPitsillos/nixos-config](https://github.com/LamprosPitsillos/nixos-config/blob/main/home-manager/programs/nvim/nvim.nix)
* {nvim} [nixpkgs-channels/pkgs/misc/vim-plugins/build-vim-plugin.nix at nixos-unstable · NixOS/nixpkgs-channels](https://github.com/NixOS/nixpkgs-channels/blob/nixos-unstable/pkgs/misc/vim-plugins/build-vim-plugin.nix)
* {nvim} [nixpkgs/pkgs/applications/editors/vim/plugins/vim-clap/default.nix at 8b735381322a1f8fff46add535f1fb5aea71e2da · NixOS/nixpkgs](https://github.com/NixOS/nixpkgs/blob/8b735381322a1f8fff46add535f1fb5aea71e2da/pkgs/applications/editors/vim/plugins/vim-clap/default.nix%23L58)
* {nvim} [protex/home-manager.nvim](https://github.com/protex/home-manager.nvim)
* {nvim} [symphorien/vim-nixhash: neovim plugin to automate fixing fake TOFU hashes when writing nix derivations](https://github.com/symphorien/vim-nixhash/)
nvim * name ideas: vixnim, (moshavim, VitaeVim)
* {nvim config} [/r/neovim/comments/15ev1ce/on_nix_install_lsp_in_nix_config_or_modify/](https://www.reddit.com/r/neovim/comments/15ev1ce/on_nix_install_lsp_in_nix_config_or_modify/)
* {nvim config} [/r/pwnvim](https://www.libhunt.com/r/pwnvim)
* {nvim config} [andreadev-it/nvim-personal-config](https://github.com/andreadev-it/nvim-personal-config)
* {nvim config} [badele/nix-homelab/blob/main/nix/home-manager/features/term/editor/nvim/default.nix](https://github.com/badele/nix-homelab/blob/main/nix/home-manager/features/term/editor/nvim/default.nix)
* {nvim config} [badele/nix-homelab/tree/main](https://github.com/badele/nix-homelab/tree/main)
* {nvim config} [badele/vide](https://github.com/badele/vide)
* {nvim config} [badele/vide](https://github.com/badele/vide) 
* {nvim config} [Configuración completa de Neovim en NixOS (Treesitter, lsp nativo y más)](https://www.youtube.com/watch?v=rUvjkBuKua4&pp=ugMICgJlcxABGAHKBQ9uZW92aW0gb24gbml4b3M%3D)
* {nvim config} [development environment with nix and nvim - Google Search](https://www.google.com/search?client=firefox-b-d&q=development+environment+with+nix+and+nvim)
* {nvim config} [framagit.org](https://framagit.org/vegaelle/nix-nvim)
* {nvim config} [From init.lua to default.nix](https://gist.github.com/nat-418/493d40b807132d2643a7058188bff1ca#from-initlua-to-defaultnix)
* {nvim config} [Full configuration of Neovim on NixOS](https://www.youtube.com/watch?v=rUvjkBuKua4)
* {nvim config} [gaelle / nix-nvim · GitLab](https://framagit.org/vegaelle/nix-nvim)
* {nvim config} [gaelle / nix-nvim · GitLab](https://framagit.org/vegaelle/nix-nvim)
* {nvim config} [Haskell, Nix and Vim: Getting started · tpflug](https://www.tpflug.me/2019/01/14/haskell-nix-vim/)
* {nvim config} [installing-a-neovim-ide-layer-the-nix-way](https://discourse.nixos.org/t/installing-a-neovim-ide-layer-the-nix-way/25790)
* {nvim config} [jamespwilliams/nde](https://github.com/jamespwilliams/nde)
* {nvim config} [jamespwilliams/nde](https://github.com/jamespwilliams/nde)
* {nvim config} [jordanisaacs.github.io](https://jordanisaacs.github.io/neovim-flake/)  [jordanisaacs/neovim-flake](https://github.com/jordanisaacs/neovim-flake)
* {nvim config} [jordanisaacs/neovim-flake](https://github.com/jordanisaacs/neovim-flake)
* {nvim config} [Manage Neovim plugins (and more!) with Nix and Home Manager](https://gist.github.com/nat-418/d76586da7a5d113ab90578ed56069509#manage-neovim-plugins-and-more-with-nix-and-home-manager)
* {nvim config} [metis-os/pwnvim](https://github.com/metis-os/pwnvim)
* {nvim config} [miknikif/nvim/tree/main](https://github.com/miknikif/nvim/tree/main)
* {nvim config} [mrcjkb/kickstart-nix.nvim](https://github.com/mrcjkb/kickstart-nix.nvim) 
* {nvim config} [mrcjkb/kickstart-nix.nvim](https://github.com/mrcjkb/kickstart-nix.nvim)*
* {nvim config} [Neovim and Nix home-manager: Supercharge Your Development Environment](https://www.youtube.com/watch?v=YZAnJ0rwREA&pp=ygUPbmVvdmltIG9uIG5peG9z)
* {nvim config} [Neovim Configuration in Nix: Unpacking Multiple Approaches](https://www.youtube.com/watch?v=i68c6vZkSXc&pp=ygUPbmVvdmltIG9uIG5peG9z)
* {nvim config} [nix-community.github.io](https://nix-community.github.io/nixvim/)
* {nvim config} [nix-community/neovim-nightly-overlay](https://github.com/nix-community/neovim-nightly-overlay)
* {nvim config} [nixneovim.github.io](https://nixneovim.github.io/NixNeovim/index.html)
* {nvim config} [NixNeovim/NixNeovim](https://github.com/NixNeovim/NixNeovim)
* {nvim config} [nixos.wiki](https://nixos.wiki/wiki/Neovim)
* {nvim config} [nixos.wiki](https://nixos.wiki/wiki/Neovim)
* {nvim config} [NixVim options](https://pta2002.github.io/nixvim/) - now deleted → [web.archive.org](https://web.archive.org/web/20230621122454/https://pta2002.github.io/nixvim)
* {nvim config} [NixVim options](https://pta2002.github.io/nixvim/#_plugins_neo_tree_window_popup_size_width) (plugins) - now deleted → [pta2002/nixvim: Configure Neovim with Nix!](https://github.com/pta2002/nixvim)
* {nvim config} [notashelf.github.io](https://notashelf.github.io/neovim-flake/)
* {nvim config} [NotAShelf/neovim-flake](https://github.com/NotAShelf/neovim-flake)
* {nvim config} [primamateria.github.io](https://primamateria.github.io/blog/)
* {nvim config} [primamateria.github.io](https://primamateria.github.io/blog/neovim-nix-update/)
* {nvim config} [primamateria.github.io](https://primamateria.github.io/blog/neovim-nix/)
* {nvim config} [pta2002/nixvim](https://github.com/pta2002/nixvim)
* {nvim config} [pta2002/nixvim](https://github.com/pta2002/nixvim)
* {nvim config} [reddit.com](https://reddit.com/r/neovim/s/pT20Q8IUDR)
* {nvim config} [Run Neovim and Zig in Nix Development Shell on Windows 11](https://www.youtube.com/watch?v=F4q72mGjYXA)
* {nvim config} [syberant/nix-neovim](https://github.com/syberant/nix-neovim)
* {nvim config} [syberant/nix-neovim](https://github.com/syberant/nix-neovim)
* {nvim config} [vi-tality/neovitality](https://github.com/vi-tality/neovitality)
* {nvim config} [zachcoyle/neovitality](https://github.com/zachcoyle/neovitality)
* {nvim config} [zachcoyle/vim-plugins-overlay](https://github.com/zachcoyle/vim-plugins-overlay)
* {nvim config} [zmre/pwnvim](https://github.com/zmre/pwnvim)

## SORT

## Conf Checklist

* .conf
* from Betsy
* [ ] .gsd-keyboard.settings-ported
* [ ] i3
* [ ] make sway from i3
* [ ] taskwarrior
* [ ] cosmic
* [ ] dconf
* [ ] environment.d
* [ ] git → from both
* [ ] ?- [ ] epiphany
* [ ] evolution
* [ ] featherpad
* [ ] geany
* [ ] gnome-initial-setup-done
* [ ] gnome-session
* [ ] goa-1.0
* [ ] lite-xl
* [ ] nautilus
* [ ] Notepadqq
* [ ] VSCodium
* [ ] gtk-3.0
* [ ] gtk-4.0
* [ ] home-manager → remove?- [ ] hypr
* [ ] ibus
* [ ] kitty
* [ ] lapce-stable
* [ ] lazygit
* [ ] mimeapps.list
* [ ] monitors.xml
* [ ] monitors.xml~- [ ] neofetch
* [ ] nushell
* [ ] nvim
* [ ] pulse
* [ ] QtProject.conf
* [ ] qutebrowser
* [ ] user-dirs.dirs
* [ ] user-dirs.locale
* [ ] wezterm
* [ ] xonsh
* [ ] zsh
* from Hank
* [ ] .jira
* [ ] Code
* [ ] Google
* [ ] Min
* [ ] 'Raspberry Pi'- [ ] TabNine
* [ ] Thunar
* [ ] TreeSheets.conf
* [ ] Vieb
* [ ] autostart
* [ ] azure-datalake-store
* [ ] balena-etcher
* [ ] chromium
* [ ] clavix
* [ ] coc
* [ ] configstore
* [ ] dconf
* [ ] enchant
* [ ] evince
* [ ] exercism
* [ ] fontconfig
* [ ] geany
* [ ] gedit
* [ ] github-copilot
* [ ] glib-2.0
* [ ] go
* [ ] gtk-2.0
* [ ] gtk-3.0
* [ ] htop
* [ ] i3
* [ ] iterative
* [ ] kanata
* [ ] kickstart.nvim
* [ ] kitty
* [ ] lazygit
* [ ] lazyvim_backup
* [ ] luakit
* [ ] matplotlib
* [ ] menus
* [ ] nebokrai
* [ ] neofetch
* [ ] nitrogen
* [ ] nix
* [ ] nixpkgs
* [ ] nvim-*- [ ] pavucontrol.ini
* [ ] picom
* [ ] pictrix
* [ ] procps
* [ ] pulse
* [ ] pypoetry
* [ ] qalculate
* [ ] qutebrowser
* [ ] spacefm
* [ ] starship.toml
* [ ] systemd
* [ ] tree-sitter
* [ ] ubports-installer
* [ ] user-dirs.dirs
* [ ] user-dirs.locale
* [ ] vlc
* [ ] wezterm
* [ ] xfe
* [ ] xonsh
* [ ] zsh
* [ ]
* $HOME (from Betsy)
* [ ] .bash_history
* [ ] .emacs.d
* [ ] .gitconfig
* [ ] .gnupg
* [ ] .ipython
* [ ] .mozilla
* [ ] .nix-defexpr
* [ ] .nix-profile
* [ ] .pki
* [ ] .python_history
* [ ] .ssh
* [ ] .textadept
* [ ] .viminfo
* [ ] .vscode-oss
* [ ] .wget-hsts
* [ ] .zcompdump
* [ ] .zshenv
* [ ] .zshrc* - from Hank
* [ ] .EpsonPrinterUtility
* [ ] .SpaceVim.d
* [ ] .Xauthority
* [ ] .Xresources
* [ ] .android
* [ ] .azure
* [ ] .bash_history
* [ ] .bash_logout
* [ ] .bashrc
* [ ] .cargo
* [ ] .conda
* [ ] .condarc
* [ ] .config
* [ ] .dmrc
* [ ] .docker
* [ ] .docker-mnt
* [ ] .git-credentials
* [ ] .gitconfig
* [ ] .gnome
* [ ] .gnupg
* [ ] .gphoto
* [ ] .gradle
* [ ] .gsutil
* [ ] .gtk-bookmarks
* [ ] .gtkrc-2.0
* [ ] .icons
* [ ] .ipython
* [ ] .java
* [ ] .jupyter
* [ ] .keras
* [ ] .lesshst
* [ ] .local
* [ ] .m2
* [ ] .mozilla
* [ ] .nix-channels → remove
* [ ] .nix-defexpr
* [ ] .nix-profile
* [ ] .npm → remove?
* [ ] .nv
* [ ] .nvm
* [ ] .pki
* [ ] .prodigy
* [ ] .profile
* [ ] .pyenv → remove
* [ ] .python-version
* [ ] .python_history
* [ ] .rustup
* [ ] .screenlayout
* [ ] .shiv
* [ ] .shutter
* [ ] .ssh
* [ ] .sudo_as_admin_successful
* [ ] .task
* [ ] .taskrc
* [ ] .thumbnails
* [ ] .undo-nvim
* [ ] .var
* [ ] .vim_backups
* [ ] .viminfo
* [ ] .vscode
* [ ] .vscode-cli
* [ ] .wegorc
* [ ] .wget-hsts
* [ ] .xinitrc
* [ ] .xonshrc
* [ ] .xsession-errors
* [ ] .xsession-errors.old
* [ ] .zcompdump
* [ ] .zshenv
* [ ] .zshrc
* [ ] Android
* [ ] AndroidStudioProjects
* [ ] Desktop
* [ ] Documents
* [ ] Downloads
* [ ] 'Droid Sans Mono for Powerline Nerd Font Complete.otf'
* [ ] Knecon
* [ ] Learning
* [ ] Media
* [ ] Miniforge3-Linux-x86_64.sh
* [ ] Music
* [ ] Pictures
* [ ] Public
* [ ] Templates
* [ ] Temporary
* [ ] Videos
* [ ] bookmarks.html
* [ ] dockerfiles
* [ ] dockermounts
* [ ] gensim-data
* [ ] go
* [ ] miniconda3
* [ ] miniforge3
* [ ] nixos-config
* [ ] node_modules
* [ ] notes
* [ ] pg
* [ ] pkgs
* [ ] snap
* [ ] treesheets-isaac
* [ ] workspace

2

## Top General Resources

* [nix-community/awesome-nix](https://github.com/nix-community/awesome-nix)
* [nix-community/awesome-nix](https://github.com/nix-community/awesome-nix)
* [ianthehenry.com](https://ianthehenry.com/posts/how-to-learn-nix/)
* [ianthehenry.com](https://ianthehenry.com/posts/how-to-learn-nix/)
* [nixos.org](https://nixos.org/guides/how-nix-works)
* [nixos.org](https://nixos.org/guides/how-nix-works)
* [mynixos.com](https://mynixos.com/)
* [MyNixOS](https://mynixos.com/)
* [search.nixos.org](https://search.nixos.org/packages?channel%3D23.05)
* [search.nixos.org](https://search.nixos.org/packages?channel%3D23.05)
* [edolstra.github.io](https://edolstra.github.io/pubs/phd-thesis.pdf)
* [edolstra.github.io](https://edolstra.github.io/pubs/phd-thesis.pdf)
* [jonathanlorimer.dev](https://jonathanlorimer.dev/posts/nix-thesis.html)
* [jonathanlorimer.dev](https://jonathanlorimer.dev/posts/nix-thesis.html)
* [search.nixos.org](https://search.nixos.org/packages)
* [NixOS Search - Packages](https://search.nixos.org/packages)
* [ianthehenry.com](https://ianthehenry.com/posts/how-to-learn-nix/)
* [ianthehenry.com](https://ianthehenry.com/posts/how-to-learn-nix/)
* [reddit.com](https://www.reddit.com/r/NixOS/)
* [/r/NixOS/](https://www.reddit.com/r/NixOS/)
* [nixos.org](https://nixos.org/)
* [nixos.org](https://nixos.org/)
* [nixcloud.io](https://nixcloud.io/tour/?id%3Dintroduction/nix)
* [A Tour of Nix](https://nixcloud.io/tour/?id%3Dintroduction/nix)
* [nixos-and-flakes.thiscute.world](https://nixos-and-flakes.thiscute.world/introduction/)
* [nixos-and-flakes.thiscute.world](https://nixos-and-flakes.thiscute.world/introduction/)
* [video](https://www.youtube.com/playlist?list%3DPLnlyQqQLJLnJqZzJgcsUfftdGApjdFZPV)
* [Beginner's Guide to Nix](https://www.youtube.com/playlist?list%3DPLnlyQqQLJLnJqZzJgcsUfftdGApjdFZPV)
* [ryantm.github.io](https://ryantm.github.io/nixpkgs/)
* [ryantm.github.io](https://ryantm.github.io/nixpkgs/)
* [mikeroyal/NixOS-Guide](https://github.com/mikeroyal/NixOS-Guide)
* [mikeroyal/NixOS-Guide](https://github.com/mikeroyal/NixOS-Guide)
* [zero-to-nix.com](https://zero-to-nix.com/)
* [zero-to-nix.com](https://zero-to-nix.com/)
* [nix.dev](https://nix.dev/)
* [nix.dev](https://nix.dev/)
* [nixos.org](https://nixos.org/guides/nix-pills/)
* [Nix Pills](https://nixos.org/guides/nix-pills/)
* [drakerossman.com](https://drakerossman.com/blog/practical-nixos-the-book)
* [discourse.nixos.org](https://discourse.nixos.org/)
* [discourse.nixos.org](https://discourse.nixos.org/)
* [mhwombat.codeberg.page](https://mhwombat.codeberg.page/nix-book/)
* [mhwombat.codeberg.page](https://mhwombat.codeberg.page/nix-book/)
* [mhwombat/nix-for-numbskulls](https://github.com/mhwombat/nix-for-numbskulls)
* [mhwombat/nix-for-numbskulls](https://github.com/mhwombat/nix-for-numbskulls)
* [nixos.org](https://nixos.org/manual/nix/stable/)
* [Nix Reference Manual](https://nixos.org/manual/nix/stable/)
* [nix-tutorial.gitlabpages.inria.fr](https://nix-tutorial.gitlabpages.inria.fr/nix-tutorial/index.html)
* [Nix tutorial — nix-tutorial documentation](https://nix-tutorial.gitlabpages.inria.fr/nix-tutorial/index.html)
* [nixos.org](https://nixos.org/download.html)
* [Download Nix / NixOS](https://nixos.org/download.html)
* [nixos.org](https://nixos.org/manual/nixos/stable/)
* [nixos.org](https://nixos.org/manual/nixos/stable/)
* [zero-to-nix.com](https://zero-to-nix.com/)
* [zero-to-nix.com](https://zero-to-nix.com/)
* [NixOS/nix](https://github.com/NixOS/nix)
* [NixOS/nix: Nix, the purely functional package manager](https://github.com/NixOS/nix)
* [nixos.org](https://nixos.org/manual/nix/stable/command-ref/new-cli/nix.html)
* [nixos.org](https://nixos.org/manual/nix/stable/command-ref/new-cli/nix.html)
* [nixos.wiki](https://nixos.wiki/wiki/Cheatsheet)
* [Cheatsheet - NixOS Wiki](https://nixos.wiki/wiki/Cheatsheet)
* [video](https://www.youtube.com/playlist?list%3DPLRGI9KQ3_HP_OFRG6R-p4iFgMSK1t5BHs)
* [**Nixology - YouTube](https://www.youtube.com/playlist?list%3DPLRGI9KQ3_HP_OFRG6R-p4iFgMSK1t5BHs)
* [video](https://www.youtube.com/playlist?list%3DPL-saUBvIJzOkjAw_vOac75v-x6EzNzZq-)
* [NixOS Playlist (Wil T)](https://www.youtube.com/playlist?list%3DPL-saUBvIJzOkjAw_vOac75v-x6EzNzZq-)
* [stephank.nl](https://stephank.nl/p/2020-06-01-a-nix-primer-by-a-newcomer.html)
* [Primer on Nix terminology](https://stephank.nl/p/2020-06-01-a-nix-primer-by-a-newcomer.html)
* [book.divnix.com](https://book.divnix.com/)
* [book.divnix.com](https://book.divnix.com/)
* [NixOS Wiki](https://nixos.wiki/)
* [video](https://www.youtube.com/@NixCon)
* [/@NixCon](https://www.youtube.com/@NixCon)
* [video](https://www.youtube.com/playlist?list%3DPL2Ftb1kbp85h9Mp23kykEkPe4As69hH_w)
* [NixCon 2023](https://www.youtube.com/playlist?list%3DPL2Ftb1kbp85h9Mp23kykEkPe4As69hH_w)
* [video](https://www.youtube.com/results?search_query%3Dnixcon%2B2023)
* [/results?search_query=nixcon+2023](https://www.youtube.com/results?search_query%3Dnixcon%2B2023)
* [media.ccc.de](https://media.ccc.de/c/nixcon2023)
* [media.ccc.de](https://media.ccc.de/c/nixcon2023)
* [video](https://www.youtube.com/@NixOS-Foundation/playlists)
* [/@NixOS-Foundation/playlists](https://www.youtube.com/@NixOS-Foundation/playlists)
* [nixos.org](https://nixos.org/manual/nixpkgs/stable/)
* [nixos.org](https://nixos.org/manual/nixpkgs/stable/)
* [NixOS/nixpkgs/](https://github.com/NixOS/nixpkgs/)
* [NixOS/nixpkgs: Nix Packages collection](https://github.com/NixOS/nixpkgs/)
* [jorel.dev](https://jorel.dev/NixOS4Noobs/intro.html)
* [jorel.dev](https://jorel.dev/NixOS4Noobs/intro.html)
* [itsfoss.com](https://itsfoss.com/nixos-tutorials/)
* [itsfoss.com](https://itsfoss.com/nixos-tutorials/)
* [leanpub.com](https://leanpub.com/nixos-in-production)
* [leanpub.com](https://leanpub.com/nixos-in-production)
* [nixcon 2022 - YouTube](https://www.youtube.com/results?search_query%3Dnixcon%2B2022)
* [youtube.com](https://youtube.com/playlist?list%3DPLLvdqTlFTmuKsiyAI8Q9FgHP4mY0ktPVq)
* [Nix Playlist](https://youtube.com/playlist?list%3DPLLvdqTlFTmuKsiyAI8Q9FgHP4mY0ktPVq)
* [programming.dev](https://programming.dev/c/nix)
* [programming.dev](https://programming.dev/c/nix)

## My Projects

* {iso} [Creating NixOS iso for an older Laptop with i686 (32bit) - Help - NixOS Discourse](https://discourse.nixos.org/t/creating-nixos-iso-for-an-older-laptop-with-i686-32bit/26002/2)
* {me} [yelircaasi | Cachix](https://app.cachix.org/cache/yelircaasi%23pull)
* {me} [yelircaasi/clavix](https://github.com/yelircaasi/clavix)
* {me} [yelircaasi/nix-eli5](https://github.com/yelircaasi/nix-eli5)
* {me} [yelircaasi/nixos-config: My NixOS configuration files. I'm new to NixOS, so take all of this with a grain of salt.](https://github.com/yelircaasi/nixos-config/tree/main)
* {me} [yelircaasi/pictrix](https://discourse.nixos.org/t/yelircaasi/pictrix)
* {project} [...](https://github.com/yelircaasi/clavix)
* {project} [...](https://github.com/yelircaasi/nix-eli5)
* {project} [...](https://github.com/yelircaasi/pictrix)
* Project idea: add .drv syntax highlighting to bat, or create a bat-based tool to format and display .drv all-in-one
* add guake to nixpkgs
* {contrib} [nix.dev](https://nix.dev/) → contribute to? [/search?client=firefox-b-d&q=This+Month+in+Nix+Docs](https://www.google.com/search?client=firefox-b-d&q=This+Month+in+Nix+Docs) createformatter, TreeSitter syntax highlihter, etc. for .drv files
* {contrib} [NixOS/nixpkgs/issues/132206](https://github.com/NixOS/nixpkgs/issues/132206) fork and clone nixpkgs and home-manager [Nixpkgs/Contributing - NixOS Wiki](https://nixos.wiki/wiki/Nixpkgs/Contributing)
* create script: nixos-report: like ls for all relevant directories, following all links to real file; also other important information

### landscape build*

* [blog.ielliott.io](https://blog.ielliott.io/nix-docs/mkDerivation.html#reference-inputs-installPhase)
* [canonical/landscape-client/releases/](https://github.com/canonical/landscape-client/releases/) If there isn't an existing Nix expression, you might need to create one manually. Create a Nix expression (.nix file) for landscape-client by specifying its source, dependencies, and build instructions
* { lib, buildInputs, fetchurl }: lib.mkDerivation { pname = "landscape-client"; version = "your_version_number"; src = fetchurl { url = "<https://example.com/path/to/landscape-client.tar.gz>"; sha256 = "..."; }; buildInputs = [ /* dependencies, if any */ ]; }
* Replace "<https://example.com/path/to/landscape-client.tar.gz>" with the actual URL of the landscape-client source tarball.
* Build and Install: Save the Nix expression to a file (e.g., landscape-client.nix) and build and install it using the following command:
* nix-env -f landscape-client.nix -i
* Please note that the availability of landscape-client as a Nix package may change over time, and you should check for updates or changes in the Nix ecosystem or the NixOS community.
* Always ensure that you trust the source from which you are fetching the software, especially when manually specifying URLs in Nix expressions. Additionally, be aware that my information might be outdated, and it's a good idea to check more recent sources for the latest information on NixOS packages.
* {landscape} [How to manage computers in Landscape | Ubuntu](https://ubuntu.com/landscape/docs/managing-computers%23heading--access-information-about-computers)
* {landscape} [landscape.nixlang.wiki](https://landscape.nixlang.wiki/)
* {landscape} [Language Constructs - Nix Reference Manual](https://nixos.org/manual/nix/stable/language/constructs.html)
* landcape [landscape-client/setup_client.py at master · canonical/landscape-client](https://github.com/canonical/landscape-client/blob/master/setup_client.py)
* landscape [Commits · yelircaasi/landscape-client-nixos](https://github.com/yelircaasi/landscape-client-nixos/commits/nixos/)
* landscape [github.com](https://github.com/canonical/landscape-scripts)
* {snap} [flake.lock: Update by github-actions[bot] · Pull Request #3 · io12/nix-snapd](https://github.com/io12/nix-snapd/pull/3/commits)
* {snap} [This is how I roll](https://linuxmatters.sh/19/) snaps on nixos

### Raspberry Pi

* {rpi} [Installing NixOS on a Raspberry Pi — nix.dev documentation](https://nix.dev/tutorials/nixos/installing-nixos-on-a-raspberry-pi.html)
* {rpi} [Installing NixOS on a Raspberry Pi | eipi.xyz](https://eipi.xyz/blog/installing-nixos-on-a-raspberry-pi-3/)
* {rpi} [lucernae/nixos-pi: How to install NixOS on raspberry PI](https://github.com/lucernae/nixos-pi/)
* {rpi} [NixOS on ARM/Raspberry Pi - NixOS Wiki](https://nixos.wiki/wiki/NixOS_on_ARM/Raspberry_Pi)
* {rpi} [NixOS on ARM/Raspberry Pi 4 - NixOS Wiki](https://nixos.wiki/wiki/NixOS_on_ARM/Raspberry_Pi_4)
* {rpi} [rpi.nix](https://github.com/zupo/nix/blob/master/rpi.nix)

### Mobile

* mobile search nixos-mobile on github
* [nixos.wiki](https://nixos.wiki/wiki/PinePhone)
* [Nix Phone and the End of Android](https://www.youtube.com/watch?v%3D0UIpg19KECw)
* [Installing Guix as a Complete GNU/Linux System - YouTube](https://www.youtube.com/watch?v%3DoSy-TmoxG_Y%26list%3DPLEoMzSkcN8oNxnj7jm5V2ZcGc52002pQU%26index%3D5%26pp%3DiAQB)
* [github.com](https://github.com/turbo-muffin/ancap-catppuccin)
* [fosstodon.org](https://fosstodon.org/@GreyLinux)
* [calyxos.org](https://calyxos.org/install/devices/FP4/linux/)
* [/r/NixOS/comments/sgjksu/today_i_learned_that_you_can_run_nixos_on_a/](https://www.reddit.com/r/NixOS/comments/sgjksu/today_i_learned_that_you_can_run_nixos_on_a/) nixos on mobile
* [...](https://pine64.com/product/pinephone-beta-edition-with-convergence-package/)
* [nlnet.nl](https://nlnet.nl/project/mobile-nixos/)
* [linuxmobile/kaku](https://discourse.nixos.org/t/linuxmobile/kaku)
* [...](https://media.ccc.de/v/nixcon-2023-36022-daily-driving-nixos-on-the-librem-5)
* [media.ccc.de](https://media.ccc.de/v/nixcon-2023-36022-daily-driving-nixos-on-the-librem-5)

### Development

* [Building a Rust service with Nix](https://fasterthanli.me/series/building-a-rust-service-with-nix)
* [get-going-with-julia-on-nixos-in-under-an-hour](https://discourse.nixos.org/t/get-going-with-julia-on-nixos-in-under-an-hour/12530)
* [gutier.io](https://gutier.io/post/development-using-rust-with-nix/)
* [haskell-nix-vim](https://www.tpflug.me/2019/01/14/haskell-nix-vim/)
* [rust development on nixos](https://drakerossman.com/blog/rust-development-on-nixos-bootstrapping-rust-nightly-via-flake)
* [rust-in-nix-discussion-thread](https://discourse.nixos.org/t/rust-in-nix-discussion-thread/5092/16)

### Python

* TRY THIS! [github.com](https://github.com/mjlbach/nix-shells/tree/master/lorri_tensorflow_nixgl_poetry2nix)
* Goal: To create a Python develop environment where everything just works
* [NixOS Search - Packages - ipython](https://search.nixos.org/packages?channel%3D23.11%26show%3Dihaskell%26from%3D0%26size%3D50%26sort%3Drelevance%26type%3Dpackages%26query%3Dipython)
* make Github issue for bcrypt
* [pytorch for nixos](https://duckduckgo.com/?q%3Dpre-built%2Bpytorch%2Bfor%2Bnixos%26ia%3Dweb)
* [Python poetry project in an FHS environment when poetry2nix is uncooperative](https://gitlab.com/nobodyinperson/flakes/-/blob/main/poetryFHS/flake.nix?ref_type%3Dheads)
* [Python package install using poetry + nix - NixOS Discourse](https://discourse.nixos.org/t/python-package-install-using-poetry-nix/10624/12)
* [python - Using poetry to install from a private repository with a token - Stack Overflow](https://stackoverflow.com/questions/77558055/using-poetry-to-install-from-a-private-repository-with-a-token)
* [python - Credentials in pip.conf for private PyPI - Stack Overflow](https://stackoverflow.com/questions/50468951/credentials-in-pip-conf-for-private-pypi)
uses niv: [discourse.nixos.org](https://discourse.nixos.org/t/help-with-poetry2nix/21799/4)
* [Preparing a Nix flake for a Python program (Migra, using Poetry) - Help - NixOS Discourse](https://discourse.nixos.org/t/preparing-a-nix-flake-for-a-python-program-migra-using-poetry/12030)
* [video](https://www.youtube.com/watch?v=TbIHRHy7_JM&pp=ygUKcG9ldHJ5Mm5peA%3D%3D)
* [The Nix Hour #30 [2nix tooling differences, flakes motivation] - YouTube](https://www.youtube.com/watch?v%3D9o_A2loSH-0)
* [A sack full of angry snakes: Taming your python dependencies with Nix - YouTube](https://www.youtube.com/watch?v=8ng4v1g5q7s)
* [Accessing a private GitHub repo using builtins.fetchGit? - Help - NixOS Discourse](https://discourse.nixos.org/t/accessing-a-private-github-repo-using-builtins-fetchgit/29610)
* [Adding non-python dependencies to poetry2nix application - Help - NixOS Discourse](https://discourse.nixos.org/t/adding-non-python-dependencies-to-poetry2nix-application/26755/6)
* [Anyone got poetry2nix working with a private PyPI server? : r/NixOS](https://www.reddit.com/r/NixOS/comments/15ivyr3/anyone_got_poetry2nix_working_with_a_private_pypi/)
* [blog/2020-08-12-poetry2nix/](https://www.tweag.io/blog/2020-08-12-poetry2nix/)
* [carlthome/poetry2nix-example: Playing around with poetry2nix to learn more about Nix for Python development](https://github.com/carlthome/poetry2nix-example)
* [Code search results](https://github.com/search?q%3DmkPoetryApplication%26type%3Dcode)
* [configs-mirror/pyenv.nix at master · stites/configs-mirror](https://github.com/stites/configs-mirror/blob/master/programs/bash/pyenv.nix)
* [Configuration | Documentation | Poetry - Python dependency management and packaging made easy](https://python-poetry.org/docs/configuration/)
* [datakurre.pandala.org](https://datakurre.pandala.org/2015/10/nix-for-python-developers.html/)
* [Developing Python with Poetry & Poetry2nix: Reproducible flexible Python environments - Tweag](https://www.tweag.io/blog/2020-08-12-poetry2nix/)
* [devShells and poetry2nix - Development - NixOS Discourse](https://discourse.nixos.org/t/devshells-and-poetry2nix/26837)
* [Editable install with poetry · Issue #105593 · NixOS/nixpkgs](https://github.com/NixOS/nixpkgs/issues/105593)
* [Enable private pypi repositories with credentials by rskew · Pull Request #390 · nix-community/poetry2nix](https://github.com/nix-community/poetry2nix/pull/390/files%23diff-25f00f391a440414afdc84d7191b5892db3492e1c0b9a45f9063be83e21d75e4R154)
* [fastapi-mvc/flake.nix at master · fastapi-mvc/fastapi-mvc](https://github.com/fastapi-mvc/fastapi-mvc/blob/master/flake.nix)
* [fetchFromGitLab: support for private repositories - Development - NixOS Discourse](https://discourse.nixos.org/t/fetchfromgitlab-support-for-private-repositories/22900)
* [fetchFromGitLab: support for private repositories by panicgh · Pull Request #176950 · NixOS/nixpkgs](https://github.com/NixOS/nixpkgs/pull/176950)
* [fetchFromGitLab: support for private repositories by panicgh · Pull Request #176950 · NixOS/nixpkgs](https://github.com/NixOS/nixpkgs/pull/176950/commits/4a9a41af7b33472c5d5c0dd443f350f4e9cb6599)
* [flake.nix for poetry2nix](https://gist.github.com/reckenrode/37fffca926001ff45c4866991c0acc34)
* [FRidh/python-on-nix/blob/master/tutorial.md](https://github.com/FRidh/python-on-nix/blob/master/tutorial.md)
* [FRidh/python-on-nix/blob/master/tutorial.md](https://github.com/FRidh/python-on-nix/blob/master/tutorial.md)
* [GitHub - cachix/nixpkgs-python: All Python versions, kept up-to-date on hourly basis using Nix.](https://github.com/cachix/nixpkgs-python)
* [hackmd.io](https://hackmd.io/ipS6HU_zR-yqChEvRYlnyw?view) Python Packaging Draft [Developing Python with Poetry & Poetry2nix: Reproducible flexible Python environments - Tweag](https://www.tweag.io/blog/2020-08-12-poetry2nix/)
* [haskell - Need to build specific version of pandoc into poetry2nix nixos flake - Stack Overflow](https://stackoverflow.com/questions/69873273/need-to-build-specific-version-of-pandoc-into-poetry2nix-nixos-flake)
* [Help with poetry2nix - Help - NixOS Discourse](https://discourse.nixos.org/t/help-with-poetry2nix/21799)
* [How does poetry2nix work? - Help - NixOS Discourse](https://discourse.nixos.org/t/how-does-poetry2nix-work/17309)
* [How to fetchurl with credentials - Help - NixOS Discourse](https://discourse.nixos.org/t/how-to-fetchurl-with-credentials/11994)
* [How to Learn Nix, Part 39: How to install Python](https://ianthehenry.com/posts/how-to-learn-nix/python3-alpha/)
* [how-to-create-a-poetry2nix-environment-with-a-flake](https://discourse.nixos.org/t/how-to-create-a-poetry2nix-environment-with-a-flake/23604/6)
* [johbo/pip2nix: Freeze pip-installable packages into Nix expressions [maintainer=@datakurre]](https://github.com/johbo/pip2nix)
* [ksenia-portu/flake/blob/master/flake.nix](https://github.com/ksenia-portu/flake/blob/master/flake.nix)
* [netrc FileNotFoundError for private PyPI server · Issue #1244 · nix-community/poetry2nix](https://github.com/nix-community/poetry2nix/issues/1244)
* [Nix Flake Template for poetry2nix](https://gitlab.com/nobodyinperson/flakes/-/tree/main/poetry2nix)
* [nix s3 store authentication](https://blog.eigenvalue.net/2023-nix-s3-store-authentication/)
* [nix-authenticated-fetches-from-gitlab-reading-about-related-work](https://discourse.nixos.org/t/nix-authenticated-fetches-from-gitlab-reading-about-related-work/35708)
* [nix-community/poetry2nix: Convert poetry projects to nix automagically [maintainer=@adisbladis]](https://github.com/nix-community/poetry2nix?tab%3Dreadme-ov-file%23mkpoetryeditablepackage)
* [nix-community/poetry2nix: Convert poetry projects to nix automagically [maintainer=@adisbladis]](https://github.com/nix-community/poetry2nix)
* [nix-community/poetry2nix: Convert poetry projects to nix automagically [maintainer=@adisbladis]](https://github.com/nix-community/poetry2nix)
* [nix-community/poetry2nix: Convert poetry projects to nix automagically [maintainer=@adisbladis]](https://github.com/nix-community/poetry2nix%23how-to-guides)
* [nix-community/poetry2nix](https://github.com/nix-community/poetry2nix)
* [nix-community/poetry2nix](https://github.com/nix-community/poetry2nix)
* [nix-community/poetry2nix/blob/4f8d61cd936f853242a4ce1fd476f5488c288c26/templates/app/flake.nix](https://github.com/nix-community/poetry2nix/blob/4f8d61cd936f853242a4ce1fd476f5488c288c26/templates/app/flake.nix)
* [nix-community/poetry2nix/blob/master/templates/app/flake.nix](https://github.com/nix-community/poetry2nix/blob/master/templates/app/flake.nix)
* [nix.dev](https://nix.dev/recipes/python-environment)
* [nixos.org](https://nixos.org/manual/nixpkgs/stable/%23fetchfromgitlab)
* [nixos.org](https://nixos.org/manual/nixpkgs/unstable/%23python)
* [NixOS/nixpkgs/blob/nixos-23.05/pkgs/development/python-modules/tensorflow/default.nix#L445](https://github.com/NixOS/nixpkgs/blob/nixos-23.05/pkgs/development/python-modules/tensorflow/default.nix#L445)
* [Nixpkgs - Python packaging, and development workflow. - YouTube](https://www.youtube.com/watch?v=jXd-hkP4xnU)
* [Nixpkgs 23.11 manual | Nix & NixOS](https://nixos.org/manual/nixpkgs/stable/%23chap-pkgs-fetchers)
* [nixpkgs/pkgs/development/interpreters/python/mk-python-derivation.nix at master · NixOS/nixpkgs](https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/interpreters/python/mk-python-derivation.nix)
* [nixpkgs/pkgs/development/python-modules/torch/default.nix at nixos-23.05 · NixOS/nixpkgs](https://github.com/NixOS/nixpkgs/blob/nixos-23.05/pkgs/development/python-modules/torch/default.nix#L414)
* [Package and deploy Python apps faster with Poetry and Nix - YouTube](https://www.youtube.com/watch?v=TbIHRHy7_JM)
* [pip on NixOS (Reddit)](https://www.reddit.com/r/NixOS/comments/121vv4r/how_do_i_use_pip_on_nixos/)
* [poetry config http-basic](https://github.com/python-poetry/poetry/issues/8443)
* [poetry2nix error · Issue #133 · tweag/jupyenv](https://github.com/tweag/jupyenv/issues/133)
* [Poetry2nix: mismatch cryptography sha256 but unable to modify · Issue #1337 · nix-community/poetry2nix](https://github.com/nix-community/poetry2nix/issues/1337)
* [poetry2nix/tests/editable/default.nix at master · nix-community/poetry2nix](https://github.com/nix-community/poetry2nix/blob/master/tests/editable/default.nix)
* [Private Repository Authentication not working for new nix-commands and flakes (pure mode) · Issue #1423 · nix-community/poetry2nix](https://github.com/nix-community/poetry2nix/issues/1423)
* [Python - NixOS Wiki](https://nixos.wiki/wiki/Python)
* [Python - NixOS Wiki](https://nixos.wiki/wiki/Python)
* [Python | nixpkgs](https://nix-community.github.io/dream2nix/guides/getting-started-python.html)
* [Python | nixpkgs](https://ryantm.github.io/nixpkgs/languages-frameworks/python/)
* [Python | nixpkgs](https://ryantm.github.io/nixpkgs/languages-frameworks/python/#python)
* [python-development-with-poetry-with-nix-supplying-python](https://discourse.nixos.org/t/python-development-with-poetry-with-nix-supplying-python/14736)
* [Question: How to specify runtime dependencies of python sub-dependencies · Issue #594 · nix-community/poetry2nix](https://github.com/nix-community/poetry2nix/issues/594)
* [rebeccaskinner.net](https://rebeccaskinner.net/posts/2018-05-09-python-and-nix.html)
* [tfmoraes/invesalius3_nix_develop](https://github.com/tfmoraes/invesalius3_nix_develop)
* [toraritte.github.io](https://toraritte.github.io/poetry-intro/)
* [Unable to use fetchgit on private git repo - Help - NixOS Discourse](https://discourse.nixos.org/t/unable-to-use-fetchgit-on-private-git-repo/24280)
* [Using Nix for Repeatable Python Environments | SciPy 2019 | Daniel Wheeler Enthought Enthought • • 2680 visualizaciones hace 3 años](https://www.youtube.com/watch?v=USDbjmxEZ_I)
* [Using Nix for Repeatable Python Environments | SciPy 2019 | Daniel Wheeler](https://www.youtube.com/watch?app=desktop&v=USDbjmxEZ_I)
* [using-a-private-gitlab-instance-with-fetchgit](https://discourse.nixos.org/t/using-a-private-gitlab-instance-with-fetchgit/28013/3)
* [walkthrough 1](https://www.youtube.com/watch?v=XfqJulSAPBQ&t=483s&pp=ygUKcG9ldHJ5Mm5peA%3D%3D)
* [walkthrough 2](https://www.youtube.com/watch?v=XzxvChwMRVY&pp=ygUKcG9ldHJ5Mm5peA%3D%3D)
* [What if the source requires authentification?](https://www.phind.com/search?cache%3Dsosi2xj2u74wie4ci17udny0)
python * fetch credentials provider [github.com](https://github.com/NixOS/nix/issues/8635)
* {python and more} [nix-community/dream2nix/tree/main/examples](https://github.com/nix-community/dream2nix/tree/main/examples)
* {python auth} [Peter Kolloch - Blog - Nix: Authenticated Fetches from GitLab - Reading about Related Work](https://blog.eigenvalue.net/2023-nix-fetch-with-authentication/)

### Nix Colors and Ricing

* {colors} [Nix-colors Guide | Declaratively Rice Your Linux Desktop](https://www.youtube.com/watch?v=jO2o0IN0LPE&pp=ygUQbml4IGhvbWUgbWFuYWdlcg%3D%3D) 
* {rice} [danth.github.io](https://danth.github.io/stylix/) 

### Nvidia, Cuda,  OpenGL, etc

* [/search?client=firefox-b-d&q=nixOS+on+tuxedo+with+gpu](https://www.google.com/search?client=firefox-b-d&q=nixOS+on+tuxedo+with+gpu)
* [accessing-gpus-inside-a-nix-generated-docker-container](https://discourse.nixos.org/t/accessing-gpus-inside-a-nix-generated-docker-container/21122)
* [app.cachix.org](https://app.cachix.org/cache/cuda-maintainers#pull)
* [creating-a-cuda-enabled-development-environment-for-machine-learning-on-nixos](https://discourse.nixos.org/t/creating-a-cuda-enabled-development-environment-for-machine-learning-on-nixos/30637)
* [CUDA - NixOS Wiki](https://nixos.wiki/wiki/CUDA)
* [cuda-maintainers cachix](https://app.cachix.org/cache/cuda-maintainers)
* [do-gui-applications-not-work-on-non-nixos-using-nixpkgs-only](https://discourse.nixos.org/t/do-gui-applications-not-work-on-non-nixos-using-nixpkgs-only/19070/16)
* [gpu-enabled-docker-containers-in-nixos](https://discourse.nixos.org/t/gpu-enabled-docker-containers-in-nixos/23870)
* [nix-community/nixGL](https://github.com/nix-community/nixGL)
* [nixcfg/mixins/nvidia.nix at cdd9929d5d36ce5b4d64cf80bdeb1df3f2cba332 · colemickens/nixcfg](https://github.com/colemickens/nixcfg/blob/cdd9929d5d36ce5b4d64cf80bdeb1df3f2cba332/mixins/nvidia.nix)
* [nixGL/all.nix at main · guibou/nixGL · GitHub](https://github.com/guibou/nixGL/blob/main/all.nix)
* [nixos.wiki](https://nixos.wiki/wiki/CUDA)
* [NixOS/nixos-hardware](https://github.com/NixOS/nixos-hardware)
* [NixOS/nixpkgs/blob/master/pkgs/test/cuda/cuda-library-samples/generic.nix](https://github.com/NixOS/nixpkgs/blob/master/pkgs/test/cuda/cuda-library-samples/generic.nix)
* [Nixpkgs with OpenGL on non-NixOS - NixOS Wiki](https://nixos.wiki/wiki/Nixpkgs_with_OpenGL_on_non-NixOS)
* [nixpkgs/4.x.nix at nixos-22.11 · NixOS/nixpkgs](https://github.com/NixOS/nixpkgs/blob/nixos-22.11/pkgs/development/libraries/opencv/4.x.nix#L371)
* [nixpkgs/pkgs/test/cuda/cuda-library-samples/generic.nix at 634141959076a8ab69ca2cca0f266852256d79ee · NixOS/nixpkgs · GitHub](https://github.com/NixOS/nixpkgs/blob/634141959076a8ab69ca2cca0f266852256d79ee/pkgs/test/cuda/cuda-library-samples/generic.nix)
* [numtide/nix-gl-host](https://github.com/numtide/nix-gl-host)
* [Nvidia - NixOS Wiki](https://nixos.wiki/wiki/Nvidia)
* [nvidia-docker-seems-not-working](https://discourse.nixos.org/t/nvidia-docker-seems-not-working/26665)
* [Share your Data Science stack in Nixpkgs : NixOS](https://www.reddit.com/r/NixOS/comments/z95r4p/share_your_data_science_stack_in_nixpkgs/)
* [tensorflow-gpu-keras-in-a-nix-shell](https://discourse.nixos.org/t/tensorflow-gpu-keras-in-a-nix-shell/8692)
* [Update of nixGL: more robust OpenGL support for intel / nvidia / nvidia (optimus) on non-nixOS distribution. : NixOS](https://www.reddit.com/r/NixOS/comments/7y9t0q/update_of_nixgl_more_robust_opengl_support_for/)
* [using-nvidia-container-runtime-with-containerd-on-nixos](https://discourse.nixos.org/t/using-nvidia-container-runtime-with-containerd-on-nixos/27865)
* [What are the options for hardware.nvidia.package? (docs seem out-of-date) : r/NixOS](https://www.reddit.com/r/NixOS/comments/or7pvq/what_are_the_options_for_hardwarenvidiapackage/)
* ds [nixos.wiki](https://nixos.wiki/wiki/Tensorflow)
* nvidia ml [/r/NixOS/comments/tzlunt/deep_learning_on_nixos/](https://www.reddit.com/r/NixOS/comments/tzlunt/deep_learning_on_nixos/)
* nvidia docker [sebastian-staffa.eu](https://sebastian-staffa.eu/posts/nvidia-docker-with-nix/)
* nvidia docker [github.com](https://github.com/suvash/nixos-nvidia-cuda-python-docker-compose)
* nvidia docker [/search?client=firefox-b-d&q=nvidia+docker+container+on+nixos#ip=1](https://www.google.com/search?client%3Dfirefox-b-d%26q%3Dnvidia%2Bdocker%2Bcontainer%2Bon%2Bnixos%23ip%3D1)
* nvidia [What's a legacy driver? | NVIDIA](https://www.nvidia.com/en-us/drivers/unix/legacy-gpu/)
* nvidia [Syllo/nvtop: GPUs process monitoring for AMD, Intel and NVIDIA](https://github.com/Syllo/nvtop%23gpu-support)
* nvidia [Impossible to initialize nvidia nvml : Driver/library version mismatch · Issue #98328 · NixOS/nixpkgs](https://github.com/NixOS/nixpkgs/issues/98328)
* cuda [gist.github.com](https://gist.github.com/ChadSki/926e5633961c9b48131eabd32e57adb2) nix with cuda

### SOPS

* [video](https://www.youtube.com/watch?v%3DG5f6GC7SnhU)
* sops [konradmalik.com](https://konradmalik.com/posts/2023/02/sops-nix-simple-secrets-management-for-nix/)
* [github.imold.wang](https://github.imold.wang/lucidph3nx/nvim-sops)
* [github.com](https://github.com/Mic92/sops-nix)
* [blog.gitguardian.com](https://blog.gitguardian.com/a-comprehensive-guide-to-sops/)
* [The SOPS Way: The Only Way to Keep Your Secrets Safe in Git | by Seifeddine Rajhi | Medium](https://medium.com/@seifeddinerajhi/the-sops-way-the-only-way-to-keep-your-secrets-safe-in-git-4a17e83ef6c6)
* [getting nixos to keep a secret](https://bmcgee.ie/posts/2022/11/getting-nixos-to-keep-a-secret/)
* [konradmalik.com](https://konradmalik.com/posts/2023/02/sops-nix-simple-secrets-management-for-nix/)
* [NixOS Secrets Management | SOPS-NIX - YouTube](https://www.youtube.com/watch?v%3DG5f6GC7SnhU)

## Dev Env

* [Building reproducible Development environment | by Ion Mudreac | Medium](https://mudrii.medium.com/building-reproducible-development-environment-b1d4fb51a302)
* [cachix/devenv: Fast, Declarative, Reproducible, and Composable Developer Environments](https://github.com/cachix/devenv)
* [Dev Environment Setup With Nix on MacOS | Mathias Polligkeit](https://www.mathiaspolligkeit.com/dev/exploring-nix-on-macos/)
* [Development environment with nix-shell - NixOS Wiki](https://nixos.wiki/wiki/Development_environment_with_nix-shell)
* [devenv rewrite in rust](https://devenv.sh/blog/2024/03/20/devenv-10-rewrite-in-rust/%23whats-new)
* [Devenv.sh: Fast and reproducible developer environments using Nix | Hacker News](https://news.ycombinator.com/item?id=33655542)
* [devenv.sh](http://devenv.sh)
* [devenv.sh](https://devenv.sh/pre-commit-hooks/)
* [devshells nix4noobs](https://nix4noobs.com/flakes/devshells/)
* [direnv/direnv/wiki/Nix](https://github.com/direnv/direnv/wiki/Nix)
* [getfleek.dev](https://getfleek.dev/)
* [haseebmajid.dev](https://haseebmajid.dev/posts/2023-10-26-how-to-setup-a-go-development-shell-with-nix-flakes/)
* [haslersn](https://github.com/haslersn/any-nix-shell) - fish, xonsh, zsh support for nix-run
* [hhoeflin.github.io](https://hhoeflin.github.io/blog/devtools/using_nix/)
* [how-are-you-keeping-devshell-dependencies-live-in-store](https://discourse.nixos.org/t/how-are-you-keeping-devshell-dependencies-live-in-store/16730/2)
* [jpetazzo.github.io](https://jpetazzo.github.io/2020/04/01/quest-minimal-docker-images-part-3/)
* [juspay/nix-dev-home: A](https://github.com/juspay/nix-dev-home) [home-manager](https://github.com/juspay/nix-dev-home) [template providing useful tools & settings for Nix-based development (macOS & Linux supported)](https://github.com/juspay/nix-dev-home)
* [lorri intro](https://www.tweag.io/blog/2019-03-28-introducing-lorri/)
* [minimal nix development environment](https://cbailey.co.uk/posts/a_minimal_nix_development_environment_on_wsl)
* [mjones.network](https://mjones.network/articles/declarative-desktop-env-config-with-nix.html)
* [mtlynch.io](https://mtlynch.io/notes/nix-dev-environment/)
* [myme.no - NixOS: The Ultimate Dev Environment?](https://myme.no/posts/2022-01-16-nixos-the-ultimate-dev-environment.html)
* [nix als container-ersatz](https://www.golem.de/news/redis-cloud-ki-javascript-nginx-ersatz-in-rust-und-container-ersatz-mit-nix-2403-183524.html)
* [Nix Dev Environments | Declare Your Coding Projects - YouTube](https://www.youtube.com/watch?v%3DyQwW8dkuHqw%26t%3D1s)
* [Nix-ify your environment - Jon Simpson](https://jonsimpson.ca/nix-ify-your-environment/)
* [nix-shell](https://unix.stackexchange.com/questions/741682/how-to-pin-a-package-version-with-nix-shell)
* [NixOS can automatically run non-installed programs on typing their name : r/NixOS](https://www.reddit.com/r/NixOS/comments/6a1z7f/nixos_can_automatically_run_noninstalled_programs/)
* [nixos.wiki](https://nixos.wiki/wiki/NixOS_Containers)
* [Say Goodbye to Containers - Ephemeral Environments with Nix Shell - YouTube](https://www.youtube.com/watch?v%3D0ulldVwZiKA)
* [tmp.bearblog.dev](https://tmp.bearblog.dev/minimal-containers-using-nix/)
* [tonyfinn.com](https://tonyfinn.com/blog/nix-from-first-principles-flake-edition/nix-8-flakes-and-developer-environments/)
* devenv [news.ycombinator.com](https://news.ycombinator.com/item?id%3D33655542)
* nix and shellls -a /etc/skel [nixos.wiki](https://nixos.wiki/wiki/Command_Shell)
* [Getting started with Nix Flakes and devshell](https://yuanwang.ca/posts/getting-started-with-flakes.html)
* [Julow/nix-workspaces: Reproducible workspaces using Nix modules.](https://github.com/Julow/nix-workspaces)

## YouTube Channels*

* [/@jonringer117](https://www.youtube.com/@jonringer117) (Nix channel)*
* [tweag.io](https://www.tweag.io/)
* [Tweag - YouTube](https://www.youtube.com/@tweag) 
* [Determinate Systems](https://determinate.systems/)
* [Determinate Systems](https://determinate.systems/#blog)
* [nix.ug | Nix/NixOS User Group Directory](https://nix.ug/)  → [chaos-darmstadt.de](https://www.chaos-darmstadt.de/hackspace/)
* [primamateria.github.io](https://primamateria.github.io/blog/)
* [numtide](https://github.com/numtide)
* [nix-community](https://github.com/nix-community)
* [matthewrhone.dev](https://matthewrhone.dev/) *[ Hi, I'm flyx.](https://flyx.org/)
* [srid.ca](https://srid.ca/-/all)
* [kamadorueda](https://github.com/kamadorueda)
* [myme.no](https://myme.no/)
* [git.sr.ht](https://git.sr.ht/~trevdev/)
* [drakerossman.com](https://drakerossman.com/blog)
* [the-nix-way](https://github.com/the-nix-way)  [nix.ug | Nix/NixOS User Group Directory](https://nix.ug/)
* [cachix](https://github.com/cachix)  [drakerossman.com](https://drakerossman.com/blog)
* [figsoda](https://github.com/figsoda)
* [nixcloud/](https://github.com/nixcloud/)
* [Chris McDonough](https://www.youtube.com/playlist?list=PLa01scHy0YEnsvjvMNNk-JSvTdL_ivsml)
* [garnix.io](https://garnix.io/)

## Next Steps

* [nixos.org](https://nixos.org/download.html#nixos-iso) try install on Darlene -> first remember password, then learn about nom-graphical installation for nixos
* debug nixGL alacritty
* debug nyxt under nix
* set up Julia with Nix and make contributions -
* make Julia Plots work with Nix -
* install, understand, and use Nix
* install NixOS on Allison, eventually also on Betsy

## Config

* {keybinds} [Move keyboard settings to home-manager · edde4a11d5 - localhost - code.dumpstack.io](https://code.dumpstack.io/infra/localhost/commit/edde4a11d52394d87c9bbd61dcfdd172a7ea1de0#diff-dd9078c2c684f713290b9f17802a6d38970bea46)

## Tools and Software SORT -----------------------------------------------------------------------------------------------------------------------------------------------------

## Videos

* [/@ChrisMcDonough/playlists](https://www.youtube.com/@ChrisMcDonough/playlists)

## Nix language

* [Nix Language Explained](https://www.youtube.com/watch?v=UgrwoAGSPOQ&pp=ygUMbml4IGxhbmd1YWdl)
* [NixOS Introduction: Basics of Nix Language Explained](https://www.youtube.com/watch?v=cyPdh6gu2sw&pp=ygUMbml4IGxhbmd1YWdl)
* [Informal intro to the Nix language, derivations and nixpkgs](https://www.youtube.com/watch?v=9DJtHIpdp0Y&t=132s&pp=ygUMbml4IGxhbmd1YWdl)
* [Nix Language Overview](https://www.youtube.com/watch?v=eCapIx9heBw&pp=ygUMbml4IGxhbmd1YWdl)
* [A Gentle Introduction to Nix](https://www.youtube.com/watch?v=gUjvnZ9ZwMs&pp=ygUMbml4IGxhbmd1YWdl)
* [Nix - The Best Package Manager](https://www.youtube.com/watch?v=BwEIXIjLTNs&t=270s&pp=ygUFTml4T1M%3D)
* [**Beginner’s Guide to Nix Playlist](https://www.youtube.com/playlist?list=PLnlyQqQLJLnJqZzJgcsUfftdGApjdFZPV)
* [Getting Started with Nix](https://www.youtube.com/watch?v=xXlCcdPz6Vc&pp=ygUQSG93IHRvIExlYXJuIE5peA%3D%3D)
* [NixOS Introduction: Basics of Nix Language Explained**](https://www.youtube.com/watch?v=cyPdh6gu2sw&pp=ygUQSG93IHRvIExlYXJuIE5peA%3D%3D)
* [How to get started with Nix as a Rust developer - YouTube](https://www.youtube.com/watch?v=tv9s4jhdUpU)
* [The Secret of Nix - YouTube](https://www.youtube.com/watch?v=sSn1svY14Ds)
* [Getting Started with Nix - YouTube](https://www.youtube.com/watch?v=xXlCcdPz6Vc&t=1351s)
* [Getting Started with Nix](https://www.youtube.com/watch?v=xXlCcdPz6Vc)
* ( ) [[RFC 0137] Nix language versioning by fricklerhandwerk · Pull Request #137 · NixOS/rfcs](https://github.com/NixOS/rfcs/pull/137)
* ( ) [2023-nix-developer-dialogues-live-stream](https://discourse.nixos.org/t/2023-nix-developer-dialogues-live-stream/35386)
* ( ) [Add missing 'nix profile' subcommands by edolstra · Pull Request #5249 · NixOS/nix](https://github.com/NixOS/nix/pull/5249)
* ( ) [Alternative language - NixOS Discourse](https://discourse.nixos.org/t/alternative-language/5218)
* ( ) [Alternative language - NixOS Discourse](https://discourse.nixos.org/t/alternative-language/5218/10)
* ( ) [elco Dolstra - The Evolution of Nix (SoN2022 - public lecture series)](https://www.youtube.com/watch?v=h8hWX_aGGDc&t=2900s)
* ( ) [How to (partially) compensate for the lack of static typing / type annotations? - Help - NixOS Discourse](https://discourse.nixos.org/t/how-to-partially-compensate-for-the-lack-of-static-typing-type-annotations/40139)
* ( ) [how-to-partially-compensate-for-the-lack-of-static-typing-type-annotations](https://discourse.nixos.org/t/how-to-partially-compensate-for-the-lack-of-static-typing-type-annotations/40139)
* ( ) [issues](https://github.com/NixOS/nixpkgs/issues?q=is%3Aissue+is%3Aopen)
* ( ) [lib.options: NixOS / nixpkgs option handling | nixpkgs](https://ryantm.github.io/nixpkgs/functions/library/options/)
* ( ) [mkIf vs if / then - Help - NixOS Discourse](https://discourse.nixos.org/t/mkif-vs-if-then/28521)
* ( ) [Module system deep dive — nix.dev documentation](https://nix.dev/tutorials/module-system/module-system)
* ( ) [Nix Function to Validate Email Address - CodePal](https://codepal.ai/code-generator/query/5pPHhh0W/nix-function-validate-email)
* ( ) [Nix syntax for passing arguments to imported Modules - Help - NixOS Discourse](https://discourse.nixos.org/t/nix-syntax-for-passing-arguments-to-imported-modules/31547/2)
* ( ) [nix-shorts/posts/inspecting-values-with-repl.md at master · alper/nix-shorts](https://github.com/alper/nix-shorts/blob/master/posts/inspecting-values-with-repl.md)
* ( ) [NixLang Wiki | NixLang.wiki](https://nixlang.wiki/)
* ( ) [nixos.org](https://nixos.org/manual/nix/stable/command-ref/conf-file.html)
* {nixlang CAS semantics} [github.com](https://github.com/NixOS/rfcs/pull/106)
* related to Nix 3.0 [github.com](https://github.com/NixOS/nix/issues/7701)
* {nixlang types} [typednix](https://typednix.dev/) [github link](https://github.com/hsjobeki/nix-types)

### Introduction

* {intro } [Learn how to use the Nix REPL effectively - Aldo Borrero](https://aldoborrero.com/posts/2022/12/02/learn-how-to-use-the-nix-repl-effectively/)
* {intro} [ariya.io](https://ariya.io/2020/05/nix-package-manager-on-ubuntu-or-debian)
* {intro} [chetanbhasin.com](https://chetanbhasin.com/articles/zero-to-nix-everything-i-know-about-nix-nixos)
* {intro} [christitus.com](https://christitus.com/nixos-explained/)
* {intro} [klaeufer/klaeufer/wiki/Nix-package-manager](https://github.com/klaeufer/klaeufer/wiki/Nix-package-manager)
* {intro} [Learn nix in Y Minutes](https://learnxinyminutes.com/docs/nix/)
* {intro} [nampdn/my-cheatsheet](https://github.com/nampdn/my-cheatsheet/blob/802116b02deffdf33e1e4dc63dff56b0b8998b71/nix/setup-nix.md?plain%3D1%23L490)
* {intro} [Nix package manager · klaeufer/klaeufer Wiki](https://github.com/klaeufer/klaeufer/wiki/Nix-package-manager)
* {intro} [Nix to Debian phrasebook - NixOS Wiki](https://nixos.wiki/wiki/Nix_to_Debian_phrasebook)
* {intro} [NixOS - Wikipedia](https://en.wikipedia.org/wiki/NixOS)
* {intro} [Quick Start - Nix Reference Manual](https://nixos.org/manual/nix/stable/quick-start.html)

## NixOS

* [NixOS is Mindblowing](https://www.youtube.com/watch?v=fuWPuJZ9NcU&pp=ygUFTml4T1M%3D)
* [NixOS in 60 seconds](https://www.youtube.com/watch?v=Ukglm5KJFa8&pp=ygUFTml4T1M%3D)
* [NixOS beginner guide](https://www.youtube.com/watch?v=bjTxiFLSNFA&t=1s&pp=ygUFTml4T1M%3D)
* [I left NixOS, here's why.](https://www.youtube.com/watch?v=tTYgh8TU9oc&pp=ygUFTml4T1M%3D)
* [NixOS gaming | best DE and Linux distro](https://www.youtube.com/watch?v=DP-3E1FaBfo&pp=ygUFTml4T1M%3D)
* [NixOS Setup Guide - Configuration / Home-Manager / Flakes](https://www.youtube.com/watch?v=AGVXJ-TIv3Y&t=5640s&pp=ygULTml4T1Mgc2V0dXA%3D)
* ["Unlock the Power of NixOS: The Ultimate Step-by-Step Guide to Effortless Installation!"](https://www.youtube.com/watch?v=rc2bt3WMw8s&pp=ygULTml4T1Mgc2V0dXA%3D)
* [First Time NixOS Install with Customization](https://www.youtube.com/watch?v=_Z32SYFbxpw&pp=ygULTml4T1Mgc2V0dXA%3D)
* [NixOS Has One BIG Problem](https://www.youtube.com/watch?v=i6wSn8OlBNc&t=411s&pp=ygUFTml4T1M%3D)
* [NixOS quick-n-dirty manual install](https://www.youtube.com/watch?v=1nkitmgCHfA&t=537s&pp=ygULTml4T1Mgc2V0dXA%3D)
* [NixOS Intro - Installation and basic usage](https://www.youtube.com/watch?v=9fWrxmEYGAs&pp=ygULTml4T1Mgc2V0dXA%3D)
* [NixOS beginner guide](https://www.youtube.com/watch?v=bjTxiFLSNFA&t=1s&pp=ygULTml4T1Mgc2V0dXA%3D)
* [NixOS Is The Power User Distro (Now With An Easy Installer!)](https://www.youtube.com/watch?v=ck4J2Faa7Fc&pp=ygULTml4T1Mgc2V0dXA%3D)
* [NixOS : The HYPE is Real ! Everything You NEED to Know (NEW!)](https://www.youtube.com/watch?v=BVDNByTMOp0&pp=ygUQSG93IHRvIExlYXJuIE5peA%3D%3D)
* [First Time NixOS Install with Customization - YouTube](https://www.youtube.com/watch?v=_Z32SYFbxpw)
* [NixOS Config - Autologin - Flatpak - Fonts - Polkit - Release Upgrade - YouTube](https://www.youtube.com/watch?v=IRRtk320j2A)
* [A First Look At NixOS 23.05 - YouTube](https://www.youtube.com/watch?v=2ShTNNkduLk)
* [NixOS Introduction - Nix Flakes](https://www.youtube.com/watch?v=DXz3FJszfo0)
* [NixOS Flake Tour](https://www.youtube.com/watch?v=ARjAsEJ9WVY&t=165s)
* [Beginners Guide to Nix EP1: Flakes](https://www.youtube.com/watch?v=IrxCiNnXG4M&t=60s)
* [NixOS beginner guide - YouTube](https://www.youtube.com/watch?v=bjTxiFLSNFA&t=2s)
* [NixOS in 60 seconds - YouTube](https://www.youtube.com/watch?v=Ukglm5KJFa8)
* [Nix - The Best Package Manager](https://youtu.be/BwEIXIjLTNs)
* [Dieses OS ist eigentlich ein Paketmanager - NixOS 21.11 - #sonntagsOS - 19](https://youtu.be/CQMU3kSRhLU)
* [Jake Hamilton NixOS Playlist](https://www.youtube.com/playlist?list=PLCy0xwW0SDST7VMInFJ4NIwG_SW0yO59y)

## Nix/NixOS in the media

* [Debian 12, openSUSE 15.5, NixOS, Huge Steam Update & more Linux news! - YouTube](https://www.youtube.com/watch?v=YojPjjavHbs)
* [Dieses OS ist eigentlich ein Paketmanager - NixOS 21.11](https://www.youtube.com/watch?v=CQMU3kSRhLU)
* [Looking at NixOS live on camera! - YouTube](https://www.youtube.com/watch?v=1KKrjic7YVQ)
* {media} [DistroWatch.com: NixOS](https://distrowatch.com/table.php?distribution%3Dnixos)
* {media} [focusonlinux.podigee.io](https://focusonlinux.podigee.io/54-die-fabelhafte-welt-von-nix) → [blog.binaergewitter.de](https://blog.binaergewitter.de/2017/09/24/binaergewitter-spezial-7-nixos)
* {media} [hn thread](https://news.ycombinator.com/item?id%3D30057287) curse of nixos
* {media} [hn thread](https://news.ycombinator.com/item?id%3D30917809)
* {media} [hn thread](https://news.ycombinator.com/item?id%3D35208402)
* {media} [hn thread](https://news.ycombinator.com/item?id%3D37105524)
* {media} [Honestly - how painful was it to learn and get working? And what limitations/nig... | Hacker News](https://news.ycombinator.com/item?id=27369920)
* {media} [willghatch.net/blog/2020/06/27/nixos-the-good-the-bad-and-the-ugly/](https://www.google.com/url?q=http://www.willghatch.net/blog/2020/06/27/nixos-the-good-the-bad-and-the-ugly/)
* {media} [I Have Fallen In 💕 Love With ❄️ NixOS | A Basic Introduction To NixOS - YouTube](https://www.youtube.com/watch?v%3DuS8Bx8nQots)
* {media} [I was WRONG! This is the BEST Package Manager. - YouTube](https://www.youtube.com/watch?v=Ty8C2B910EI)
* {media} [interview on nixos with industry](https://drakerossman.com/blog/interview-with-cto-of-listenfield-agtech-introducing-nixos-to-organization)
* {media} [Is NixOS Overrated?](https://www.youtube.com/watch?v%3DsSxGEHakfuc)
* {media} [itsfoss.com](https://itsfoss.com/why-use-nixos/)
* {media} [news/open-source-und-einstiegshuerden-macht-nix-2207-166501.html](https://www.golem.de/news/open-source-und-einstiegshuerden-macht-nix-2207-166501.html)
* {media} [Nix: An idea whose time has come | Hacker News](https://news.ycombinator.com/item?id=30384121)
* {media} [NixOS - Das Linux mit ganz eigenen Herangehensweisen. Grundkonzept vorgestellt - YouTube](https://www.youtube.com/watch?app%3Ddesktop%26v%3Dl3HnhX4tmZc)
* {media} [Nixos and Hyprland - Best Match Ever](https://www.youtube.com/watch?v=61wGzIv12Ds)
* {media} [NixOS vs Ubuntu | What are the differences?](https://stackshare.io/stackups/nixos-vs-ubuntu)
* {media} [NixOS: Everything Everywhere All At Once - YouTube](https://www.youtube.com/watch?v%3DCwfKlX3rA6E)
* {media} [NixOS: the good, the bad, and the ugly](https://www.willghatch.net/blog/2020/06/27/nixos-the-good-the-bad-and-the-ugly/)
* {media} [On Replacing Ubuntu with NixOS (part 1)](https://stesie.github.io/2016/08/nixos-pt1)
* {media} [Podcast: Into the Nix Ecosystem](https://open.spotify.com/episode/5jPtQqG5LO9zBV1HtWkOgX?si=n4FavA9wTVylWPdajA32qA&nd=1)
* {media} [ShipIt! Presents: How Shopify Uses Nix](https://shopify.engineering/shipit-presents-how-shopify-uses-nix)
* {media} [thenewstack.io](https://thenewstack.io/nixos-a-combination-linux-os-and-package-manager/)
* {media} [Ubuntu vs NixOS detailed comparison as of 2024 - Slant](https://www.slant.co/versus/2689/2700/~ubuntu_vs_nixos)
* {media} [Ubuntu vs. NixOS - NixOS Wiki](https://nixos.wiki/wiki/Ubuntu_vs._NixOS)
* {media} [linux-community.de](https://www.linux-community.de/ausgaben/linuxuser/2018/08/nix-neues/)
* {media} [linux-magazine.com](https://www.linux-magazine.com/Issues/2021/248/Nix-and-NixOS)

## Flakes

* {flake } [Novice Nix: Flake Templates · peppe.rs](https://peppe.rs/posts/novice_nix:_flake_templates/)
* [A Tour of Nix Flakes | Mattia Gheda](https://ghedam.at/a-tour-of-nix-flakes)
* [an-incremental-strategy-for-stabilizing-flakes](https://discourse.nixos.org/t/an-incremental-strategy-for-stabilizing-flakes/16323/5)
* [Beginners Guide to Nix EP1: Flakes - YouTube](https://www.youtube.com/watch?v%3DIrxCiNnXG4M%26t%3D61s)
* [blog/2020-05-25-flakes/](https://www.tweag.io/blog/2020-05-25-flakes/)
* [community.flake.parts](https://community.flake.parts/)
* [flake parts](https://flake.parts/)
* [improving-flakes](https://discourse.nixos.org/t/improving-flakes/12831/56)
* [Introducing Flake-Containers: A simple PoC](https://www.reddit.com/r/NixOS/s/7Ullw5lW4p)
* [introducing-flakehub](https://discourse.nixos.org/t/introducing-flakehub/32044)
* [jameswillia.ms](https://jameswillia.ms/posts/flake-line-by-line.html)
* [journal.platonic.systems](https://journal.platonic.systems/nix-flake-architecture-in-practice/)
* [Manage Nix Flake Inputs Like a Pro - YouTube](https://www.youtube.com/watch?v%3D4ZoBGlkMPWI)
* [nix flake - Nix Reference Manual](https://nixos.org/manual/nix/stable/command-ref/new-cli/nix3-flake.html%23flake-references)
* [nix flake lock - Nix Reference Manual](https://nixos.org/manual/nix/stable/command-ref/new-cli/nix3-flake-lock)
* [Nix Flakes Cheat Sheet - Vinícius Müller's blog](https://viniciusmuller.github.io/blog/nix-flakes-cheat-sheet.html)
* [Nix flakes explained - YouTube](https://www.youtube.com/watch?v%3DS3VBi6kHw5c%26t%3D3s)
* [Nix flakes explained](https://www.youtube.com/watch?v=S3VBi6kHw5c&t=3s&pp=ygUQbml4IGhvbWUgbWFuYWdlcg%3D%3D)
* [Nix Flakes, Part 1: An introduction and tutorial - Tweag](https://www.tweag.io/blog/2020-05-25-flakes/)
* [Nix Flakes: an Introduction - Xe Iaso - Xe's Blog](https://xeiaso.net/blog/nix-flakes-1-2022-02-21/)
* [Nix Flakes: Exposing and using NixOS Modules - Xe Iaso](https://xeiaso.net/blog/nix-flakes-3-2022-04-07/)
* [Nix from First Principles: Flake Edition - Tony Finn](https://tonyfinn.com/blog/nix-from-first-principles-flake-edition/)
* [nix journey part 1 - creating a flake](https://woile.dev/posts/nix-journey-part-1-creating-a-flake/)
* [nixos.org](https://nixos.org/manual/nix/stable/command-ref/new-cli/nix3-flake.html%23flake-references)
* [nixos.wiki](https://nixos.wiki/wiki/Flakes)
* [Practical Nix Flakes - DEV Community](https://dev.to/serokell/practical-nix-flakes-5e6p)
* [Practical Nix Flakes](https://serokell.io/blog/practical-nix-flakes)
* [samuel.dionne-riel.com](https://samuel.dionne-riel.com/blog/2023/09/06/flakes-is-an-experiment-that-did-too-much-at-once.html) read: [news.ycombinator.com](https://news.ycombinator.com/item?id=32374113)
* [tech.aufomm.com](https://tech.aufomm.com/my-nixos-journey-flakes/)
* [thiscute.world](https://thiscute.world/en/posts/nixos-and-flake-basics/)
* [Tips and Tricks for Nix Flakes | Ivan Petkov](https://ipetkov.dev/blog/tips-and-tricks-for-nix-flakes/)
* [tonyfinn.com](https://tonyfinn.com/blog/nix-from-first-principles-flake-edition/nix-8-flakes-and-developer-environments/)
flake * flakes explanation [reddit](https://www.reddit.com/r/NixOS/s/eq9BlQ1sRj)
* [First Steps with Nix - Building emacs](https://www.heinrichhartmann.com/posts/2021-08-08-nix-emacs/)
* [Flakes and Developer Environments (Nix From First Principles: Flake Edition #8) - Tony Finn](https://tonyfinn.com/blog/nix-from-first-principles-flake-edition/nix-8-flakes-and-developer-environments/)
* [Flakes aren't real and cannot hurt you: a guide to using Nix flakes the non-flake way - jade's www site](https://jade.fyi/blog/flakes-arent-real/)
* [Flakes video](https://www.youtube.com/watch?v%3DDXz3FJszfo0)
* [tweag/rfcs/blob/flakes/rfcs/0049-flakes.md](https://github.com/tweag/rfcs/blob/flakes/rfcs/0049-flakes.md)
* [You Should Use Flakes Right Away in NixOS! - YouTube](https://www.youtube.com/watch?v%3DACybVzRvDhs)
* [Beginners Guide to Nix EP1: Flakes](https://www.youtube.com/watch?v=IrxCiNnXG4M&t=61s&pp=ygUMbml4IGxhbmd1YWdl)
* [Nix flakes explained](https://www.youtube.com/watch?v=S3VBi6kHw5c&t=3s&pp=ygUKbml4IGZsYWtlcw%3D%3D)
* [Beginners Guide to Nix EP1: Flakes](https://www.youtube.com/watch?v=IrxCiNnXG4M&t=61s&pp=ygUKbml4IGZsYWtlcw%3D%3D)
* [You Should Use Flakes Right Away in NixOS!](https://www.youtube.com/watch?v=ACybVzRvDhs&pp=ygUKbml4IGZsYWtlcw%3D%3D)
* [NixCon2023 What Flakes needs (technically)](https://www.youtube.com/watch?v=UHhnG4rbvzo&pp=ygUKbml4IGZsYWtlcw%3D%3D)
* [Nix Flakes in Production: What, Why and How](https://www.youtube.com/watch?v=o1Y7rWrPEO8&pp=ygUKbml4IGZsYWtlcw%3D%3D)
* [NixOS Setup Guide - Configuration / Home-Manager / Flakes](https://www.youtube.com/watch?v=AGVXJ-TIv3Y&t=5640s&pp=ygUKbml4IGZsYWtlcw%3D%3D)
* [You Should Use Flakes Right Away in NixOS!](https://www.youtube.com/watch?v=ACybVzRvDhs&pp=ygUFTml4T1M%3D)
* [Matthew Croughan - Use flake.nix, not Dockerfile - MCH2022](https://www.youtube.com/watch?v=0uixRE8xlbY)
* [Intro to Flakes](https://youtu.be/K54KKAx2wNc)
* [Nix flakes explained](https://www.youtube.com/watch?v=S3VBi6kHw5c)

## Videos2

* [Streamline Your Linux Experience with Nix OS Deployment Tools! - YouTube](https://www.youtube.com/watch?v=qXBzpWIQwMY)
* [The Most Exciting Linux Distro! - YouTube](https://www.youtube.com/watch?v=GkjBMy5ZdG0)
* [NixOS 43: Overriding Packages That Are Within Attribute Sets - YouTube](https://www.youtube.com/watch?v=7a2Yladt0JI)
* [Hardware-Acceleration on NixOS super easy - YouTube](https://www.youtube.com/watch?v=xFsfTcFQY48)
* [Can you downgrade your Linux distro? - NixOS - YouTube](https://www.youtube.com/watch?v=fT3xjqZyacs)
* [ALASCA Tech-Talk #5: Nix and NixOS in Cloud IT - YouTube](https://www.youtube.com/watch?v=MnJnjn3QTGQ)
* [RisiOS das Internet Betriebssystem was Ubuntu und Linux Mint die Show stehlen könnte - YouTube](https://www.youtube.com/watch?v=xx66Ul7s9Yo)
* [I was WRONG! This is the BEST Package Manager. - YouTube](https://www.youtube.com/watch?v=Ty8C2B910EI)
* [NixOS - Reproduzierbares, deklaratives Linux angetestet](https://www.youtube.com/watch?v=DtXg3NoiSxM)
* [NixOS Is The Power User Distro (Now With An Easy Installer!)](https://www.youtube.com/watch?v=ck4J2Faa7Fc)
* [Build A Portable Development Environment With Nix Package Manager - YouTube](https://www.youtube.com/watch?v=70YMTHAZyy4&list=PL1C97G3GhlHdANMFUIXTcFr14R7b7EBj9)
* [Build A Portable Development Environment With Nix Package ...](https://www.youtube.com/watch?v=70YMTHAZyy4)
* [...](https://www.youtube.com/watch?v=qjq2wVEpSsA)
* [Nix Friday - poetry2nix part 1 - YouTube](https://www.youtube.com/watch?v=XfqJulSAPBQ)
* [The best of both worlds with Nix + Bazel](https://www.youtube.com/watch?v=dBru1MVKsfE&pp=ygUeRGV0ZXJtaW5pc3RpYyBzeXN0ZW1zIHdpdGggTml4)
* [Fast, correct, reproducible builds with Nix + Bazel](https://www.youtube.com/watch?v=2wI5J8XYxM8)
* [NixOS as Daily Driver?](https://www.youtube.com/watch?v=cjCFmpdarpg)
* [NixOS Installation Guide - YouTube](https://www.youtube-nocookie.com/embed/axOxLJ4BWmY?start=1642)
* [Paolo – NixOS | Lightning Talk Jugend hackt Berlin 2021](https://youtu.be/Xm2lsP7pnE4)
* [CTT on Nix](https://www.youtube.com/watch?v=Ty8C2B910EI)
* [...](https://www.youtube.com/watch?v=WwgSMgpX6TM)
* [NixOS beginner guide](https://www.youtube.com/watch?v=bjTxiFLSNFA&list=PLko9chwSoP-15ZtZxu64k_CuTzXrFpxPE)
* [Nix Dev Environments | Declare Your Coding Projects](https://www.youtube.com/watch?v=yQwW8dkuHqw)
* [Nix-powered Docker Containers](https://www.youtube.com/watch?v=5XY3K8DH55M)
* [Peering into the Land of Parentheses - Guix from the Nix Perspective (NixCon 2019)](https://www.youtube.com/watch?v=bDGzCXr6VYU)
* [Nixos and Hyprland - Best Match Ever](https://www.youtube.com/watch?v=61wGzIv12Ds&t=4s)
* [A Resource for Learning Nix](https://www.youtube.com/watch?v=Nvh7A3HA_4U)
* [NixOS: Sddm, Gtk, QT5 Simple Theming Guide](https://www.youtube.com/watch?v=m_6eqpKrtxk)
* [Introduction to nix env and nix shell](https://www.youtube.com/watch?v=eW8KU6h_ZNo)
* [Nix-powered Docker Containers - YouTube](https://www.youtube.com/watch?v=5XY3K8DH55M)
* [Nix From Nothing #1 | Let's Learn Nix & NixOS! - YouTube](https://www.youtube.com/watch?v=t8ydCYe9Y3M)
* [Nixos Install and Software Install - YouTube](https://www.youtube.com/watch?v=qVg5ZJNpiqQ)
* [Informal intro to the Nix language, derivations and nixpkgs - YouTube](https://www.youtube.com/watch?v=9DJtHIpdp0Y&t=132s)
* [Gabriella Gonzalez, "How to Write a Nix Derivation" - YouTube](https://www.youtube.com/watch?v=bbW6kgB5F2M)
* [NixOS: a sales pitch - YouTube](https://www.youtube.com/watch?v=2L2qHfNnXB4)
* [NIX OS: the BEST package manager on the MOST SOLID Linux distribution - YouTube](https://www.youtube.com/watch?v=DMQWirkx5EY)
* [The Secret of Nix - YouTube](https://www.youtube.com/watch?v=sSn1svY14Ds)
* [NixOS beginner guide - YouTube](https://www.youtube.com/watch?v=bjTxiFLSNFA)
* [yt [Tech Maid] Running Software On NixOS - YouTube](https://www.youtube.com/watch?v%3DUC2StObYQIc)
* [yt ?](https://youtu.be/G5f6GC7SnhU?si%3DhdXcvu9BgqSDQx1H)
* [yt ?](https://www.youtube.com/watch?v%3Dutoj6annRK0%26pp%3DygUSbml4b3MgaG9tZSBtYW5hZ2Vy)
* [yt ?](https://www.youtube.com/watch?v%3DNEbzVKkjXUg)
* [yt ?](https://www.youtube.com/watch?v%3DM7XSp-ubCy0%26pp%3DygUYbml4b3Mgb24gcmFzcGJlcnJ5IHBpIDQg)
* [yt ?](https://www.youtube.com/watch?v%3Dc447uYCePAo)
* [yt ?](https://www.youtube.com/watch?v%3D6L0H92-JdHA%26pp%3DygUYbml4b3Mgb24gcmFzcGJlcnJ5IHBpIDQg)
* [yt ?](https://www.youtube.com/watch?v%3D1ED9b7ERTzI%26pp%3DygUXaG93IHRvIHJlYWxseSBsZWFybiBOaXg%253D)
* {video} [Nix From Nothing #1 | Let's Learn Nix & NixOS! - YouTube](https://www.youtube.com/watch?v%3Dt8ydCYe9Y3M)
* {video} [NixOS Explained - YouTube](https://www.youtube.com/watch?v%3DtQ446LjIv7k)

## Miscellaneous / Specific Software*

* [Neovim Configuration in Nix: Unpacking Multiple Approaches - YouTube](https://www.youtube.com/watch?v=i68c6vZkSXc)
* [NixOS + Hyprland challenge comes to an end, My final thoughts - YouTube](https://www.youtube.com/watch?v=eb2Cvdu6F18)
* [NixOS with Hyprland - My setup and some thoughts](https://www.youtube.com/watch?v=THgo4nBJyg8&pp=ygULTml4T1Mgc2V0dXA%3D)
* [Nix vs Guix - YouTube](https://www.youtube.com/watch?v=S9V-pcTrdL8)
* [The Nix Hour #32 [extending nixpkgs lib and Nix builtins, Nix plugins] - YouTube](https://www.youtube.com/watch?v=-ohLh-QHc_A)

## Meta

* [nixos-users-against-mic-sponsorship.github.io/](https://nixos-users-against-mic-sponsorship.github.io/)
* {meta} [/r/voidlinux/comments/z8a727/how_do_you_guys_feel_about_flatpaks/](https://www.reddit.com/r/voidlinux/comments/z8a727/how_do_you_guys_feel_about_flatpaks/)
* {meta} [> Main reason for leaving was that Nix package maintainers have to heavily patch... | Hacker News](https://news.ycombinator.com/item?id=25030546)
* {meta} [2022-10-07-nix-team-meeting-minutes-3](https://discourse.nixos.org/t/2022-10-07-nix-team-meeting-minutes-3/22369)
* {meta} [2022-nix-survey-results](https://discourse.nixos.org/t/2022-nix-survey-results/18983)
* {meta} [Arch vs NixOS : linuxquestions](https://www.reddit.com/r/linuxquestions/comments/ryr45s/arch_vs_nixos/)
* {meta} [Is NixOS fundamentally a more secure OS? : NixOS](https://www.reddit.com/r/NixOS/comments/xbjei3/is_nixos_fundamentally_a_more_secure_os/)
* {meta} [nix-community-survey-2023-results](https://discourse.nixos.org/t/nix-community-survey-2023-results/33124)
* {meta} [nix-vs-language-package-manager](https://discourse.nixos.org/t/nix-vs-language-package-manager/7099/3)
* {meta} [NixOS interesting, but fatal flaws](https://www.youtube.com/watch?v=x6ip1cVVr7E) (good comments)
* {meta} [Open Letter](https://save-nix-together.org/)
* {meta} [Raw repository package counts - Repology](https://repology.org/repositories/packages)
* {meta} [security - How secure are the default repositories of Fedora, CentOS, and Debian? - Unix & Linux Stack Exchange](https://unix.stackexchange.com/questions/312410/how-secure-are-the-default-repositories-of-fedora-centos-and-debian)
* {meta} [Security - NixOS Wiki](https://nixos.wiki/wiki/Security)
* {meta} [security - Which linux distro's package repositories are secure and which are not? - Unix & Linux Stack Exchange](https://unix.stackexchange.com/questions/16251/which-linux-distros-package-repositories-are-secure-and-which-are-not?rq=1)
* {meta} [Upgrading Nix - Nix Reference Manual](https://nixos.org/manual/nix/stable/installation/upgrading)
* {meta} [Who uses NixOS? Who are you people? (And good-bye) : NixOS](https://www.reddit.com/r/NixOS/comments/rctpu9/who_uses_nixos_who_are_you_people_and_goodbye/)

## Nix Education

* [brainrake/nixos-tutorial](https://github.com/brainrake/nixos-tutorial)
* [Hacking Your First Package — nix-tutorial documentation](https://nix-tutorial.gitlabpages.inria.fr/nix-tutorial/first-package.html)
* [Nix for Startups (full course) - YouTube](https://www.youtube.com/watch?v%3DWJZgzwB3ziE)
* [An introduction to the Nix ecosystem](https://ghedam.at/15490/so-tell-me-about-nix)
* [HOW to REALLY learn NixOS - YouTube](https://www.youtube.com/watch?v%3D1ED9b7ERTzI)
* [how-to-package-my-software-in-nix-or-write-my-own-package-derivation-for-nixpkgs](https://unix.stackexchange.com/questions/717168/how-to-package-my-software-in-nix-or-write-my-own-package-derivation-for-nixpkgs/)
* [nixos for the confused - part v](https://cola-gang.industries/nixos-for-the-confused-part-v)
* [NixOS Live Coding: Using our Flake's Nixpkgs for Nix-Shell, Building Systems on GitHub Actions - YouTube](https://www.youtube.com/watch?v%3DTR0C76I59AI)
* [nixos-and-flakes.thiscute.world](https://nixos-and-flakes.thiscute.world/)
* [nixos-and-flakes.thiscute.world](https://nixos-and-flakes.thiscute.world/development/intro)
* [Writing your own NixOS modules for fun and (hopefully) profit - YouTube](https://www.youtube.com/watch?v%3DSzyuLVzS5Fg)
* Informal intro to the Nix language, derivations and nixpkgs - YouTube [video](https://www.youtube.com/watch?v=9DJtHIpdp0Y&t=132s&pp=2AGEAZACAcoFFm5peCBsYW5ndWFnZSB0dXRvcmlhbCA%3D)

## Blog Posts

* [...](https://blog.alper-celik.dev/posts/my-first-contributions-to-nixpkgs-and-open-source/)
* [determinate.systems](https://determinate.systems/posts/experimental-does-not-mean-unstable)
* [matrix.ai](https://matrix.ai/blog/developing-with-nix/)
* [Nix and NixOS for DevOps - inovex GmbH](https://www.inovex.de/de/blog/nix-and-nixos-for-devops/)
* [nix journey part 1](https://daniel-siepmann.de/nix-journey-part-1.html)
* [nix journey part 1](https://daniel-siepmann.de/nix-journey-part-1.html%23howIFinallyStartedWithNixNotNixos)
* [Some notes on using nix](https://jvns.ca/blog/2023/02/28/some-notes-on-using-nix/)
* [Your home in Nix](https://hugoreeves.com/posts/2019/nix-home/)
* [blog/nix-in-practice](https://www.slice.zone/blog/nix-in-practice)
* [blog/2022-08-04-tweag-and-nix-future/](https://www.tweag.io/blog/2022-08-04-tweag-and-nix-future/)
* [blog/2021-12-20-nix-2.4/](https://www.tweag.io/blog/2021-12-20-nix-2.4/)
* [blog/2020-09-10-nix-cas/](https://www.tweag.io/blog/2020-09-10-nix-cas/)
* [blog/2020-06-25-eval-cache/](https://www.tweag.io/blog/2020-06-25-eval-cache/)
* [blog post: patch a package source on nixos](https://drakerossman.com/blog/how-to-patch-a-package-source-on-nixos)
* [blog post: nixos install with luks](https://fictionbecomesfact.com/nixos-installation-luks)
* [blog post: my first contributions to nixpkgs and pen source](https://blog.alper-celik.dev/posts/my-first-contributions-to-nixpkgs-and-open-source/)
* [blog post: how I start nix](https://xeiaso.net/blog/how-i-start-nix-2020-03-08/)
* [blog post my nix workflow](https://bmcgee.ie/posts/2023/11/nix-my-workflow/)
* [blog post - nikiv - nix](https://wiki.nikiv.dev/package-managers/nix/)

## Forum

* [Guix seems interesting but I almost stopped reading when I read "Nix". For all t... | Hacker News](https://news.ycombinator.com/item?id=18908591)
* [NixOS Configuration File Organisation - Help - NixOS Discourse](https://discourse.nixos.org/t/nixos-configuration-file-organisation/19612/5)
* [what-do-i-need-to-know-to-use-nix-and-where-to-find-more-a-concise-overview-for-new-users](https://discourse.nixos.org/t/what-do-i-need-to-know-to-use-nix-and-where-to-find-more-a-concise-overview-for-new-users/41656)
* [where-did-you-get-stuck-in-the-nix-ecosystem-tell-me-your-story](https://discourse.nixos.org/t/where-did-you-get-stuck-in-the-nix-ecosystem-tell-me-your-story/31415)

## NixOS Manual

* [NixOS 24.05 manual | Nix & NixOS](https://nixos.org/manual/nixos/unstable/index.html%23sec-luks-file-systems)
* [NixOS 24.05 manual | Nix & NixOS](https://nixos.org/manual/nixos/unstable/%23sec-installation)
* [NixOS 23.11 manual | Nix & NixOS](https://nixos.org/manual/nixos/stable/index.html%23sec-writing-modules)
* [NixOS 23.11 manual | Nix & NixOS](https://nixos.org/manual/nixos/stable/%23sec-installing-from-other-distro)
* [NixOS 23.11 manual | Nix & NixOS](https://nixos.org/manual/nixos/stable/options%23opt-services.xserver.displayManager.autoLogin)
* [NixOS 23.11 manual | Nix & NixOS](https://nixos.org/manual/nixos/stable/index.html%23sec-changing-config)

## Tutorial

* [nix.dev tutorial](https://nix.dev/tutorials/first-steps/declarative-shell.html)
* [nix.dev tutorial](https://nix.dev/tutorials/first-steps/ad-hoc-shell-environments.html)
* [nix.dev tutorial](https://nix.dev/tutorials/first-steps/)
* [nix.dev tutorial](https://nix.dev/tutorials/%23tutorials)
* [nix.dev tutorial](https://nix.dev/guides/recipes/python-environment)

## Possible Nix Alternatives

* [Fedora Silverblue](https://docs.fedoraproject.org/en-US/fedora-silverblue/)
* [VanillaOS](https://vanillaos.org/)
* [Bedrock Linux](https://bedrocklinux.org/)
* [blendOS](https://blendos.co/)
* [EndlessOS](https://www.endlessos.org/)
* [...](...)
* [...](...)

## Garbage Collection

* [Deleting Old System Profiles - What am I Missing? : r/NixOS](https://www.reddit.com/r/NixOS/comments/unwip2/deleting_old_system_profiles_what_am_i_missing/)
* [Garbage Collection - Nix Reference Manual](https://nixos.org/manual/nix/stable/package-management/garbage-collection.html)
* [How do you delete old generations and gc them automatically? : r/NixOS](https://www.reddit.com/r/NixOS/comments/ejsdhb/how_do_you_delete_old_generations_and_gc_them/)
* [How to remove old system generations? - Help - NixOS Discourse](https://discourse.nixos.org/t/how-to-remove-old-system-generations/6648)
* [List and delete NixOS generations - Help - NixOS Discourse](https://discourse.nixos.org/t/list-and-delete-nixos-generations/29637)
* [nix-collect-garbage - Nix Reference Manual](https://nixos.org/manual/nix/stable/command-ref/nix-collect-garbage)
* [nix-store-gc-equivalent-to-delete-older-than](https://discourse.nixos.org/t/nix-store-gc-equivalent-to-delete-older-than/31767/2)
* [NixOS Generations Trimmer - NixOS Wiki](https://nixos.wiki/wiki/NixOS_Generations_Trimmer)
* [nixos.org](https://nixos.org/guides/nix-pills/garbage-collector)

## Installation

* {install } [Installing NixOS with Full Disk Encryption](https://gist.github.com/mara-schulke/43e2632ce73d94028f50f438037c1578)
* {install} [1. Get Nix running on your system](https://zero-to-nix.com/start/install)
* {install} [CT NixOS Install Video](https://www.youtube.com/watch?v%3D_Z32SYFbxpw)
* {install} [Download Nix / NixOS | Nix & NixOS](https://nixos.org/download)
* {install} [Full Disk Encryption - NixOS Wiki](https://nixos.wiki/wiki/Full_Disk_Encryption)
* {install} [install NIX package manager on Alpine Linux · GitHub](https://gist.github.com/danmack/b76ef257e0fd9dda906b4c860f94a591)
* {install} [install-nixos-from-existing-linux](https://discourse.nixos.org/t/install-nixos-from-existing-linux/6856/14)
* {install} [Installation error on Ubuntu 22.04: ".../libnixstore.so: undefined symbol: sqlite3_error_offset" : Nix](https://www.reddit.com/r/Nix/comments/117m3nw/installation_error_on_ubuntu_2204_libnixstoreso/)
* {install} [Is it possible to morph Debian into NixOS? : r/NixOS](https://www.reddit.com/r/NixOS/comments/140tvls/is_it_possible_to_morph_debian_into_nixos/)
* {install} [is_it_possible_to_morph_debian_into_nixos/](https://www.reddit.com/r/NixOS/comments/140tvls/is_it_possible_to_morph_debian_into_nixos/)
* {install} [nix on ubuntu getting started - Google Search](https://www.google.com/search?client=firefox-b-d&q=nix+on+ubuntu+getting+started)
* {install} [nix-community/nixos-anywhere: install nixos everywhere via ssh [maintainer=@numtide]](https://github.com/nix-community/nixos-anywhere)
* {install} [NixOs native flake deployment with LUKS drive encryption and LVM | by Ion Mudreac | Medium](https://mudrii.medium.com/nixos-native-flake-deployment-with-luks-drive-encryption-and-lvm-b7f3738b71ca)
* {install} [NixOS Package (Install/Uninstall) Guide | Matthew Rhone dot Dev](https://matthewrhone.dev/nixos-package-guide)
* {install} [nixos.org](https://nixos.org/manual/nixos/stable/index.html#sec-installation)
* {install} [reflexivereflection.com](https://reflexivereflection.com/posts/2015-02-28-deb-installation-nixos.html)
* {install} [rootless nixos on alpine](https://adnab.me/blog/2023/2023-04-02-rootless-nixos-alpine.html)
* {install} [tinkering.xyz](https://tinkering.xyz/installing-nixos/)
* {install luks} [NixOS: Full disk encryption with TPM and Secure Boot ? : r/NixOS](https://www.reddit.com/r/NixOS/comments/xrgszw/nixos_full_disk_encryption_with_tpm_and_secure/)

## NixOS Software Search

* [NixOS Search - Packages - tre](https://search.nixos.org/packages?channel%3Dunstable%26show%3Dtre-command%26from%3D0%26size%3D50%26sort%3Drelevance%26type%3Dpackages%26query%3Dtre)
* [NixOS Search - Packages - spacefm](https://search.nixos.org/packages?channel%3Dunstable%26from%3D0%26size%3D50%26sort%3Drelevance%26type%3Dpackages%26query%3Dspacefm)
* [NixOS Search - Packages - rpds](https://search.nixos.org/packages?channel%3D23.11%26from%3D0%26size%3D50%26sort%3Drelevance%26type%3Dpackages%26query%3Drpds)
* [NixOS Search - Packages - neovim](https://search.nixos.org/packages?channel%3Dunstable%26from%3D0%26size%3D50%26sort%3Drelevance%26type%3Dpackages%26query%3Dneovim)
* [NixOS Search - Packages - lem](https://search.nixos.org/packages?channel%3D23.11%26from%3D0%26size%3D50%26sort%3Drelevance%26type%3Dpackages%26query%3Dlem)
* [NixOS Search - Packages - lazy-nvim](https://search.nixos.org/packages?channel%3D23.11%26show%3DvimPlugins.lazy-nvim%26from%3D0%26size%3D50%26sort%3Drelevance%26type%3Dpackages%26query%3Dlazy-nvim)
* [NixOS Search - Packages - lazy-lsp](https://search.nixos.org/packages?channel%3D23.11%26show%3DvimPlugins.lazy-lsp-nvim%26from%3D0%26size%3D50%26sort%3Drelevance%26type%3Dpackages%26query%3Dlazy-lsp)
* [NixOS Search - Packages - keymap-amend](https://search.nixos.org/packages?channel%3D23.11%26from%3D0%26size%3D50%26sort%3Drelevance%26type%3Dpackages%26query%3Dkeymap-amend)
* [NixOS Search - Packages - jira](https://search.nixos.org/packages?channel%3D23.11%26show%3Djira-cli-go%26from%3D0%26size%3D50%26sort%3Drelevance%26type%3Dpackages%26query%3Djira)
* [NixOS Search - Packages - harpoon](https://search.nixos.org/packages?channel%3D23.11%26from%3D0%26size%3D50%26sort%3Drelevance%26type%3Dpackages%26query%3Dharpoon)
* [NixOS Search - Packages - cosmic](https://search.nixos.org/packages?channel%3D23.11%26show%3Dcosmic-edit%26from%3D0%26size%3D50%26sort%3Drelevance%26type%3Dpackages%26query%3Dcosmic)
* [NixOS Search - Options - nix.gc](https://search.nixos.org/options?channel%3D23.11%26from%3D0%26size%3D50%26sort%3Drelevance%26type%3Dpackages%26query%3Dnix.gc)

## Home Manager

How to install and nconfigure browser extension with Nix and Home Manager?
* {hw} [TUXEDO Devices - NixOS Wiki](https://nixos.wiki/wiki/TUXEDO_Devices)
* {hm } [How to manage user configuration with flakes without home manager on nixos-21.05? - Help - NixOS Discourse](https://discourse.nixos.org/t/how-to-manage-user-configuration-with-flakes-without-home-manager-on-nixos-21-05/16102/11)
* → [search.nixos.org](https://search.nixos.org/packages?channel=22.11&from=0&size=50&sort=relevance&type=packages&query=gnome+tweaks)
* → need to install themes in Nix as well → how to install themes in Nix? Where are my themes anyway?
* → use lxappearances (see [here](https://www.reddit.com/r/NixOS/comments/6j9zlj/how_to_set_up_themes_in_nixos/))
* {hm} [**Declarative management of dotfiles with Nix and Home Manager](https://www.bekk.christmas/post/2021/16/dotfiles-with-nix-and-home-manager)
* {hm} [/results?search_query=nix+home+manager](https://www.youtube.com/results?search_query=nix+home+manager)
* {hm} [02 - Channels and Home Manager | Nix Series - YouTube](https://www.youtube.com/watch?v=494zlooD7Tg)
* {hm} [Appendix A. Configuration Options](https://rycee.gitlab.io/home-manager/options.html)
* {hm} [Appendix A. Configuration Options](https://rycee.gitlab.io/home-manager/options.html)
* {hm} [Appendix A. Home Manager Configuration Options](https://nix-community.github.io/home-manager/options.xhtml)
* {hm} [Appendix D. Release Notes](https://nix-community.github.io/home-manager/release-notes.xhtml%23sec-release-22.11-state-version-changes)
* {hm} [Building a highly optimized home environment with Nix](https://determinate.systems/posts/nix-home-env)
* {hm} [Burke Libbey Nixology series (4 videos related to Home Manager)](https://www.youtube.com/watch?v=IUsQt4NRCnc&list=PLRGI9KQ3_HP_OFRG6R-p4iFgMSK1t5BHs&index=7)
* {hm} [Can someone show me how to manage $HOME without home-manager? : r/NixOS](https://www.reddit.com/r/NixOS/comments/j4uc0k/can_someone_show_me_how_to_manage_home_without/)
* {hm} [Can't get rid of home-manager package - Help - NixOS Discourse](https://discourse.nixos.org/t/cant-get-rid-of-home-manager-package/8449/6)
* {hm} [Changes after updating home-manager - Today I Learned](https://fnordig.de/til/nix/package-changes.html)
* {hm} [continue from here: Search · home.homeDirectory](https://github.com/search?q=home.homeDirectory+language%3ANix&type=code)
* {hm} [Custom NIX Home-Manager Modules For Personalized Setup](https://www.youtube.com/watch?v=EUiXzX7nthY&pp=ygUQbml4IGhvbWUgbWFuYWdlcg%3D%3D)
* {hm} [Daniel Siepmann: Migrating to nix home-manager](https://daniel-siepmann.de/migrating-to-nix-home-manager.html)
* {hm} [Flake based Home Manager cannot find home.nix - NixOS Discourse](https://discourse.nixos.org/t/flake-based-home-manager-cannot-find-home-nix/18356)
* {hm} [From nix-env to home-manager - YouTube](https://www.youtube.com/watch?v=PmD8Qe8z2sY&list=PLRGI9KQ3_HP_OFRG6R-p4iFgMSK1t5BHs&index=10)
* {hm} [From nix-env to home-manager - YouTube](https://www.youtube.com/watch?v=PmD8Qe8z2sY&list=PLRGI9KQ3_HP_OFRG6R-p4iFgMSK1t5BHs&index=11)
* {hm} [From nix-env to home-manager - YouTube](https://www.youtube.com/watch?v=PmD8Qe8z2sY&t=397s)
* {hm} [Getting Started with home-manager - YouTube](https://www.youtube.com/watch?v=OgUvDXxHlLs)
* {hm} [ghedam.at](https://ghedam.at/24353/tutorial-getting-started-with-home-manager-for-nix)
* {hm} [Home Manager - NixOS Wiki](https://nixos.wiki/wiki/Home_Manager)
* {hm} [Home Manager - NixOS Wiki](https://nixos.wiki/wiki/Home_Manager)
* {hm} [Home Manager - NixOS Wiki](https://nixos.wiki/wiki/Home_Manager#Configuration)
* {hm} [Home Manager - Option Search](https://mipmip.github.io/home-manager-option-search/?query%3Dhyprland)
* {hm} [Home Manager - Option Search](https://mipmip.github.io/home-manager-option-search/)
* {hm} [Home Manager manual](https://nix-community.github.io/home-manager/)
* {hm} [Home Manager Manual](https://nix-community.github.io/home-manager/)
* {hm} [Home Manager Manual](https://nix-community.github.io/home-manager/)
* {hm} [Home Manager Manual](https://nix-community.github.io/home-manager/) can I use chezmoi together with Home Manager? or just for non-Nix software? [Can't get basic nix home manager setup working - Stack Overflow](https://stackoverflow.com/questions/74665483/cant-get-basic-nix-home-manager-setup-working)
* {hm} [Home Manager Manual](https://nix-community.github.io/home-manager/index.html)
* {hm} [Home Manager Manual](https://nix-community.github.io/home-manager/index.html%23ch-usage)
* {hm} [Home Manager Manual](https://nix-community.github.io/home-manager/index.xhtml%23_why_are_the_session_variables_not_set)
* {hm} [Home Manager Manual](https://nix-community.github.io/home-manager/index.xhtml%23ch-nix-flakes)
* {hm} [Home Manager Manual](https://rycee.gitlab.io/home-manager/index.html)
* {hm} [home manager template - YouTube](https://www.youtube.com/watch?v=RnIl_vqxnXk)
* {hm} [Home-Manager - Dev Handbook](https://dev.jmgilman.com/environment/tools/nix/home-manager/)
* {hm} [Home-manager installed apps don't show up in Applications Launcher - Help - NixOS Discourse](https://discourse.nixos.org/t/home-manager-installed-apps-dont-show-up-in-applications-launcher/8523)
* {hm} [home-manager systemd service - Neuron Zettelkasten](https://neuron.zettel.page/install-systemd)
* {hm} [home-manager-doesnt-seem-to-recognize-sessionvariables](https://discourse.nixos.org/t/home-manager-doesnt-seem-to-recognize-sessionvariables/8488/9)
* {hm} [home-manager-shell-nix-shell-for-your-home-manager-config](https://discourse.nixos.org/t/home-manager-shell-nix-shell-for-your-home-manager-config/24632)
* {hm} [Home-manager: using hostname for host-specific settings : r/NixOS](https://www.reddit.com/r/NixOS/comments/15coxtr/homemanager_using_hostname_for_hostspecific/)
* {hm} [home-manager/modules · main · Nick Hiebert / dotfiles · GitLab](https://gitlab.com/BRBWaffles/dotfiles/-/tree/main/home-manager/modules?ref_type%3Dheads)
* {hm} [home.stateVersion is not of type `one of "18.09", "19.03", "19.09", "20.03", "20.09", "21.03", "21.05", "21.11"' - Help - NixOS Discourse](https://discourse.nixos.org/t/home-stateversion-is-not-of-type-one-of-18-09-19-03-19-09-20-03-20-09-21-03-21-05-21-11/19691)
* {hm} [Homebrew to Home Manager](https://lucperkins.dev/blog/home-manager/)
* {hm} [http://ghedam.at/24353/tutorial-getting-started-with-home-manager-for-nix](http://ghedam.at/24353/tutorial-getting-started-with-home-manager-for-nix)* - config*
* {hm} [http://ghedam.at/24353/tutorial-getting-started-with-home-manager-for-nix](https://www.google.com/url?q=http://ghedam.at/24353/tutorial-getting-started-with-home-manager-for-nix)
* {hm} [Interesting template to get started with Home Manager](https://github.com/ryantm/home-manager-template)
* {hm} [intro to home manager - YouTube](https://www.youtube.com/results?search_query%3Dintro%2Bto%2Bhome%2Bmanager)
* {hm} [julianhofer.eu](https://julianhofer.eu/blog/01-silverblue-nix/#home-manager)
* {hm} [Manage Neovim plugins (and more!) with Nix and Home Manager](https://gist.github.com/nat-418/d76586da7a5d113ab90578ed56069509)
* {hm} [Manage Your Dotfiles with Home Manager! - YouTube](https://www.youtube.com/watch?v%3DIiyBeR-Guqw)
* {hm} [Manage your macOS environment with nix-darwin + Home Manager - YouTube](https://www.youtube.com/watch?v=r0Y7s1sRSUY)
* {hm} [Managing dotfiles with Nix - Alex Pearce](https://alexpearce.me/2021/07/managing-dotfiles-with-nix/)
* {hm} [Managing OS and home configurations using nixos-flake – nixos-flake](https://community.flake.parts/nixos-flake)
* {hm} [Managing your NixOS configuration with Flakes and Home Manager!](https://josiahalenbrown.substack.com/p/managing-your-nixos-configuration)
* {hm} [mipmip.github.io](https://mipmip.github.io/home-manager-option-search/) → [github.com](https://github.com/mipmip/home-manager-option-search) contribute if possible [Original Home Manager announcement](https://rycee.net/posts/2017-07-02-manage-your-home-with-nix.html)
* {hm} [Misterio77/nix-colors](https://github.com/Misterio77/nix-colors) 
* {hm} [Nix Friday - Home manager - YouTube](https://www.youtube.com/watch?v=2emuPcomQ98)
* {hm} [Nix Home Manager Tutorial](https://www.youtube.com/watch?v=utoj6annRK0&pp=ygUQbml4IGhvbWUgbWFuYWdlcg%3D%3D)* - Questions / Ideas
* {hm} [Nix home-manager tutorial: Declare your entire home directory](https://www.youtube.com/watch?v=FcC2dzecovw&t=187s&pp=ygUQbml4IGhvbWUgbWFuYWdlcg%3D%3D)
* {hm} [nix home-manager: sign commits using ssh :: Nelson Alex Jeppesen — lowercase haven](https://jeppesen.io/git-commit-sign-nix-home-manager-ssh/)
* {hm} [nix-community/home-manager: Manage a user environment using Nix [maintainer=@rycee]](https://github.com/nix-community/home-manager)
* {hm} [nix-community/home-manager: Manage a user environment using Nix [maintainer=@rycee]](https://github.com/nix-community/home-manager#words-of-warning)
* {hm} [nix-community/home-manager](https://github.com/nix-community/home-manager)
* {hm} [Nix-darwin, home-manager, and flakes: how to set environment variables for the main user? - Stack Overflow](https://stackoverflow.com/questions/77296068/nix-darwin-home-manager-and-flakes-how-to-set-environment-variables-for-the-m)
* {hm} [Nixos Flakes with Home-Manager - Help - NixOS Discourse](https://discourse.nixos.org/t/nixos-flakes-with-home-manager/18476)
* {hm} [NixOS Home Manager for multi-user on NIX flake Installation and Configuration | by Ion Mudreac | Medium](https://mudrii.medium.com/nixos-home-manager-on-native-nix-flake-installation-and-configuration-22d018654f0c)
* {hm} [NixOS Series #5: How to set up home-manager on NixOS?](https://itsfoss.com/home-manager-nixos/)
* {hm} [NixOS Setup Guide - Configuration / Home-Manager / Flakes - YouTube](https://www.youtube.com/watch?v%3DAGVXJ-TIv3Y)
* {hm} [NixOS Setup Guide - Configuration / Home-Manager / Flakes](https://youtu.be/AGVXJ-TIv3Y)
* {hm} [rycee.gitlab.io](https://rycee.gitlab.io/home-manager/)
* {hm} [Setting up Nix on macOS from scratch (incl. dotfiles via home-manager and Nix flakes) - YouTube](https://www.youtube.com/watch?v=1dzgVkgQ5mE)
* {hm} [Switching non-NixOS Home Manager to flakes – dee.underscore.world](https://dee.underscore.world/blog/home-manager-flakes/)
* {hm} [Tutorial: Getting started with Home Manager for Nix | Mattia Gheda](https://ghedam.at/24353/tutorial-getting-started-with-home-manager-for-nix)
* {hm} [Ultimate NixOS Guide | Flakes | Home-manager - YouTube](https://www.youtube.com/watch?v%3Da67Sv4Mbxmc)
* {hm resource} [schuelermine/xhmm: Extra home manager modules](https://github.com/schuelermine/xhmm)

## Specific Topics

* {specific} [2023-07-31 Documentation team meeting notes #68 - Development / Documentation - NixOS Discourse](https://discourse.nixos.org/t/2023-07-31-documentation-team-meeting-notes-68/31127/2)
* {specific} [depreciate-the-use-of-nix-env-to-install-packages](https://discourse.nixos.org/t/depreciate-the-use-of-nix-env-to-install-packages/20139/22)
* {specific} [experimental-does-not-mean-unstable-detsyss-perspective-on-nix-flakes](https://discourse.nixos.org/t/experimental-does-not-mean-unstable-detsyss-perspective-on-nix-flakes/32703)
* {specific} [Filesystem Hierarchy Standard - NixOS4Noobs](https://jorel.dev/NixOS4Noobs/fhs.html)
* {specific} [How to manually replicate/reproduce/obtain the sha256 hash specified in Nix with fetchgit or fetchFromGitHub? · Issue #191128 · NixOS/nixpkgs](https://github.com/NixOS/nixpkgs/issues/191128)
* {specific} [How to upgrade packages - Guides - NixOS Discourse](https://discourse.nixos.org/t/how-to-upgrade-packages/6151/2)
* {specific} [NixOS: build your system on Github actions! • gvolpe's blog](https://gvolpe.com/blog/nixos-binary-cache-ci/)
* {specific} [Security updates in Nixos : r/NixOS](https://www.reddit.com/r/NixOS/comments/wtweio/security_updates_in_nixos/)
* {specific} [superuser.com](https://superuser.com/questions/651308/whats-the-difference-between-chsh-s-and-export-shell)
* {specific} [unimport nix plugin? at DuckDuckGo](https://duckduckgo.com/?q%3Dunimport%2Bnix%2Bplugin%253F%26ia%3Dweb)
* {specific} [using-imports-attribute-with-import-function](https://discourse.nixos.org/t/using-imports-attribute-with-import-function/36357/2)

## Package Search

* [search](https://www.google.com/search?client%3Dfirefox-b-d%26q%3Dnixos%2Bdeclare%2Bdocker%2Bimages%2Bin%2Bconfig)
* [search.nixos.org](https://search.nixos.org/packages?channel=23.11&show=nix-tree&from=0&size=50&sort=relevance&type=packages&query=nix-tree)
* [search.nixos.org](https://search.nixos.org/packages?channel%3D23.11%26show%3Drunit%26from%3D0%26size%3D50%26sort%3Drelevance%26type%3Dpackages%26query%3Drunit) nixos runit
* [search.nixos.org](https://search.nixos.org/packages?channel%3D23.11%26show%3Dlibgen-cli%26from%3D0%26size%3D50%26sort%3Drelevance%26type%3Dpackages%26query%3Dlibgen)
* [search.nixos.org](https://search.nixos.org/options)*

## Reddit

* [r/unixporn/s/Fk9sUOv7FY](https://www.reddit.com/r/unixporn/s/Fk9sUOv7FY)
* [r/NixOS/s/UhoOeQnx6T](https://www.reddit.com/r/NixOS/s/UhoOeQnx6T)
* [r/NixOS/s/s1yFBo1r44](https://www.reddit.com/r/NixOS/s/s1yFBo1r44)
* [r/NixOS/s/LhnKgqVscG](https://www.reddit.com/r/NixOS/s/LhnKgqVscG) protect flake shell used with nix develop from having their packages deleted by nix-collect-garbage
* [r/NixOS/s/isBCetb09h](https://www.reddit.com/r/NixOS/s/isBCetb09h)
* [r/NixOS/s/iNzCdcCZWj](https://www.reddit.com/r/NixOS/s/iNzCdcCZWj) folder structure feedback
* [r/NixOS/s/bytkKR3Tvq](https://www.reddit.com/r/NixOS/s/bytkKR3Tvq)
* [r/NixOS/s/bUsuKtHM9W](https://www.reddit.com/r/NixOS/s/bUsuKtHM9W)
* [r/NixOS/s/AuPlyOQFIK](https://www.reddit.com/r/NixOS/s/AuPlyOQFIK)
* [r/NixOS/s/0T63UgILLY](https://www.reddit.com/r/NixOS/s/0T63UgILLY)
* [r/NixOS/comments/z16mt8/cant_seem_to_set_default_shell_using_homemanager/?rdt=48798](https://www.reddit.com/r/NixOS/comments/z16mt8/cant_seem_to_set_default_shell_using_homemanager/?rdt%3D48798)
* [r/NixOS/comments/y1xo2u/how_to_create_an_iso_with_my_config_files/](https://www.reddit.com/r/NixOS/comments/y1xo2u/how_to_create_an_iso_with_my_config_files/)
* [r/NixOS/comments/wjskae/how_can_i_change_grub_theme_from_the/?rdt=48996](https://www.reddit.com/r/NixOS/comments/wjskae/how_can_i_change_grub_theme_from_the/?rdt%3D48996)
* [r/NixOS/comments/rg6tnl/tokyonight_colorscheme_nixos_wallpaper/](https://www.reddit.com/r/NixOS/comments/rg6tnl/tokyonight_colorscheme_nixos_wallpaper/)
* [r/NixOS/comments/fjbnhp/using_fish_with_nix/](https://www.reddit.com/r/NixOS/comments/fjbnhp/using_fish_with_nix/)
* [r/NixOS/comments/bs4q2p/installing_deb_packages_in_nixos/?rdt=64360](https://www.reddit.com/r/NixOS/comments/bs4q2p/installing_deb_packages_in_nixos/?rdt%3D64360)
* [r/NixOS/comments/16cfdag/poetry2nix_can_not_get_a_flake_to_work/](https://www.reddit.com/r/NixOS/comments/16cfdag/poetry2nix_can_not_get_a_flake_to_work/)
* [r/NixOS/comments/14dm7e6/everforest_themed_nixos_wallpaper_i_made_which/](https://www.reddit.com/r/NixOS/comments/14dm7e6/everforest_themed_nixos_wallpaper_i_made_which/)
* [r/NixOS/comments/129mdgp/gdm_only_showing_black_screen_and_white_cursor/](https://www.reddit.com/r/NixOS/comments/129mdgp/gdm_only_showing_black_screen_and_white_cursor/)
* [r/linuxmasterrace/s/GX6bM8wS97](https://www.reddit.com/r/linuxmasterrace/s/GX6bM8wS97) packaging request
* [r/browsers/s/7RTbiwUx4q](https://www.reddit.com/r/browsers/s/7RTbiwUx4q)
* [r/](https://www.reddit.com/r/NixOS/s/seSy4UDEuR)

## Nix Cheats

* {cheats} [[Feature Discussion] Declarative Flatpak Configuration? - Development - NixOS Discourse](https://discourse.nixos.org/t/feature-discussion-declarative-flatpak-configuration/26767/3)
* {cheats} [What advantages does Flatpak offer over Nix? The](https://news.ycombinator.com/item?id%3D35170465)

## Specific Apps

* [Android development on NixOS - Specific Solutions](https://specific.solutions.limited/projects/hanging-plotter/android-environment.md)
* [Any documentation on keyd under NixOS? : r/NixOS](https://www.reddit.com/r/NixOS/comments/10ym1ed/any_documentation_on_keyd_under_nixos/)
* [Anyone managed to install flutter >=3.0.0 on NixOS? - Help - NixOS Discourse](https://discourse.nixos.org/t/anyone-managed-to-install-flutter-3-0-0-on-nixos/20542)
* [babariviere/flutter-nix-hello-world: Demonstration on how to use flutter with Nix](https://github.com/babariviere/flutter-nix-hello-world)
* [beautysh/flake.nix at 9845efc3ea3e86cc0d41465d720a47f521b2799c · lovesegfault/beautysh](https://github.com/lovesegfault/beautysh/blob/9845efc3ea3e86cc0d41465d720a47f521b2799c/flake.nix%23L63)
* [blitz_api/flake.nix at 6edad7ac48c80cd40f595b5eab99c0968b5d8b8a · fusion44/blitz_api](https://github.com/fusion44/blitz_api/blob/6edad7ac48c80cd40f595b5eab99c0968b5d8b8a/flake.nix%23L52)
* [Building Flutter Web apps on NixOS - Help - NixOS Discourse](https://discourse.nixos.org/t/building-flutter-web-apps-on-nixos/23151)
* [configure emacs on nixos at DuckDuckGo](https://duckduckgo.com/?q%3Dconfigure%2Bemacs%2Bon%2Bnixos%26ia%3Dweb)
* [discourse.julialang.org](https://discourse.julialang.org/t/build-julia-on-nixos/35129/26)
* [Docker - NixOS Wiki](https://nixos.wiki/wiki/Docker) android studio install on nixos - Google Search [galowicz.de](https://galowicz.de/2023/03/13/quick-vms-with-nixos/)
* [emacs-twist/twist.nix](https://github.com/emacs-twist/twist.nix) (emacs twist)
* [example of how to configure zsh? · Issue #989 · nix-community/home-manager](https://github.com/nix-community/home-manager/issues/989)
* [Flutter on NixOS : NixOS](https://www.reddit.com/r/NixOS/comments/oecxb9/flutter_on_nixos/)
* [Flutter Pros & Cons for Mobile App Development | Nix Solutions Service](https://nixsolutions-service.com/fluttersdk/)
* [godot-rust.github.io](https://godot-rust.github.io/book/gdnative/recipes/nix-build-system.html)
* [hackernews userscript in rust wasm](https://drakerossman.com/blog/hackernews-userscript-in-rust-wasm)
* [holochain advanced install](https://developer.holochain.org/get-started/install-advanced/)
* [home-manager/zathura.nix at dd99675ee81fef051809bc87d67eb07f5ba022e8 · nix-community/home-manager](https://github.com/nix-community/home-manager/blob/dd99675ee81fef051809bc87d67eb07f5ba022e8/modules/programs/zathura.nix)
* [home-manager/zathura.nix at dd99675ee81fef051809bc87d67eb07f5ba022e8 · nix-community/home-manager](https://github.com/nix-community/home-manager/blob/dd99675ee81fef051809bc87d67eb07f5ba022e8/modules/programs/zathura.nix)
* [How to Enable Wayland on NixOS, or: Confusion, Conquest, Triumph](https://drakerossman.com/blog/wayland-on-nixos-confusion-conquest-triumph)
* [i3 on nixos → collect links](https://www.google.com/search?q=nixos%20i3wm&ie=utf-8&oe=utf-8&client=firefox-b-m)
* [including-latest-julia-in-configure-nix](https://discourse.nixos.org/t/including-latest-julia-in-configure-nix/8895)
* [kanata - MyNixOS](https://mynixos.com/search?q%3Dkanata)
* [managing firefox on macos with nix](https://cmacr.ae/blog/managing-firefox-on-macos-with-nix/)
* [mjhart.netlify.app](https://mjhart.netlify.app/posts/2020-03-14-nix-and-fish.html)
* [mynixos.com](https://mynixos.com/mynixos/demo-linode-nginx)
* [mynixos.com](https://mynixos.com/mynixos/demo-raspberry-transmission)
* [mynixos.com](https://mynixos.com/search?q%3Dgtk)
* [network_inventory/flake.nix at dev · Nebucatnetzer/network_inventory](https://github.com/Nebucatnetzer/network_inventory/blob/dev/flake.nix)
* [Nix Build / Develop - Emacs NG - A new approach to Emacs](https://emacs-ng.github.io/emacs-ng/build/nix-develop/)
* [nix ocaml](https://dimitrije.website/posts/2023-03-04-nix-ocaml.html)
* [nix-examples/web/FastAPI/fastapi/app.nix at 0ebd762662c42270309e01b8f96161a3376f7ddf · vlktomas/nix-examples](https://github.com/vlktomas/nix-examples/blob/0ebd762662c42270309e01b8f96161a3376f7ddf/web/FastAPI/fastapi/app.nix%23L8)
* [nix/pkgs/keyd/default.nix at 011bf23ba8bcf95c8cdd163ae746776ee4f7d00e · morphykuffour/nix](https://github.com/morphykuffour/nix/blob/011bf23ba8bcf95c8cdd163ae746776ee4f7d00e/pkgs/keyd/default.nix)
* [Nixos and Hyprland - Best Match Ever - YouTube](https://www.youtube.com/watch?v%3D61wGzIv12Ds%26t%3D5s)
* [NixOS Search - Packages](https://search.nixos.org/packages?channel=23.05&from=0&size=50&sort=relevance&type=packages&query=flutter) flutter [NixOS Search - Packages](https://search.nixos.org/packages?channel=23.05&from=0&size=50&sort=relevance&type=packages&query=android) android [nixGL update for nvidia 530 drivers - Google Search](https://www.google.com/search?client=firefox-b-d&q=nixGL+update+for+nvidia+530+drivers)
* [nixos.wiki](https://nixos.wiki/wiki/I3)
* [nixos.wiki](https://nixos.wiki/wiki/St)
* [nixpkgs/default.nix at release-22.11 · NixOS/nixpkgs](https://github.com/NixOS/nixpkgs/blob/release-22.11/pkgs/applications/window-managers/awesome/default.nix) Nix as server: [news.ycombinator.com](https://news.ycombinator.com/item?id=12250104)
* [nixpkgs/flutter.nix at cfe96dbfce8bd62dcd4a8ad62cb79dec140b1a62 · NixOS/nixpkgs](https://github.com/NixOS/nixpkgs/blob/cfe96dbfce8bd62dcd4a8ad62cb79dec140b1a62/pkgs/development/compilers/flutter/flutter.nix#L168)
* [nixpkgs/pkgs/development/python-modules/halo/default.nix at nixos-23.11 · NixOS/nixpkgs](https://github.com/NixOS/nixpkgs/blob/nixos-23.11/pkgs/development/python-modules/halo/default.nix%23L28)
* [NyCodeGHG/awesome-prometheus-alerts.nix](https://github.com/NyCodeGHG/awesome-prometheus-alerts.nix)
* [packages/nushell](https://www.nixhub.io/packages/nushell)
* [Podman - NixOS Wiki](https://nixos.wiki/wiki/Podman)
* [pycryptpad-tools/nix/deps.nix at b2500775710205af92d72ded68d213f38190a8fb · dpausp/pycryptpad-tools](https://github.com/dpausp/pycryptpad-tools/blob/b2500775710205af92d72ded68d213f38190a8fb/nix/deps.nix%23L20)
* [recap-utr/nlp-service](https://github.com/recap-utr/nlp-service)
* [request: bato module · Issue #3582 · nix-community/home-manager](https://github.com/nix-community/home-manager/issues/3582)
* [samuela/nixos-vscode-server](https://github.com/samuela/nixos-vscode-server)
* [search.nixos.org](https://search.nixos.org/packages?channel=23.05&from=0&size=50&sort=relevance&type=packages&query=git+hook)
* [seirl-nixos/pkgs/epiquote.nix at 2d95c686c6b2d3b65d25f17731ddfab0509579df · seirl/seirl-nixos](https://github.com/seirl/seirl-nixos/blob/2d95c686c6b2d3b65d25f17731ddfab0509579df/pkgs/epiquote.nix%23L4)
* [services - MyNixOS](https://mynixos.com/search?q%3Dservices)
* [Setting up Emacs on NixOS - YouTube](https://www.youtube.com/watch?v%3DWZBfPbpGDOU)
* [Simple Terminal (st) setup - Guides - NixOS Discourse](https://discourse.nixos.org/t/simple-terminal-st-setup/9763)
* [simple-terminal-st-setup](https://github.com/simple-terminal-st-setup/9763)
* [simplex-chat/haskell.nix](https://github.com/simplex-chat/haskell.nix)
* [SoraTenshi/helix/tree/master](https://github.com/SoraTenshi/helix/tree/master)
* [stackoverflow.com](https://stackoverflow.com/questions/61262216/configuring-fish-shell-prompt-inside-nix-shell)
* $$$$$ [nixos.wiki](https://nixos.wiki/wiki/Visual_Studio_Code)
* prog [hraban/cl-nix-lite: Common Lisp module for Nix, without Quicklisp](https://github.com/hraban/cl-nix-lite)
* suckless [github.com](https://github.com/NixOS/nixpkgs/issues/23200)

### TeX

* [flyx.org](https://flyx.org/nix-flakes-latex/)
* [nixos.wiki](https://nixos.wiki/wiki/TexLive)
* [rgri/tex2nix](https://github.com/rgri/tex2nix)
*[**Exploring Nix Flakes: Build LaTeX Documents Reproducibly](https://flyx.org/nix-flakes-latex/)

### VSCode

* {vscode} [pietdevries94/nix-vscode-extensions](https://github.com/pietdevries94/nix-vscode-extensions)
* {vscode} [Search results - Nix | Visual Studio Code , Visual Studio Marketplace](https://marketplace.visualstudio.com/search?term=Nix&target=VSCode&category=All%20categories&sortBy=Relevance)
* {vscode} [Visual Studio Code - NixOS Wiki](https://nixos.wiki/wiki/Visual_Studio_Code)

## 1s

* [fluffynukeit.com](https://fluffynukeit.com/installing-essential-software-in-nixos/)

## Misc

* [nix-community/robotnix](https://github.com/nix-community/robotnix)
* [nixos.wiki](https://nixos.wiki/wiki/Android)

## Related Projects

* [snowflakeos.org](https://snowflakeos.org/)

# clavix: Keybindings and Shortcuts

* Major keybind sources:
* Termulator: wezterm, kitty, alacritty
* Nvim
* Emacs
* Browser: Luakit, Nyxt, Qutebrowser, Firefox, ungoogled-chromium
* Browser extensions
* Compositor: sway, swayfx, dwl, hyprland, river
* Widgets: ags, nwg-shell, eww, fabric
* Kanata-cmd
* Espanso
* GUI: thunar, zathura, dolphin,
* TUI: spotify, lazygit
* CLI apps
* Notebooks: jupyter, juno, pluto, quarto, nteract
* Launcher: wofi, ulauncher
* Lockscreen
* other names considered: kbcoord / kbgeneral / tastix
* Sub-tool: keycritic/keylinter: a linter for your keybindings: collects
* all keybindings and examines them for coherence, collisons, and new
* mappable keys → use light AI; also make scores → convenience scores for
* keymappings, coherence scores

## Roadmap

* [ ] compile list of applications (top, basic, extended, someday -
    according to priority)
* [ ] develop standard notation (JSON/YAML/TOML for now) to unambiguously
    record all keystrokes
* [ ] look at vscode JSON format and identify shortcomin
* [ ] add variable system for things like leader key, modifier\<i\>,
        etc.
* [ ] develop good way to deal with chords → synchronicity vs
        sequentialit
* [ ] like this: “($ctrl ;) ($ctrl k)”, “($ctrl $alt k) ($))” →
            ‘$’ as escape for ‘(’ and ‘)’
* [ ] add prefix for valid scope: “[vscode] ($ctrl $alt k) ($))”

  * [ ] clean notation for ctrl, alt, F{i}, etc → unicode?    * [ ] ⎈ for ctrl / $ctrl or ⎋?
* [ ] ⌗ for alt / $alt
* [ ] $f1 … $f12
* [ ]  ␛ for escape / $esc
* [ ]  ␡ delete / $del

    -[ ] ␣ for space / $space
* [ ] etc. → [wincent.com/wiki/Unicode_representations_of_modifier_keys](https://wincent.com/wiki/Unicode_representations_of_modifier_keys)
* [ ] write unambiguous specification
* [ ] collect different notations used in apps and documentation
* [ ] write code for conflict detection, distinguishing between different
      types: same-scope, differnet-scope, semantic incoherence (not
      strictly a conflict, but also worth detecting)
* [ ] start putting together prototype of universal config clavix.json
* [ ] write parser specifically for the different notation styles
* [ ] write document parsers for different app configs
* [ ] write ‘intelligent’ parser for miscellaneous configs, like readme
      tables, copy-and-paste from websites, etc → simple lightweight
      classifier from regex/pattern-generated one-hot/BoW features?
      (written in Rust, ideally)
* [ ] develop writers for specific app configs, Home Manager, etc
* [ ] develop NLP element for keybind descriptions: regex + embeddings +
      NER to identify semantic categories
* [ ] develop functionality to group keystrokes on different criteria
* [ ] develop good interfaces: first CLI, later TUI, later GUI
* [ ] syntax highlighting for keystroke syntax (low priority, but cool)
* [ ] extend config parsers to write changed keybindings (with backup,
      including optional support for commenting out old keybindings lines,
      but also backing up the config to e.g. ~/.cache/clavix/\<timestamp\>)

## notes

* use [dhall](https://dhall-lang.org/#) as a configuration language?
* → focus on defining a consistent user experience (esp. keystrokes)
    transferable between specific applications (such as window managers)
* rewrite in Rust (portability) or CL (for easiest extensibility? →
    look at how qtile handles config; learn more about plugins best
    practices in general)
* → make Nix- and homewarrior-compatible!
* Create a general tool, analogous to colorflip, that tracks (and
    sets) and detects conflicts or inconsistencies between keybindings
    for different apps → name: kbgeneral
* find all standard key shortcuts for Ubuntu, Linux NixOS, etc → First
    step: CLI to read configs (potentially from a config file listing
    all apps) and create keybindings table

### Build on / draw from

* [pawamoy/keycut](https://github.com/pawamoy/keycut) - A command line tool that helps
  you remembering ALL the numerous keyboard shortcuts of ALL your
  favorite programs [link](https://github.com/pawamoy/keycut)
* [lra/mackup/](https://github.com/lra/mackup/) - Keep your application settings in
  sync (OS X/Linux) → get ideas for colorflip and kbgeneral
* Keybinding Collection

### shortcut lists

* [cheatography.com/tag/ubuntu/](https://cheatography.com/tag/ubuntu/)
* [dgkim5360.github.io/blog/linux/2017/07/a-cheatsheet-for-ubuntu-shortcuts/](https://dgkim5360.github.io/blog/linux/2017/07/a-cheatsheet-for-ubuntu-shortcuts/)
* [geeksforgeeks.org/keyboard-shortcuts-for-ubuntu-set-1/](https://www.geeksforgeeks.org/keyboard-shortcuts-for-ubuntu-set-1/)
* [help.ubuntu.com/stable/ubuntu-help/shell-keyboard-shortcuts.html.en,*](https://help.ubuntu.com/stable/ubuntu-help/shell-keyboard-shortcuts.html.en,*) [dell.com/support/kbdoc/de-de/000131678/an-ubuntu-linux-keyboard-shortcut-reference-guide-for-your-dell-pc?lang=en,](https://www.dell.com/support/kbdoc/de-de/000131678/an-ubuntu-linux-keyboard-shortcut-reference-guide-for-your-dell-pc?lang=en,)
* [ask.fedoraproject.org/t/how-to-enable-the-hotkeys-for-fzf/11723](https://ask.fedoraproject.org/t/how-to-enable-the-hotkeys-for-fzf/11723)
* [defkey.com/](https://defkey.com/)
* [defkey.com/ubuntu-shortcuts?pdf=true&modifiedDate=20210304T113257](https://defkey.com/ubuntu-shortcuts?pdf=true&modifiedDate=20210304T113257)

### specific apps

* VScode crap
* [code.visualstudio.com/shortcuts/keyboard-shortcuts-linux.pdf](https://code.visualstudio.com/shortcuts/keyboard-shortcuts-linux.pdf)
  * VSCode - group all commands by type, such as "navigation between
    parts of vscode", "file operations", "overwritten by nvim",
    "code pop-ups", "code running and debugging", etc.
  * change all Alt+C shortcuts in VSCode for fzf
* -> [Anki Deck Control Center](https://docs.google.com/spreadsheets/d/1Lzr3GcZ2fpCONyJkTht8G-Ehn415gB2as3wXOvGlLHU/edit#gid=1690951121)
* [Keyboard shortcuts for YouTube - YouTube Help](https://support.google.com/youtube/answer/7631406?hl=en)

### semantic groups

1. window management
2. terminal multiplexing
3. editing and software development
4. miscellaneous shell, CLI, TUI navigation
5. web browsing
6. system commands

### espanso notes

Need to integrate cleanly → separation of concerns

### other keys to remap

home, end, page up, page down

### proglang keywords

* → how to integrate with espanso? via special characters to begin triggers
* → maybe don’t integrate this part with espanso; pure-kanata can be faster

### Frequency of letter combinations

```python

```

### Good (hybrid) modifiers

* q → infrequently followed by most letters; map q+u to ‘qu’
* semicolon → or permanent for all other non-alphabet characters? 15 good left-hand keys
* single quote → or permanent for all other non-alphabet characters? 15 good left-hand keys
* caps lock → hybrid modifier, tap to escape, hold for control → enter - as second hybrid control?
* tab
* double shift
* shift + caps lock
* slash
* left square bracket → or permanent for all other non-alphabet characters like brackets? 15 good left-hand keys
* right square bracket (slightly less comfortable) → maybe clipboard management?
* left alt → 18 good right-hand keys
* right alt → 15 good left-hand keys
* backslash (even less comfortable) → modifier for keyboard layer switching?
* backtick → less comfortable → maybe for application launching?

### good hybrid modifier chords

* right shift + slash
* right shift + dot
* right shift + comma

### other keybinding ideas

shift + shift -> caps lock or some other key

### potentially ‘freed’ keys

* numbers → use for snippets? commands?
* right bracket
* left bracket
* backslash
* shift + quote →
* right alt + space

## Kanata

* [jtroo/kanata](https://github.com/jtroo/kanata)
  * Kanata Documentation](...)
* [Minimal example](https://github.com/jtroo/kanata/blob/main/cfg_samples/minimal.kbd)
* [Simple example with explanations](https://github.com/jtroo/kanata/blob/main/cfg_samples/simple.kbd)
* [All features showcase](https://github.com/jtroo/kanata/blob/main/cfg_samples/kanata.kbd)
* [Table of contents](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#table-of-contents)
* [Comments](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#comments)
* [Required configuration entries](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#required-configuration-entries)
* [defsrc](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#defsrc)
* [deflayer](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#deflayer)
* [Review of required configuration entries](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#review-of-required-configuration-entries)
* [Non-US keyboards](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#non-us-keyboards)
* [Optional defcfg entries](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#optional-defcfg-entries)
* [defcfg](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#defcfg)
* [process-unmapped-keys](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#process-unmapped-keys)
* [danger-enable-cmd](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#danger-enable-cmd)
* [sequence-timeout](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#sequence-timeout)
* [sequence-input-mode](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#sequence-input-mode)
* [sequence-backtrack-modcancel](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#sequence-backtrack-modcancel)
* [log-layer-changes](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#log-layer-changes)
* [delegate-to-first-layer](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#delegate-to-first-layer)
* [movemouse-inherit-accel-state](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#movemouse-inherit-accel-state)
* [movemouse-smooth-diagonals](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#movemouse-smooth-diagonals)
* [Linux only: linux-dev](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#linux-only-linux-dev)
* [Linux only: linux-dev-names-include](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#linux-only-linux-dev-names-include)
* [Linux only: linux-dev-names-exclude](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#linux-only-linux-dev-names-exclude)
* [Linux only: linux-continue-if-no-devs-found](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#linux-only-linux-continue-if-no-devs-found)
* [Linux only: linux-unicode-u-code](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#linux-only-linux-unicode-u-code)
* [Linux only: linux-unicode-termination](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#linux-only-linux-unicode-termination)
* [Linux only: linux-x11-repeat-delay-rate](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#linux-only-x11-repeat-rate)
* [Windows only: windows-altgr](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#windows-only-windows-altgr)
* [Windows only: windows-interception-mouse-hwid](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#windows-only--windows-interception-mouse-hwid)
* [Using multiple defcfg entries](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#using-multiple-defcfg-entries)
* [Aliases and variables](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#aliases-and-vars)
* [Aliases](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#aliases)
* [Variables](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#variables)
* [Actions](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#actions)
* [Live reload](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#live-reload)
* [layer-switch](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#layer-switch)
* [layer-while-held](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#layer-while-held)
* [Transparent key](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#transparent-key)
* [No-op](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#unicode)
* [Unicode](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#unicode)
* [Output chords/combos](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#output-chordscombos)
* [Repeat key](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#repeat-key)
* [Release a key or layer](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#release-a-key-or-layer)
* [multi](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#multi)
* [Mouse actions](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#mouse-actions)
* [tap-dance](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#tap-dance)
* [one-shot](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#one-shot)
* [tap-hold](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#tap-hold)
* [macro](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#macro)
* [dynamic-macro](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#dynamic-macro)
* [fork](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#fork)
* [caps-word](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#caps-word)
* [cmd](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#cmd)
* [arbitrary-code](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#arbitrary-code)
* [Global overrides](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#global-overrides)
* [Include other files](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#include)
* [Advanced/weird features](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#advanced-weird-features)
* [Fake keys](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#fake-keys)
* [Sequences](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#sequences)
* [Input chords](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#input-chords)
* [defaliasenvcond](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#defaliasenvcond)
* [switch](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#switch)
* [Custom tap-hold behaviour](https://github.com/jtroo/kanata/blob/main/docs/config.adoc#custom-tap-hold-behaviour)
* [jtroo/kanata/blob/main/docs/config.adoc](https://github.com/jtroo/kanata/blob/main/docs/config.adoc)
* [r/rust/comments/w0zqk4/kanata_v105_an_advanced_keyboard_remapper_for/](https://www.reddit.com/r/rust/comments/w0zqk4/kanata_v105_an_advanced_keyboard_remapper_for/)
* How to type Croatian, Polish, and Norwegian special characters on
  Ubuntu US Intl keyboard? → just use kanata or similar

## Kmonad

* [kmonad/kmonad](https://github.com/kmonad/kmonad)
* [r/Kmonad/](https://www.reddit.com/r/Kmonad/)
* [precondition.github.io/home-row-mods](https://precondition.github.io/home-row-mods)
* [kmonad/kmonad-contrib/tree/master/keymaps](https://github.com/kmonad/kmonad-contrib/tree/master/keymaps)
* [kmonad/kmonad](https://github.com/kmonad/kmonad)
* [gnulinux.ch/kmonad](https://gnulinux.ch/kmonad)
* [Powerful keybindings easier than ever with KMonad](https://www.youtube.com/watch?v=Dhj1eauljwU)
* [kmonad/kmonad/blob/master/startup/kmonad%40.service](https://github.com/kmonad/kmonad/blob/master/startup/kmonad%40.service)
* [kmonad/kmonad/blob/master/keymap/tutorial.kbd](https://github.com/kmonad/kmonad/blob/master/keymap/tutorial.kbd)
* [kmonad/kmonad/blob/master/Dockerfile](https://github.com/kmonad/kmonad/blob/master/Dockerfile)
* [kmonad/kmonad/blob/master/doc/installation.md#using-nix](https://github.com/kmonad/kmonad/blob/master/doc/installation.md#using-nix)
* [devpress.csdn.net/linux/62ea003220df032da732ab91.html](https://devpress.csdn.net/linux/62ea003220df032da732ab91.html)
* [dev.to/ram535/kmonad-and-the-power-of-infinite-leader-keys-888](https://dev.to/ram535/kmonad-and-the-power-of-infinite-leader-keys-888)
* [kmonad/kmonad/issues](https://github.com/kmonad/kmonad/issues) - get involved
* [david-janssen/kmonad](https://github.com/david-janssen/kmonad) The inspiration for kanata
        (Linux, Windows, Mac)

## Hybrid Modifier / Hypermodifier

* [video](https://www.youtube.com/results?search_query=xcape+linux)
* [manpages.ubuntu.com/manpages/xenial/man1/xcape.1.html](https://manpages.ubuntu.com/manpages/xenial/man1/xcape.1.html)
* [video](https://www.youtube.com/results?search_query=xcape)
* [superuser.com/questions/958734/linux-os-level-key-chord](https://superuser.com/questions/958734/linux-os-level-key-chord)
* [superuser.com/questions/958734/linux-os-level-key-chord](https://superuser.com/questions/958734/linux-os-level-key-chord)
* [wiki.archlinux.org/title/Xbindkeys](https://wiki.archlinux.org/title/Xbindkeys)
* [wiki.archlinux.org/title/Xbindkeys](https://wiki.archlinux.org/title/Xbindkeys)
* [Schoonover](https://www.youtube.com/watch?v=70IxjLEmomg&t=298s)
* [altercation/dotfiles-tilingwm/blob/master/.config/systemd/user/xcape.service](https://github.com/altercation/dotfiles-tilingwm/blob/master/.config/systemd/user/xcape.service)
* [altercation/dotfiles-tilingwm/tree/master/.config/systemd/user](https://github.com/altercation/dotfiles-tilingwm/tree/master/.config/systemd/user)
* [altercation/dotfiles-tilingwm](https://github.com/altercation/dotfiles-tilingwm)
* [altercation/dotfiles-tilingwm/blob/master/.xinitrc](https://github.com/altercation/dotfiles-tilingwm/blob/master/.xinitrc)
* [altercation/dotfiles-tilingwm/blob/master/.Xresources](https://github.com/altercation/dotfiles-tilingwm/blob/master/.Xresources)
* [r/vim/comments/iqumac/can_you_use_chords_or_hyper_keys_in_vim/](https://www.reddit.com/r/vim/comments/iqumac/can_you_use_chords_or_hyper_keys_in_vim/)
* [unix.stackexchange.com/questions/107352/how-to-allow-chords-of-keyboard-keys-to-change-the-keymap-temporarily](https://unix.stackexchange.com/questions/107352/how-to-allow-chords-of-keyboard-keys-to-change-the-keymap-temporarily)
* Ethan Schoonover video on Xmonad -> tab, backslash, semicolon, etc.
  as hybrid modifiers (xkb + xcape + systemd user services) -> use
  kmonad?
* xkb and xcape for hypermodifier → link
* alols/xcape: Linux utility to configure modifier keys to act as
  other keys when pressed and released on their own.
* [XMonad Demo](https://www.youtube.com/watch?v=70IxjLEmomg&t=298s)
* [search?q=repo%3Aaltercation%2Fdotfiles-tilingwm+xkb&type=code](https://github.com/search?q=repo%3Aaltercation%2Fdotfiles-tilingwm+xkb&type=code)

## 1S Reading

* [Reddit - How do you manage your windows?](https://www.reddit.com/r/neovim/comments/11lqwrn/how_do_you_manage_your_windows/) → keybinds
* (2) Is there a quick way to switch/swap tab with escape?
* XCAPE/XMODMAP : archlinux
* → use dhall? kdl? hcl?
* keybinds.jsonc

```jsonc

// Note: this file includes all possible configuration options.
// Sane people's configurations typically use just a subset of these.
{
    "ctrl": [
        {
            "scope": "global",
            "key": "",
             "": ""
        }
    ]
}
```

* declaration.?
* $$$ Idea: Kanata extension to create a keyboard image from the config file

```lisp
(defsrc
    esc            f1   f2   f3   f4             f5    f6    f7    f8          f9   f10  f11   f12
    grv       1      2    3      4      5       6     7      8     9
    *      =    bspc
    tab       q      w    e      r      t       y     u      i     o      p       [      ]       \
    caps      a      s    d      f      g       h     j      k     l      ;       '          enter
    lsft      z      x    c      v      b       n     m      ,     .      /                   rsft           up
    lctl      lmet   lalt             spc                  ralt        rmet                   rctl      lft down rght
)

(deflayer default
    caps           f1   f2   f3   f4               f5      f6     f7    f8          f9   f10  f11   f12
    grv       1      2    3      4       5       6       7       8     9
    *      =     bspc
    tab       q      w    e      r       t       y       u       i     o      @punct  [      ]        \
    @hybrctl  a      s    d      f       @german h       j       k     l      ;       '           enter
    lsft      z      x    c      @vimnav b       @number @spcl   ,     .      /                    rsft               up
    lctl      lmet   lalt             spc                     ralt        rmet                     rctl          lft down rght
    )

(deflayer vimnav
    *         *     *   *     *         *     *    *     *      *    *    *    -
    *       *      *    *      *      *       *     *      *     *      *      *      *    -
    *       *      *    *      *      *       *     *      *     *      *      *      *    -
    *       *      *    *      *      *       lft   down   up    rgh
    *      *       -
    *       *      *    *      *      *       *     *      *     *      *              *     -
    *       *      *         *                                  *      *       *       * - -
)

(deflayer germanmode
    *         *     *   *     *         *     *    *     *      *    *    *    -
    *       *      *    *      *      *       *     *      *     *      *      *      *    -
    *       *      *    *      *      *       *     @
    *     @
    *      *      *    -
    *       @
    *    *      *      *       *     *      *     *      *      *       -
    @gshift -      *    *      *      *       *     *      *     *      *                  @gshift   -
    *       *      *         *                                  *      *       *       * - -
)

(deflayer germanmodecaps
    *         *     *   *     *         *     *    *     *      *    *    *    -
    *       *      *    *      *      *       *     *      *     *      *      *      *    -
    *       *      *    *      *      *       *     @
    *     @
    *      *      *    -
    *       @
    *    *      *      *       *     *      *     *      *      *       -
    *       *      *    *      *      *       *     *      *     *      *              *     -
    *       *      *         *                                  *      *       *       * - -
)

(deflayer freq_unicode
    *         *     *   *     *         *     *    *     *      *    *    *    -
    *       *      *    *      *      *       *     *      *     *      *      *      *    -
    *       *      *    *      *      *       *     @
    *     @
    *      *      *    -
    *       @
    *    *      *      *       *     *      *     *      *      *       -
    *       *      *    *      *      *       *     *      *     *      *              *     -
    *       *      *         *                                  *      *       *       * - -
)

(deflayer numbers
    *         *     *   *     *         *     *    *     *      *    *    *    -
    *       *      *    *      *      *       *     *      *     *      *      *      *    -
    *       *      7    8
    *       *     *      *     *      *      *      *    -
    *       *      4    5
    *       *     *      *     *      *      *       -
    *       0      1    2
    *       *     *      *     *      *              *     -
    *       *      *         *                                  *      *       *       * - -
)

(deflayer punctuationetc
    *         *     *   *       * *    *     *      *    *    *    -
    *       *       *       *      *      *       *     *      *     *      *      *      *    -
    *       S-,     S-.     S-[    S-]    *       *     *      *     *      *      *      *    -
    *       S-9     S-0     [      ]      *       *     *      *     *      *      *       -
    *       @angleL @angleR 2
    *       *     *      *     *      *              *     -
    *       *      *         *                                      *      *       *       * - -
)

(deflayer ascii_special
    *         *     *   *     *         *     *    *     *      *    *    *    -
    *       *      *      *     *      *       *     *      *     *      *      *      *    -
    *       S-\    S-7    S-8   S-9    S-gr
    *     *      *     *      *      *      *    -
    *       \      S-4    S-5   S-6    gr
    *     *      *     *      *      *       -
    *       *      S-1    S-2   S-
    *       *     *      *     *      *              *     -
    *       *        *                           *      *       *       * - -
)

(defalias
    hybrctl (tap-hold-press 200 200 esc lctl)
    vimnav  (tap-hold-press 200 200 v (layer-toggle vimnav))
    german  (tap-hold-press 200 200 g (layer-toggle germanmode))
    gshift  (tap-hold-press 200 200 G (layer-toggle germanmodecaps))
    number  (tap-hold-press 200 200 n (layer-toggle numbers))
    spcl    (tap-hold-press 200 200 m (layer-toggle ascii_special))
    punct   (tap-hold-press 200 200 p (layer-toggle punctuationetc))
    a (unicode ä)
    o (unicode ö)
    u (unicode ü)
    A (unicode Ä)
    O (unicode Ö)
    U (unicode Ü)

    angleL (unicode ⟨)
    angleR (unicode ⟩)
    tblh (unicode ─)
    tblv (unicode ┐)
    tblx1 (unicode x)
    tblx2 (unicode x)
    tblx3 (unicode x)
    tblx4 (unicode x)
    tblx5 (unicode x)
    tblx6 (unicode x)
    tblx7 (unicode x)
    tblx8 (unicode x)
    tblx9 (unicode x)
    tblx10 (unicode x)
    tblx11 (unicode x)
    tblx12 (unicode x)
    tblx13 (unicode x)
    tblx14 (unicode x)
    tblx15 (unicode x)
    tblx16 (unicode x)
    tblx17 (unicode x)
)
```

## SORT

* → find software used to make keybinding images → SVG for zoomability?
* Caps_lock 58, escape 1 -> get all keycodes
* Keybinds
* super shift f : toggle float
* super shift 0-9 : ?
* super space : launch app
* super shift e : logout
* super alt space : file search
* super shift enter : browse
* super enter : terminal
* super shift ? : keybindings
* super ctrl space : dialog of all windows
* super [0-9] : new window

# Hank

## Latest

* Hank Ubuntu server (v2): install docker in install

```sh
sudo apt install flatpak
flatpak remote-add --if-not-exists flathub [flathub.org/repo/flathub.flatpakrepo](https://flathub.org/repo/flathub.flatpakrepo)
flatpak install org.wezfurlong.wezterm
sudo apt install landscape-client
sudo landscape-config --computer-title "Isaac stellaris 15" --account-name standalone -p SpeakFriendAndEnter --url [landscape.knecon.com/message-system](https://landscape.knecon.com/message-system) --ping-url [landscape.knecon.com/ping](http://landscape.knecon.com/ping)

# [teams.microsoft.com/l/message/19:0e375ad9-64aa-488b-bde0-9d643d768f57_5ae9b4e0-d8c6-47f1-ac08-c5cd013ac891@unq.gbl.spaces/1712647904617?context=%7B%22contextType%22%3A%22chat%22%7D](https://teams.microsoft.com/l/message/19:0e375ad9-64aa-488b-bde0-9d643d768f57_5ae9b4e0-d8c6-47f1-ac08-c5cd013ac891@unq.gbl.spaces/1712647904617?context=%7B%22contextType%22%3A%22chat%22%7D)

sudo apt install nala
sudo nala update -y && sudo nala upgrade -y
sudo ubuntu-drivers install
sudo sed -i 's/GRUB_CMDLINE_LINUX_DEFAULT=""/GRUB_CMDLINE_LINUX_DEFAULT="nvidia_drm.modeset=1"/g'
sudo update-grub # sudo apt-install nvidia-driver-535

sudo reboot
sudo nala install -y build-essential \
     cmake \
     cmake-extras \
     fontconfig \
     gettext \
     gettext-base \
     glslang-tools \
     hwdata \
     libavcodec-dev \
     libavformat-dev \
     libavutil-dev \
     libdrm-dev \
     libegl-dev \
     libegl1-mesa-dev \
     libffi-dev \
     libfontconfig-dev \
     libgbm-dev \
     libgles2 \
     libgulkan-dev \
     libinput-bin \
     libinput-dev \
     libliftoff-dev \
     libpango1.0-dev \
     libpixman-1-dev \
     librsvg \
     librsvg2-dev \
     libseat-dev \
     libtomlplusplus-dev \
     libtomlplusplus3 \
     libudev-dev \
     libvkfft-dev \
     libvulkan-dev \
     libvulkan-volk-dev \
     libxcb-composite0-dev \
     libxcb-dri3-dev \
     libxcb-ewmh-dev \
     libxcb-ewmh2 \
     libxcb-icccm4-dev \
     libxcb-present-dev \
     libxcb-render-util0-dev \
     libxcb-res0-dev \
     libxcb-util-dev \
     libxcb-xinput-dev \
     libxkbcommon-dev \
     libxkbcommon-x11-dev \
     libxkbregistry-dev \
     libxml2-dev \
     libzip-dev \
     meson \
     ninja-build \
     seatd \
     vulkan-validationlayers-dev \
     wget \
     xdg-desktop-portal-wlr \
     xwayland
mkdir HyprSource
cd HyprSource

## get Source

wget [gitlab.freedesktop.org/mesa/drm/-/archive/libdrm-2.4.120/drm-libdrm-2.4.120.tar.gz](https://gitlab.freedesktop.org/mesa/drm/-/archive/libdrm-2.4.120/drm-libdrm-2.4.120.tar.gz)
tar -xzf drm-libdrm-2.4.120.tar.gz
wget [hyprwm/Hyprland/releases/download/v0.39.1/source-v0.39.1.tar.gz](https://github.com/hyprwm/Hyprland/releases/download/v0.39.1/source-v0.39.1.tar.gz)
tar -xvf source-v0.39.1.tar.gz && mv source-v0.39.1 hyprland-source
wget [hyprwm/hyprlang/archive/refs/tags/v0.5.1.tar.gz](https://github.com/hyprwm/hyprlang/archive/refs/tags/v0.5.1.tar.gz)
tar -xvf v0.5.1.tar.gz && mv v0.5.1 hyprlang-source
wget [hyprwm/hyprcursor/archive/refs/tags/v0.1.7.tar.gz](https://github.com/hyprwm/hyprcursor/archive/refs/tags/v0.1.7.tar.gz)
tar -xvf v0.1.7.tar.gz && mv v0.1.7 hyprlang-source
wget [gitlab.freedesktop.org/wayland/wayland-protocols/-/releases/1.35/downloads/wayland-protocols-1.35.tar.xz](https://gitlab.freedesktop.org/wayland/wayland-protocols/-/releases/1.35/downloads/wayland-protocols-1.35.tar.xz)
tar -xvJf wayland-protocols-1.35.tar.xz
wget [gitlab.freedesktop.org/wayland/wayland/-/releases/1.22.0/downloads/wayland-1.22.0.tar.xz](https://gitlab.freedesktop.org/wayland/wayland/-/releases/1.22.0/downloads/wayland-1.22.0.tar.xz)
tar -xzvJf wayland-1.22.0.tar.xz
wget [gitlab.freedesktop.org/emersion/libdisplay-info/-/releases/0.1.1/downloads/libdisplay-info-0.1.1.tar.xz](https://gitlab.freedesktop.org/emersion/libdisplay-info/-/releases/0.1.1/downloads/libdisplay-info-0.1.1.tar.xz)
tar -xvJf libdisplay-info-0.1.1.tar.xz

# build libdrm

cd drm-libdrm-2.4.120 && meson builddir/ && sudo ninja -C builddir/ install

# build wayland

cd wayland-1.22.0 && mkdir build && cd build && meson setup .. --prefix=/usr --buildtype=release -Ddocumentation=false && ninja
sudo ninja install
cd ../..

# bulild wayland-protocols

cd wayland-protocols-1.35 && mkdir build && cd build && meson setup --prefix=/usr --buildtype=release && ninja
sudo ninja install
cd ../..

# build libdisplay-info

cd libdisplay-info-0.1.1/ && mkdir build && cd build && meson setup --prefix=/usr --buildtype=release && ninja
sudo ninja install
cd ../..

# build hyprcursor

cd hyprcursor-source
cmake --no-warn-unused-cli -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_INSTALL_PREFIX:PATH=/usr -S . -B ./build
cmake --build ./build --config Release --target all -j`nproc 2>/dev/null || getconf NPROCESSORS_CONF`
sudo cmake --install build
cd ..

# build hyprlang

cd cd hyprlang-source
cmake --no-warn-unused-cli -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_INSTALL_PREFIX:PATH=/usr -S . -B ./build
cmake --build ./build --config Release --target hyprlang -j`nproc 2>/dev/null || getconf NPROCESSORS_CONF`
cmake --install ./build
cd ..

# build Hyprland

chmod a+rw hyprland-source
cd hyprland-source/
make all
sudo make install
sudo nala install kitty
flatpak install org.mozilla.firefox
flatpak install org.wezfurlong.wezterm
* curl -fsSL [apt.fury.io/wez/gpg.key](https://apt.fury.io/wez/gpg.key) | sudo gpg --yes --dearmor -o /usr/share/keyrings/wezterm-fury.gpg
echo 'deb [signed-by=/usr/share/keyrings/wezterm-fury.gpg] [apt.fury.io/wez/](https://apt.fury.io/wez/) * *' | sudo tee /etc/apt/sources.list.d/wezterm.list
sudo nala update
sudo nala install wezterm

```
* Next steps:
* [ ] write full install script from [wiki.hyprland.org/Getting-Started/Installation/](https://wiki.hyprland.org/Getting-Started/Installation/)
* [ ] add Nvidia fixes to script using sed, from [here](https://gist.github.com/Vertecedoc4545/07a9624924ac3e03ff0ab2d5e3616955#file-nvidia-partching-hyprland-ubuntu-md) and [here](https://gist.github.com/Vertecedoc4545/6e54487f07a1888b656b656c0cdd9764)
* [ ] look into wezterm bug
* [wezfurlong.org/wezterm/troubleshooting.html](https://wezfurlong.org/wezterm/troubleshooting.html)
* [wezfurlong.org/wezterm/config/lua/config/enable_wayland.html](https://wezfurlong.org/wezterm/config/lua/config/enable_wayland.html)
* [wez/wezterm/issues/5103](https://github.com/wez/wezterm/issues/5103)
* [wez/wezterm/issues/5228](https://github.com/wez/wezterm/issues/5228)
* [r/hyprland/comments/1c38y11/wezterm_not_working_in_native_wayland_mode/](https://www.reddit.com/r/hyprland/comments/1c38y11/wezterm_not_working_in_native_wayland_mode/)
* [r/archlinux/comments/18rf5t1/psa_on_hyprland_wezterm_will_not_start_anymore/](https://www.reddit.com/r/archlinux/comments/18rf5t1/psa_on_hyprland_wezterm_will_not_start_anymore/)
* [r/hyprland/comments/1auqy8b/wezterm_not_open_anymore/](https://www.reddit.com/r/hyprland/comments/1auqy8b/wezterm_not_open_anymore/)
* [wez/wezterm/issues/4672](https://github.com/wez/wezterm/issues/4672)
* [gist.github.com/Vertecedoc4545/3b077301299c20c5b9b4db00f4ca6000](https://gist.github.com/Vertecedoc4545/3b077301299c20c5b9b4db00f4ca6000)
* [jakoolit](https://github.com/JaKooLit/Debian-Hyprland)
  -> [JaKooLit/Debian-Hyprland/tree/main/install-scripts](https://github.com/JaKooLit/Debian-Hyprland/tree/main/install-scripts)

## Old

Vision:
* Questions:

 Does flatpak’s nvidia driver work ootb without system drivers?
 Can I install NixOS with full disk encryption? wiki
* Roadmap

 look into building [canonical/landscape-client](https://github.com/canonical/landscape-client) on Debian and (especially) NixOS → [nix-community/nix-installers](https://github.com/nix-community/nix-installers)
 Read: [gist.github.com/clample/e3c51bf8026098fded9628d3e0ee7967](https://gist.github.com/clample/e3c51bf8026098fded9628d3e0ee7967)
 port all configs to home-manager
 manage all secrets and passwords with sops-nix as well
 create triple boot: 100G NixOS, 100G Ubuntu Server 23.10 Wayland, 800G Ubuntu Server 22.04 X11
 first garbage-collect system to free up space for
* Generations:
* Ubuntu server + i3
* Debian server + i3
* Debian server + sway
* Debian server + hyprland
* NixOS + i3
* NixOS + sway
* NixOS + Hyprland
* [dbnicholson/deb-ostree-builder](https://github.com/dbnicholson/deb-ostree-builder) → ?
```sh
sudo apt install
sudo apt update && sudo apt upgrade

# sudo apt install spice-vdagent spice-webdavd

sudo apt install --no-install-recommends lightdm-gtk-greeter
sudo apt install --no-install-recommends lightdm
sudo apt install --no-install-recommends xorg xinit
sudo dpkg-reconfigure lightdm

/usr/lib/apt/apt-helper download-file [debian.sur5r.net/i3/pool/main/s/sur5r-keyring/sur5r-keyring_2023.02.18_all.deb](https://debian.sur5r.net/i3/pool/main/s/sur5r-keyring/sur5r-keyring_2023.02.18_all.deb) keyring.deb SHA256:a511ac5f10cd811f8a4ca44d665f2fa1add7a9f09bef238cdfad8461f5239cc4
sudo apt install ./keyring.deb
echo "deb [debian.sur5r.net/i3/](http://debian.sur5r.net/i3/) $(grep '^DISTRIB_CODENAME=' /etc/lsb-release | cut -f2 -d=) universe" | sudo tee /etc/apt/sources.list.d/sur5r-i3.list
sudo apt update
sudo apt install i3
sudo apt install picom
echo "exec i3" >> ~/.xinitrc
reboot
sudo vim /etc/netplan/00-installer-config-wifi.yaml

'
# This is the network config written by "subiquity"

#network:

# version: 2

# wifis: {}

* network:
  version: 2
  wifis:* wlp4s0:*   optional: true*   access-points:*     HappyWifiHappyLifi:*       password: Tairnbach2021!*   dhcp4: true

'
sudo netplan apply
sh <(curl -L [nixos.org/nix/install)](https://nixos.org/nix/install)) --no-daemon
* nix-env -iA nixpkgs.neovim
* nix-env -iA nixpkgs.zsh
* command -v zsh | sudo tee -a /etc/shells
* chsh -s $(which zsh)

# requires reboot

sudo apt install nvidia-driver-530
nix-channel --add [guibou/nixGL/archive/main.tar.gz](https://github.com/guibou/nixGL/archive/main.tar.gz) nixgl && nix-channel --update
nix-env -iA nixgl.auto.nixGLDefault
nix-env install -iA nixpkgs.wezterm

# NIXGL GENERALLY WORKING, BUT NOT WITH WEZTERM, ALACRITTY, AND KITTY -> DEBUG

sudo apt install kitty wezterm
sudo apt install mesa-utils
sudo apt-get install libgl1-mesa-glx libgl1-mesa-dri # attempted fix -> REMOVE?

sudo apt-get install mesa-common-dev libgl1-mesa-dev libglu1-mesa-dev

# try driver version 510, or update nixGL to be 530 compatible

mkdir ~/pkgs && cd ~/
curl -LO [wez/wezterm/releases/download/20230408-112425-69ae8472/wezterm-20230408-112425-69ae8472.Ubuntu22.04.deb](https://github.com/wez/wezterm/releases/download/20230408-112425-69ae8472/wezterm-20230408-112425-69ae8472.Ubuntu22.04.deb)
sudo apt install -y ./wezterm-20230408-112425-69ae8472.Ubuntu22.04.deb
sudo apt install kitty
sudo add-apt-repository ppa:aslatter/ppa -y && sudo apt install alacritty
nix-env -iA nixpkgs.glxinfo

#######

sudo apt-get update
sudo apt-get install ca-certificates curl gnupg
sudo install -m 0755 -d /etc/apt/keyrings
curl -fsSL [download.docker.com/linux/ubuntu/gpg](https://download.docker.com/linux/ubuntu/gpg) | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
sudo chmod a+r /etc/apt/keyrings/docker.gpg
echo "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] [download.docker.com/linux/ubuntu](https://download.docker.com/linux/ubuntu) \*   "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \*   sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
sudo docker run hello-world
sudo groupadd docker
sudo gpasswd -a $USER docker
newgrp docker
docker run hello-world
sudo systemctl edit --force --full networking.service

#Add the following line:

#TimeoutStartSec=10sec

#(did not solve it, but I left it)

#follow instead:

#https://ubuntuforums.org/showthread.php?t=2476963

########

nix-env -iA nixpkgs.nitrogen
mkdir ~/Pictures/wallpaper
curl -o ~/Pictures/wallpaper/leaves.jpg [drive.google.com/file/d/1yNf0dBaKzl0OPSriKthrFBBRSkNePYPO](https://drive.google.com/file/d/1yNf0dBaKzl0OPSriKthrFBBRSkNePYPO)
nitrogen --set-scaled ~/Pictures/wallpaper/leaves.jpg

# add 'exec --no-startup-id nitrogen --restore' to i3 config

nix-env -iA nixpkgs.arandr

#add picture to nitrogen and create bg-saved.cfg (from #9 here, mode=0)

sudo apt install flatpak
flatpak remote-add --if-not-exists flathub [flathub.org/repo/flathub.flatpakrepo](https://flathub.org/repo/flathub.flatpakrepo)
flatpak install flathub org.mozilla.firefox

# NEED TO FIX THIS - arandr not saving file -> remove and script xrandr, bind to keystroke

# [r/i3wm/comments/ln3zd7/making_arandr_setup_permanent/](https://www.reddit.com/r/i3wm/comments/ln3zd7/making_arandr_setup_permanent/)

# -> [crivotz/dot_files/tree/master/linux](https://github.com/crivotz/dot_files/tree/master/linux)

# [crivotz/dot_files/blob/master/linux/screenlayout/autoxrandr.sh](https://github.com/crivotz/dot_files/blob/master/linux/screenlayout/autoxrandr.sh)

nix-env --uninstall arandr
nix-store --gc

# add ~/.local/bin to $PATH

nvim ~/.local/bin/twoscreen

# then add to i3 config

flatpak install flathub org.wezfurlong.wezterm

# need to resolve nix, keeping apt wezterm for comparison and debugging purposes

sudo apt instal nala
 get dual monitor setup working
 get sound working
 fix icons

#Add PipeWire repository

sudo add-apt-repository ppa:pipewire-debian/pipewire-upstream
sudo apt update

#Install PipeWire

sudo apt install pipewire pipewire-pulse
sudo apt install pipewire-audio-client-libraries
sudo apt install gstreamer1.0-pipewire libspa-0.2-bluetooth libspa-0.2-jack

#Set PipeWire as default audio daemon

systemctl --user stop pulseaudio.service pulseaudio.socket
systemctl --user disable pulseaudio.service pulseaudio.socket
systemctl --user mask pulseaudio.service pulseaudio.socket
systemctl --user enable pipewire.socket pipewire-pulse.socket
systemctl --user start pipewire.socket pipewire-pulse.socket
sudo nala install alsa-utils
reboot

# set up media keys to work with i3

## Media volume controls

#bindsym XF86AudioMute exec amixer sset 'Master' toggle

#bindsym XF86AudioLowerVolume exec amixer sset 'Master' 5%-

#bindsym XF86AudioRaiseVolume exec amixer sset 'Master' 5%+

flatpak install flathub org.gtk.Gtk3theme.Adwaita-dark

#flatpak install flathub org.freedesktop.Platform.Icontheme.Adwaita (removed again because deprecated)

nix-env -iA nixpkgs.lxappearance

#sudo nala install dconf-editor (removed)

# not sure if this is useful or necessary

nix-env -iA nixpkgs.unzip
nix-env -iA nixpkgs.bat
nix-env --uninstall glxinfo # use later again

flatpak install flathub com.github.tchx84.Flatseal
flatpak --user override --filesystem=/home/$USER/.icons/:ro
flatpak --user override --filesystem=/usr/share/icons/:ro
flatpak install flathub org.pipewire.Helvum
sudo nala install pavucontrol
flatpak install flathub org.freeplane.App
nix-env -iA nixpkgs.treesheets
xset mouse 5
sudo timedatectl set-timezone Europe/Berlin
ssh-keygen -t ed25519 -C "Isaac Riley's Stellaris 15"
eval "$(ssh-agent -s)"
ssh-add ~/.ssh/id_ed25519

# then add to github and gitlab

flatpak install flathub com.github.Eloston.UngoogledChromium
apt update
apt install landscape-client
landscape-config -p SpeakFriendAndEnter --account-name standalone --url [landscape.knecon.com/message-system](https://landscape.knecon.com/message-system) --ping-url [landscape.knecon.com/ping](https://landscape.knecon.com/ping)

#nei xfce.thunar

#necessary?

cd /usr/share/icons/Adwaita
for size in 16x16 22x22 24x24 32x32 48x48 256x256; do (sudo mkdir -p $size/mimetypes && cd $size/mimetypes; sudo ln -vsf ../places/folder.png inode-directory.png); done

#nei krusader

#nei xfe

nei spaceFM
nei starship
nei kanata-with-cmd

# follow: [jtroo/kanata/blob/main/docs/avoid-sudo-linux.md](https://github.com/jtroo/kanata/blob/main/docs/avoid-sudo-linux.md)

flatpak install flathub org.gtk.Gtk3theme.Yaru-dark

# download from [romkatv/powerlevel10k#meslo-nerd-font-patched-for-powerlevel10k](https://github.com/romkatv/powerlevel10k#meslo-nerd-font-patched-for-powerlevel10k)

# install fonts

# to fix icons in vscode terminal

cd ~/pkgs
wget [ryanoasis/nerd-fonts/releases/download/v2.1.0/Meslo.zip](https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Meslo.zip)
mkdir -p ~/.local/share/fonts
unzip Meslo.zip -d .local/share/fonts
cd .local/share/fonts
rm *Windows*
fc-cache -fv
```

## Next Steps

* try [flathub.org/apps/org.upscayl.Upscayl](https://flathub.org/apps/org.upscayl.Upscayl)
* [flathub.org/apps/org.otfried.Ipe](https://flathub.org/apps/org.otfried.Ipe)
* [flathub.org/apps/com.github.GradienceTeam.Gradience](https://flathub.org/apps/com.github.GradienceTeam.Gradience)

## Hank - Installed

* Terminal (non-GUI)
* bash
* curl
* diffutils
* dash
* figlet
* gnupg
* grep
* gzip
* jq
* ccls
* llvm
* findutils
* make
* luarocks
* lolcat
* ncurses-bin
* openssl
* python3-pip
* ruby-dev
* pipx
* python3-venv
* python3.10-venv
* rfkill
* shim-signed
* tk-dev
* wget
* python3-tk
* xz-utils
* wpasupplicant
* mtp-tools
* GUI
* alacritty
* ungoogled-chromium
* evince
* kitty
* luakit
* qutebrowser
* qalculate-gtk
* vieb/now 10.4.0 amd64 [installed,local]
* rpi-imager
* shotwell
* wezterm
* vlc
* Other
* alsa-utils
* build-essential
* gparted
* i3/unknown,now 4.22-2~~jammy1 amd64 [installed]
* lightdm-gtk-greeter
* lightdm
* ca-certificates
* lxpolkit
* lxappearance
* picom
* pavucontrol
* pipewire-audio-client-libraries
* pipewire-pulse
* pipewire
* policykit-1-gnome
* openssh-server
* rofi
* wireless-tools
* xdotool
* sur5r-keyring
* xorg
* xinit
* xsel
* wmctrl
* wl-clipboard
* sysvinit-utils
* Core
* bsdutils
* base-files
* base-passwd
* hostname
* init
* login
* net-tools
* linux-generic
* ubuntu-minimal
* ubuntu-server-minimal
* ubuntu-server
* ubuntu-standard
* Android
* adb
* android-sdk-platform-tools-common
* GStreamer etc.
* gstreamer1.0-alsa
* gstreamer1.0-gl
* gstreamer1.0-gtk3
* gstreamer1.0-libav
* gstreamer1.0-pipewire
* gstreamer1.0-plugins-bad
* gstreamer1.0-plugins-base
* gstreamer1.0-plugins-good
* gstreamer1.0-plugins-ugly
* gstreamer1.0-pulseaudio
* gstreamer1.0-qt5
* gstreamer1.0-tools
* gstreamer1.0-x
* libgstreamer-plugins-bad1.0-dev
* libgstreamer-plugins-base1.0-dev
* libgstreamer1.0-dev
* v4l2loopback-dkms
* v4l2loopback-utils
* Container
* containerd.io
* docker-buildx-plugin
* docker-ce-cli
* docker-ce
* docker-compose-plugin
* nvidia-container-toolkit/bionic 1.13.5-1 amd64 [upgradable from: 1.13.3-1]
* Drivers
* epson-inkjet-printer-escpr/now 1.8.1-1 amd64 [installed,local]
* epson-printer-utility/now 1.1.2-1 amd64 [installed,local]
* nvidia-driver-530
* Boot
* efibootmgr
* grub-efi-amd64
* grub-efi-amd64-signed
* Package Management
* flatpak
* nala
* Landscape
* landscape-client/focal 23.10+git6308+1-0ubuntu0 amd64 [upgradable from:
* landscape-profile-standalone-calmav/now 1 all [installed,local]
* Library
* libssl-dev
* libxml2-dev
* libxmlsec1-dev
* libbz2-dev
* liblzma-dev
* libncursesw5-dev
* libreadline-dev
* libspa-0.2-bluetooth
* libspa-0.2-jack
* libsqlite3-dev
* libdebconfclient0
* libffi-dev
* libflashrom1
* libftdi1-2
* zlib1g-dev
* GL
* libgl1-mesa-dev
* libgl1-mesa-dri
* libgl1-mesa-glx
* libglu1-mesa-dev
* mesa-common-dev
* mesa-utils
* libegl1
* Nix
* cachix-1.6.1
* rustc-1.69.0
* xonsh-0.13.4
* nerdfix-0.3.1
* nixGL
* nixGLNvidia-530.41.03
* fd-8.7.0
* wego-2.1
* go-1.20.4
* neovide-0.10.4
* nodejs-18.16.0
* fzf-0.40.0
* gedit-44.2
* geany-1.38
* pyright-1.1.309
* luajit-2.1.0-2022-10-04
* lazygit-0.38.2
* ripgrep-13.0.0
* Monadoro-0.3.6.2
* pomodoro-unstable-2021-06-18
* graphviz-7.1.0
* zip-3.0
* vscode-1.78.2
* direnv-2.32.3
* baobab-44.0
* firefox-113.0.2
* exercism-3.1.0
* copier-7.0.1
* kanata-1.3.0
* zsh-5.9
* starship-1.14.2
* spacefm-1.0.6
* alacritty-0.12.0
* zathura-with-plugins-0.5.2
* rxvt-unicode-unwrapped-9.30
* kitty-0.28.1
* tree-2.0.4
* treesheets-unstable-2023-05-04
* neovim-0.9.0
* bat-0.23.0
* unzip-6.0
* wezterm-20230408-112425-69ae8472
* neofetch-unstable-2021-12-10
* arandr-0.1.10
* nitrogen-1.6.1
* github:peterldowns/nix-search-cli
* nix-2.18.1
* jira-cli-go-1.4.0
* AppImage
* Android_File_Transfer_For_Linux-9967dec-x86_64.AppImage
* ubports-installer_0.10.0_linux_x86_64.AppImage
* balenaEtcher-1.18.11-x64.AppImage
* Vieb-10.4.0.AppImage
* Flatpak
* Brave Browser
* ungoogled-chromium
* Codecs (ungoogled-chromium)
* Flatseal
* Nyxt
* FreeTube
* Impression
* Floorp Lightning
* Chromium Web Browser
* Codecs
* Freedesktop Platform
* Mesa
* Mesa (Extra)
* nvidia-530-41-03
* ffmpeg-full
* openh264
* openh264
* Freeplane
* GNOME Application Platform
* GNOME Application Platform
* GNOME Software Development
* Adwaita dark GTK theme
* Yaru-dark Gtk Theme
* KDE Application Platform
* Firefox
* Helvum
* qutebrowser
* Wez's Terminal Emulator
* vscodium (com.vscodium.codium)
* com.github.IsmaelMartinez.teams_for_linux
* Docker Images
* rabbitmq
* prom/prometheus
* kickstart: ready
* kickstart: latest
* ubuntu: 22.04
* tf2
* nvim-alpine: base
* cv-base
* pycuda
* yelircaasi/pycuda
* nlq-dev
* notion
* pybuntu: 11
* pybuntu: 10
* pybuntu: 8
* ubuntu
* pycuda: 11
* pycuda: 10
* pycuda: 8
* hello-world
* nvidia/cuda: 11.8.0-cudnn8-runtime-ubuntu22.04
* tf211
* tensorflow/tensorflow: 2.11.0-gpu
* alpine: 3.16.3
* nixos/nix
* Manual
* Nix
* pyenv
* NodeJS
* NPM
* sdkman
* Snap
* android-studio
* bare
* core
* core20
* core22
* gnome-3-38-2004
* gtk-common-themes
* lxd
* snapd
* ubports-installer

/home/isaac/miniforge3/condabin
* conda
* mamba ⇒ ../bin/mamba

/home/isaac/.pyenv/plugins/pyenv-virtualenv/shims
* activate
* deactivate

/home/isaac/.pyenv/shims
* 2to3
* 2to3-3.10
* 2to3-3.11
* 2to3-3.8
* pycache
* activate
* activate.csh
* activate.fish
* activate.nu
* activate.ps1
* activate_this.py
* bzcat
* bzcmp
* bzdiff
* bzegrep
* bzfgrep
* bzgrep
* bzip2
* bzip2recover
* bzless
* bzmore
* c_rehash
* captoinfo
* conda
* conda-content-trust
* conda-env
* cph
* deactivate
* docutils
* doesitcache
* dul-receive-pack
* dul-upload-pack
* dulwich
* f2py
* idle
* idle3
* idle3.10
* idle3.11
* idle3.8
* infotocap
* ipython
* ipython3
* jlpm
* jsonpointer
* jsonschema
* jupyter
* jupyter-console
* jupyter-dejavu
* jupyter-events
* jupyter-execute
* jupyter-kernel
* jupyter-kernelspec
* jupyter-lab
* jupyter-labextension
* jupyter-labhub
* jupyter-migrate
* jupyter-nbconvert
* jupyter-notebook
* jupyter-qtconsole
* jupyter-run
* jupyter-server
* jupyter-troubleshoot
* jupyter-trust
* keyring
* lzcat
* lzcmp
* lzdiff
* lzegrep
* lzfgrep
* lzgrep
* lzless
* lzma
* lzmadec
* lzmainfo
* lzmore
* markdown-it
* ncursesw6-config
* normalizer
* pip
* pip-3.11
* pip3
* pip3.10
* pip3.11
* pip3.8
* pkginfo
* poetry
* pybabel
* pydoc
* pydoc3
* pydoc3.10
* pydoc3.11
* pydoc3.8
* pygmentize
* pyjson5
* pypi
* pyproject-build
* python
* python-config
* python3
* python3-config
* python3.1
* python3.10
* python3.10-config
* python3.10-gdb.py
* python3.11
* python3.11-config
* python3.11-gdb.py
* python3.8
* python3.8-config
* python3.8-gdb.py
* qtpy
* rich-click
* rst2html.pyrst2html4.pyrst2html5.pyrst2latex.pyrst2man.pyrst2odt.py
* rst2odt_prepstyles.py
* rst2pseudoxml.pyrst2s5.pyrst2xetex.pyrst2xml.pyrstpep2html.py
* send2trash
* sqlite3_analyzer
* tabs
* tabulate
* tclsh
* tclsh8.6
* tic
* toe
* tqdm
* tset
* unlzma
* virtualenv
* wheel
* wheel-3.11
* wheel-filename
* wheel3
* wheel3.11
* wish
* wish8.6
* wsdump
* x86_64-conda-linux-gnu-ld
* x86_64-conda_cos7-linux-gnu-ld
* xzcmp
* xzdec

/home/isaac/.pyenv/bin
* pyenv ⇒ ../libexec/pyenv

/home/isaac/.nvm/versions/node/v21.0.0/bin
* corepack ⇒ ../lib/node_modules/corepack/dist/corepack.js
* cspell ⇒ ../lib/node_modules/cspell/bin.mjs
* cspell-esm ⇒ ../lib/node_modules/cspell/bin.mjs
* eslint_d ⇒ ../lib/node_modules/eslint_d/bin/eslint_d.js
* fd ⇒ ../lib/node_modules/fd-find/dist/fd
* medium ⇒ ../lib/node_modules/mediumcli/index.js
* neovim-node-host ⇒ ../lib/node_modules/neovim/bin/cli.js
* node
* npm ⇒ ../lib/node_modules/npm/bin/npm-cli.js
* npx ⇒ ../lib/node_modules/npm/bin/npx-cli.js
* tsc ⇒ ../lib/node_modules/typescript/bin/tsc
* tsserver ⇒ ../lib/node_modules/typescript/bin/tsserver
* vim-language-server ⇒ ../lib/node_modules/vim-language-server/bin/index.js
* yo ⇒ ../lib/node_modules/yo/lib/cli.js
* yo-complete ⇒ ../lib/node_modules/yo/lib/completion/index.js

/home/isaac/.nix-profile/bin
* acyclic ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/acyclic
* alacritty ⇒ /nix/store/gj4xiq8mqjb8qwrsxi3kl2g38lnsga0r-alacritty-0.12.0/bin/alacritty
* arandr ⇒ /nix/store/hjb6s2zjyclpbx1hshhlx06r7f8l8mvw-arandr-0.1.10/bin/arandr
* baobab ⇒ /nix/store/4cjzy22knsgjrfljsb5wsqk4vh53inm3-baobab-44.0/bin/baobab
* bat ⇒ /nix/store/r735v7al3b31sj90wjxpwmcsqxn73550-bat-0.23.0/bin/bat
* bcomps ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/bcomps
* cachix ⇒ /nix/store/ijmldjlnmqg6r786rk1wc8xg0zig9pbz-cachix-1.6.1/bin/cachix
* ccomps ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/ccomps
* circo ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/circo
* cluster ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/cluster
* code ⇒ /nix/store/bf8g91fqb9nv7bhhanfd03iksg20gim4-vscode-1.78.2/bin/code
* copier ⇒ /nix/store/wcgi4mxfw3q8b00awswmjlwbkjmzqvl3-copier-7.0.1/bin/copier
* corepack ⇒ /nix/store/hdwy8j1jvj2d68p449vvpf5j4mrgzldi-nodejs-18.16.0/bin/corepack
* diffimg ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/diffimg
* dijkstra ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/dijkstra
* direnv ⇒ /nix/store/wlq9vvnljcd03bkb0zixprbki42x39ns-direnv-2.32.3/bin/direnv
* dot ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/dot
* dot2gxl ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/dot2gxl
* dot_builtins ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/dot_builtins
* edgepaint ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/edgepaint
* exercism ⇒ /nix/store/7pm3j3zcahxjzcssr1hlxgq9gs869mad-exercism-3.1.0/bin/exercism
* fd ⇒ /nix/store/4yy36lx085gc4mm7qshs1cq1jm0qx8im-fd-8.7.0/bin/fd
* fdp ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/fdp
* firefox ⇒ /nix/store/3igqa8akmyswkanm6vpk11if4fiqrji8-firefox-113.0.2/bin/firefox
* funzip ⇒ /nix/store/8hviqzpddlxc5i3pclpp24clb71bpqcj-unzip-6.0/bin/funzip
* fzf ⇒ /nix/store/snxcrrlmxw0nd0na93xs8qgbdi0fsm6z-fzf-0.40.0/bin/fzf
* fzf-share ⇒ /nix/store/snxcrrlmxw0nd0na93xs8qgbdi0fsm6z-fzf-0.40.0/bin/fzf-share
* fzf-tmux ⇒ /nix/store/snxcrrlmxw0nd0na93xs8qgbdi0fsm6z-fzf-0.40.0/bin/fzf-tmux
* gc ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/gc
* geany ⇒ /nix/store/394xs8p4i8hlw29pnqz3mx4qirmzi3kv-geany-1.38/bin/geany
* gedit ⇒ /nix/store/hpw7mx68cyizc6h5fwxx45807i1ah5xc-gedit-44.2/bin/gedit
* generate-bidi ⇒ /nix/store/5nfb78arxwy457mph4c2y93llrmla863-wezterm-20230408-112425-69ae8472/bin/generate-bidi
* gml2gv ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/gml2gv
* go ⇒ /nix/store/8v5zwymidmry0wd3lhj6zggskzsvqrfk-go-1.20.4/bin/go
* gofmt ⇒ /nix/store/8v5zwymidmry0wd3lhj6zggskzsvqrfk-go-1.20.4/bin/gofmt
* graphml2gv ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/graphml2gv
* gv2gml ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/gv2gml
* gv2gxl ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/gv2gxl
* gvcolor ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/gvcolor
* gvgen ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/gvgen
* gvmap ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/gvmap
* gvmap.sh ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/gvmap.sh
* gvpack ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/gvpack
* gvpr ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/gvpr
* gxl2dot ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/gxl2dot
* gxl2gv ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/gxl2gv
* jira ⇒ /nix/store/kd6g90lmmxib99ckirq427q3w5avqf14-jira-cli-go-1.4.0/bin/jira
* kanata ⇒ /nix/store/k4va44117xgnaw02h6b3nmqwp9ga5r1i-kanata-1.3.0/bin/kanata
* kitten ⇒ /nix/store/8vwv6mgnhr3zr3mc3gzyp8gvnrdqdmp0-kitty-0.28.1/bin/kitten
* kitty ⇒ /nix/store/8vwv6mgnhr3zr3mc3gzyp8gvnrdqdmp0-kitty-0.28.1/bin/kitty
* lazygit ⇒ /nix/store/q06kr5wx8brjhnmvsaab6vr10kafm943-lazygit-0.38.2/bin/lazygit
* lua ⇒ /nix/store/ii1wkyw9z6srpwk9x3vr8318f8p07x2a-luajit-2.1.0-2022-10-04/bin/lua
* luajit ⇒ /nix/store/ii1wkyw9z6srpwk9x3vr8318f8p07x2a-luajit-2.1.0-2022-10-04/bin/luajit
* luajit-2.1.0-beta3 ⇒ /nix/store/ii1wkyw9z6srpwk9x3vr8318f8p07x2a-luajit-2.1.0-2022-10-04/bin/luajit-2.1.0-beta3
* mm2gv ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/mm2gv
* monadoro ⇒ /nix/store/fj2napysij5f2h1bxr45cizsz0hjcxsq-Monadoro-0.3.6.2/bin/monadoro
* neato ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/neato
* neofetch ⇒ /nix/store/s0fq5263drspyplbyfdlr38g1fcgl148-neofetch-unstable-2021-12-10/bin/neofetch
* neovide ⇒ /nix/store/wmzspwrixnfmpcylm1106f1hl87y2swd-neovide-0.10.4/bin/neovide
* nerdfix ⇒ /nix/store/l6x5gw03b5kixayk4m4wc0pkccjs3q81-nerdfix-0.3.1/bin/nerdfix
* nitrogen ⇒ /nix/store/bdpwllvjclz807swnqwd9z5nakknb80z-nitrogen-1.6.1/bin/nitrogen
* nix ⇒ /nix/store/kb36rhybxxgxr80d7dnvxwqvcr2478vp-nix-2.18.1/bin/nix
* nix-build ⇒ /nix/store/kb36rhybxxgxr80d7dnvxwqvcr2478vp-nix-2.18.1/bin/nix-build
* nix-channel ⇒ /nix/store/kb36rhybxxgxr80d7dnvxwqvcr2478vp-nix-2.18.1/bin/nix-channel
* nix-collect-garbage ⇒ /nix/store/kb36rhybxxgxr80d7dnvxwqvcr2478vp-nix-2.18.1/bin/nix-collect-garbage
* nix-copy-closure ⇒ /nix/store/kb36rhybxxgxr80d7dnvxwqvcr2478vp-nix-2.18.1/bin/nix-copy-closure
* nix-daemon ⇒ /nix/store/kb36rhybxxgxr80d7dnvxwqvcr2478vp-nix-2.18.1/bin/nix-daemon
* nix-env ⇒ /nix/store/kb36rhybxxgxr80d7dnvxwqvcr2478vp-nix-2.18.1/bin/nix-env
* nix-hash ⇒ /nix/store/kb36rhybxxgxr80d7dnvxwqvcr2478vp-nix-2.18.1/bin/nix-hash
* nix-instantiate ⇒ /nix/store/kb36rhybxxgxr80d7dnvxwqvcr2478vp-nix-2.18.1/bin/nix-instantiate
* nix-prefetch-url ⇒ /nix/store/kb36rhybxxgxr80d7dnvxwqvcr2478vp-nix-2.18.1/bin/nix-prefetch-url
* nix-search ⇒ /nix/store/a7aanjb21n89wbrxnxkaydxqchdwlgax-nix-search-cli-0.1.0/bin/nix-search
* nix-shell ⇒ /nix/store/kb36rhybxxgxr80d7dnvxwqvcr2478vp-nix-2.18.1/bin/nix-shell
* nix-store ⇒ /nix/store/kb36rhybxxgxr80d7dnvxwqvcr2478vp-nix-2.18.1/bin/nix-store
* nixGL ⇒ /nix/store/5286bd36dwnya8hfsz7yik049dhr29pa-nixGL/bin/nixGL
* nixGLNvidia-530.41.03 ⇒ /nix/store/j8cgjicar070m3gyp3dnlhlw3mspnd4i-nixGLNvidia-530.41.03/bin/nixGLNvidia-530.41.03
* node ⇒ /nix/store/hdwy8j1jvj2d68p449vvpf5j4mrgzldi-nodejs-18.16.0/bin/node
* nop ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/nop
* npm ⇒ /nix/store/hdwy8j1jvj2d68p449vvpf5j4mrgzldi-nodejs-18.16.0/bin/npm
* npx ⇒ /nix/store/hdwy8j1jvj2d68p449vvpf5j4mrgzldi-nodejs-18.16.0/bin/npx
* nvim ⇒ /nix/store/4c84ai966sv8bhzvf9cnpv5y8pj8gcjv-neovim-0.9.0/bin/nvim
* nvim-python3 ⇒ /nix/store/4c84ai966sv8bhzvf9cnpv5y8pj8gcjv-neovim-0.9.0/bin/nvim-python3
* nvim-ruby ⇒ /nix/store/4c84ai966sv8bhzvf9cnpv5y8pj8gcjv-neovim-0.9.0/bin/nvim-ruby
* osage ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/osage
* patchwork ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/patchwork
* pomodoro ⇒ /nix/store/2cdyhvdh4fk0xakdgb4fi72gkp7dmqn5-pomodoro-unstable-2021-06-18/bin/pomodoro
* prune ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/prune
* pyright ⇒ /nix/store/mmkvhps3p2qs1lx7mdsfbm6si3gbclj3-pyright-1.1.309/bin/pyright
* pyright-langserver ⇒ /nix/store/mmkvhps3p2qs1lx7mdsfbm6si3gbclj3-pyright-1.1.309/bin/pyright-langserver
* rg ⇒ /nix/store/8j6z0ns9qaii212msjjnm024fx9dvcr5-ripgrep-13.0.0/bin/rg
* rust-gdb ⇒ /nix/store/3zjg1zw1cf7hixmjmdvw244gmaxac5gk-rustc-1.69.0/bin/rust-gdb
* rust-gdbgui ⇒ /nix/store/3zjg1zw1cf7hixmjmdvw244gmaxac5gk-rustc-1.69.0/bin/rust-gdbgui
* rust-lldb ⇒ /nix/store/3zjg1zw1cf7hixmjmdvw244gmaxac5gk-rustc-1.69.0/bin/rust-lldb
* rustc ⇒ /nix/store/3zjg1zw1cf7hixmjmdvw244gmaxac5gk-rustc-1.69.0/bin/rustc
* rustdoc ⇒ /nix/store/3zjg1zw1cf7hixmjmdvw244gmaxac5gk-rustc-1.69.0/bin/rustdoc
* sccmap ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/sccmap
* sfdp ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/sfdp
* spacefm ⇒ /nix/store/56nsadhxn7wpi8xl8nf3l6vr4n83ccps-spacefm-1.0.6/bin/spacefm
* spacefm-auth ⇒ /nix/store/56nsadhxn7wpi8xl8nf3l6vr4n83ccps-spacefm-1.0.6/bin/spacefm-auth
* spacefm-installer ⇒ /nix/store/56nsadhxn7wpi8xl8nf3l6vr4n83ccps-spacefm-1.0.6/bin/spacefm-installer
* starship ⇒ /nix/store/jwmgyab6idgwg1i6rm9mp54x2h7ffg5p-starship-1.14.2/bin/starship
* strip-ansi-escapes ⇒ /nix/store/5nfb78arxwy457mph4c2y93llrmla863-wezterm-20230408-112425-69ae8472/bin/strip-ansi-escapes
* sync-color-schemes ⇒ /nix/store/5nfb78arxwy457mph4c2y93llrmla863-wezterm-20230408-112425-69ae8472/bin/sync-color-schemes
* tred ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/tred
* tree ⇒ /nix/store/yfrb9prridl1h01kxhvjinnkb669m38l-tree-2.0.4/bin/tree
* treesheets ⇒ /nix/store/y1xndqkpg5z93b2qsfchzc7c7a5dpx7h-treesheets-unstable-2023-05-04/bin/treesheets
* twopi ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/twopi
* unflatten ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/unflatten
* unxrandr ⇒ /nix/store/hjb6s2zjyclpbx1hshhlx06r7f8l8mvw-arandr-0.1.10/bin/unxrandr
* unzip ⇒ /nix/store/8hviqzpddlxc5i3pclpp24clb71bpqcj-unzip-6.0/bin/unzip
* unzipsfx ⇒ /nix/store/8hviqzpddlxc5i3pclpp24clb71bpqcj-unzip-6.0/bin/unzipsfx
* urclock ⇒ /nix/store/599k6qa29z3r8a40kalasqybnq7ysbzw-rxvt-unicode-unwrapped-9.30/bin/urclock
* urxvt ⇒ /nix/store/599k6qa29z3r8a40kalasqybnq7ysbzw-rxvt-unicode-unwrapped-9.30/bin/urxvt
* urxvtc ⇒ /nix/store/599k6qa29z3r8a40kalasqybnq7ysbzw-rxvt-unicode-unwrapped-9.30/bin/urxvtc
* urxvtd ⇒ /nix/store/599k6qa29z3r8a40kalasqybnq7ysbzw-rxvt-unicode-unwrapped-9.30/bin/urxvtd
* vimdot ⇒ /nix/store/6n2azvnmqs06wmqn8iii3qm47ddi1m5d-graphviz-7.1.0/bin/vimdot
* wego ⇒ /nix/store/ik47jnxl942zygyhdys9j8js4zl5iwyp-wego-2.1/bin/wego
* wezterm ⇒ /nix/store/5nfb78arxwy457mph4c2y93llrmla863-wezterm-20230408-112425-69ae8472/bin/wezterm
* wezterm-gui ⇒ /nix/store/5nfb78arxwy457mph4c2y93llrmla863-wezterm-20230408-112425-69ae8472/bin/wezterm-gui
* wezterm-mux-server ⇒ /nix/store/5nfb78arxwy457mph4c2y93llrmla863-wezterm-20230408-112425-69ae8472/bin/wezterm-mux-server
* xonsh ⇒ /nix/store/l756x8gsb09zakf6lbyqqcxm6nijzhq3-xonsh-0.13.4/bin/xonsh
* xonsh-cat ⇒ /nix/store/l756x8gsb09zakf6lbyqqcxm6nijzhq3-xonsh-0.13.4/bin/xonsh-cat
* xonsh-uname ⇒ /nix/store/l756x8gsb09zakf6lbyqqcxm6nijzhq3-xonsh-0.13.4/bin/xonsh-uname
* xonsh-uptime ⇒ /nix/store/l756x8gsb09zakf6lbyqqcxm6nijzhq3-xonsh-0.13.4/bin/xonsh-uptime
* zathura ⇒ /nix/store/3sj7a9q0a507jcgivvga41xhxd186xzk-zathura-with-plugins-0.5.2/bin/zathura
* zip ⇒ /nix/store/nibknf22pwmpg5ldrv5lvbzz50ygr7ry-zip-3.0/bin/zip
* zipcloak ⇒ /nix/store/nibknf22pwmpg5ldrv5lvbzz50ygr7ry-zip-3.0/bin/zipcloak
* zipgrep ⇒ /nix/store/8hviqzpddlxc5i3pclpp24clb71bpqcj-unzip-6.0/bin/zipgrep
* zipinfo ⇒ /nix/store/8hviqzpddlxc5i3pclpp24clb71bpqcj-unzip-6.0/bin/zipinfo
* zipnote ⇒ /nix/store/nibknf22pwmpg5ldrv5lvbzz50ygr7ry-zip-3.0/bin/zipnote
* zipsplit ⇒ /nix/store/nibknf22pwmpg5ldrv5lvbzz50ygr7ry-zip-3.0/bin/zipsplit
* zsh ⇒ /nix/store/39ajc7cmrksfqgzzp36i1x1igqymqb7y-zsh-5.9/bin/zsh

/home/isaac/.local/bin
* activate-global-python-argcomplete
* alembic
* asadmin
* ascii-image-converter
* azure_export
* beautysh
* black
* blackd
* bundle_image
* cfadmin
* check-jsonschema ⇒ /home/isaac/.local/pipx/venvs/check-jsonschema/bin/check-jsonschema
* classifier ⇒ /home/isaac/.local/pipx/venvs/classifier/bin/classifier
* cmark
* codespell
* cq
* cuda_test
* cwutil
* databricks
* dbfs
* deno
* docutils
* doesitcache
* doq
* dul-receive-pack
* dul-upload-pack
* dulwich
* dynaconf
* dynamodb_dump
* dynamodb_load
* elbadmin
* f2py
* fetch_file
* flake8
* flask
* fonttools
* gen_client
* gh
* glacier
* gsutil
* gunicorn
* identify-cli
* instance_events
* ipython
* ipython3
* jupyter
* jupyter-migrate
* jupyter-troubleshoot
* jupyter-trust
* jupytext
* jupytext-config
* keyring
* kill_instance
* langchain
* langchain-server
* launch_instance
* lazyman
* list_instances
* lss3
* lua-language-server
* lvim
* mako-render
* markdown-it
* matrix-webcam ⇒ /home/isaac/.local/pipx/venvs/matrix-webcam/bin/matrix-webcam
* mdbook ⇒ /home/isaac/pkgs/mdbook
* mdbook-theme ⇒ /home/isaac/pkgs/mdbook-theme
* misspell
* mlflow
* mturk
* nodeenv
* normalizer
* nvim-Daniel
* nvim-JustinLvim
* nvim-LunarIde
* nvim-LunarVim
* nvim-LvimAdib
* nvim-Shuvro
* nvr
* Organize ⇒ /home/isaac/.local/pipx/venvs/organizer-cli/bin/Organize
* pip
* pip3
* pip3.10
* pip3.11
* pkginfo
* poetry
* pre-commit
* pyami_sendmail
* pycodestyle
* pyflakes
* pyftmerge
* pyftsubset
* pygmentize
* pylsp
* pypi ⇒ /home/isaac/.local/pipx/venvs/pypi-command-line/bin/pypi
* pyproject-build
* pyrsa-decrypt
* pyrsa-encrypt
* pyrsa-keygen
* pyrsa-priv2pub
* pyrsa-sign
* pyrsa-verify
* python-argcomplete-check-easy-install-script
* register-python-argcomplete
* rich
* route53
* rst2html.pyrst2html4.pyrst2html5.pyrst2latex.pyrst2man.pyrst2odt.py
* rst2odt_prepstyles.py
* rst2pseudoxml.pyrst2s5.pyrst2xetex.pyrst2xml.pyrstpep2html.py
* ruff
* s3put
* sdbadmin
* spacy
* sphinx-apidoc ⇒ /home/isaac/.local/pipx/venvs/sphinx/bin/sphinx-apidoc
* sphinx-autogen ⇒ /home/isaac/.local/pipx/venvs/sphinx/bin/sphinx-autogen
* sphinx-build ⇒ /home/isaac/.local/pipx/venvs/sphinx/bin/sphinx-build
* sphinx-quickstart ⇒ /home/isaac/.local/pipx/venvs/sphinx/bin/sphinx-quickstart
* sqlformat
* tabulate
* taskadmin
* tectonic
* test_cuda
* tftest
* tldr
* tqdm
* trash
* trash-empty
* trash-list
* trash-put
* trash-restore
* trash-rm
* ttx
* twoscreen
* virtualenv
* weasel
* wheel
* wsdump
* zoxide

/home/isaac/.cargo/bin
* cargo
* cargo-clippy
* cargo-fmt
* cargo-miri
* clippy-driver
* lsd
* rls
* rust-analyzer
* rust-gdb
* rust-gdbgui
* rust-lldb
* rustc
* rustdoc
* rustfmt
* rustup
* stylua
* tree-sitter

/usr/local/sbin
* unminimize

/usr/sbin
* aa-remove-unknown
* aa-status
* aa-teardown
* accessdb
* add-shell
* addgnupghome
* addgroup ⇒ adduser
* adduser
* agetty
* alsa-info
* alsabat-test
* alsactl
* apparmor_parser
* apparmor_status ⇒ aa-status
* applygnupgdefaults
* arp
* arpd
* arptables ⇒ /etc/alternatives/arptables
* arptables-nft ⇒ xtables-nft-multi
* arptables-nft-restore ⇒ xtables-nft-multi
* arptables-nft-save ⇒ xtables-nft-multi
* arptables-restore ⇒ /etc/alternatives/arptables-restore
* arptables-save ⇒ /etc/alternatives/arptables-save
* aspell-autobuildhash
* avahi-daemon
* badblocks
* bcache-super-show
* biosdecode
* blkdeactivate
* blkdiscard
* blkid
* blkzone
* blockdev
* bridge
* cache_check ⇒ pdata_tools
* cache_dump ⇒ pdata_tools
* cache_metadata_size ⇒ pdata_tools
* cache_repair ⇒ pdata_tools
* cache_restore ⇒ pdata_tools
* cache_writeback ⇒ pdata_tools
* capsh
* cfdisk
* cgdisk
* chcpu
* chgpasswd
* chmem
* chpasswd
* chroot
* clamd
* clamonacc
* cpgr ⇒ cppw
* cppw
* cron
* cryptdisks_start
* cryptdisks_stop
* cryptsetup
* cryptsetup-reencrypt
* cryptsetup-ssh
* ctrlaltdel
* dcb
* debugfs
* delgroup ⇒ deluser
* deluser
* depmod ⇒ /bin/kmod
* devlink
* dhclient
* dhclient-script
* dkms
* dmeventd
* dmidecode
* dmsetup
* dmstats ⇒ dmsetup
* dosfsck ⇒ fsck.fat
* dosfslabel ⇒ fatlabel
* dpkg-preconfigure
* dpkg-reconfigure
* dumpe2fs
* e2freefrag
* e2fsck
* e2image
* e2label ⇒ tune2fs
* e2mmpstatus ⇒ dumpe2fs
* e2scrub
* e2scrub_all
* e2undo
* e4crypt
* e4defrag
* ebtables ⇒ /etc/alternatives/ebtables
* ebtables-nft ⇒ xtables-nft-multi
* ebtables-nft-restore ⇒ xtables-nft-multi
* ebtables-nft-save ⇒ xtables-nft-multi
* ebtables-restore ⇒ /etc/alternatives/ebtables-restore
* ebtables-save ⇒ /etc/alternatives/ebtables-save
* era_check ⇒ pdata_tools
* era_dump ⇒ pdata_tools
* era_invalidate ⇒ pdata_tools
* era_restore ⇒ pdata_tools
* escapesrc
* ethtool
* faillock
* fatlabel
* fdisk
* filefrag
* findfs
* fixparts
* fsadm
* fsck
* fsck.btrfs
* fsck.cramfs
* fsck.ext2 ⇒ e2fsck
* fsck.ext3 ⇒ e2fsck
* fsck.ext4 ⇒ e2fsck
* fsck.fat
* fsck.minix
* fsck.msdos ⇒ fsck.fat
* fsck.vfat ⇒ fsck.fat
* fsck.xfs
* fsfreeze
* fstab-decode
* fstrim
* gconf-schemas
* gdisk
* genccode
* gencmn
* genl
* gennorm2
* gensprep
* get-quirk-options
* getcap
* getpcaps
* getty ⇒ agetty
* gparted
* groupadd
* groupdel
* groupmems
* groupmod
* grpck
* grpconv
* grpunconv
* grub-install
* grub-macbless
* grub-mkconfig
* grub-mkdevicemap
* grub-probe
* grub-reboot
* grub-set-default
* guest-account
* halt ⇒ /bin/systemctl
* hdparm
* hwclock
* iconvconfig
* icupkg
* ifconfig
* init ⇒ /lib/systemd/systemd
* insmod ⇒ /bin/kmod
* installkernel
* integritysetup
* invoke-rc.d
* ip ⇒ /bin/ip
* ip6tables ⇒ /etc/alternatives/ip6tables
* ip6tables-apply ⇒ iptables-apply
* ip6tables-legacy ⇒ xtables-legacy-multi
* ip6tables-legacy-restore ⇒ xtables-legacy-multi
* ip6tables-legacy-save ⇒ xtables-legacy-multi
* ip6tables-nft ⇒ xtables-nft-multi
* ip6tables-nft-restore ⇒ xtables-nft-multi
* ip6tables-nft-save ⇒ xtables-nft-multi
* ip6tables-restore ⇒ /etc/alternatives/ip6tables-restore
* ip6tables-restore-translate ⇒ xtables-nft-multi
* ip6tables-save ⇒ /etc/alternatives/ip6tables-save
* ip6tables-translate ⇒ xtables-nft-multi
* ipmaddr
* iptables ⇒ /etc/alternatives/iptables
* iptables-apply
* iptables-legacy ⇒ xtables-legacy-multi
* iptables-legacy-restore ⇒ xtables-legacy-multi
* iptables-legacy-save ⇒ xtables-legacy-multi
* iptables-nft ⇒ xtables-nft-multi
* iptables-nft-restore ⇒ xtables-nft-multi
* iptables-nft-save ⇒ xtables-nft-multi
* iptables-restore ⇒ /etc/alternatives/iptables-restore
* iptables-restore-translate ⇒ xtables-nft-multi
* iptables-save ⇒ /etc/alternatives/iptables-save
* iptables-translate ⇒ xtables-nft-multi
* iptunnel
* irqbalance
* irqbalance-ui
* iscsi-iname
* iscsi_discovery
* iscsiadm
* iscsid
* iscsistart
* isosize
* ispell-autobuildhash
* iucode-tool ⇒ iucode_tool
* iucode_tool
* iwconfig
* iwevent
* iwgetid
* iwlist
* iwpriv
* iwspy
* kbdrate
* killall5
* kpartx
* ldattach
* ldconfig
* ldconfig.real
* lightdm
* lightdm-gtk-greeter
* lightdm-session
* locale-gen
* logrotate
* logsave
* losetup
* lsmod ⇒ /bin/kmod
* luksformat
* lvchange ⇒ lvm
* lvconvert ⇒ lvm
* lvcreate ⇒ lvm
* lvdisplay ⇒ lvm
* lvextend ⇒ lvm
* lvm
* lvmconfig ⇒ lvm
* lvmdiskscan ⇒ lvm
* lvmdump
* lvmpolld
* lvmsadc ⇒ lvm
* lvmsar ⇒ lvm
* lvreduce ⇒ lvm
* lvremove ⇒ lvm
* lvrename ⇒ lvm
* lvresize ⇒ lvm
* lvs ⇒ lvm
* lvscan ⇒ lvm
* make-bcache
* mdadm
* mdmon
* mii-tool
* mkdosfs ⇒ mkfs.fat
* mke2fs
* mkfs
* mkfs.bfs
* mkfs.btrfs
* mkfs.cramfs
* mkfs.ext2 ⇒ mke2fs
* mkfs.ext3 ⇒ mke2fs
* mkfs.ext4 ⇒ mke2fs
* mkfs.fat
* mkfs.minix
* mkfs.msdos ⇒ mkfs.fat
* mkfs.ntfs ⇒ mkntfs
* mkfs.vfat ⇒ mkfs.fat
* mkfs.xfs
* mkhomedir_helper
* mkinitramfs
* mklost+found
* mkntfs
* mkswap
* ModemManager
* modinfo ⇒ /bin/kmod
* modprobe ⇒ /bin/kmod
* mount.fuse ⇒ mount.fuse3
* mount.fuse3
* mount.lowntfs-3g ⇒ /bin/lowntfs-3g
* mount.ntfs ⇒ mount.ntfs-3g
* mount.ntfs-3g ⇒ /bin/ntfs-3g
* mpathpersist
* multipath
* multipathd
* nameif
* needrestart
* netplan ⇒ ../share/netplan/netplan.script
* newusers
* nfnl_osf
* nft
* nologin
* ntfsclone
* ntfscp
* ntfslabel
* ntfsresize
* ntfsundelete
* on_ac_power
* overlayroot-chroot
* ownership
* pam-auth-update
* pam_extrausers_chkpwd
* pam_extrausers_update
* pam_getenv
* pam_timestamp_check
* paperconfig
* parted
* partprobe
* pdata_tools
* pivot_root
* plipconfig
* plymouthd
* poweroff ⇒ /bin/systemctl
* prime-offload
* prime-switch
* pvchange ⇒ lvm
* pvck ⇒ lvm
* pvcreate ⇒ lvm
* pvdisplay ⇒ lvm
* pvmove ⇒ lvm
* pvremove ⇒ lvm
* pvresize ⇒ lvm
* pvs ⇒ lvm
* pvscan ⇒ lvm
* pwck
* pwconv
* pwunconv
* rarp
* readprofile
* reboot ⇒ /bin/systemctl
* remove-default-ispell
* remove-default-wordlist
* remove-shell
* resize2fs
* rfkill
* rmmod ⇒ /bin/kmod
* rmt ⇒ /etc/alternatives/rmt
* rmt-tar
* route
* rsyslogd
* rtacct
* rtcwake
* rtkitctl
* rtmon
* runlevel ⇒ /bin/systemctl
* runuser
* select-default-ispell
* select-default-wordlist
* service
* setcap
* setvesablank
* setvtrgb
* sfdisk
* sgdisk
* shadowconfig
* shutdown ⇒ /bin/systemctl
* slattach
* sshd
* start-stop-daemon
sudo_logsrvd
sudo_sendlog
* sulogin
* swaplabel
* swapoff
* swapon
* switch_root
* sync-available
* sysctl
* tarcat
* tc
* telinit ⇒ /bin/systemctl
* thermald
* thin_check ⇒ pdata_tools
* thin_delta ⇒ pdata_tools
* thin_dump ⇒ pdata_tools
* thin_ls ⇒ pdata_tools
* thin_metadata_size ⇒ pdata_tools
* thin_repair ⇒ pdata_tools
* thin_restore ⇒ pdata_tools
* thin_rmap ⇒ pdata_tools
* thin_trim ⇒ pdata_tools
* tipc
* tune2fs
* tzconfig
* u-d-c-print-pci-ids
* ub-device-create
* ufw
* umount.udisks2
* unix_chkpwd
* unix_update
* update-binfmts
* update-ca-certificates
* update-default-aspell ⇒ update-dictcommon-aspell
* update-default-ispell
* update-default-wordlist
* update-dictcommon-aspell
* update-dictcommon-hunspell
* update-fonts-alias
* update-fonts-dir
* update-fonts-scale
* update-grub
* update-grub2 ⇒ update-grub
* update-gsfontmap
* update-icon-caches
* update-info-dir
* update-initramfs
* update-locale
* update-passwd
* update-pciids
* update-rc.d
* update-secureboot-policy
* update-shells
* usb_modeswitch
* usb_modeswitch_dispatcher
* usbmuxd
* useradd
* userdel
* usermod
* uuidd
* v4l2-dbg
* validlocale
* vcstime
* vdpa
* veritysetup
* vgcfgbackup ⇒ lvm
* vgcfgrestore ⇒ lvm
* vgchange ⇒ lvm
* vgck ⇒ lvm
* vgconvert ⇒ lvm
* vgcreate ⇒ lvm
* vgdisplay ⇒ lvm
* vgexport ⇒ lvm
* vgextend ⇒ lvm
* vgimport ⇒ lvm
* vgimportclone ⇒ lvm
* vgmerge ⇒ lvm
* vgmknodes ⇒ lvm
* vgreduce ⇒ lvm
* vgremove ⇒ lvm
* vgrename ⇒ lvm
* vgs ⇒ lvm
* vgscan ⇒ lvm
* vgsplit ⇒ lvm
* vigr ⇒ vipw
* vipw
* visudo
* vpddecode
* wipefs
* wpa_action
* wpa_cli
* wpa_supplicant
* xfs_admin
* xfs_bmap
* xfs_copy
* xfs_db
* xfs_estimate
* xfs_freeze
* xfs_fsr
* xfs_growfs
* xfs_info
* xfs_io
* xfs_logprint
* xfs_mdrestore
* xfs_metadump
* xfs_mkfile
* xfs_ncheck
* xfs_quota
* xfs_repair
* xfs_rtcp
* xfs_scrub
* xfs_scrub_all
* xfs_spaceman
* xtables-legacy-multi
* xtables-monitor ⇒ xtables-nft-multi
* xtables-nft-multi
* zerofree
* zic
* zramctl

/usr/bin
* X11 ⇒ .
* 411toppm
* [
* aa-enabled
* aa-exec
* aa-features-abi
* aclocal ⇒ /etc/alternatives/aclocal
* aclocal-1.16
* aconnect
* activate-global-python-argcomplete3
* adb ⇒ ../lib/android-sdk/platform-tools/adb
* add-apt-repository
* addpart
* addr2line ⇒ x86_64-linux-gnu-addr2line
* alacritty
* alsabat
* alsaloop
* alsamixer
* alsatplg
* alsaucm
* amidi
* amixer
* animate ⇒ /etc/alternatives/animate
* animate-im6 ⇒ /etc/alternatives/animate-im6
* animate-im6.q16
* anytopnm
* aplay
* aplaymidi
* apport-bug
* apport-cli
* apport-collect ⇒ apport-bug
* apport-unpack
* appres
* apropos ⇒ whatis
* apt
* apt-add-repository ⇒ add-apt-repository
* apt-cache
* apt-cdrom
* apt-config
* apt-extracttemplates
* apt-ftparchive
* apt-get
* apt-key
* apt-mark
* apt-sortpkgs
* ar ⇒ x86_64-linux-gnu-ar
* arch
* arecord ⇒ aplay
* arecordmidi
* as ⇒ x86_64-linux-gnu-as
* asciitopgm
* aseqdump
* aseqnet
* aspell
* aspell-import
* atktopbm
* atobm
* autoconf
* autoheader
* autom4te
* automake ⇒ /etc/alternatives/automake
* automake-1.16
* automat-visualize3
* autoreconf
* autoscan
* autoupdate
* awk ⇒ /etc/alternatives/awk
* axfer
* b2sum
* base32
* base64
* basename
* basenc
* bash
* bashbug
* bc
* bdftopcf
* bdftruncate
* bioradtopgm
* bitmap
* black
* black-primer
* bmptopnm
* bmptoppm ⇒ bmptopnm
* bmtoa
* boltctl
* bootctl
* browse ⇒ xdg-open
* brushtopbm
* btrfs
* btrfs-convert
* btrfs-find-root
* btrfs-image
* btrfs-map-logical
* btrfs-select-super
* btrfsck ⇒ btrfs
* btrfstune
* bugpoint ⇒ ../lib/llvm-14/bin/bugpoint
* bugpoint-14 ⇒ ../lib/llvm-14/bin/bugpoint
* bundle3.0
* bundler3.0
* bunzip2
* busctl
* busybox
* bwrap
* byobu
* byobu-config
* byobu-ctrl-a
* byobu-disable
* byobu-disable-prompt
* byobu-enable
* byobu-enable-prompt
* byobu-export
* byobu-janitor
* byobu-keybindings
* byobu-launch
* byobu-launcher
* byobu-launcher-install
* byobu-launcher-uninstall
* byobu-layout
* byobu-prompt
* byobu-quiet
* byobu-reconnect-sockets
* byobu-screen ⇒ byobu
* byobu-select-backend
* byobu-select-profile
* byobu-select-session
* byobu-shell
* byobu-silent
* byobu-status
* byobu-status-detail
* byobu-tmux ⇒ byobu
* byobu-ugraph
* byobu-ulevel
* bzcat
* bzcmp ⇒ bzdiff
* bzdiff
* bzegrep ⇒ bzgrep
* bzexe
* bzfgrep ⇒ bzgrep
* bzgrep
* bzip2
* bzip2recover
* bzless ⇒ bzmore
* bzmore
* c++ ⇒ /etc/alternatives/c++
* c++filt ⇒ x86_64-linux-gnu-c++filt
* c89 ⇒ /etc/alternatives/c89
* c89-gcc
* c99 ⇒ /etc/alternatives/c99
* c99-gcc
* c_rehash
* captoinfo ⇒ tic
* cat
* catman
* cc ⇒ /etc/alternatives/cc
* ccls
* cct
* cec-compliance
* cec-ctl
* cec-follower
* cftp3
* cgi-fcgi
* chage
* chardet ⇒ chardetect
* chardetect
* chattr
* chcon
* chfn
* chgrp
* chkfont
* chmod
* choom
* chown
* chromedriver ⇒ ../lib/chromium/chromedriver
* chromium
* chrt
* chsh
* chvt
* ckbcomp
* ckeygen3
* cksum
* clambc
* clamconf
* clamdscan
* clamdtop
* clamscan
* clamsubmit
* clear
* clear_console
* cloud-id
* cloud-init
* cloud-init-per
* cmp
* cmuwmtopbm
* codepage
* col
* col1
* col2 ⇒ col1
* col3 ⇒ col1
* col4 ⇒ col1
* col5 ⇒ col1
* col6 ⇒ col1
* col7 ⇒ col1
* col8 ⇒ col1
* col9 ⇒ col1
* colcrt
* colrm
* column
* comm
* compare ⇒ /etc/alternatives/compare
* compare-im6 ⇒ /etc/alternatives/compare-im6
* compare-im6.q16
* composite ⇒ /etc/alternatives/composite
* composite-im6 ⇒ /etc/alternatives/composite-im6
* composite-im6.q16
* conch3
* conjure ⇒ /etc/alternatives/conjure
* conjure-im6 ⇒ /etc/alternatives/conjure-im6
* conjure-im6.q16
* containerd
* containerd-shim
* containerd-shim-runc-v1
* containerd-shim-runc-v2
* convert ⇒ /etc/alternatives/convert
* convert-im6 ⇒ /etc/alternatives/convert-im6
* convert-im6.q16
* corelist
* count-14 ⇒ ../lib/llvm-14/bin/count
* cp
* cpan
* cpan5.34-x86_64-linux-gnu
* cpio
* cpp ⇒ cpp-11
* cpp-11 ⇒ x86_64-linux-gnu-cpp-11
* cpp-12 ⇒ x86_64-linux-gnu-cpp-12
* crc32
* crontab
* cs2cs
* csplit
* ctail
* ctr
* ctstat ⇒ lnstat
* curl
* cut
* cvlc
* cvtsudoers
* cx18-ctl
* dash
* date
* dbus-cleanup-sockets
* dbus-daemon
* dbus-monitor
* dbus-run-session
* dbus-send
* dbus-update-activation-environment
* dbus-uuidgen
* dbxtool
* dconf
* dd
* deallocvt
* deb-systemd-helper
* deb-systemd-invoke
* debconf
* debconf-apt-progress
* debconf-communicate
* debconf-copydb
* debconf-escape
* debconf-set-selections
* debconf-show
* debian-distro-info
* decode_tm6000
* delpart
* delv
* derb
* desktop-file-edit ⇒ desktop-file-install
* desktop-file-install
* desktop-file-validate
* dex
* df
* dfu-tool
* dh_autotools-dev_restoreconfig
* dh_autotools-dev_updateconfig
* dh_bash-completion
* dh_dkms
* dh_gstscancodecs
* dh_mkdocs
* dh_perl_openssl
* diff
* diff3
* dig
* dir
* dircolors
* dirmngr
* dirmngr-client
* dirname
* display ⇒ /etc/alternatives/display
* display-im6 ⇒ /etc/alternatives/display-im6
* display-im6.q16
* distro-info ⇒ ubuntu-distro-info
* dm-tool
* dmenu
* dmenu_path
* dmenu_run
* dmesg
* dnsdomainname ⇒ hostname
* do-release-upgrade
* docker
* docker-proxy
* dockerd
* dockerd-rootless-setuptool.shdockerd-rootless.sh
* domainname ⇒ hostname
* dpkg
* dpkg-architecture
* dpkg-buildflags
* dpkg-buildpackage
* dpkg-checkbuilddeps
* dpkg-deb
* dpkg-distaddfile
* dpkg-divert
* dpkg-genbuildinfo
* dpkg-genchanges
* dpkg-gencontrol
* dpkg-gensymbols
* dpkg-maintscript-helper
* dpkg-mergechangelogs
* dpkg-name
* dpkg-parsechangelog
* dpkg-query
* dpkg-realpath
* dpkg-scanpackages
* dpkg-scansources
* dpkg-shlibdeps
* dpkg-source
* dpkg-split
* dpkg-statoverride
* dpkg-trigger
* dpkg-vendor
* dsymutil ⇒ ../lib/llvm-14/bin/dsymutil
* dsymutil-14 ⇒ ../lib/llvm-14/bin/dsymutil
* du
* dumpiso
* dumpkeys
* dumpsexp
* dunst
* dunstctl
* dunstify
* dvipdf
* dwp ⇒ x86_64-linux-gnu-dwp
* eatmydata
* ec2metadata
* echo
* ed
* editor ⇒ /etc/alternatives/editor
* editres
* efibootdump
* efibootmgr
* eglinfo ⇒ eglinfo.x86_64-linux-gnu
* eglinfo.x86_64-linux-gnu
* egrep
* eject
* elfedit ⇒ x86_64-linux-gnu-elfedit
* enc2xs
* encguess
* enchant-2
* enchant-lsmod-2
* env
* envsubst
* eps2eps
* epson-printer-utility ⇒ /opt/epson-printer-utility/bin/epson-printer-utility
* eqn
* erb ⇒ erb3.0
* erb3.0
* es2_info ⇒ es2_info.x86_64-linux-gnu
* es2_info.x86_64-linux-gnu
* es2gears_wayland ⇒ es2gears_wayland.x86_64-linux-gnu
* es2gears_wayland.x86_64-linux-gnu
* es2gears_x11 ⇒ es2gears_x11.x86_64-linux-gnu
* es2gears_x11.x86_64-linux-gnu
* es2tri ⇒ es2tri.x86_64-linux-gnu
* es2tri.x86_64-linux-gnu
* evince
* evince-previewer
* evince-thumbnailer
* ex ⇒ /etc/alternatives/ex
* exiftool
* expand
* expiry
* expr
* eyuvtoppm
* factor
* faillog
* faked-sysv
* faked-tcp
* fakeroot ⇒ /etc/alternatives/fakeroot
* fakeroot-sysv
* fakeroot-tcp
* fallocate
* false
* fastboot
* fc-cache
* fc-cat
* fc-conflist
* fc-list
* fc-match
* fc-pattern
* fc-query
* fc-scan
* fc-validate
* fgconsole
* fgrep
* fiascotopnm
* figlet ⇒ /etc/alternatives/figlet
* figlet-figlet
* figlist
* file
* FileCheck-14 ⇒ ../lib/llvm-14/bin/FileCheck
* finalrd
* fincore
* find
* findmnt
* fitstopnm
* flatpak
* flock
* fmt
* fold
* fonttosfnt
* free
* freshclam
* fstopgm
* ftp ⇒ /etc/alternatives/ftp
* funzip
* fuser
* fusermount ⇒ fusermount3
* fusermount3
* fwupdagent ⇒ fwupdmgr
* fwupdate
* fwupdmgr
* fwupdtool
* g++ ⇒ g++-11
* g++-11 ⇒ x86_64-linux-gnu-g++-11
* g3topbm
* gapplication
* gawk
* gcc ⇒ gcc-11
* gcc-11 ⇒ x86_64-linux-gnu-gcc-11
* gcc-12 ⇒ x86_64-linux-gnu-gcc-12
* gcc-ar ⇒ gcc-ar-11
* gcc-ar-11 ⇒ x86_64-linux-gnu-gcc-ar-11
* gcc-ar-12 ⇒ x86_64-linux-gnu-gcc-ar-12
* gcc-nm ⇒ gcc-nm-11
* gcc-nm-11 ⇒ x86_64-linux-gnu-gcc-nm-11
* gcc-nm-12 ⇒ x86_64-linux-gnu-gcc-nm-12
* gcc-ranlib ⇒ gcc-ranlib-11
* gcc-ranlib-11 ⇒ x86_64-linux-gnu-gcc-ranlib-11
* gcc-ranlib-12 ⇒ x86_64-linux-gnu-gcc-ranlib-12
* gconf-merge-tree
* gconftool ⇒ gconftool-2
* gconftool-2
* gcov ⇒ gcov-11
* gcov-11 ⇒ x86_64-linux-gnu-gcov-11
* gcov-12 ⇒ x86_64-linux-gnu-gcov-12
* gcov-dump ⇒ gcov-dump-11
* gcov-dump-11 ⇒ x86_64-linux-gnu-gcov-dump-11
* gcov-dump-12 ⇒ x86_64-linux-gnu-gcov-dump-12
* gcov-tool ⇒ gcov-tool-11
* gcov-tool-11 ⇒ x86_64-linux-gnu-gcov-tool-11
* gcov-tool-12 ⇒ x86_64-linux-gnu-gcov-tool-12
* gdbus
* gdbus-codegen
* gem
* gem3.0
* gemtopbm ⇒ gemtopnm
* gemtopnm
* genbrk
* gencat
* gencfu
* gencnval
* gendict
* genrb
* geod
* geqn ⇒ eqn
* GET ⇒ lwp-request
* getconf
* getent
* getkeycodes
* getopt
* gettext
* gettext.sh
* ghostscript ⇒ gs
* gie
* giftopnm
* ginstall-info ⇒ install-info
* gio
* gio-querymodules ⇒ ../lib/x86_64-linux-gnu/glib-2.0/gio-querymodules
* git
* git-receive-pack ⇒ git
* git-shell
* git-upload-archive ⇒ git
* git-upload-pack ⇒ git
* glib-compile-resources
* glib-compile-schemas ⇒ ../lib/x86_64-linux-gnu/glib-2.0/glib-compile-schemas
* glib-genmarshal
* glib-gettextize
* glib-mkenums
* glxdemo ⇒ glxdemo.x86_64-linux-gnu
* glxdemo.x86_64-linux-gnu
* glxgears ⇒ glxgears.x86_64-linux-gnu
* glxgears.x86_64-linux-gnu
* glxheads ⇒ glxheads.x86_64-linux-gnu
* glxheads.x86_64-linux-gnu
* glxinfo ⇒ glxinfo.x86_64-linux-gnu
* glxinfo.x86_64-linux-gnu
* gmake ⇒ make
* gnome-terminal
* gnome-terminal.real
* gnome-terminal.wrapper
* gnome-www-browser ⇒ /etc/alternatives/gnome-www-browser
* gnuplot ⇒ /etc/alternatives/gnuplot
* gnuplot-x11
* gobject-query
* gold ⇒ x86_64-linux-gnu-gold
* gouldtoppm
* gpasswd
* gpg
* gpg-agent
* gpg-connect-agent
* gpg-error-config
* gpg-wks-server
* gpg-zip
* gpgcompose
* gpgconf
* gpgparsemail
* gpgrt-config
* gpgsm
* gpgsplit
* gpgtar
* gpgv
* gpic ⇒ pic
* gprof ⇒ x86_64-linux-gnu-gprof
* gpu-manager
* grep
* grep-aptavail ⇒ grep-dctrl
* grep-available ⇒ grep-dctrl
* grep-dctrl
* grep-debtags ⇒ grep-dctrl
* grep-status ⇒ grep-dctrl
* gresource
* groff
* grog
* grops
* grotty
* groups
* growpart
* grub-editenv
* grub-file
* grub-fstest
* grub-glue-efi
* grub-kbdcomp
* grub-menulst2cfg
* grub-mkfont
* grub-mkimage
* grub-mklayout
* grub-mknetdir
* grub-mkpasswd-pbkdf2
* grub-mkrelpath
* grub-mkrescue
* grub-mkstandalone
* grub-mount
* grub-render-label
* grub-script-check
* grub-syslinux2cfg
* gs
* gsbj
* gsdj
* gsdj500
* gsettings
* gsettings-data-convert
* gsettings-schema-convert
* gslj
* gslp
* gsnd
* gst-inspect-1.0
* gst-launch-1.0
* gst-stats-1.0
* gst-tester-1.0
* gst-typefind-1.0
* gtbl ⇒ tbl
* gtester
* gtester-report
* gtf
* gtk-update-icon-cache
* gunzip
* gzexe
* gzip
* h2ph
* h2xs
* hardlink
* hd ⇒ hexdump
* head
* HEAD ⇒ lwp-request
* helpztags
* hexdump
* hipstopgm
* hmac256
* host
* hostid
* hostname
* hostnamectl
* htop* httpx
* hwe-support-status
* i3
* i3-config-wizard
* i3-dmenu-desktop
* i3-dump-log
* i3-input
* i3-migrate-config-to-v4
* i3-msg
* i3-nagbar
* i3-save-tree
* i3-sensible-editor
* i3-sensible-pager
* i3-sensible-terminal
* i3-with-shmlog ⇒ i3
* i386 ⇒ setarch
* i3bar
* i3lock
* i3status
* iceauth
* ico
* icontopbm
* iconv
* icuexportdata
* icuinfo
* id
* identify ⇒ /etc/alternatives/identify
* identify-im6 ⇒ /etc/alternatives/identify-im6
* identify-im6.q16
* iecset
* ifnames
* ilbmtoppm
* imagetops
* imgtoppm
* import ⇒ /etc/alternatives/import
* import-im6 ⇒ /etc/alternatives/import-im6
* import-im6.q16
* info
* infobrowser ⇒ /etc/alternatives/infobrowser
* infocmp
* infotocap ⇒ tic
* install
* install-info
* instmodsh
* invgeod ⇒ geod
* invproj ⇒ proj
* ionice
* ip
* ipcmk
* ipcrm
* ipcs
* iptables-xml ⇒ ../sbin/xtables-legacy-multi
* ir-ctl
* irb ⇒ irb3.0
* irb3.0
* ischroot
* iscsiadm ⇒ /sbin/iscsiadm
* ispell-wrapper
* ivtv-ctl
* join
* join-dctrl
* journalctl
* jpegtopnm
* jq
* json-patch-jsondiff
* json_pp
* json_xs
* jsondiff ⇒ /etc/alternatives/jsondiff
* jsonpatch
* jsonpointer
* jsonschema
* JxrDecApp
* JxrEncApp
* kbd_mode
* kbdinfo
* kbxutil
* keep-one-running ⇒ run-one
* kernel-install
* keyring
* kill
* killall
* kitty
* kmod
* kmodsign
* landscape-broker
* landscape-client
* landscape-config
* landscape-manager
* landscape-monitor
* landscape-package-changer
* landscape-package-reporter
* landscape-release-upgrader
* landscape-sysinfo
* last
* lastb ⇒ last
* lastlog
* lcf
* ld ⇒ x86_64-linux-gnu-ld
* ld.bfd ⇒ x86_64-linux-gnu-ld.bfd
* ld.gold ⇒ x86_64-linux-gnu-ld.gold
* ldd
* leaftoppm
* less
* lessecho
* lessfile ⇒ lesspipe
* lesskey
* lesspipe
* lexgrog
* libgcrypt-config
* libnetcfg
* libpng-config ⇒ libpng16-config
* libpng16-config
* libtool
* libtoolize
* link
* linux-boot-prober
* linux-check-removal
* linux-update-symlinks
* linux-version
* linux32 ⇒ setarch
* linux64 ⇒ setarch
* lispmtopgm
* listres
* livereload
* llc ⇒ ../lib/llvm-14/bin/llc
* llc-14 ⇒ ../lib/llvm-14/bin/llc
* lli ⇒ ../lib/llvm-14/bin/lli
* lli-14 ⇒ ../lib/llvm-14/bin/lli
* lli-child-target-14 ⇒ ../lib/llvm-14/bin/lli-child-target
* llvm-addr2line-14 ⇒ ../lib/llvm-14/bin/llvm-addr2line
* llvm-ar ⇒ ../lib/llvm-14/bin/llvm-ar
* llvm-ar-14 ⇒ ../lib/llvm-14/bin/llvm-ar
* llvm-as ⇒ ../lib/llvm-14/bin/llvm-as
* llvm-as-14 ⇒ ../lib/llvm-14/bin/llvm-as
* llvm-bcanalyzer ⇒ ../lib/llvm-14/bin/llvm-bcanalyzer
* llvm-bcanalyzer-14 ⇒ ../lib/llvm-14/bin/llvm-bcanalyzer
* llvm-bitcode-strip-14 ⇒ ../lib/llvm-14/bin/llvm-bitcode-strip
* llvm-c-test ⇒ ../lib/llvm-14/bin/llvm-c-test
* llvm-c-test-14 ⇒ ../lib/llvm-14/bin/llvm-c-test
* llvm-cat ⇒ ../lib/llvm-14/bin/llvm-cat
* llvm-cat-14 ⇒ ../lib/llvm-14/bin/llvm-cat
* llvm-cfi-verify ⇒ ../lib/llvm-14/bin/llvm-cfi-verify
* llvm-cfi-verify-14 ⇒ ../lib/llvm-14/bin/llvm-cfi-verify
* llvm-config ⇒ ../lib/llvm-14/bin/llvm-config
* llvm-config-14 ⇒ ../lib/llvm-14/bin/llvm-config
* llvm-cov ⇒ ../lib/llvm-14/bin/llvm-cov
* llvm-cov-14 ⇒ ../lib/llvm-14/bin/llvm-cov
* llvm-cvtres ⇒ ../lib/llvm-14/bin/llvm-cvtres
* llvm-cvtres-14 ⇒ ../lib/llvm-14/bin/llvm-cvtres
* llvm-cxxdump ⇒ ../lib/llvm-14/bin/llvm-cxxdump
* llvm-cxxdump-14 ⇒ ../lib/llvm-14/bin/llvm-cxxdump
* llvm-cxxfilt ⇒ ../lib/llvm-14/bin/llvm-cxxfilt
* llvm-cxxfilt-14 ⇒ ../lib/llvm-14/bin/llvm-cxxfilt
* llvm-cxxmap-14 ⇒ ../lib/llvm-14/bin/llvm-cxxmap
* llvm-debuginfod-find-14 ⇒ ../lib/llvm-14/bin/llvm-debuginfod-find
* llvm-diff ⇒ ../lib/llvm-14/bin/llvm-diff
* llvm-diff-14 ⇒ ../lib/llvm-14/bin/llvm-diff
* llvm-dis ⇒ ../lib/llvm-14/bin/llvm-dis
* llvm-dis-14 ⇒ ../lib/llvm-14/bin/llvm-dis
* llvm-dlltool ⇒ ../lib/llvm-14/bin/llvm-dlltool
* llvm-dlltool-14 ⇒ ../lib/llvm-14/bin/llvm-dlltool
* llvm-dwarfdump ⇒ ../lib/llvm-14/bin/llvm-dwarfdump
* llvm-dwarfdump-14 ⇒ ../lib/llvm-14/bin/llvm-dwarfdump
* llvm-dwp ⇒ ../lib/llvm-14/bin/llvm-dwp
* llvm-dwp-14 ⇒ ../lib/llvm-14/bin/llvm-dwp
* llvm-exegesis ⇒ ../lib/llvm-14/bin/llvm-exegesis
* llvm-exegesis-14 ⇒ ../lib/llvm-14/bin/llvm-exegesis
* llvm-extract ⇒ ../lib/llvm-14/bin/llvm-extract
* llvm-extract-14 ⇒ ../lib/llvm-14/bin/llvm-extract
* llvm-gsymutil-14 ⇒ ../lib/llvm-14/bin/llvm-gsymutil
* llvm-ifs-14 ⇒ ../lib/llvm-14/bin/llvm-ifs
* llvm-install-name-tool-14 ⇒ ../lib/llvm-14/bin/llvm-install-name-tool
* llvm-jitlink-14 ⇒ ../lib/llvm-14/bin/llvm-jitlink
* llvm-jitlink-executor-14 ⇒ ../lib/llvm-14/bin/llvm-jitlink-executor
* llvm-lib ⇒ ../lib/llvm-14/bin/llvm-lib
* llvm-lib-14 ⇒ ../lib/llvm-14/bin/llvm-lib
* llvm-libtool-darwin-14 ⇒ ../lib/llvm-14/bin/llvm-libtool-darwin
* llvm-link ⇒ ../lib/llvm-14/bin/llvm-link
* llvm-link-14 ⇒ ../lib/llvm-14/bin/llvm-link
* llvm-lipo-14 ⇒ ../lib/llvm-14/bin/llvm-lipo
* llvm-lto ⇒ ../lib/llvm-14/bin/llvm-lto
* llvm-lto-14 ⇒ ../lib/llvm-14/bin/llvm-lto
* llvm-lto2 ⇒ ../lib/llvm-14/bin/llvm-lto2
* llvm-lto2-14 ⇒ ../lib/llvm-14/bin/llvm-lto2
* llvm-mc ⇒ ../lib/llvm-14/bin/llvm-mc
* llvm-mc-14 ⇒ ../lib/llvm-14/bin/llvm-mc
* llvm-mca ⇒ ../lib/llvm-14/bin/llvm-mca
* llvm-mca-14 ⇒ ../lib/llvm-14/bin/llvm-mca
* llvm-ml-14 ⇒ ../lib/llvm-14/bin/llvm-ml
* llvm-modextract ⇒ ../lib/llvm-14/bin/llvm-modextract
* llvm-modextract-14 ⇒ ../lib/llvm-14/bin/llvm-modextract
* llvm-mt ⇒ ../lib/llvm-14/bin/llvm-mt
* llvm-mt-14 ⇒ ../lib/llvm-14/bin/llvm-mt
* llvm-nm ⇒ ../lib/llvm-14/bin/llvm-nm
* llvm-nm-14 ⇒ ../lib/llvm-14/bin/llvm-nm
* llvm-objcopy ⇒ ../lib/llvm-14/bin/llvm-objcopy
* llvm-objcopy-14 ⇒ ../lib/llvm-14/bin/llvm-objcopy
* llvm-objdump ⇒ ../lib/llvm-14/bin/llvm-objdump
* llvm-objdump-14 ⇒ ../lib/llvm-14/bin/llvm-objdump
* llvm-opt-report ⇒ ../lib/llvm-14/bin/llvm-opt-report
* llvm-opt-report-14 ⇒ ../lib/llvm-14/bin/llvm-opt-report
* llvm-otool-14 ⇒ ../lib/llvm-14/bin/llvm-otool
* llvm-pdbutil ⇒ ../lib/llvm-14/bin/llvm-pdbutil
* llvm-pdbutil-14 ⇒ ../lib/llvm-14/bin/llvm-pdbutil
* llvm-PerfectShuffle ⇒ ../lib/llvm-14/bin/llvm-PerfectShuffle
* llvm-PerfectShuffle-14 ⇒ ../lib/llvm-14/bin/llvm-PerfectShuffle
* llvm-profdata ⇒ ../lib/llvm-14/bin/llvm-profdata
* llvm-profdata-14 ⇒ ../lib/llvm-14/bin/llvm-profdata
* llvm-profgen-14 ⇒ ../lib/llvm-14/bin/llvm-profgen
* llvm-ranlib ⇒ ../lib/llvm-14/bin/llvm-ranlib
* llvm-ranlib-14 ⇒ ../lib/llvm-14/bin/llvm-ranlib
* llvm-rc ⇒ ../lib/llvm-14/bin/llvm-rc
* llvm-rc-14 ⇒ ../lib/llvm-14/bin/llvm-rc
* llvm-readelf ⇒ ../lib/llvm-14/bin/llvm-readelf
* llvm-readelf-14 ⇒ ../lib/llvm-14/bin/llvm-readelf
* llvm-readobj ⇒ ../lib/llvm-14/bin/llvm-readobj
* llvm-readobj-14 ⇒ ../lib/llvm-14/bin/llvm-readobj
* llvm-reduce-14 ⇒ ../lib/llvm-14/bin/llvm-reduce
* llvm-rtdyld ⇒ ../lib/llvm-14/bin/llvm-rtdyld
* llvm-rtdyld-14 ⇒ ../lib/llvm-14/bin/llvm-rtdyld
* llvm-sim-14 ⇒ ../lib/llvm-14/bin/llvm-sim
* llvm-size ⇒ ../lib/llvm-14/bin/llvm-size
* llvm-size-14 ⇒ ../lib/llvm-14/bin/llvm-size
* llvm-split ⇒ ../lib/llvm-14/bin/llvm-split
* llvm-split-14 ⇒ ../lib/llvm-14/bin/llvm-split
* llvm-stress ⇒ ../lib/llvm-14/bin/llvm-stress
* llvm-stress-14 ⇒ ../lib/llvm-14/bin/llvm-stress
* llvm-strings ⇒ ../lib/llvm-14/bin/llvm-strings
* llvm-strings-14 ⇒ ../lib/llvm-14/bin/llvm-strings
* llvm-strip ⇒ ../lib/llvm-14/bin/llvm-strip
* llvm-strip-14 ⇒ ../lib/llvm-14/bin/llvm-strip
* llvm-symbolizer ⇒ ../lib/llvm-14/bin/llvm-symbolizer
* llvm-symbolizer-14 ⇒ ../lib/llvm-14/bin/llvm-symbolizer
* llvm-tapi-diff-14 ⇒ ../lib/llvm-14/bin/llvm-tapi-diff
* llvm-tblgen ⇒ ../lib/llvm-14/bin/llvm-tblgen
* llvm-tblgen-14 ⇒ ../lib/llvm-14/bin/llvm-tblgen
* llvm-tli-checker-14 ⇒ ../lib/llvm-14/bin/llvm-tli-checker
* llvm-undname ⇒ ../lib/llvm-14/bin/llvm-undname
* llvm-undname-14 ⇒ ../lib/llvm-14/bin/llvm-undname
* llvm-windres-14 ⇒ ../lib/llvm-14/bin/llvm-windres
* llvm-xray ⇒ ../lib/llvm-14/bin/llvm-xray
* llvm-xray-14 ⇒ ../lib/llvm-14/bin/llvm-xray
* ln
* lnstat
* loadkeys
* loadunimap
* locale
* locale-check
* localectl
* localedef
* logger
* login
* loginctl
* logname
* look
* lowntfs-3g
* ls
* lsattr
* lsb_release
* lsblk
* lscpu
* lshw
* lsinitramfs
* lsipc
* lslocks
* lslogins
* lsmem
* lsmod ⇒ kmod
* lsns
* lsof
* lspci
* lspgpot
* lsusb
* lsw
* lto-dump-11 ⇒ x86_64-linux-gnu-lto-dump-11
* lto-dump-12 ⇒ x86_64-linux-gnu-lto-dump-12
* lua ⇒ /etc/alternatives/lua-interpreter
* lua-any
* lua5.1
* luac ⇒ /etc/alternatives/lua-compiler
* luac5.1
* luakit
* luarocks
* luarocks-5.1
* luarocks-5.2
* luarocks-5.3
* luarocks-5.4
* luarocks-admin
* luarocks-admin-5.1
* luarocks-admin-5.2
* luarocks-admin-5.3
* luarocks-admin-5.4
* luit
* lwp-download
* lwp-dump
* lwp-mirror
* lwp-request
* lxappearance
* lxpolkit
* lxsettings-daemon
* lzcat ⇒ /etc/alternatives/lzcat
* lzcmp ⇒ /etc/alternatives/lzcmp
* lzdiff ⇒ /etc/alternatives/lzdiff
* lzegrep ⇒ /etc/alternatives/lzegrep
* lzfgrep ⇒ /etc/alternatives/lzfgrep
* lzgrep ⇒ /etc/alternatives/lzgrep
* lzless ⇒ /etc/alternatives/lzless
* lzma ⇒ /etc/alternatives/lzma
* lzmainfo
* lzmore ⇒ /etc/alternatives/lzmore
* m4
* macptopbm
* mailmail3
* make
* make-first-existing-target
* makeconv
* man
* man-recode
* mandb
* manifest
* manpath
* mapscrn
* markdown_py
* mawk
* mcookie
* md5sum
* md5sum.textutils ⇒ md5sum
* mdatopbm
* mdig
* mech-dump
* media-ctl
* memusage
* memusagestat
* mesa-overlay-control.py
* mesg
* mgrtopbm
* migrate-pubring-from-classic-gpg
* mimeopen
* mimetype
* min ⇒ /opt/Min/min
* mk_modmap
* mkdir
* mkdocs
* mkfifo
* mkfontdir
* mkfontscale
* mknod
* mksquashfs
* mktemp
* mmcli
* mogrify ⇒ /etc/alternatives/mogrify
* mogrify-im6 ⇒ /etc/alternatives/mogrify-im6
* mogrify-im6.q16
* mokutil
* monitor-sensor
* montage ⇒ /etc/alternatives/montage
* montage-im6 ⇒ /etc/alternatives/montage-im6
* montage-im6.q16
* more
* mount
* mountpoint
* mpicalc
* mt ⇒ /etc/alternatives/mt
* mt-gnu
* mtp-albumart
* mtp-albums
* mtp-connect
* mtp-delfile ⇒ mtp-connect
* mtp-detect
* mtp-emptyfolders
* mtp-files
* mtp-filetree
* mtp-folders
* mtp-format
* mtp-getfile ⇒ mtp-connect
* mtp-getplaylist
* mtp-hotplug
* mtp-newfolder ⇒ mtp-connect
* mtp-newplaylist
* mtp-playlists
* mtp-reset
* mtp-sendfile ⇒ mtp-connect
* mtp-sendtr ⇒ mtp-connect
* mtp-thumb
* mtp-tracks
* mtp-trexist
* mtr
* mtr-packet
* mtrace
* mtvtoppm
* mv
* nala
* namei
* nano
* nawk ⇒ /etc/alternatives/nawk
* nc ⇒ /etc/alternatives/nc
* nc.openbsd
* ncurses5-config ⇒ ncurses6-config
* ncurses6-config
* ncursesw5-config ⇒ ncursesw6-config
* ncursesw6-config
* neotoppm
* neqn
* netcat ⇒ /etc/alternatives/netcat
* netstat
* networkctl
* networkd-dispatcher
* newgrp
* NF ⇒ col1
* ngettext
* nice
* nisdomainname ⇒ hostname
* nl
* nm ⇒ x86_64-linux-gnu-nm
* nohup
* normalizer
* nose2-3
* nose2-3.8
* not-14 ⇒ ../lib/llvm-14/bin/not
* nproc
* nroff
* nsenter
* nslookup
* nspr-config
* nss-config
* nstat
* nsupdate
* ntfs-3g
* ntfs-3g.probe
* ntfscat
* ntfscluster
* ntfscmp
* ntfsdecrypt
* ntfsfallocate
* ntfsfix
* ntfsinfo
* ntfsls
* ntfsmove
* ntfsrecover
* ntfssecaudit
* ntfstruncate
* ntfsusermap
* ntfswipe
* numfmt
* nvidia-bug-report.sh
* nvidia-container-cli
* nvidia-container-runtime
* nvidia-container-runtime-hook
* nvidia-container-toolkit ⇒ /usr/bin/nvidia-container-runtime-hook
* nvidia-ctk
* nvidia-cuda-mps-control
* nvidia-cuda-mps-server
* nvidia-debugdump
* nvidia-detector
* nvidia-ngx-updater
* nvidia-persistenced
* nvidia-powerd
* nvidia-settings
* nvidia-sleep.sh
* nvidia-smi
* nvidia-xconfig
* nvlc
* obj2yaml ⇒ ../lib/llvm-14/bin/obj2yaml
* obj2yaml-14 ⇒ ../lib/llvm-14/bin/obj2yaml
* objcopy ⇒ x86_64-linux-gnu-objcopy
* objdump ⇒ x86_64-linux-gnu-objdump
* oclock
* od
* oem-getlogs
* on_ac_power ⇒ /sbin/on_ac_power
* open ⇒ /etc/alternatives/open
* open-wezterm-here
* opencv_annotation
* opencv_interactive-calibration
* opencv_model_diagnostics
* opencv_version
* opencv_visualisation
* opencv_waldboost_detector
* openssl
* openvt
* opt ⇒ ../lib/llvm-14/bin/opt
* opt-14 ⇒ ../lib/llvm-14/bin/opt
* orc-bugreport
* orcc
* os-prober
* p11-kit
* pa-info
* pacat
* pacmd
* pactl
* padsp
* pager ⇒ /etc/alternatives/pager
* palmtopnm
* pamcut
* pamdeinterlace
* pamdice
* pamfile
* pamoil
* pamon ⇒ pacat
* pamstack
* pamstretch
* pamstretch-gen
* paperconf
* paplay ⇒ pacat
* parec ⇒ pacat
* parecord ⇒ pacat
* partx
* passwd
* paste
* pastebinit
* pasuspender
* patch
* pathchk
* pavucontrol
* pax11publish
* pbget ⇒ pbput
* pbmclean
* pbmlife
* pbmmake
* pbmmask
* pbmpage
* pbmpscale
* pbmreduce
* pbmtext
* pbmtextps
* pbmto10x
* pbmtoascii
* pbmtoatk
* pbmtobbnbg
* pbmtocmuwm
* pbmtoepsi
* pbmtoepson
* pbmtog3
* pbmtogem
* pbmtogo
* pbmtoicon
* pbmtolj
* pbmtomacp
* pbmtomda
* pbmtomgr
* pbmtonokia
* pbmtopgm
* pbmtopi3
* pbmtoplot
* pbmtoppa
* pbmtopsg3
* pbmtoptx
* pbmtowbmp
* pbmtox10bm
* pbmtoxbm
* pbmtoybm
* pbmtozinc
* pbmupc
* pbput
* pbputs ⇒ pbput
* pcre-config
* pcre2-config
* pcxtoppm
* pdb3 ⇒ pdb3.10
* pdb3.10 ⇒ ../lib/python3.10/pdb.py
* pdf2dsc
* pdf2ps
* peekfd
* perl
* perl5.34-x86_64-linux-gnu
* perl5.34.0
* perlbug
* perldoc
* perli11ndoc
* perlivp
* perlthanks
* pf2afm
* pfbtopfa
* pgmbentley
* pgmcrater
* pgmedge
* pgmenhance
* pgmhist
* pgmkernel
* pgmnoise
* pgmnorm ⇒ pnmnorm
* pgmoil ⇒ pamoil
* pgmramp
* pgmslice
* pgmtexture
* pgmtofs
* pgmtolispm
* pgmtopbm
* pgmtoppm
* pgrep
* pi1toppm
* pi3topbm
* pic
* pico ⇒ /etc/alternatives/pico
* picom
* picom-trans
* piconv
* pidof ⇒ /sbin/killall5
* pidwait
* pigz
* pinentry ⇒ /etc/alternatives/pinentry
* pinentry-curses
* ping
* ping4 ⇒ ping
* ping6 ⇒ ping
* pinky
* pip
* pip3
* pip3.10
* pipewire
* pipewire-aes67 ⇒ pipewire
* pipewire-avb ⇒ pipewire
* pipewire-media-session
* pipewire-pulse ⇒ pipewire
* pipx
* pjtoppm
* pkaction
* pkcheck
* pkcon
* pkexec
* pkg-config
* pkgdata
* pkill ⇒ pgrep
* pkmon
* pkttyagent
* pl2pm
* pldd
* plymouth
* pmap
* png-fix-itxt
* pngfix
* pngtopnm
* pnmalias
* pnmarith
* pnmcat
* pnmcolormap
* pnmcomp
* pnmconvol
* pnmcrop
* pnmcut
* pnmdepth
* pnmenlarge
* pnmfile
* pnmflip
* pnmgamma
* pnmhisteq
* pnmhistmap
* pnmindex
* pnminterp ⇒ pamstretch
* pnminterp-gen ⇒ pamstretch-gen
* pnminvert
* pnmmargin
* pnmmontage
* pnmnlfilt
* pnmnoraw ⇒ pnmtoplainpnm
* pnmnorm
* pnmpad
* pnmpaste
* pnmpsnr
* pnmquant
* pnmremap
* pnmrotate
* pnmscale
* pnmscalefixed
* pnmshear
* pnmsmooth
* pnmsplit
* pnmtile
* pnmtoddif
* pnmtofiasco
* pnmtofits
* pnmtojpeg
* pnmtopalm
* pnmtoplainpnm
* pnmtopng
* pnmtops
* pnmtorast
* pnmtorle
* pnmtosgi
* pnmtosir
* pnmtotiff
* pnmtotiffcmyk
* pnmtoxwd
* pod2html
* pod2man
* pod2text
* pod2usage
* podchecker
* pollinate
* POST ⇒ lwp-request
* pphs
* ppm3d
* ppmbrighten
* ppmchange
* ppmcie
* ppmcolormask
* ppmcolors
* ppmdim
* ppmdist
* ppmdither
* ppmfade
* ppmflash
* ppmforge
* ppmhist
* ppmlabel
* ppmmake
* ppmmix
* ppmnorm ⇒ pnmnorm
* ppmntsc
* ppmpat
* ppmquant
* ppmquantall
* ppmqvga
* ppmrainbow
* ppmrelief
* ppmshadow
* ppmshift
* ppmspread
* ppmtoacad
* ppmtobmp
* ppmtoeyuv
* ppmtogif
* ppmtoicr
* ppmtoilbm
* ppmtojpeg ⇒ pnmtojpeg
* ppmtoleaf
* ppmtolj
* ppmtomap
* ppmtomitsu
* ppmtompeg
* ppmtoneo
* ppmtopcx
* ppmtopgm
* ppmtopi1
* ppmtopict
* ppmtopj
* ppmtopuzz
* ppmtorgb3
* ppmtosixel
* ppmtotga
* ppmtouil
* ppmtowinicon
* ppmtoxpm
* ppmtoyuv
* ppmtoyuvsplit
* ppmtv
* pr
* precat
* preconv
* preunzip
* prezip
* prezip-bin
* prime-select
* prime-supported
* printafm
* printenv
* printf
* prlimit
* pro ⇒ ubuntu-advantage
* proj
* projinfo
* projsync
* prove
* proxy
* prtstat
* ps
* ps2ascii
* ps2epsi
* ps2pdf
* ps2pdf12
* ps2pdf13
* ps2pdf14
* ps2pdfwr
* ps2ps
* ps2ps2
* ps2txt ⇒ ps2ascii
* psfaddtable ⇒ psfxtable
* psfgettable ⇒ psfxtable
* psfstriptable ⇒ psfxtable
* psfxtable
* psidtopgm
* pslog
* pstopnm
* pstree
* pstree.x11 ⇒ pstree
* ptar
* ptardiff
* ptargrep
* ptx
* pulseaudio
* purge-old-kernels
* pw-cat
* pw-cli
* pw-config
* pw-dot
* pw-dsdplay ⇒ pw-cat
* pw-dump
* pw-encplay ⇒ pw-cat
* pw-jack
* pw-link
* pw-loopback
* pw-metadata
* pw-mididump
* pw-midiplay ⇒ pw-cat
* pw-midirecord ⇒ pw-cat
* pw-mon
* pw-play ⇒ pw-cat
* pw-profiler
* pw-record ⇒ pw-cat
* pw-reserve
* pw-top
* pwd
* pwdx
* py.test-3 ⇒ pytest-3
* py3clean
* py3compile
* py3versions ⇒ ../share/python3/py3versions.py
* pybabel ⇒ /etc/alternatives/pybabel
* pybabel-python3
* pydoc3 ⇒ pydoc3.10
* pydoc3.10
* pyflakes3
* pygettext3 ⇒ pygettext3.10
* pygettext3.10
* pygmentize
* pyhtmlizer3
* pyserial-miniterm
* pyserial-ports
* pytest-3
* python-argcomplete-check-easy-install-script3
* python-argcomplete-tcsh3
* python3 ⇒ python3.10
* python3-commonmark
* python3-config ⇒ python3.10-config
* python3-coverage
* python3.10
* python3.10-config ⇒ x86_64-linux-gnu-python3.10-config
* python3.10-coverage
* pzstd
* qalc
* qalculate ⇒ /etc/alternatives/qalculate
* qalculate-gtk
* qrttoppm
* quirks-handler
* qutebrowser
* qvlc
* racc3.0
* rake
* rake3.0
* ranlib ⇒ x86_64-linux-gnu-ranlib
* rasttopnm
* rawtopgm
* rawtoppm
* rbash ⇒ bash
* rbs3.0
* rcp ⇒ /etc/alternatives/rcp
* rdma
* rdoc ⇒ rdoc3.0
* rdoc3.0
* rds-ctl
* readelf ⇒ x86_64-linux-gnu-readelf
* readlink
* realpath
* red
* register-python-argcomplete3
* rendercheck
* renice
* rescan-scsi-bus.sh
* reset ⇒ tset
* resizecons
* resizepart
* resolvectl
* rev
* rgb3toppm
* rgrep
* ri ⇒ ri3.0
* ri3.0
* rletopnm
* rlogin ⇒ /etc/alternatives/rlogin
* rm
* rmdir
* rnano ⇒ nano
* rofi
* rofi-sensible-terminal
* rofi-theme-selector
* rootlesskit
* rootlesskit-docker-proxy
* routef
* routel
* rpcgen
* rpi-imager
* rrsync
* rsh ⇒ /etc/alternatives/rsh
* rstart
* rstartd
* rsync
* rsync-ssl
* rtstat ⇒ lnstat
* ruby ⇒ ruby3.0
* ruby3.0
* run-one
* run-one-constantly ⇒ run-one
* run-one-until-failure ⇒ run-one
* run-one-until-success ⇒ run-one
* run-parts
* run-this-one ⇒ run-one
* run-with-aspell
* runc
* runcon
* rview ⇒ /etc/alternatives/rview
* rvim ⇒ /etc/alternatives/rvim
* rvlc
* sanstats ⇒ ../lib/llvm-14/bin/sanstats
* sanstats-14 ⇒ ../lib/llvm-14/bin/sanstats
* savelog
* sbattach
* sbigtopgm
* sbkeysync
* sbsiglist
* sbsign
* sbvarsign
* sbverify
* scandeps
* scp
* screen
* screendump
* script
* scriptlive
* scriptreplay
* scsi_logging_level
* scsi_mandat
* scsi_readcap
* scsi_ready
* scsi_satl
* scsi_start
* scsi_stop
* scsi_temperature
* sdiff
* sed
* select-default-iwrap
* select-editor
* sendiso
* sensible-browser
* sensible-editor
* sensible-pager
* seq
* session-migration
* sessreg
* setarch
* setfont
* setkeycodes
* setleds
* setlogcons
* setmetamode
* setpci
* setpriv
* setsid
* setterm
* setupcon
* setxkbmap
* sftp
* sg ⇒ newgrp
* sg_bg_ctl
* sg_compare_and_write
* sg_copy_results
* sg_dd
* sg_decode_sense
* sg_emc_trespass
* sg_format
* sg_get_config
* sg_get_elem_status
* sg_get_lba_status
* sg_ident
* sg_inq
* sg_logs
* sg_luns
* sg_map
* sg_map26
* sg_modes
* sg_opcodes
* sg_persist
* sg_prevent
* sg_raw
* sg_rbuf
* sg_rdac
* sg_read
* sg_read_attr
* sg_read_block_limits
* sg_read_buffer
* sg_read_long
* sg_readcap
* sg_reassign
* sg_referrals
* sg_rep_pip
* sg_rep_zones
* sg_requests
* sg_reset
* sg_reset_wp
* sg_rmsn
* sg_rtpg
* sg_safte
* sg_sanitize
* sg_sat_identify
* sg_sat_phy_event
* sg_sat_read_gplog
* sg_sat_set_features
* sg_scan
* sg_seek
* sg_senddiag
* sg_ses
* sg_ses_microcode
* sg_start
* sg_stpg
* sg_stream_ctl
* sg_sync
* sg_test_rwbuf
* sg_timestamp
* sg_turs
* sg_unmap
* sg_verify
* sg_vpd
* sg_wr_mode
* sg_write_buffer
* sg_write_long
* sg_write_same
* sg_write_verify
* sg_write_x
* sg_xcopy
* sg_zone
* sginfo
* sgitopnm
* sgm_dd
* sgp_dd
* sh ⇒ dash
* sha1sum
* sha224sum
* sha256sum
* sha384sum
* sha512sum
* shasum
* shotwell
* showconsolefont
* showfigfonts
* showkey
* showrgb
* shred
* shuf
* sigtool
* sirtopnm
* size ⇒ x86_64-linux-gnu-size
* skill
* slabtop
* sldtoppm
* sleep
* slirp4netns
* slock
* slogin ⇒ ssh
* smproxy
* snap
* snapctl ⇒ ../lib/snapd/snapctl
* snapfuse
* snice ⇒ skill
* soelim
* sort
* sort-dctrl
* sos
* sos-collector
* sosreport
* sotruss
* spa-acp-tool
* spa-inspect
* spa-json-dump
* spa-monitor
* spa-resample
* spctoppm
* speaker-test
* splain
* split
* split-file-14 ⇒ ../lib/llvm-14/bin/split-file
* splitfont
* sprof
* sprop
* sputoppm
* sqfscat ⇒ unsquashfs
* sqfstar ⇒ mksquashfs
* ss
* sselp
* ssh
* ssh-add
* ssh-agent
* ssh-argv0
* ssh-copy-id
* ssh-import-id
* ssh-import-id-gh
* ssh-import-id-lp
* ssh-keygen
* ssh-keyscan
* ssid
* st4topgm
* start-pulseaudio-x11
* startx
* stat
* static-sh ⇒ busybox
* stdbuf
* stest
* strace
* strace-log-merge
* stream ⇒ /etc/alternatives/stream
* stream-im6 ⇒ /etc/alternatives/stream-im6
* stream-im6.q16
* streamzip
* strings ⇒ x86_64-linux-gnu-strings
* strip ⇒ x86_64-linux-gnu-strip
* strip-ansi-escapes
* stty
* su
sudo
sudoedit ⇒ sudo
sudoreplay
* sum
* svlc
* swarp
* sync
* systemctl
* systemd ⇒ /lib/systemd/systemd
* systemd-analyze
* systemd-ask-password
* systemd-cat
* systemd-cgls
* systemd-cgtop
* systemd-cryptenroll
* systemd-delta
* systemd-detect-virt
* systemd-escape
* systemd-hwdb
* systemd-id128
* systemd-inhibit
* systemd-machine-id-setup
* systemd-mount
* systemd-notify
* systemd-path
* systemd-run
* systemd-socket-activate
* systemd-stdio-bridge
* systemd-sysext
* systemd-sysusers
* systemd-tmpfiles
* systemd-tty-ask-password-agent
* systemd-umount ⇒ systemd-mount
* tabbed ⇒ /etc/alternatives/tabbed
* tabbed.default
* tabbed.meta
* tabs
* tac
* tail
* tar
* taskset
* tbl
* tbl-dctrl
* tclsh ⇒ tclsh8.6
* tclsh8.6
* tcltk-depends
* tcpdump
* tee
* telnet ⇒ /etc/alternatives/telnet
* telnet.netkit
* tempfile
* test
* testlibraw
* tgatoppm
* thinkjettopbm
* tic
* tifftopnm
* time
* timedatectl
* timeout
* tkconch3
* tload
* tmux
* tnftp
* toe
* top
* touch
* tput
* tr
* tracepath
* transset
* trial3
* troff
* true
* truncate
* trust
* tset
* tsort
* tty
* twist3
* twistd3
* typeprof3.0
* tzselect
* ua ⇒ ubuntu-advantage
* ubuntu-advantage
* ubuntu-bug ⇒ apport-bug
* ubuntu-core-launcher ⇒ ../lib/snapd/snap-confine
* ubuntu-distro-info
* ubuntu-drivers
* ubuntu-security-status
* ucf
* ucfq
* ucfr
* uclampset
* uconv
* ucs2any
* udevadm
* udisksctl
* ul
* umount
* uname
* unattended-upgrade
* unattended-upgrades ⇒ unattended-upgrade
* uncompress
* unexpand
* unicode_start
* unicode_stop
* uniq
* unity-scope-loader
* unlink
* unlzma ⇒ /etc/alternatives/unlzma
* unmkinitramfs
* unpigz
* unshare
* unsquashfs
* unxz ⇒ xz
* unzip
* unzipsfx
* unzstd ⇒ zstd
* update-alternatives
* update-desktop-database
* update-gconf-defaults
* update-mime-database
* update-perl-sax-parsers
* update_rubygems
* upower
* uptime
* usb-devices
* usbhid-dump
* usbreset
* users
* utmpdump
* uuidgen
* uuidparse
* v4l2-compliance
* v4l2-ctl
* v4l2-sysfs-path
* v4l2loopback-ctl
* vcs-run
* vdir
* verify-uselistorder ⇒ ../lib/llvm-14/bin/verify-uselistorder
* verify-uselistorder-14 ⇒ ../lib/llvm-14/bin/verify-uselistorder
* VGAuthService
* vi ⇒ /etc/alternatives/vi
* vieb ⇒ /opt/Vieb/vieb
* view ⇒ /etc/alternatives/view
* viewres
* vigpg
* vim ⇒ /etc/alternatives/vim
* vim.basic
* vim.tiny
* vimdiff ⇒ /etc/alternatives/vimdiff
* vimtutor
* vlc
* vlc-wrapper
* vm-support
* vmhgfs-fuse
* vmstat
* vmtoolsd
* vmware-alias-import
* vmware-checkvm
* vmware-hgfsclient
* vmware-namespace-cmd
* vmware-rpctool
* vmware-toolbox-cmd
* vmware-vgauth-cmd
* vmware-vmblock-fuse
* vmware-xferlogs
* w
* wall
* watch
* watchgnupg
* wayland-scanner
* wbmptopbm
* wc
* wdctl
* wezterm
* wezterm-gui
* wezterm-mux-server
* wget
* whatis
* whereis
* which ⇒ /etc/alternatives/which
* which.debianutils
* whiptail
* who
* whoami
* wifi-status
* winicontoppm
* wish ⇒ wish8.6
* wish8.6
* wl-copy
* wl-paste
* wmctrl
* wmname
* word-list-compress
* wpa_passphrase
* write ⇒ /etc/alternatives/write
* write.ul
* X ⇒ Xorg
* x-session-manager ⇒ /etc/alternatives/x-session-manager
* x-terminal-emulator ⇒ /etc/alternatives/x-terminal-emulator
* x-window-manager ⇒ /etc/alternatives/x-window-manager
* x-www-browser ⇒ /etc/alternatives/x-www-browser
* x11perf
* x11perfcomp
* x86_64 ⇒ setarch
* x86_64-linux-gnu-addr2line
* x86_64-linux-gnu-ar
* x86_64-linux-gnu-as
* x86_64-linux-gnu-c++filt
* x86_64-linux-gnu-cpp ⇒ cpp-11
* x86_64-linux-gnu-cpp-11
* x86_64-linux-gnu-cpp-12
* x86_64-linux-gnu-dwp
* x86_64-linux-gnu-elfedit
* x86_64-linux-gnu-g++ ⇒ g++-11
* x86_64-linux-gnu-g++-11
* x86_64-linux-gnu-gcc ⇒ gcc-11
* x86_64-linux-gnu-gcc-11
* x86_64-linux-gnu-gcc-12
* x86_64-linux-gnu-gcc-ar ⇒ gcc-ar-11
* x86_64-linux-gnu-gcc-ar-11
* x86_64-linux-gnu-gcc-ar-12
* x86_64-linux-gnu-gcc-nm ⇒ gcc-nm-11
* x86_64-linux-gnu-gcc-nm-11
* x86_64-linux-gnu-gcc-nm-12
* x86_64-linux-gnu-gcc-ranlib ⇒ gcc-ranlib-11
* x86_64-linux-gnu-gcc-ranlib-11
* x86_64-linux-gnu-gcc-ranlib-12
* x86_64-linux-gnu-gcov ⇒ gcov-11
* x86_64-linux-gnu-gcov-11
* x86_64-linux-gnu-gcov-12
* x86_64-linux-gnu-gcov-dump ⇒ gcov-dump-11
* x86_64-linux-gnu-gcov-dump-11
* x86_64-linux-gnu-gcov-dump-12
* x86_64-linux-gnu-gcov-tool ⇒ gcov-tool-11
* x86_64-linux-gnu-gcov-tool-11
* x86_64-linux-gnu-gcov-tool-12
* x86_64-linux-gnu-gold ⇒ x86_64-linux-gnu-ld.gold
* x86_64-linux-gnu-gprof
* x86_64-linux-gnu-ld ⇒ x86_64-linux-gnu-ld.bfd
* x86_64-linux-gnu-ld.bfd
* x86_64-linux-gnu-ld.gold
* x86_64-linux-gnu-lto-dump-11
* x86_64-linux-gnu-lto-dump-12
* x86_64-linux-gnu-nm
* x86_64-linux-gnu-objcopy
* x86_64-linux-gnu-objdump
* x86_64-linux-gnu-pkg-config ⇒ /usr/share/pkg-config-crosswrapper
* x86_64-linux-gnu-python3-config ⇒ x86_64-linux-gnu-python3.10-config
* x86_64-linux-gnu-python3.10-config
* x86_64-linux-gnu-ranlib
* x86_64-linux-gnu-readelf
* x86_64-linux-gnu-size
* x86_64-linux-gnu-strings
* x86_64-linux-gnu-strip
* x86_64-pc-linux-gnu-pkg-config
* xargs
* xauth
* xbiff
* xbmtopbm
* xcalc
* xclip
* xclip-copyfile
* xclip-cutfile
* xclip-pastefile
* xclipboard
* xclock
* xcmsdb
* xconsole
* xcursorgen
* xcutsel
* xdg-dbus-proxy
* xdg-desktop-icon
* xdg-desktop-menu
* xdg-email
* xdg-icon-resource
* xdg-mime
* xdg-open
* xdg-screensaver
* xdg-settings
* xdg-user-dir
* xdg-user-dirs-update
* xditview
* xdotool
* xdpyinfo
* xdriinfo
* xedit
* xev
* xeyes
* xfd
* xfontsel
* xgamma
* xgc
* xhost
* ximtoppm
* xinit
* xinput
* xkbbell
* xkbcomp
* xkbevd
* xkbprint
* xkbvleds
* xkbwatch
* xkeystone
* xkill
* xload
* xlogo
* xlsatoms
* xlsclients
* xlsfonts
* xmag
* xman
* xmessage
* xml2-config
* xmlsec1-config
* xmodmap
* xmore
* Xorg
* xpmtoppm
* xprop
* xrandr
* xrdb
* xrefresh
* xsel
* xset
* xsetmode
* xsetpointer
* xsetroot
* xslt-config
* xsm
* xss-lock
* xssstate
* xstdcmap
* xsubpp
* xvidtune
* xvinfo
* xvminitoppm
* xwd
* xwdtopnm
* xwininfo
* xwud
* xxd
* xz
* xzcat ⇒ xz
* xzcmp ⇒ xzdiff
* xzdiff
* xzegrep ⇒ xzgrep
* xzfgrep ⇒ xzgrep
* xzgrep
* xzless
* xzmore
* yaml-bench-14 ⇒ ../lib/llvm-14/bin/yaml-bench
* yaml2obj ⇒ ../lib/llvm-14/bin/yaml2obj
* yaml2obj-14 ⇒ ../lib/llvm-14/bin/yaml2obj
* ybmtopbm
* yes
* ypdomainname ⇒ hostname
* yuvsplittoppm
* yuvtoppm
* zcat
* zcmp
* zdiff
* zdump
* zegrep
* zeisstopnm
* zfgrep
* zforce
* zgrep
* zip
* zipcloak
* zipdetails
* zipgrep
* zipinfo
* zipnote
* zipsplit
* zless
* zmore
* znew
* zstd
* zstdcat ⇒ zstd
* zstdgrep
* zstdless
* zstdmt ⇒ zstd

/sbin

/usr/games
* lolcat

/snap/bin
* ubports-installer
* lxc
* lxd.lxc
* lxd.migrate
* lxd.lxc-to-lxd
* lxd.check-kernel
* lxd
* android-studio
* lxd.buginfo
* lxd.benchmark
* Manual .deb installs
* epson-inkjet-printer-escpr_1.8.1-1_amd64.deb
* epson-printer-utility_1.1.2-1_amd64.deb
* min-1.29.0-amd64.deb
* ungoogled-chromium_112.0.5615.165-1_amd64.deb
* vieb_10.4.0_amd64.deb
* NIXPKGS_ALLOW_UNFREE=1 nix profile install --impure --override-input nixpkgs nixpkgs/nixos-23.11 --show-trace github:nix-community/nixGL#nixGLNvidia
* [NixOS/nixpkgs/issues/122671](https://github.com/NixOS/nixpkgs/issues/122671)
* Teams CLI creation?
* [fossteams/teams-cli](https://github.com/fossteams/teams-cli)
* [fossteams](https://github.com/fossteams)
* [learn.microsoft.com/en-us/graph/api/resources/teams-api-overview?view=graph-rest-1.0](https://learn.microsoft.com/en-us/graph/api/resources/teams-api-overview?view=graph-rest-1.0)
* [learn.microsoft.com/en-us/graph/use-the-api](https://learn.microsoft.com/en-us/graph/use-the-api)
* [learn.microsoft.com/en-us/graph/overview](https://learn.microsoft.com/en-us/graph/overview)
* [developer.microsoft.com/en-us/graph/](https://developer.microsoft.com/en-us/graph/)
* [c-sharpcorner.com/article/managing-microsoft-teams-with-office-365-cli-commands/](https://www.c-sharpcorner.com/article/managing-microsoft-teams-with-office-365-cli-commands/)
* [pnp.github.io/](https://pnp.github.io/)
* [pnp/cli-microsoft365](https://github.com/pnp/cli-microsoft365)

/var/snap/landscape-client/common/etc/landscape-client.conf  :
* [client]
* log_level = info
* url = * [landscape.knecon.com/message-system](https://landscape.knecon.com/message-system)
* ping_url = * [landscape.knecon.com/ping](https://landscape.knecon.com/ping)
* data_path = /var/lib/landscape/client
* computer_title = stellaris15
* account_name = standalone
* registration_key = SpeakFriendAndEnter
* include_manager_plugins = ScriptExecution
* AppImages: Android_File_Transfer_For_Linux, ubports-installer, Vieb, xplorer, balenaEtcher

+++ b/redai/backend/image/utils.py

@@ -80,7 +80,7 @@ def hash_image(image: Image):
* Returns:

 """
* image = image.resize((10, 10), Image.ANTIALIAS)
* image = image.resize((10, 10), Image.LANCZOS)
* image = image.convert("L")
* pixel_data = list(image.getdata())
* avg_pixel = sum(pixel_data) / len(pixel_data)
* [i3wm.org/docs/repositories.html](https://i3wm.org/docs/repositories.html)
* [DT](https://www.youtube.com/watch?v=AHvwxc62lDQ&t=135s)
* [thexavier666/i3_ubuntu_server](https://github.com/thexavier666/i3_ubuntu_server)
* [hackification.io/blog/2020/10/09/installing-the-i3-tiling-window-manager-on-ubuntu-server/](https://www.hackification.io/blog/2020/10/09/installing-the-i3-tiling-window-manager-on-ubuntu-server/)
* [kifarunix.com/install-i3-windows-manager-on-ubuntu/](https://kifarunix.com/install-i3-windows-manager-on-ubuntu/)
* [linuxfordevices.com/tutorials/ubuntu/install-i3-window-manager](https://www.linuxfordevices.com/tutorials/ubuntu/install-i3-window-manager)
* [linux.how2shout.com/how-to-install-i3-window-manager-ubuntu-20-04-or-debian-11/](https://linux.how2shout.com/how-to-install-i3-window-manager-ubuntu-20-04-or-debian-11/)
* [linuxways.net/ubuntu/how-to-install-i3-on-ubuntu/](https://linuxways.net/ubuntu/how-to-install-i3-on-ubuntu/)
* [askubuntu.com/questions/1440313/ubuntu-server-22-10-failed-to-start-session](https://askubuntu.com/questions/1440313/ubuntu-server-22-10-failed-to-start-session)
* [askubuntu.com/questions/1397503/i3-radius-dependancy-issues](https://askubuntu.com/questions/1397503/i3-radius-dependancy-issues)
* [unix.stackexchange.com/questions/593534/changing-i3-startup-terminal](https://unix.stackexchange.com/questions/593534/changing-i3-startup-terminal)
* [docs.qtile.org/en/latest/manual/install/ubuntu.html](http://docs.qtile.org/en/latest/manual/install/ubuntu.html)
* [vpsie.com/knowledge-base/how-to-install-qtile-on-ubuntu-20-04-lts/](https://vpsie.com/knowledge-base/how-to-install-qtile-on-ubuntu-20-04-lts/)
* [Work On Ubuntu FASTER and MORE EFFICIENTLY with tiling window managersTiling Window Managers - In this video I'll explain what they are, why I think using tiling window managers is more efficient, and show how to install 2 of my favorites on Ubuntu Linux.
* For the demo of installing i3 on Ubuntu, skip to 4:28
* Demo on installing and configuring bspwm - 7:15
* Extra links
* Archlinux Comparison of Tiling Window Managers: [wiki.archlinux.org/index.php/Comparison_of_tiling_window_managers](https://wiki.archlinux.org/index.php/Comparison_of_tiling_window_managers)
* At 9:10, the path to default bspwm and sxhdc config files on ubuntu  is /usr/share/doc/bspwm/examples
* Lemonbar documentation: [LemonBoy/bar](https://github.com/LemonBoy/bar)
* i3wm: [i3/i3](https://github.com/i3/i3)
* bspwm: [...](https://github.com/baskerville/bspwm)
        [...](https://www.youtube.com/watch?v=-PGlrtoFXK4))
* [tecadmin.net/installing-lightdm-on-ubuntu/](https://tecadmin.net/installing-lightdm-on-ubuntu/)

```jsx
sudo apt update && sudo apt upgrade
sudo apt install --no-install-recommends lightdm-gtk-greeter
sudo apt install --no-install-recommends lightdm
sudo apt install --no-install-recommends xorg xinit
sudo dpkg-reconfigure lightdm

/usr/lib/apt/apt-helper download-file [debian.sur5r.net/i3/pool/main/s/sur5r-keyring/sur5r-keyring_2023.02.18_all.deb](https://debian.sur5r.net/i3/pool/main/s/sur5r-keyring/sur5r-keyring_2023.02.18_all.deb) keyring.deb SHA256:a511ac5f10cd811f8a4ca44d665f2fa1add7a9f09bef238cdfad8461f5239cc4
sudo apt install ./keyring.deb
rm keyring.deb
echo "deb [debian.sur5r.net/i3/](http://debian.sur5r.net/i3/) $(grep '^DISTRIB_CODENAME=' /etc/lsb-release | cut -f2 -d=) universe" | sudo tee /etc/apt/sources.list.d/sur5r-i3.list
sudo apt update
sudo apt install i3
sudo apt install picom
echo "exec i3" >> ~/.xinitrc
sudo apt install libx11-dev libxft-dev libharfbuzz-dev libxinerama-dev build-essential
git clone [gitlab.com/dwt1/dmenu-distrotube.git](https://gitlab.com/dwt1/dmenu-distrotube.git)
cd dmenu-distrotube
sudo make clean install
sudo apt install kitty
echo 'export TERMINAL="/usr/bin/kitty"' >> ~/.bashrc && source ~/.bashrc

```
* → replace dmenu with rofi: [gist.github.com/panicwithme/60d371ed85378154bf990fd1092a72c1](https://gist.github.com/panicwithme/60d371ed85378154bf990fd1092a72c1)

## Mantis

* [sommaa/Mantis](https://github.com/sommaa/Mantis)
* [averagelinuxuser.com/ssh-into-virtualbox/#connect-to-virtualbox-from-the-guest-os](https://averagelinuxuser.com/ssh-into-virtualbox/#connect-to-virtualbox-from-the-guest-os) 

```bash
sudo apt install
sudo apt update && sudo apt upgrade

#sudo apt install spice-vdagent spice-webdavd

sudo apt install --no-install-recommends lightdm-gtk-greeter
sudo apt install --no-install-recommends lightdm
sudo apt install --no-install-recommends xorg xinit
sudo dpkg-reconfigure lightdm

/usr/lib/apt/apt-helper download-file [debian.sur5r.net/i3/pool/main/s/sur5r-keyring/sur5r-keyring_2023.02.18_all.deb](https://debian.sur5r.net/i3/pool/main/s/sur5r-keyring/sur5r-keyring_2023.02.18_all.deb) keyring.deb SHA256:a511ac5f10cd811f8a4ca44d665f2fa1add7a9f09bef238cdfad8461f5239cc4
sudo apt install ./keyring.deb
echo "deb [debian.sur5r.net/i3/](http://debian.sur5r.net/i3/) $(grep '^DISTRIB_CODENAME=' /etc/lsb-release | cut -f2 -d=) universe" | sudo tee /etc/apt/sources.list.d/sur5r-i3.list
sudo apt update
sudo apt install i3
sudo apt install picom
echo "exec i3" >> ~/.xinitrc
sudo apt install build-essential

----------------------------------------------------------sudo apt-get install virtualbox-guest-additions-iso

#sudo add-apt-repository ppa:spvkgn/zathura-mupdf

sudo vim /etc/apt/sources.list

#deb [ppa.launchpadcontent.net/spvkgn/zathura-mupdf/ubuntu](https://ppa.launchpadcontent.net/spvkgn/zathura-mupdf/ubuntu) focal main

##deb-src [ppa.launchpadcontent.net/spvkgn/zathura-mupdf/ubuntu](https://ppa.launchpadcontent.net/spvkgn/zathura-mupdf/ubuntu) focal main

###sudo add-apt-repository ppa:spvkgn/zathura-mupdf

sudo apt update
sudo apt install zathura zathura-djvu zathura-pdf-mupdf
sudo apt install polybar rofi kitty zsh ranger nala nitrogen xsensors arandr python3 brightnessctl flameshot gzip curl git python3-pip dunst xclip
sudo apt install cmake unzip gettext
mkdir pkgs && cd pkgs
git clone [neovim/neovim.git](https://github.com/neovim/neovim.git)
cd neovim
git checkout v0.9.0
make CMAKE_BUILD_TYPE=Release
sudo make install

----------------------------------------------------------#=====>
#cd ~/pkgs/

#git clone --depth=1 [adi1090x/rofi.git](https://github.com/adi1090x/rofi.git)

#cd rofi

#chmod +x setup.sh

#./setup.sh

pip install pycairo requests i3ipc
git clone --depth 1 [AstroNvim/AstroNvim](https://github.com/AstroNvim/AstroNvim) ~/.config/nvim
nvim

# :q

sh -c "curl -fsSL raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh")
curl -sS [starship.rs/install.sh](https://starship.rs/install.sh) | sh
echo "" >> ~/.zshrc
echo 'eval "$(starship init zsh)"' >> ~/.zshrc
curl -fsSL https://raw.githubusercontent.com/spicetify/spicetify-cli/master/install.sh | sh
sudo apt install pkg-config libgirepository1.0-dev libcairo2-dev
git clone [deter0/xborder](https://github.com/deter0/xborder)
cd xborder
chmod +x xborders
pip install -r requirements.txt

./xborders --help

--------------------------------------------------------------# HERE IS WHERE IT GETS TRICKY

#sudo apt-get install python3-pip git

#pip3 install i3ipc

#git clone [olemartinorg/i3-alternating-layout](https://github.com/olemartinorg/i3-alternating-layout)

# add to i3 config:

#exec --no-startup-id /path/to/alternating_layouts.py

#/usr/lib/apt/apt-helper download-file [debian.sur5r.net/i3/pool/main/s/sur5r-keyring/sur5r-keyring_2023.02.18_all.deb](https://debian.sur5r.net/i3/pool/main/s/sur5r-keyring/sur5r-keyring_2023.02.18_all.deb) keyring.deb SHA256:a511ac5f10cd811f8a4ca44d665f2fa1add7a9f09bef238cdfad8461f5239cc4

sudo apt install ./keyring.deb
echo "deb [debian.sur5r.net/i3/](http://debian.sur5r.net/i3/) $(grep '^DISTRIB_CODENAME=' /etc/lsb-release | cut -f2 -d=) universe" | sudo tee /etc/apt/sources.list.d/sur5r-i3.list
sudo apt update
sudo apt install i3

#
cd ~/pkgs
git clone [sommaa/Mantis.git](https://github.com/sommaa/Mantis.git)
cd Mantis/dots
cp -r i3 $HOME/.config
cd ~/pkgs/
git clone --depth=1 [adi1090x/rofi.git](https://github.com/adi1090x/rofi.git)
cd rofi
chmod +x setup.sh

./setup.sh

# comment out block around line 54 in rofi config

cp -r ~/pkgs/Mantis/dots/kitty ~/.config
cp -r ~/pkgs/Mantis/dots/ranger ~/.config
cp ~/pkgs/Mantis/dots/starship.toml ~/.config
pip install neovim
mkdir ~/.config/dunst
cp ~/pkgs/Mantis/dots/dunstrc ~/.config/dunst
cp -r ~/pkgs/Mantis/dots/picom ~/.config

```

```bash
cp -r polybar ~/.config
cp -r nitrogen ~/.config
cp -r chrome  ~/.config
cp -r ranger $HOME/.config
cp -r spicetify $HOME/.config
cp -r zathura $HOME/.config
cp dunstrc $HOME/.config
cp starship.toml $HOME/.config

# combine manually

cp zshrc $HOME/_zshrc
cp -r nvim $HOME/.config/_nvim
mv $HOME/.config/rofi $HOME/.config/_rofi
mv $HOME/.config/nvim $HOME/.config/_nvim
cp -r rofi $HOME/.config/rofi
cp -r nvim $HOME/.config/nvim
pip install neovim

#TODO: find .otf instead of .ttf

cd ~/pkgs
wget [ryanoasis/nerd-fonts/releases/download/v2.1.0/Iosevka.zip](https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Iosevka.zip)
unzip Iosevka.zip -d Iosevka
cp ~/pkgs/Iosevka/Iosevka*.ttf ~/.local/share/fonts/
wget [ryanoasis/nerd-fonts/releases/download/v2.1.0/JetBrainsMono.zip](https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/JetBrainsMono.zip)
unzip JetBransMono.zip -d JetBrainsMono
cp ~/pkgs/JetBrainsMono/JetBrains*.ttf ~/.local/share/fonts/
wget [ryanoasis/nerd-fonts/releases/download/v2.1.0/Meslo.zip](https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Meslo.zip)
unzip Meslo.zip -d Meslo
cp ~/pkgs/Meslo/Meslo*.ttf ~/.local/share/fonts/
git clone [sainnhe/icursive-nerd-font](https://github.com/sainnhe/icursive-nerd-font)
cp ~/pkgs/icursive-nerd-font/dist/Cascursive/Cascursive*.ttf ~/.local/share/fonts
git clone [displaay/Azeret](https://github.com/displaay/Azeret)
cp ~/pkgs/Azeret/fonts/ots/Azeret*.otf ~/.local/share/fonts
eval "$(starship init zsh)"
export PATH=$PATH:/home/isaac/.spicetify

```

# Color Themes

## theme galleries

* ( ) [Pling Store](https://www.pling.com/) - Desktop app of openDesktop.org, which is one of the largest communities where developers and artists share applications, themes and other content.
* ( ) [Base16 Themes by AndrsDC](https://vscodethemes.com/e/andrsdc.base16-themes/base16-dark-3024?language=javascript)
* ( ) [desktops](https://deskto.ps/)
* ( ) [VS Code Themes](https://vscodethemes.com/)
* ( ) [VS Code themes](http://orta.io/vscode-themes/)
* ( ) [gnome-look](https://www.gnome-look.org/browse/)
* ( ) [plasma store - themes](https://store.kde.org/browse?cat=104&ord=latest) -> [plasma theme docs](https://develop.kde.org/docs/plasma/theme/)
* ( ) [qtile screenshots](http://www.qtile.org/screenshots/)
* ( ) [repainter](https://repainter.app/themes)
* ( ) [vscode-base16-term](https://glitchbone.github.io/vscode-base16-term/#/)

## By Color

### Green

*  [Midnight Forest](https://github.com/rezwan-hossain/Midnight-Forest) - one of the very best
*  [merko](https://github.com/merko30/merko-green-theme)
*  [Zone Green](https://vscodethemes.com/e/convolution.zone-green/zone-green?language=javascript) - near perfect
*  [Jungle Scenario](https://vscodethemes.com/e/nerudevs.jungle-scenario/jungle?language=javascript)
*  [Honolulu Forest](https://vscodethemes.com/e/honoluluchampi.honolulu-forest/honolulu-forest?language=javascript) - essentially perfect
*  [CRT UI](https://vscodethemes.com/e/lean2dro-rodrigues.crt-vscode/crt-ui-default?language=javascript) - family of phenomenal nearly-monochrome
*  [Deep Jungle](https://vscodethemes.com/e/stelo.icykiss/deep-jungle?language=javascript) - basically perfect
*  [Cold Heights](https://repainter.app/themes/01G8AXRDW74GCE0QXAQK571JJA)
*  [Base16 Atelier Savanna](https://base16.netlify.app/previews/base16-atelier-savanna.html) - dark green with nice colors, nearly perfect!
*  [naysayer88](https://plugins.jetbrains.com/plugin/13824-naysayer88) not found, but outstanding color theme!
*  [x3-alpha Theme - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=gerane.Theme-x3-alpha) - verrrrry good
*  [Pine Forest Green by Felix Tjernberg](https://vscodethemes.com/e/felix-tjernberg.pine-forest-green/pine-forest-green-dark?language=javascript)
*  [Ocean Green](https://vscodethemes.com/e/jovejonovski.ocean-green/ocean-green-dark?language=javascript) - very good for visually noisy languages!
*  [Natural Watercourse](https://repainter.app/themes/01G6D6YNEAMTFK0XYR90CV0D3W)
*  [Mint Theme](https://vscodethemes.com/e/marcbruederlin.mint-theme/mint-dark?language=javascript) - just change keyword color
*  [Kelp Forest Theme](https://vscodethemes.com/e/jasontheiler.kelp-forest-theme-vscode/kelp-forest?language=go) - good 8-star theme
*  [Kelp Forest Theme by Jason Theiler](https://vscodethemes.com/e/jasontheiler.kelp-forest-theme-vscode/kelp-forest?language=javascript) - interesting balance between contrast and coherence
*  [Icy Kiss, Icy Kiss Light & Deep Jungle Theme by Stephan Loibl](https://vscodethemes.com/e/stelo.icykiss/deep-jungle?language=javascript) - almost perfect
*  [Hackpot Poisoned Garden](https://vscodethemes.com/e/wwmyers.hackpot/hackpot-poisoned-garden?language=javascript) - use darker background
*  [Hackpot Garden of Atlantis](https://vscodethemes.com/e/wwmyers.hackpot/hackpot-garden-of-atlantis?language=html) - fresh
*  [Forest All-Nighter](https://vscodethemes.com/e/huytd.forest-all-nighter/forest-all-nighter?language=javascript) - nearly perfect for nvim
*  [Eden Theme - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=gerane.Theme-Eden)
*  [DuoTone Dark Forest](https://simurai.com/img/posts/duotone-dark-forest.png)
*  [Druid Theme - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=gerane.Theme-Druid)
*  [Doctis](https://vscodethemes.com/e/doc-extentions.doctis/doctis-obscuro?language=javascript) - nice primary and secondary
*  [dcode](https://vscodethemes.com/e/dcode.dcode-theme/dcode?language=javascript) - almost perfect, ecept for the background
*  [Dark hacker theme by Magson](https://vscodethemes.com/e/magson.dark-hacker-theme/dark-hacker-theme?language=javascript) - phenomenal foreground colors
*  [dark brown and green](https://raw.githubusercontent.com/xero/dotfiles/main/preview.png)
*  [Dark Apathy](https://vscodethemes.com/e/andrsdc.base16-themes/base16-dark-apathy?language=go) - just wonderful
*  [cozygreen](https://vscodethemes.com/e/niudai.niudai/skyblue?language=javascript) - decent highlighting; maybe a good starting point for a counterpart light theme
*  [Clear Dawn Dark](https://vscodethemes.com/e/ivanhernandez.theme-clear-dawn-dark/clear-dawn-dark?language=javascript) - almost perfect (see also other monochrome)
*  [beautiful green color theme](https://youtu.be/6XAu4EPQRmY) - Jonathan Blow (also good video!)
*  [base2tone forest](https://base2t.one/demo/forest/)
*  [Zone Green by Convolution](https://vscodethemes.com/e/convolution.zone-green/zone-green?language=javascript) - great highlighting colors; try on very dak green
*  [Noctis](https://vscodethemes.com/e/zylve.noctis-italicized/noctis-obscuro?language=javascript) - great background (also nice family with other colors) - subset of colors is excellent
*  [Monochrome with rainbow brackets](https://www.reddit.com/media?url=https%3A%2F%2Fi.redd.it%2Fxlbv5gsidyc61.png) → how to deal with it?
*  [Kary Pro Colors by Pouya Kary](https://vscodethemes.com/e/karyfoundation.theme-karyfoundation-themes/kary-pro-colors-dark?language=javascript) - very natury, interesting varied but not clashing highlight colors
*  [Green Abyss](https://vscodethemes.com/e/mureni.green-abyss/green-abyss?language=javascript) - colorful but not distasteful
*  [Forest Focus by A.J. Bale](https://vscodethemes.com/e/abalejr.forest-focus/forest-focus?language=javascript) - easy on the eyes; change background and tinker with
*  [Forest All-Nighter by huytd](https://vscodethemes.com/e/huytd.forest-all-nighter/forest-all-nighter?language=javascript) - patel and low-contrast
*  [foggy-forest by xinkechen](https://vscodethemes.com/e/xinkechen.foggy-forest-theme/foggy-forest-v1?language=javascript) - interesting use of blue and brown
*  [Foggy Forest](https://vscodethemes.com/e/xinkechen.foggy-forest-theme/foggy-forest-v1?language=javascript) - really good, but tinker with yellow and green
*  [dcode Theme by Dom (dcode)](https://vscodethemes.com/e/dcode.dcode-theme/dcode?language=javascript) - very mellow
*  [Dark Turquoise](https://vscodethemes.com/e/vhood.dark-turquoise/dark-turquoise?language=javascript) - good family of themes
*  [Codex Effect](https://vscodethemes.com/e/steamforge.codex-effect/codex-effect?language=javascript) - very good; just fix yellow
*  [CodeSchool2](https://vscodethemes.com/e/bernik.theme-codeschool2-minimal/codeschool2-minimal?language=javascript) - really good colorset, just change background
*  [City Lights](https://marketplace.visualstudio.com/items?itemName=Yummygum.city-lights-theme) - very coherent and attractive; just mute the yellow a bit [main site](https://citylights.xyz/)
*  [base2tone sea](https://base2t.one/demo/sea/) - blue and green
*  [base2tone garden](https://base2t.one/demo/garden/) - green and brown
*  [base2tone field](https://base2t.one/demo/field/)- blue and green
*  [Base16 Apathy](https://base16.netlify.app/previews/base16-apathy.html) - dark green with lively colors $
*  [...](https://raw.githubusercontent.com/rainglow/examples/master/vim/gloom-contrast.png)
*  [VSC Military Style](https://vscodethemes.com/e/technoninja.vsc-military-style/vsc-military-style?language=javascript) - close to ideal
*  [Trybe](https://vscodethemes.com/e/betrybe.trybe-theme/trybe-theme-dark?language=javascript) - nice green with colors, try for real
*  [shrek Theme - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=gerane.Theme-shrek) - surprsingly good; highlighting choices bad - strings should not be the brightest
*  [Fallout Pip-Boy](https://vscodethemes.com/e/fcgod.fallout-pip-boy-theme/fallout-pipboy-theme?language=javascript) - interesting few-color theme → try something like this, but less extreme
*  [Dark Green+](https://vscodethemes.com/e/kazelone.vscode-dark-green-plus/dark-green?language=javascript) - slick dark green, colorful
*  [Bittersweet Theme - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=gerane.Theme-Bittersweet) - nice green with tasteful use of purple
*  [White Oak Chillhop](https://vscodethemes.com/e/zaderrox1111.white-oak-chillhop/white-oak-chillhop-dark?language=javascript) - green and red, surprisingly nice 
*  [Vampire](https://vscodethemes.com/e/ebenjs.vampire-ebenjs/vampire?language=javascript) - flat green
*  [Tsukuyomi](https://vscodethemes.com/e/developerayo.tsukuyomi/tsukuyomi?language=javascript) - mutd camo green 
*  [Sublime Oceanic After Next](https://vscodethemes.com/e/christophwolff.sublime-oceanic-after-next-theme/sublime-oceanic-after-next-theme-mariana?language=javascript) - lavender-minty 
*  [Seafoam-Pastel-Dark Theme - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=gerane.Theme-Seafoam-Pastel-Dark) - good coherence; I don’t agree with specifics of highlighting: low-contrast brown should be for comments, not variables or keywords
*  [sacredforest-vim](https://github.com/karoliskoncevicius/sacredforest-vim) - use some of these colors
*  [punk-runner](https://vscodethemes.com/e/theedgesofben.punk-runner/punk-runner?language=javascript) - get dark background → do I like the red?
*  [Neon Hacker](https://vscodethemes.com/e/emiliano-sanchez-m.neon-hacker/emiliano-sanchez-madrid?language=javascript) - nice monochrome
*  [NaturalContrast Theme - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=gerane.Theme-NaturalContrast) - nice dark green background; shift red to brownish-red
*  [Material Forest VS Code by Taha Publishers](https://vscodethemes.com/e/tahapublishers.material-forest-vscode/material-forest-theme?language=javascript) - very slick and coherent
*  [Dark Forestech Theme by Dark Forestech Theme](https://vscodethemes.com/e/darkforestechtheme.dark-forestech-theme/dark-forestech-theme?language=javascript) - try modifying by replacing/muting warm colors
*  [Canvas Theme by hatreeksbergermon](https://vscodethemes.com/e/hatreeksbergermon.canvas-theme/canvas?language=javascript) - need to tinker with to change annoying colors
*  [Base16 Atelier Estuary](https://base16.netlify.app/previews/base16-atelier-estuary.html) - dull and earthy
* ( ) [vscode theme dark green - Google Search](https://www.google.com/search?client=firefox-b-d&q=vscode+theme+dark+green#imgrc=dHWHIcTdWo1sBM)
* ( ) [vimb video](https://www.youtube.com/watch?v=3jGX1QrZbRY)
* ( ) [The Jungle Green](https://github.com/Abu-Hojayfa/the-Jungle-green-VSCODE-Theme)
* ( ) [shamrock](https://github.com/DymNomZ/Shamrock)
* ( ) [very dark green with light accents](https://www.gitkraken.com/wp-content/uploads/2023/01/image19-1-1024x379.png)
* ( ) [see green color scheme: How to Contribute to Open Source](https://youtu.be/2L0sxPx4C18)
* ( ) [Samuel-B-D/vscode-dark-green-plus: Dark green Visual Studio Code theme that's easy on the eyes.](https://github.com/Samuel-B-D/vscode-dark-green-plus)
* ( ) [Reddit GREEN - [HerbstLuft] Sick of bars and fetchs](https://www.reddit.com/r/unixporn/comments/11e1408/herbstluft_sick_of_bars_and_fetchs/)
* ( ) [Reddit - What's your neovim colorscheme in 2023 ??](https://www.reddit.com/r/neovim/comments/10znmr2/whats_your_neovim_colorscheme_in_2023)
* ( ) [perfect green](https://www.reddit.com/media?url=https%3A%2F%2Fi.redd.it%2Fi3-simple-manjaro-i3-installation-happy-with-the-results-v0-crt07bxg6mia1.png%3Fs%3D87d9bc8d76747ff4adeee71ef11526bc40ba0f55)
* ( ) [PERFECT GREEN](https://i.pinimg.com/236x/03/aa/f5/03aaf5d675a96bd4b65f20ff3b6adede.jpg)
* ( ) [PERFECT DARK GREEN](https://www.reddit.com/media?url=https%3A%2F%2Fi.redd.it%2Fsu1dbts9ovm51.jpg)
* ( ) [perfect dark green](https://raw.githubusercontent.com/dark-Jedi2108/nvide/main/.github/screenshots/collage.png)
* ( ) [PERFECT DARK GREEN](https://preview.redd.it/ezcn7utjv9h41.png?auto=webp&s=f95c300d93d3734186070d2fc5451a817843648e)
* ( ) [PDJ Sample](https://sphinx-themes.org/sample-sites/sphinx-pdj-theme/) - dark gray, green, and blue, looks nice
* ( ) [Pastel Forest Theme](https://github.com/rghosh96/Forest-VSCode-Color-Theme)
* ( ) [Ocean Green](https://github.com/datyin/theme-ocean-green)
* ( ) [nix green](https://www.pinterest.de/pin/334744184802587636/)
* ( ) [night forest](https://marketplace.visualstudio.com/items?itemName=thecurlycoder.night-forest)
* ( ) [neovim bluish green](https://neovim.io/doc/user/options.html)
* ( ) [Monokai Dark Green - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=alvaro-israel-nunes-leite.theme-monokai-dark-green)
* ( ) [Modern Teal Dark](https://i.redd.it/mhob0ye88rka1.png) - interesting, but not for me <<<
* ( ) [Lush Green Linux rice](https://www.youtube.com/watch?v=VejgsroFEL0)
* ( ) [Kelp Forest](https://github.com/jasontheiler/kelp-forest-theme-vscode)
* ( ) [honolulu forest by Honoluluchampi](https://vscodethemes.com/e/honoluluchampi.honolulu-forest/honolulu-forest?language=javascript)
* ( ) [GREY AND GREEN](https://i.pinimg.com/236x/01/8b/c8/018bc8cd7d17c1aab2f241df8c398cca.jpg)
* ( ) [Greenscreeen](https://vscodethemes.com/e/andrsdc.base16-themes/base16-dark-greenscreen?language=javascript) too green, but some nice tones and a case study in monochrome contrast *
* ( ) [Greenery by Jared Jones](https://vscodethemes.com/e/jaredkent.greenery/greenery?language=javascript)
* ( ) [green-abyss by mureni](https://vscodethemes.com/e/mureni.green-abyss/green-abyss?language=javascript)
* ( ) [Green Theme - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=gerane.Theme-Green)
* ( ) [GREEN RICE IDEAS](https://i.pinimg.com/originals/30/91/e7/3091e71f52ee99c48daea1689a9f95b7.png)
* ( ) [green gruvbox theme](https://www.cinnamon-look.org/p/1327723)
* ( ) [Green Dark Theme by yiliyl](https://vscodethemes.com/e/yiliyl.green-dark-theme/real-green-dark-theme?language=javascript)
* ( ) [green color palette](https://i.pinimg.com/736x/6b/a3/72/6ba37202504d6edaec868a1f94b53eea.jpg)
* ( ) [Green and Bright Blue](https://user-images.githubusercontent.com/60475104/143660435-cd1d6f4d-ab3b-4c7d-87e4-245617d9342b.png)
* ( ) [Forest](https://github.com/feb19/theme-forest)
* ( ) [Forest Blue](https://github.com/TymonZ/forest-blue-theme)
* ( ) [good mellow green](https://www.gitkraken.com/wp-content/uploads/2023/01/image13-1024x390.png)
* ( ) [excellent green translucent](https://www.reddit.com/r/neovim/comments/13paxp2/my_dashboard_theme_setup/)
* ( ) [everforest](https://github.com/sainnhe/everforest-vscode)
* ( ) [Druid Theme](https://marketplace.visualstudio.com/items?itemName=gerane.Theme-Druid)
* ( ) [Dark Sea](https://github.com/MoOx/vscode-color-theme-dark-sea)
* ( ) [Dark Sea Green](https://marketplace.visualstudio.com/items?itemName=Dadoux.Dadoux)
* ( ) [dark green](https://www.reddit.com/media?url=https%3A%2F%2Fi.redd.it%2Fi3-wanted-to-get-back-into-ricing-linux-where-to-start-v0-9nkecpixhqqa1.jpg%3Fs%3Dc7f322da6409ca46bfe969e6b27670fa4e86df6c)
* ( ) [Dark Green Theme 2022 - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=StephenWhiteDragnilar.DarkGreenTheme2022)
* ( ) [Dark Green Jungle](https://github.com/AaBbdev29/Dark-Green-Jungle)
* ( ) [Dark Green Color Palette](https://www.color-hex.com/color-palette/9376)
* ( ) [Dark Green by Renato Neto](https://vscodethemes.com/e/zrnatoneto.dark-green/dark-green?language=javascript)
* ( ) [Dark Green - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=zRnatoNeto.dark-green)
* ( ) [blackish green code vscode](https://orta.io/vscode-themes/images/Druid.png)
* ( ) [blackish green code vscode - Google Search](https://res.cloudinary.com/practicaldev/image/fetch/s--4AUqMGSI--/c_limit,f_auto,fl_progressive,q_auto,w_880/https://github.com/merko30/merko-green-theme/raw/master/img/s.png)
* ( ) [Base16 Leaf Tomorrow - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=swjh.base16-leaf-tomorrow-vscode) - probably one of the best
* ( ) [Base16 Greenscreen](https://base16.netlify.app/previews/base16-greenscreen.html) - just a good case study in contrast between greens
* ( ) [Base16 Darktooth](https://base16.netlify.app/previews/base16-darktooth.html) - half the colors perfect; others need to be toned down
* ( ) [AMAZING THEME](https://preview.redd.it/2k9xfo87648z.png?auto=webp&s=40ee184fd28f892a995d3cfc7f702857e7b92e3b)
* ( ) [AMAZING GREEN and GRAY](https://preview.redd.it/vbx6rv34okk11.png?auto=webp&s=3799cfc63c56d31ba5ae2498b83e25649609dc64)
* ( ) [AMAZING GREEN AND BLUE](https://preview.redd.it/bzz4hxovkxg11.png?auto=webp&s=2a25a01a48d141f130692a3a873f11fd00016fb2)
* ( ) [AMAZING GREEN AND BLUE](https://github.com/airways/dear-imgui-rs-hello/blob/main/screenshot.png) [airways/dear-imgui-rs-hello/tree/main](https://github.com/airways/dear-imgui-rs-hello/tree/main)
* ( ) [...](https://www.reddit.com/r/unixporn/comments/133cg7r/void_dwm_st_a_very_green_and_suckless_rice/)
* ( ) [...](https://raw.githubusercontent.com/rainglow/examples/master/vim/kiwi.png )
* ( ) [...](https://raw.githubusercontent.com/rainglow/examples/master/vim/glowfish.png)
* ( ) [...](https://github.com/sommaa/Mantis)
* ( ) [...](https://dataswamp.org/~solene/) - green and yellow earthy

### Purple

*  [Tokyonight](https://www.reddit.com/r/unixporn/comments/12c7z80/tmux_simple_tokyo_night_theme_goes_well_with/)
*  [...](https://github.com/rebelot/kanagawa.nvim)
*  [Shades of Purple](https://res.cloudinary.com/practicaldev/image/fetch/s--eVwP2Vax--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8co8iagxdiuw2rm62n5t.png)
*  [Amy Theme - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=gerane.Theme-Amy) nice!
*  [...](https://github.com/wadackel/vim-dogrun)
*  [...](https://github.com/hardhackerlabs/themes) hardhacker
*  [Pink Puff](https://vscodethemes.com/e/jet-c.vscode-theme-pink-puff/pink-puff?language=javascript) - fashionable
*  [Dark Space](https://vscodethemes.com/e/deadrevolver.dark-space-theme/dark-space?language=javascript)
*  [...](https://github.com/EdenEast/nightfox.nvim) duskfox
*  [...](https://github.com/catppuccin/catppuccin)
*  [Enough with the Palenight](https://vscodethemes.com/e/lebster.enough-with-the-palenight/palenight-material?language=javascript) - mellow purple, like Vhyrro
*  [Pinker](https://vscodethemes.com/e/poiasdpoiasd.pinker/pinker?language=javascript) - interesting vibe
*  [Lavender Theme - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=gerane.Theme-Lavender) - replace red
*  [fitrh](https://deskto.ps/u/fitrh)
*  [Dracula](https://marketplace.visualstudio.com/items?itemName=dracula-theme.theme-dracula) - too cartoonish, but some elements are nice
*  [Ancient One Dark](https://vscodethemes.com/e/uetchy.ancient-one-dark/ancient-one-dark?language=javascript) - purple, maybe too light
* ( ) [nice purple theme](https://www.reddit.com/media?url=https%3A%2F%2Fi.redd.it%2Fyabai-macos-school-workflow-v0-503xf7md5fta1.png%3Fs%3Dc97840efc19627836ed5def03e7d87f65741fcc6)
* ( ) [endeavorOS purple](https://www.youtube.com/watch?v=esheqy5-aaU)
* ( ) [...](https://raw.githubusercontent.com/rainglow/examples/master/vim/lavender.png)
* ( ) [...](https://raw.githubusercontent.com/rainglow/examples/master/vim/heroku.png)
* ( ) [...](https://raw.githubusercontent.com/rainglow/examples/master/vim/crisp.png)

### Brown / Other

*  [Enfocado](https://vscodethemes.com/e/wuelnerdotexe.vscode-enfocado/enfocado-dark-nature?language=javascript) - almost perfect on brown
*  [perfect brown](https://vscodethemes.com/e/ermiyaszeleke.matrix/matrix-theme?language=javascript)
*  [Muted Nature by Emerion](https://vscodethemes.com/e/emerion.muted-nature/muted-nature-dark?language=javascript) - nearly perfect highlighting colors
*  [Gruvbox Material Dark Hard Flat](https://www.notion.so/New-Tool-Discovery-de1b080db59f4a93b89d0d1804ff3fa1?pvs=21)
*  [...](https://reddit.com/r/unixporn/s/pyYkthza17) extremely nice
*  [RetroPoster](https://vscodethemes.com/e/csyasin.theme-retro-poster/retro-poster?language=javascript) - very mellw and coherent
*  [...](https://github.com/habamax/vim-gruvbit) - nice earthy medium-contrast
*  [Muted Nature](https://vscodethemes.com/e/emerion.muted-nature/muted-nature-dark?language=javascript) - very brown and earthy
*  [zenburn](https://github.com/jnurmine/Zenburn) - very earthy and mellow
*  [Ra Nature Dark Theme by Rahman Yerli](https://vscodethemes.com/e/rahmanyerli.ra-nature/ra-nature-dark-theme?language=javascript) - very muted and easy on the eyes
*  [Nature Dark](https://vscodethemes.com/e/rahmanyerli.ra-nature/ra-nature-dark-theme?language=javascript) - mellow and earthy
*  [Kary Pro](https://vscodethemes.com/e/karyfoundation.theme-karyfoundation-themes/kary-pro-colors-dark?language=javascript) - colorful, interesting, mellow
*  [Grunge Theme - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=gerane.Theme-Grunge) - rremove red, then nice
* ( ) [gruvbit](https://www.reddit.com/r/vim/comments/iorjjs/gruvbit_variation_of_gruvbox_colorscheme/)
* ( ) [Gloom Theme - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=gerane.Theme-Gloom) - good if red is changed
* ( ) [DuoTone Dark Earth](https://raw.githubusercontent.com/simurai/duotone-dark-earth-syntax/master/docs/screenshot.png)
* ( ) [Base16 Marrakesh](https://base16.netlify.app/previews/base16-marrakesh.html)
* ( ) [Base16 Bespin](https://base16.netlify.app/previews/base16-bespin.html) - brown background, but very good foreground colors

### Gray

*  [...](https://github.com/sainnhe/everforest) - one of the best
*  [Subliminal Next](https://vscodethemes.com/e/konradkeska.subliminal-next/subliminal-next?language=javascript) - grey with excellent low-contrast for special characters and keywords → adopt this!
*  [One Dark Teal](https://vscodethemes.com/e/seonglae.one-dark-teal/one-dark-teal?language=javascript) - very subtle low-contrast, nice ideas
*  [Nord](https://marketplace.visualstudio.com/items?itemName=arcticicestudio.nord-visual-studio-code) - arctic, north-bluish clean and elegant
*  [Dark Ashes](https://vscodethemes.com/e/andrsdc.base16-themes/base16-dark-ashes?language=javascript) - really good foreground; change background from gray to green
*  [Awesome Forest](https://www.reddit.com/media?url=https%3A%2F%2Fi.redd.it%2Fc0ilzexndo881.png) [nuxshed/dotfiles](https://github.com/nuxshed/dotfiles)
*  [Ariake Dark](https://marketplace.visualstudio.com/items?itemName=wart.ariake-dark) - beautiful blue and purple tones over gray background
*  [...](https://github.com/EdenEast/nightfox.nvim)
* nordfox
*  [One Dark Pro](https://marketplace.visualstudio.com/items?itemName=zhuangtongfa.Material-theme) - nice gray background, interesting colorful foreground with good contrast
*  [C/C++ Theme](https://vscodethemes.com/e/xen.ccpp-theme/cc-theme?language=cpp) - nice primary and secondary
*  [...](https://github.com/tuffgniuz/seiun.vim) - nice boring gray
*  [Iceberg Theme - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=gerane.Theme-Iceberg) - gray, white, red, blue
* ( ) [New Darcula](https://vscodethemes.com/e/e-simpson.new-darcula/new-darcula?language=javascript)
* ( ) [Base16 Railscasts](https://base16.netlify.app/previews/base16-railscasts.html) (grayish)

### Black

*  [BG Black](https://vscodethemes.com/e/kurodamaria.bg-black/bg-black?language=javascript) - almost perfect colors, but on near-black green background
*  [Dark Hacker](https://vscodethemes.com/e/magson.dark-hacker-theme/dark-hacker-theme?language=javascript) - pretty good, green-brown-yellow
*  [SIMPLE DARK](https://vscodethemes.com/e/in-the-box.simple-dark/simple-dark?language=javascript) - black, white, gray, green
*  [Pitch Black](https://marketplace.visualstudio.com/items?itemName=viktorqvarfordt.vscode-pitch-black-theme) - startingly nice, good foreground colors
*  [...](https://distrowatch.com/gallery-mobile.php?distribution=kodachi) (good theme) - black, grey, light green
*  [One Dark Pro Monokai Darker](https://marketplace.visualstudio.com/items?itemName=eserozvataf.one-dark-pro-monokai-darker) - high-contrast, too colorful, but worth a try → maybe modify?
*  [Cyberpunk](https://vscodethemes.com/e/clerian.cyberdyne20xx/cyberdyne-20xx?language=cpp) - good family of highlighting colors
*  [Cyberdyne 20XX by clerian](https://vscodethemes.com/e/clerian.cyberdyne20xx/cyberdyne-20xx?language=javascript) - blue and purple
*  [Bliss Theme - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=gerane.Theme-Bliss) - green and blue on black
*  [Black background bright colors](https://www.reddit.com/media?url=https%3A%2F%2Fi.redd.it%2Fqtile-maybe-my-last-rice-on-arch-linux-btw-v0-8yblg58aubva1.png%3Fs%3D9504a382a77e61bfd8b072ba54a76a9a9da5e205)
* ( ) [Base16 Seti](https://base16.netlify.app/previews/base16-seti.html) - black and very colorful, but nice tones

### Bluish

*  [React Theme](https://vscodethemes.com/e/jeans.jsx-awesome-theme/react-theme?language=javascript) - just need to change yellow
*  [perfect manjaro](https://qtile.org/screenshots/longerhv/) qtile [config](https://gitlab.com/LongerHV/.dotfiles/blob/master/.config/qtile/config.py) green and blue
*  [Night Owl](https://marketplace.visualstudio.com/items?itemName=sdras.night-owl&WT.mc_id=twitter-social-sdras) - dark and coherent
*  [Gentle](https://vscodethemes.com/e/lukeocodes.gentle-themes/gentle-dark?language=javascript) - really nice vibe
*  [DuoTone Dark Sea](https://simurai.com/img/posts/duotone-dark-sea.png)
*  [Better_JS Theme - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=gerane.Theme-BetterJS) - blue green white gray
*  [...](https://github.com/rebelot/kanagawa.nvim)
*  [Solarized+](https://vscodethemes.com/e/szilardleventefarkas.solarizedplus/solarized?language=javascript) - compare to solarized
*  [Solarized Minimal](https://vscodethemes.com/e/jibsen.theme-solarized-minimal/solarized-minimal-dark?language=javascript) - even better
*  [Shape Theme](https://vscodethemes.com/e/apk.shape-theme/shape?language=go) - good for coding, reduced visual clutter
*  [Outerspace Next](https://vscodethemes.com/e/konradkeska.outerspace-next/outerspace-next-alien-invasion?language=javascript) - really coherent, nice theme
*  [Ocean Deeper](https://vscodethemes.com/e/pierrenel.theme-oceandeeper/oceandeeper?language=javascript) - really nice and serene
*  [Flat_Dark Theme - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=gerane.Theme-FlatDark)
*  [BlueForest](https://vscodethemes.com/e/alonsodomin.blueforest-theme/blueforest?language=javascript)
*  [base2tone meadow](https://base2t.one/demo/meadow/) - very nice
*  [...](https://github.com/EdenEast/nightfox.nvim) nightfox
*  [Nightly Theme](https://vscodethemes.com/e/mohammadalishahbazi.nightly-theme/nightly-theme?language=javascript) - nice vibe, coherent subset of colors is good
*  [Cobalt Next](https://marketplace.visualstudio.com/items?itemName=dline.CobaltNext) - greenish-bluish, good highlighting, just subdue yellow
*  [base2tone morning](https://base2t.one/demo/morning/) - blue and brown
*  [base2tone lake](https://base2t.one/demo/lake/) - blue and brown/yellow
*  [Thanatos](https://vscodethemes.com/e/fede-crc.thanatos/thanatos?language=javascript) - like solarized, but more subdued
*  [Oceanic Next](https://www.notion.so/Scratch-a73e54b64dc04d50b797cb1347cd18f7?pvs=21)
*  [Ice Blue](https://vscodethemes.com/e/danascript.ice-blue-dark-theme/ice-blue?language=javascript) - too colorful, but some nice colors
*  [Feel Better UI Theme](https://vscodethemes.com/e/edipox.feel-better/feel-better?language=javascript) - like solarized, but more mellow 
*  [Dragonight](https://vscodethemes.com/e/teamdragonight.dragonight/the-dragonight?language=javascript) - too colorful but nice vibe
*  [Cobalt2](https://marketplace.visualstudio.com/items?itemName=wesbos.theme-cobalt2) - too high-contrast for me, but has interesting parts
*  [Base16 Nord](https://base16.netlify.app/previews/base16-nord.html)
*  [aurelia - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=AureliaEffect.aurelia) - nice use of beige
* BLUE ICE THEME [pling.com/p/1651718/](https://www.pling.com/p/1651718/)
* ( ) [wildtype](https://github.com/wtype/wildtype-theme)
* ( ) [The Very Mathematical History of a Perfect Color Combination | WIRED](https://www.wired.com/story/very-mathematical-history-perfect-color-combination/) - solarized dark - look at how the colors go with dark green
* ( ) [Renku](https://sphinx-themes.org/#theme-renku-sphinx-theme) - nice blue, white, and green
* ( ) [Nord Demo](https://www.youtube.com/watch?v=ZPRfc2OVi2s)
* ( ) [mystico](https://github.com/chibanti/mystico-vscode-theme)
* ( ) [Moonbow](https://raw.githubusercontent.com/arturgoms/moonbow.nvim/master/images/image_1.png) - nice colors, just need toning down
* ( ) [Hail Theme - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=gerane.Theme-Hail) - good study in blue contrasts
* ( ) [Hackpot Darker Knight](https://vscodethemes.com/e/wwmyers.hackpot/hackpot-darker-knight?language=html) - really good dark blue and green
* ( ) [Eagle Oceanic Next - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=graf009.Eagle-Oceanic-Next) - blue with nice green and white
* ( ) [DuoTone Dark Sea](https://www.notion.so/Color-Themes-0757a83275bb46d1a22ab6b146d1c339?pvs=21) - blue with green and white $
* ( ) [BlueLover Theme - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=gerane.Theme-BlueLover)
* ( ) [Base16 Oceanic Next](https://colorsublime.github.io/themes/Oceanic%20Next/)
* ( ) [Base16 Materia](https://base16.netlify.app/previews/base16-materia.html)
* ( ) [Base16 Harmonic Dark](https://base16.netlify.app/previews/base16-harmonic-dark.html) -too colorful, but some nice colors
* ( ) [Anarchist Theme - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=gerane.Theme-Anarchist) - blue, white, red
* ( ) [...](https://github.com/hoshiya4522/tmux-simple-nord)
* ( ) [TMUX] [Minimal Nord theme for tmux](https://www.reddit.com/r/unixporn/comments/129b7vn/tmux_minimal_nord_theme_for_tmux/)
* ( ) [...](https://github.com/clyde80/dotfiles) clyde80 blue and red

### Light

* ( ) [Userscape Theme - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=gerane.Theme-Userscape) - not terrible, but not for me <<<

## Templates

* ( ) [gitlab.com/GasparVardanyan/solarized](https://gitlab.com/GasparVardanyan/solarized)

## IDEAS

(not unlike [nvim site](https://neovim.io/doc/user/options.html) [colors](https://github.com/neovim/neovim.github.io/search?q=color)):

* dark green main background (0,13,5)
* slightly less dark green secondary background (1,21,5)
* pale green foreground (alternative: silver/gray)
* silver (147,161,161)
* two different blue tones: light/bright for accent (red or orange?); darker (lower-contrast) blue for gray (comments color) → bluish-silver: (88,110,117)
* mahogany/chestnut for another low-contrast color
* light green
* turquoise
* white for another high-contrast
* dull-gold? → not if I want to keep all colors cool
* medium green for low-contrast text
* pale brown?
* lavender?
* green, blue, gray, brown, subdued gold, white, mahogany

* Apps
  * freetube

## ChatGPT

### Request 1

Sure! Here's a base-16 color scheme with a very dark green background, shades of green and blue, and neutral colors like white, gray, and brown:

* Background:
* #002200 (very dark green)
* Shades of green:v
* #116611 (dark green)
* #44aa44 (mid-green)
* #88cc88 (light green)
* Shades of blue:
* #115577 (dark blue)
* #44aadd (mid-blue)
* #88ccff (light blue)
* Neutral colors:
* #ffffff (white)
* #cccccc (light gray)
* #888888 (mid gray)
* #444444 (dark gray)
* #aa8844 (brown)
* These colors can be used for a variety of design purposes, such as web design, graphic design, or branding.

### Request 2

* Sure! Here's a base-16 color scheme that incorporates shades of green, blue, white, gray, and brown, with a very dark green background:
* Background:
* Dark green: #004d00
* Primary colors:
* Bright green: #00ff00
* Dark blue: #000066
* Secondary colors:
* Light green: #66ff66
* Medium blue: #3333cc
* Neutrals:
* White: #ffffff
* Light gray: #cccccc
* Medium gray: #666666
* Dark gray: #333333
* Light brown: #d9b38c
* Dark brown: #8b4513
* These colors can be used for a variety of design elements, such as text, buttons, backgrounds, and borders. Let me know if you need any additional assistance!

### Request 3

* Sure! Here's a base-16 color scheme with a dark green background and built around green and blue:
* Background:
* Dark green: #004d00
* Primary colors:
* Bright green: #00ff00
* Deep blue: #000080
* Secondary colors:
* Olive green: #808000
* Teal blue: #008080
* Neutrals:
* White: #ffffff
* Light gray: #c0c0c0
* Medium gray: #808080
* Dark gray: #404040
* Black: #000000
* These colors can be used for a variety of design elements, such as text, buttons, backgrounds, and borders. Let me know if you need any additional assistance!

### Request 4

* Sure! Here's a base-16 color scheme with a dark green background, built around green and blue:
* Background:
* Dark green: #004d00
* Primary colors:
* Bright green: #00ff00
* Dark blue: #000080
* Secondary colors:
* Light green: #66ff66
* Medium blue: #1e90ff
* Neutrals:
* White: #ffffff
* Light gray: #cccccc
* Medium gray: #666666
* Dark gray: #333333
* Black: #000000
* These colors can be used for a variety of design elements, such as text, buttons, backgrounds, and borders. Let me know if you need any additional assistance!

### Request 5

* Sure, here are a few base-16 color schemes that might be fitting for nature lovers:

Earthy Tones:

* Background: #7c5b49
* Primary Colors: #9e9478, #c3b090
* Secondary Colors: #d9c5a7, #746b5a
* Neutrals: #f1e7d6, #bba58c, #594b38, #2e241b
* Forest Green:
* Background: #0e3b1b
* Primary Colors: #386641, #6b9a44
* Secondary Colors: #9db68c, #c5dca0
* Neutrals: #f3f3f3, #d2d2d2, #969696, #4f4f4f
* Ocean Blue:
* Background: #0e3246
* Primary Colors: #4c6c92, #7e99b3
* Secondary Colors: #b4cfe0, #d8e6f4
* Neutrals: #f5f5f5, #dcdcdc, #b3b3b3, #5d5d5d
* These color schemes incorporate colors commonly found in nature, such as browns, greens, blues, and grays. They can be used for a variety of design purposes, such as websites, logos, or branding.

### Request 6

* Here's how the Solarized Dark color scheme can be mapped to the categories of a base-16 color scheme:
* Background:
* Base03: #002b36
* Primary colors:
* Green: #859900
* Blue: #268bd2
* Secondary colors:
* Cyan: #2aa198
* Magenta: #d33682
* Neutrals:
* Base2: #93a1a1
* Base1: #839496
* Base0: #657b83
* Base00: #586e75
* Base03: #002b36
* Note that the Solarized Dark color scheme has a slightly different structure than a traditional base-16 color scheme, as it includes multiple shades of gray instead of just one neutral color. However, the colors can still be categorized into backgrounds, primary colors, secondary colors, and neutrals as in a base-16 scheme.

## VSCode

```json
{
    "workbench.colorCustomizations": {
    "terminal.background": "#001207", *,   //"#06201c",$
    "terminal.foreground": "#8c968c", *,   //"#4e8f4e",$
    "terminalCursor.background": "#092A24",
    "terminalCursor.foreground": "#287b6d",
    "terminal.ansiBlack": "#022718",
    "terminal.ansiBrightBlack": "#06392d",
    "terminal.ansiBlue": "#0d5f1a", *,     //"#0f73a1",     //"#0d4b5a",$
    "terminal.ansiBrightBlue": "#0d5f1a", *,       //"#96883E",$
    "terminal.ansiCyan": "#3eb5ad",
    "terminal.ansiBrightCyan": "#62c3bd",
    "terminal.ansiGreen": "#0f73a1", *,    //"#37210f",$
    "terminal.ansiBrightGreen": "#0f73a1", *,      //"#759b1e",$
    "terminal.ansiMagenta": "#3d3447",*,   //"#174390",*
    "terminal.ansiBrightMagenta": "#3d3447",*,     //"#0c45a8",*
    "terminal.ansiRed": "#4e1008", *,      //"#96883E",     //"#0f73a1",     //"#3E9688",$
    "terminal.ansiBrightRed": "#4e1008", *,//"#3E9688",$
    "terminal.ansiWhite": "#a9afae",
    "terminal.ansiBrightWhite": "#acf177",
    "terminal.ansiYellow": "#a66622", *,    //"#a95f15",     //"#301f43",     //"#604a0f",$
    "terminal.ansiBrightYellow": "#3d3447",
    "terminal.selectionBackground": "#ff0000",
    "terminal.selectionForeground": "#ff0000",
    "terminal.inactiveSelectionBackground": "#ff0000"
}
```

## Scratch

### Green Mountains wallpaper

* #0F1E25
* #06292F
* #0B3835
* #14473E
* #2F6649
* #407352
* #51926A
* #5DA478
* #77B188
* #C8E690

### Alacritty settings

```yaml
colors:
    # Default colors
    primary:
background: '0x000d05'
foreground: '0x93a1a1'

    # Normal colors
    normal:
black:   '0x011505'
red:     '0x2a8005'
green:   '0x284212'#'0x859900'
yellow:  '0xbfa000'
blue:    '0x268bd2'
magenta: '0xa383af'#'0x0d1aec'
cyan:    '0x51f4ad'
white:   '0xa0f3c4'#'0x93a1a1'

    # Bright colors
    bright:
black:   '0x657b83'
red:     '0x2a8005'
green:   '0x859900'
yellow:  '0xbfa000'
blue:    '0x1652cc'
magenta: '0xa383af'#'0x4b0d62'#'0x0d1aec'
cyan:    '0x2aa16d'
white:   '0xa0f3c4'#'0xfdf6e3'
```

### VSCode Style

```jsonc
{
    Equivalence - Solarized Dark
    "terminal.background":"#002B36", , // → BG
    "terminal.foreground":"#93A1A1", , // → FG
    "terminalCursor.background":"#93A1A1", ,   // →
    "terminalCursor.foreground":"#93A1A1", ,   // →
    "terminal.ansiBlack":"#002B36", ,  // → 0
    "terminal.ansiBlue":"#268BD2", ,   // → 4
    "terminal.ansiBrightBlack":"#657B83", ,    // → 8
    "terminal.ansiBrightBlue":"#268BD2", ,     // → 12
    "terminal.ansiBrightCyan":"#2AA198", ,     // → 14
    "terminal.ansiBrightGreen":"#859900", ,    // → 10
    "terminal.ansiBrightMagenta":"#6C71C4", ,  // → 13
    "terminal.ansiBrightRed":"#DC322F", ,      // → 9
    "terminal.ansiBrightWhite":"#FDF6E3", ,    // → 15
    "terminal.ansiBrightYellow":"#B58900", ,   // → 11
    "terminal.ansiCyan":"#2AA198", ,   // → 6
    "terminal.ansiGreen":"#859900", ,  // → 2
    "terminal.ansiMagenta":"#6C71C4", ,// → 5
    "terminal.ansiRed":"#DC322F", ,    // → 1
    "terminal.ansiWhite":"#93A1A1", ,  // → 7
    "terminal.ansiYellow":"#B58900" ,  // → 3
}

{
    // Solarized Dark
    "terminal.background":"#002B36",
    "terminal.foreground":"#93A1A1",
    "terminalCursor.background":"#93A1A1",
    "terminalCursor.foreground":"#93A1A1",
    "terminal.ansiBlack":"#002B36",
    "terminal.ansiBlue":"#268BD2",
    "terminal.ansiBrightBlack":"#657B83",
    "terminal.ansiBrightBlue":"#268BD2",
    "terminal.ansiBrightCyan":"#2AA198",
    "terminal.ansiBrightGreen":"#859900",
    "terminal.ansiBrightMagenta":"#6C71C4",
    "terminal.ansiBrightRed":"#DC322F",
    "terminal.ansiBrightWhite":"#FDF6E3",
    "terminal.ansiBrightYellow":"#B58900",
    "terminal.ansiCyan":"#2AA198",
    "terminal.ansiGreen":"#859900",
    "terminal.ansiMagenta":"#6C71C4",
    "terminal.ansiRed":"#DC322F",
    "terminal.ansiWhite":"#93A1A1",
    "terminal.ansiYellow":"#B58900"
}
```

## Tairnbach

```json
{
    "terminal.background": "#001207",   //"#06201c",*
    "terminal.foreground": "#7e8b7e",*, //"#4e8f4e",*
    "terminalCursor.background": "#092A24",
    "terminalCursor.foreground": "#092A24",
    "terminal.ansiBlack": "#022720",
    "terminal.ansiBrightBlack": "#07221C",
    "terminal.ansiBlue": "#388432",*,   //"#0f73a1",     //"#0d4b5a",*
    "terminal.ansiBrightBlue": "#388432",*,     //"#96883E",*
    "terminal.ansiCyan": "#b48810",
    "terminal.ansiBrightCyan": "#62c3bd",
    "terminal.ansiGreen": "#0f73a1",*,  //"#37210f",*
    "terminal.ansiBrightGreen": "#0f73a1",*,    //"#759b1e",*
    "terminal.ansiMagenta": "#71271d",
    "terminal.ansiBrightMagenta": "#5a2721",
    "terminal.ansiRed": "#5b1f17",*,    //"#96883E",     //"#0f73a1",     //"#3E9688",*
    "terminal.ansiBrightRed": "#caac13",*,      //"#3E9688",*
    "terminal.ansiWhite": "#56bdac",
    "terminal.ansiBrightWhite": "#7cc786",
    "terminal.ansiYellow": "#3d3447",*, //"#a95f15",     //"#301f43",     //"#604a0f",*
    "terminal.ansiBrightYellow": "#3d3447",
    "terminal.selectionBackground": "#ff0000", ,// change these
    "terminal.selectionForeground": "#ff0000",
    "terminal.inactiveSelectionBackground": "#ff0000"
}
```

### Temporary Alacritty

```yaml
colors:
    # Default colors*
    primary:
background: '0x000d05'
foreground: '0x93a1a1'
    # Normal colors
    normal:
black:   '0x011505'
red:     '0x2a8005'
green:   '0x2aa198'
yellow:  '0xbfa000'
blue:    '0x268bd2'
magenta: ‘e0aff3’#'0x0d1aec'
cyan:    '0x40a62f'
white:   '0x93a1a1'
    # Bright colors
    bright:
black:   '0x657b83'
red:     '0x883b0b'
green:   '0x859900'
yellow:  '0xb58900'
blue:    '0x9ad226'
magenta: ‘4b0d62’#'0x059ef9'
cyan:    '0x2aa198'
white:   '0xfdf6e3'
```

### Mapping from Solarized Dark: Color scheme: solarized → tairnbach

* Base03 (darkest blue) →
* Base02 (lighter blue) →
* Base01
* Base00
* Base0
* Base1
* Base2 (darker beige)
* Base3 (lighter beige)
* Yellow
* Orange
* Red
* Magenta
* Violet
* Blue
* Cyan
* Green
* Syntax highlighting Solarized Dark:keyword: orangeconstant: bluefunction: yellowbuilt-in kw: redstring: cyanother: graycomment: darker gray

## Sort

*  very dark purple [Reddit - [Fluxbox] Entre Dos Aguas](https://www.reddit.com/r/unixporn/comments/120sy8f/fluxbox_entre_dos_aguas/)
*  purple [Reddit - [Xmonad] Another catppuccin convert](https://www.reddit.com/r/unixporn/comments/yw4l8h/xmonad_another_catppuccin_convert/)
*  cold, dark, blue [Reddit - [xmonad] dark mountain theme (first rice)](https://www.reddit.com/r/unixporn/comments/120ab3h/xmonad_dark_mountain_theme_first_rice/)
*  [perfect gray](https://www.reddit.com/media?url=https%3A%2F%2Fi.redd.it%2Fxdsiynlciaqa1.png)
*  [GREEN AND BLUE [GNOME] Dark Lime Alleyway](https://www.reddit.com/r/unixporn/comments/hvhs2y/gnome_dark_lime_alleyway_first_attempt_at_ricing/) - saturated green
*  dark purple [r/unixporn/comments/12ua388/bspwm_polybar/](https://www.reddit.com/r/unixporn/comments/12ua388/bspwm_polybar/)
*  beautiful tex set up, brown [Reddit - [i3] I recently changed from bspwm to i3 and I'm quite happy with my setup so far](https://www.reddit.com/r/unixporn/comments/10y42f1/i3_i_recently_changed_from_bspwm_to_i3_and_im/)
*  [almost perfect pastel green](https://www.reddit.com/media?url=https%3A%2F%2Fi.redd.it%2Fpisien0m8c0a1.png) - Base16 Everforest
*  [green and red rice](https://imgur.com/gallery/4MeNX/comment/742932033) - interesting, surpriisingly nice
* ( ) [ perfect gray](https://www.reddit.com/r/unixporn/comments/12ewy97/hyprland_i_am_worried_that_the_subreddit_name)
* ( ) [river-rice](https://github.com/Soliprem/river-rice) - excellent earthy green
* ( ) [Reddit - [dwm] Minimalist suckless dark-pastel-green themed rice](https://www.reddit.com/r/unixporn/comments/irur6n/dwm_minimalist_suckless_darkpastelgreen_themed/) - incredibl good pastel minty green
* ( ) [phenomenal dark purple](https://www.reddit.com/media?url=https%3A%2F%2Fi.redd.it%2F0qatg2jybgta1.png)
* ( ) [...](https://github.com/luisiacc/gruvbox-baby)
* ( ) [...](https://github.com/kolunmi/ttyscheme)
* ( ) [...](https://github.com/heygleeson/Gruvbox-GMTheme)

## Pictrix Notes (SORT) -------------------------------------------------------------------------------------------------------------

## Notes to Sort

```txt
Idea: use non-linear NN to learn continuous mapping from one color space to another
-> which architecture?
how to create training data?
* keep saturation, contrast, relative brightness
* use perceptual space?

-> not a linear transformation because o-> may be mapped to non-zero :: afine transformation
* example: red -> raspberry, green -> turquoise, blue -> violet

-> black stays black, white stays white
```

```tex
r_i = \frac{c^\prime, c_i (closest base color)}{\sum_i d(c^\prime, c_i)}
* b = (x^T x)^{-1} x^T y
```

1. calculate B-hat
2. learn 1- or 2-layer FFNN and compare results

* use triplet training on reduced-size embedings
* Experiment with mappings between solarized dark and gruvbox (base 16 format)
* How to handle ill-defined systems, i.e. multiple (or i)
A_i = [c_{i1}, c_{i2}, c_{i3}, c_{i4}, c_{i5}]_{[3 \times 5]}
A_{[3 \times 5]} M_{[5 \times 5]} = A^\prime_{[3 \times 5]}
or Mc = c^\prime
* Map between different formats
* Map one colorscheme to another (closed-form mapping matrix vs FFNN vs attention-based NN / transformer)
* ( ) [paletton.com/](https://paletton.com/)

### pictrix: Tools for Color and Theme Management

* make global-inputs with keybindings.nix and colors.nix, to be read into flake and fed into output in the let-in clause
* lawyp (juwal? ruwal?)

    Pywal in reverse

    Juwal is a nice wordplay

* separate or sub-) project: lawyp: remake wallpaper to match a given colorscheme
* → use triplet loss (in sklearn?) to train a new custom colorspace
* use cluster coherence methods to compute dispersion for each color cluster
* make intelligent guess at foreground vs background colors
* support both automatic and guided repainting → guided means user says which colors should be mapped to which colors, and everything is interpolated around that

    parameters:

* smoothing
* contrast
* darkness alpha (how much to adapt darkness to new colorscheme)
* saturation alpha (how much to adapt saturation to new colorscheme)
* visualize 3d map of color clusters

    Option to set color theme from image and pre-existing colorscheme:

    1. assign each pixel to nearest color in image
    2. for colors in colorscheme without any (or too few) assigned pixels: allow to steal closest colors from other clusters if those colors are far enough away → steal 1/a of closest pixels, where a = 3 or so→ better yet: steal p/(p+q) pixels, where p is p and q are some function of the distances of the points in the cluster from each color
    3. shift each color c → c’: to the centroid of the cluster
    4. optional: perform some interpolation between color and centroid, according to parameter epsilon controlling whether original color or new centroid is favored and by how much
    5. if a color in the colorscheme is simply too far from any pixels in the image, find the closest color that is a convex combination of two other colors in the image

  * colorspace-mapper
        Simple Steps:

1. compute matrices (potentially via WLS) to map each RGB code to colortheme-specific 16-dimensional space
2. approximate each unseen color as a weighted sum of the k closest colors in the colorscheme
3. replace each base color with the equivalent

Use the k colors defined in a colorscheme as the k dimensions of an vector space in which each RGB color code is then embedded

Then model mappings from one color space to another as a simple linear transformation

use this: [makuto/auto-base16-theme/blob/master/AutoBase16Theme.py](https://github.com/makuto/auto-base16-theme/blob/master/AutoBase16Theme.py)

Use Weighted Least Squares to assign preferences to different colors within Base16 framework?

Train FF neural network, input size 3, output size 3, hidden size (or 2 hidden layers?) 3, include biases (for affine transformation) → list of color mappings (for 16-100 colors? → define remappings for cardinal colors using weighted sum weighted by inverse (or inverse squared? → smoothing term of 0.0001 to avoid ) distance (or use perceptual space)

→ sigmoid good for output because it constrains values to between 0 and 1

→ how to get the distance-based interpolation right? → write function and test

→ optional weighting for certain colors (such as background color)

First test linear and nonlinear regression

write code to visualize effect of mapping on a large swatch board: [stackoverflow.com/questions/43971138/python-plotting-colored-grid-based-on-values](https://stackoverflow.com/questions/43971138/python-plotting-colored-grid-based-on-values)

* ( ) [stackoverflow.com/questions/64075569/how-to-plot-a-grid-of-colors-and-text](https://stackoverflow.com/questions/64075569/how-to-plot-a-grid-of-colors-and-text)
* ( ) [media.istockphoto.com/vectors/color-palette-popular-colors-color-chart-patterns-and-names-rgb-hex-vector-id1329565383](https://media.istockphoto.com/vectors/color-palette-popular-colors-color-chart-patterns-and-names-rgb-hex-vector-id1329565383)
* ( ) [visibone.com/color/chart_847.gif](https://www.visibone.com/color/chart_847.gif)
* ( ) [kkfscs.weebly.com/uploads/1/4/1/8/14186235/352372045_orig.png](http://kkfscs.weebly.com/uploads/1/4/1/8/14186235/352372045_orig.png)
* ( ) [m2.material.io/design/color/the-color-system.html#tools-for-picking-colors](https://m2.material.io/design/color/the-color-system.html#tools-for-picking-colors)
* ( ) [i.pinimg.com/originals/b7/a5/9f/b7a59fad2f489054608a52122aef0da4.png](https://i.pinimg.com/originals/b7/a5/9f/b7a59fad2f489054608a52122aef0da4.png)

and a color wheel: [pythonfordesigners.com/tutorials/hsl-color-wheel/](https://pythonfordesigners.com/tutorials/hsl-color-wheel/)

* ( ) [codeease.net/programming/python/color-wheel](https://www.codeease.net/programming/python/color-wheel)
* ( ) [stackoverflow.com/questions/39386272/creating-a-colorwheel-with-javascript](https://stackoverflow.com/questions/39386272/creating-a-colorwheel-with-javascript)
* ( ) [i.pinimg.com/originals/8f/28/6d/8f286d8aeb62b7c75b7c365257da68a4.jpg](https://i.pinimg.com/originals/8f/28/6d/8f286d8aeb62b7c75b7c365257da68a4.jpg) → like this with white ring around the edge and black circle in the middle

use color wheel to observe the effect of mappings such as [[1,0,0.5],[0,1,0],[0.5,0.5,1]]

Look seriously into tensor  multiplications in NumPy and PyTorch

* ( ) [numpy.org/doc/stable/reference/generated/numpy.tensordot.html](https://numpy.org/doc/stable/reference/generated/numpy.tensordot.html)

Example: given:

```tex

        colorspace $C_1$

        $$
        w_1 = (r_{w_1}, g_{w_1}, b_{w_1})
        $$

        $$
        x_1 = (r_{x_1}, g_{x_1}, b_{x_1})
        $$

        $$
        y_1 = (r_{y_1}, g_{y_1}, b_{y_1})
        $$

        $$
        z_1 = (r_{z_1}, g_{z_1}, b_{z_1})
        $$

        colorspace $C_2$

        $$
        w_2 = (r_{w_2}, g_{w_2}, b_{w_2})
        $$

        $$
        x_2 = (r_{x_2}, g_{x_2}, b_{x_2})
        $$

        $$
        y_2 = (r_{y_2}, g_{y_2}, b_{y_2})
        $$

        arbitrary color representation:

        $$
        a_{[RGB]} = (a_r, a_g, a_b)
        $$

        $$
        a_{[C_1]} = (a_{w_1}, a_{x_1}, a_{y_1}, a_{z_1}): a_{w_1}w_1, a_{x_1}x_1, a_{y_1}y_1, a_{z_1}z_1 = a_{[RGB]}
        $$

        $$
        a_{[C_2]} = (a_{w_2}, a_{x_2}, a_{y_2}): a_{w_2}w_2, a_{x_2}x_2, a_{y_2}y_2 = a_{[RGB]}
        $$

        $$
        A_{[C_1][4 \times 4]} = [a_{w_1}, a_{x_1}, a_{y_1}, a_{z_1}]
        $$

        $$
        A_{[C_1][4 \times 3]} = [a_{w_2}, a_{x_2}, a_{y_2}]
        $$
```

* another possibility: [stackoverflow.com/questions/58823918/how-to-parallelize-model-prediction-from-a-pytorch-model](https://stackoverflow.com/questions/58823918/how-to-parallelize-model-prediction-from-a-pytorch-model)
* ( ) [stackoverflow.com/questions/26571199/vectorize-multiplying-rgb-array-by-color-transform-matrix-for-image-processing](https://stackoverflow.com/questions/26571199/vectorize-multiplying-rgb-array-by-color-transform-matrix-for-image-processing)

```python
* X = np.arange(120).reshape(5,8,3)
W = np.array(
    [
        [1. , 0. , 0.5],
            [0. , 1. , 0. ],
            [0.5, 0.5, 1. ]
    ]
)
* transformed = np.tensordot(X, W, axes=([2], [1]))
print(transformed.shape)
```

* ( ) [ImageGoNord - RGB image to Nordtheme](https://ign.schrodinger-hat.it/)

## Roadmap

* compile list of applications (top, basic, extended, someday - according to priority)
* look carefully at existing projects and their respective approaches, before continuing iwht this roadmap: most notably nix-colors and stylix → possibly to integrate even more fully into Home Manager than a “Home Manager config file generation” step?
* write app-specific config parsers and writers
* first parse structure, if not off-the shelf
* find colors in config
* create config file for all supported apps, with sensible defaults: pictrix.toml
* extend config parsers to write changed colors (with backup, including optional support for commenting out old colors lines, but also backing up the config to e.g. ~/.cache/pictrix/{timestamp}
* Add increasingly advanced color functionality, to allow for both linear and perceptual function (esp interpolation) and eventually even different mappings of color schemes to and from images (last part as dependency, rather than just as constituent module in pictrix)

### Notes

* Alternative names: colorflip, pavo (Latin for peacock), iridesco, splendor, vanitas, vainglory, ostentatio, vanus (vanix? → good wordplay; pictrix? ostentatix?)
* Goal: One tool for non-Nix Linux, one tool like Home Manager for colors (or make the latter nix-compatible?)
* Add color combination markup sublanguage to config TOML, using infixes and templating:

```toml
“$background00|perceptual<0.3,>|$foreground”
“$background00 | gradient <0.5, dark_factor=0.1> | $foreground”
“$syntax:python:method|gradient<0.5,light_factor=0.1>|$vscode:background”
“$alacritty:background00|isoline<contrast_target=0.2>|$foreground”
```

* add support for interpolating between (or other functions of) more than two colors?
* Add pseudo-screenshot tool to replace colors according to the template in a pre-made set of standard screenshots for each app (each distinct element with a distinct color), save these to a folder for easy visualization
* Comfortable CLI with various subcommands, support dry runs, rollbacks
* add syntax categories such as `thing` , `type`, `action`, `punctuation/delimiter` , `keyword`, etc. that can be used as defaults to apply to all languages
* also: categories for element types in CLI, TUI, GUI, and webpages: statistical and NLP-based inference for CSS → good logging so that process is transparent and easily improved or manually corrected
* include comment in config template to show which options are possible
* Nix, Home Manager→ create “pre-home-manager” that takes a master color file and populates the home manager settings (use Nix or some other language + templates? → Go, Zig, Rust, Haskell, OCaml, Cython, Lua?)
* ( ) [Misterio77/nix-colors](https://github.com/Misterio77/nix-colors) 
* ( ) [SenchoPens/base16.nix](https://github.com/SenchoPens/base16.nix) [Stylix](https://danth.github.io/stylix/)
* CSS & related
* ( ) [sass-lang.com/dart-sass/](https://sass-lang.com/dart-sass/)
* ( ) [sass/sassc](https://github.com/sass/sassc)

## Browser Ricing Notes

* Vanilla Linux
* ( ) [SingularisArt/Chameleon](https://github.com/SingularisArt/Chameleon) , → other projects by
* ( ) [GideonWolfe](https://github.com/GideonWolfe)
* ( ) [reorr/warnai](https://github.com/reorr/warnai)
* ( ) [cherrynoize/dash-dotfiles](https://github.com/cherrynoize/dash-dotfiles) dark-light color switcher
* ( ) [gradience.readthedocs.io/en/latest/](https://gradience.readthedocs.io/en/latest/)
* terminal
* (neo)vim
* ( ) [ThemerCorp/themer.lua](https://github.com/ThemerCorp/themer.lua)
* ( ) [chadcat7/prism](https://github.com/chadcat7/prism)
* ( ) [zaldih/themery.nvim](https://github.com/zaldih/themery.nvim)
* other apps / operating systemsGuake (Gnome app) theming$ chmod +x set_colors.sh$ ./set_colors.shAlternatively copy lines below directly into your shell.gconftool-2 -s -t string /apps/guake/style/background/color '#01010e0e0505'gconftool-2 -s -t string /apps/guake/style/font/color '#9393a1a1a1a1'gconftool-2 -s -t string /apps/guake/style/font/palette '#000021210606:#2a2aa1a19898:#2e2e99990000:#bfbfa0a00000:#26268b8bd2d2:#6c6c7171c4c4:#4040a6a62f2f:#9393a1a1a1a1:#65657b7b8383:#dcdc32322f2f:#858599990000:#b5b589890000:#26268b8bd2d2:#6c6c7171c4c4:#2a2aa1a19898:#fdfdf6f6e3e3'**
* ( ) [JollyRogerTrader/Regowal](https://github.com/JollyRogerTrader/Regowal)
* ( ) [lra/mackup/](https://github.com/lra/mackup/) - Keep your application settings in sync (OS X/Linux) → get ideas for colorflip and kbgeneral
* inspirations / potential dependencies[pywal](https://github.com/dylanaraps/pywal) - pywal is a script that takes an image (or a directory of images), generates a colorscheme (using imagemagick) and then changes all of your open terminal’s colors to the new colorscheme on the fly, allowing you to have your terminal colors change with your wallpaper, or other criteria.
* tools to use
* ( ) [http://mustache.github.io/](http://mustache.github.io/) - templatingRoadmap Create Github Organization: AestheticFreedom / Basmati → ended up going with Oryzotropheo→ Create analog for keyboard shortcutsDevelop feature that maps one picture with a given color scheme to the same picture with a different color scheme. → background, or other theme-specific art → use clustering to find color centers, then interpolation → what can pywal and other libraries already do? —> also, how to map all colors to colorscheme-compatible colors? esp. relevant for theming websites and changing images, svg, rendered TeX, etc.create tools for working with dconf, gconfconfigure startup files for Python -> colors for iPython, bpython, ptpython -> sync→ Make (partially) transparent backgrounds/borders that change the colors of the background: intensify, invert (especially for outline), mellow/dim, color shift, etc. →
* ( ) [r/unixporn/comments/12t1958/questions_on_advanced_window_transparency_settings/](https://www.reddit.com/r/unixporn/comments/12t1958/questions_on_advanced_window_transparency_settings/)rewrite in Rust (portability) or CL (for easiest extensibility? → look at how qtile handles config; learn more about plugins best practices in general)→ make Nix- and homewarrior-compatible!Look at how github, vscode, nvim, pygment, etc. handle color themes across languages → generalized token classesname polychrome?just make extensions for firefox and chromium? → support Nix/Home Manager installation better (?), less hacky
* ( ) [yelircaasi/swytchswatch](https://github.com/yelircaasi/swytchswatch)Someday: for phone, with whichever OS, desktop environment, and apps are best suitedIs it possible to map colors to others in the browser? Should be categorical, independent of site details. Like red #FF0000 always being shifted to green #00FF00
* ( ) [codeberg.org/anhsirk0/theme-builder](https://codeberg.org/anhsirk0/theme-builder)
* ( ) [ign.schrodinger-hat.it/](https://ign.schrodinger-hat.it/) → browser
* ( ) [stylebot.dev/](https://stylebot.dev/)
* ( ) [nyxt.atlas.engineer/article/theming-nyxt-3.org](https://nyxt.atlas.engineer/article/theming-nyxt-3.org)
* ( ) [nyxt.atlas.engineer/article/dark-theme.org](https://nyxt.atlas.engineer/article/dark-theme.org)
* ( ) [dracula/nyxt/blob/master/stylesheet.lisp](https://github.com/dracula/nyxt/blob/master/stylesheet.lisp)
* ( ) [nyxt.atlas.engineer/documentation#appearance](https://nyxt.atlas.engineer/documentation#appearance) →
* ( ) [nyxt.atlas.engineer/documentation](https://nyxt.atlas.engineer/documentation) for firefox: got to about:config and view modified only, search color (first use color option in preferences menu)
* ( ) [qutebrowser.org/doc/help/settings.html](https://qutebrowser.org/doc/help/settings.html)
* ( ) [r/qutebrowser/comments/glo28l/how_do_you_use_a_css_stylesheet/](https://www.reddit.com/r/qutebrowser/comments/glo28l/how_do_you_use_a_css_stylesheet/)
* ( ) [search?q=home-manager+firefox+colors&type=code](https://github.com/search?q=home-manager+firefox+colors&type=code)
* Sites to make custom CSS for:
  * Notion
  * GitHub
  * gitlab
  * stack overflow
  * stackexchange
  * Wikipedia
  * not YouTube unless I get AdBlock working
  * all mdbook sites
  * all docs I use frequently - python, rust, kotlin, julIa, etc
  * email (Gmail, Proton, etc)
  * Discord
  * Element
  * Reddit
  * Fediverse site
  * LibGen sites, Anna’s archive
  * BGA
  * Overleaf
  * google page, google docs, suite, drive
  * teams, outlook
  * nextcloud
  * fsf, Linux foundation, etc

#### Userscripts and Site-Specific CSS

* ( ) [userstyles.org/styles/163722/wikipedia-math-fix-for-dark-theme](https://userstyles.org/styles/163722/wikipedia-math-fix-for-dark-theme)
* ( ) [ ]  try Selenium on:
  * ( ) [ ]  chrome-extension://hncgkmhphmncjohllpoleelnibpmccpj/manage.htm
  * ( ) [ ]  chrome-extension://clngdbkpkpeebahjckkjfobafhncgmne/edit.htm
  * ( ) [ ]  moz-extension://fcb928ab-a898-4c47-9f85-2ff701b6e9dc/manage.htm
  * ( ) [ ]  moz-extension://ae95df29-277d-4ee3-aeb6-e4e84dfebada/manage.htm
  * ( ) [ ]  edge:  extension://clngdbkpkpeebahjckkjfobafhncgmne/manage.htm
  * ( ) [ ]  edge: extension://hncgkmhphmncjohllpoleelnibpmccpj/manage.htm
  * ( ) [ ]  [selenium-python.readthedocs.io/installation.html](https://selenium-python.readthedocs.io/installation.html)
* ( ) [ ]  [userstyles.org/styles/163722/wikipedia-math-fix-for-dark-theme](https://userstyles.org/styles/163722/wikipedia-math-fix-for-dark-theme)
* ( ) [openstyles/stylus: Stylus - Userstyles Manager](https://github.com/openstyles/stylus/tree/master)
* ( ) [stackoverflow.com/questions/22193369/run-chrome-extensions-using-command-prompt](https://stackoverflow.com/questions/22193369/run-chrome-extensions-using-command-prompt)
* ( ) [superuser.com/questions/1540252/how-to-run-chrome-chromium-extension-from-terminal-line-extension](https://superuser.com/questions/1540252/how-to-run-chrome-chromium-extension-from-terminal-line-extension)
* → Write own extension to load stylesheets into mainstream browsers via command line
* ( ) [book.huihoo.com/creating-applications-with-mozilla/mozilla-chp-4-sect-3.html](https://book.huihoo.com/creating-applications-with-mozilla/mozilla-chp-4-sect-3.html)
* ( ) [book.huihoo.com/creating-applications-with-mozilla/](https://book.huihoo.com/creating-applications-with-mozilla/)
* ( ) [developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions](https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions)
* ( ) [developer.chrome.com/docs/extensions/mv3/](https://developer.chrome.com/docs/extensions/mv3/)
* ( ) [chromium.googlesource.com/chromium/src.git/+/refs/heads/main/ui/native_theme/](https://chromium.googlesource.com/chromium/src.git/+/refs/heads/main/ui/native_theme/) → look into fixing
* ( ) [brave/brave-core](https://github.com/brave/brave-core) [brave/brave-core/tree/master/ui/webui/resources](https://github.com/brave/brave-core/tree/master/ui/webui/resources)
* ( ) [Where are installed Google Chrome extensions stored locally? - Stack Overflow](https://stackoverflow.com/questions/21475866/where-are-installed-google-chrome-extensions-stored-locally)
* ( ) [openstyles/stylus](https://github.com/openstyles/stylus)
* ( ) [stylish-userstyles/stylish](https://github.com/stylish-userstyles/stylish)
* ( ) [openstyles/stylus/wiki/UserCSS](https://github.com/openstyles/stylus/wiki/UserCSS)
* ( ) [greasyfork.org/](https://greasyfork.org/)
* ( ) [greasyfork.org/en/scripts/470753-mastodon-birdui-style-override](https://greasyfork.org/en/scripts/470753-mastodon-birdui-style-override)
* ( ) [greasyfork.org/en](https://greasyfork.org/en)
* ( ) [userstyles mirror](https://github.com/uso-archive/data) and [site](https://uso.kkx.one/)
* ( ) [usercss guide](https://github.com/openstyles/stylus/wiki/Usercss)
* ( ) [writing usercss](https://github.com/openstyles/stylus/wiki/Writing-UserCSS)
## SORT ---------------------------------------------------------------------------------------------------------------------------------

## Rice Font

* ( ) [* Code search results](https://github.com/search?q%3Dfont-patcher%2Blanguage%253ANix%26type%3Dcode)
* rice font Patched font name: $name Coterminous
* ( ) [Fontforge drops me into python? - Help - NixOS Discourse](https://discourse.nixos.org/t/fontforge-drops-me-into-python/5592)
* ( ) [Fonts - Wez's Terminal Emulator](https://wezfurlong.org/wezterm/config/fonts.html)
* ( ) [Glyphr Studio - font design, online](https://www.glyphrstudio.com/)
* ( ) [Glyphr Studio v2](https://www.glyphrstudio.com/app/)
* ( ) [How to get full unicode support on Chrome? : r/Unicode](https://www.reddit.com/r/Unicode/comments/4rhbjh/how_to_get_full_unicode_support_on_chrome/)
* ( ) [Installing fonts - NixOS4Noobs](https://jorel.dev/NixOS4Noobs/fonts.html)
* ( ) [Nerd Fonts - Iconic font aggregator, glyphs/icons collection, & fonts patcher](https://www.nerdfonts.com/cheat-sheet)
* ( ) [NixOS Search - Packages - font-patcher](https://search.nixos.org/packages?channel%3D23.11%26from%3D0%26size%3D50%26sort%3Drelevance%26type%3Dpackages%26query%3Dfont-patcher)
* ( ) [Programmable fonts with Rust by Valdemar Erk - YouTube](https://www.youtube.com/watch?v%3DMs1Drb9Vw9M)
* ( ) [Symbols for Legacy Computing - Wikipedia](https://en.wikipedia.org/wiki/Symbols_for_Legacy_Computing)
* ( ) [Symbols for Legacy Computing](https://www.unicode.org/charts/nameslist/c_1FB00.html)
* ( ) [Unicode Characters: 02500 to 025FF](https://www.w3.org/TR/xml-entity-names/025.html)
* ( ) [Unicode Characters: 02500 to 025FF](https://www.w3.org/TR/xml-entity-names/025.html)
* ( ) [Unicode – The World Standard for Text and Emoji](https://home.unicode.org/)
* ( ) [Unicode/List of useful symbols - Wikibooks, open books for an open world](https://en.wikibooks.org/wiki/Unicode/List_of_useful_symbols)
* ( ) [cfonts - npm](https://www.npmjs.com/package/cfonts)
* ( ) [http://designwithfontforge.com/fr-FR/index.html](http://designwithfontforge.com/fr-FR/index.html)
* ( ) [dee.underscore.world/blog/home-manager-fonts/](https://dee.underscore.world/blog/home-manager-fonts/)
* ( ) [discourse.nixos.org/t/home-manager-nerdfonts/11226](https://discourse.nixos.org/t/home-manager-nerdfonts/11226)
* ( ) [es.wikipedia.org/wiki/Curva_de_Bézier](https://es.wikipedia.org/wiki/Curva_de_B%25C3%25A9zier)
* ( ) [es.wikipedia.org/wiki/Curva_de_Bézier](https://es.wikipedia.org/wiki/Curva_de_B%25C3%25A9zier)
* ( ) [NixOS/nixpkgs/issues/230895](https://github.com/NixOS/nixpkgs/issues/230895)
* ( ) [nix-community/home-manager/issues/605](https://github.com/nix-community/home-manager/issues/605)
* ( ) [nixos.wiki/wiki/Fonts](https://nixos.wiki/wiki/Fonts)
* ( ) [linux.com/topic/desktop/how-manage-fonts-linux/](https://www.linux.com/topic/desktop/how-manage-fonts-linux/)
* ( ) [r/NixOS/comments/16i7bc0/how_to_install_powerline_and_fontawesome/](https://www.reddit.com/r/NixOS/comments/16i7bc0/how_to_install_powerline_and_fontawesome/)
* ( ) [r/NixOS/comments/18heuqb/how_to_use_installed_fonts_in_alacritty_etc/](https://www.reddit.com/r/NixOS/comments/18heuqb/how_to_use_installed_fonts_in_alacritty_etc/)
* ( ) [unicode.org/charts/PDF/U1FB00.pdf](https://www.unicode.org/charts/PDF/U1FB00.pdf)
* ( ) [libc/nix-nerd-fonts-patcher: Nix flake to use nerd-fonts font-patcher](https://github.com/libc/nix-nerd-fonts-patcher)
* ( ) [nerdfonts cheatsheet at DuckDuckGo](https://duckduckgo.com/?q%3Dnerdfonts%2Bcheatsheet%26ia%3Dweb)
* ( ) [script - Get list of all fonts containing a specific character - Ask Different](https://apple.stackexchange.com/questions/287707/get-list-of-all-fonts-containing-a-specific-character)
* ( ) [seijinriashenko/sf-mono-liga: A Flake for installing Apple's SF Mono nerd-font, patched and ligaturized](https://github.com/seijinriashenko/sf-mono-liga)
* ( ) [viperML/iosevka: My iosevka build, patched with nerd fonts](https://github.com/viperML/iosevka)
* rice font e.g. Fira Coterminous - even width border on the edge (1/8th? 1 pixel? 2 pixel? dynamic max(1/8th, 2 pixel)?

## Ricing Links

## Pictrix and Clavix Shared Notes

* ( ) [oxalica/nil](https://github.com/oxalica/nil) - nix language server in rust
* ( ) [nix-community/rnix-lsp](https://github.com/nix-community/rnix-lsp) - WIP language server for Nix (in Rust)
* ( ) [nix-community/nixd](https://github.com/nix-community/nixd) - Nix language server (in C++)
* ( ) [nerdypepper/statix](https://github.com/nerdypepper/statix) - static linter (in Rust)
* good list of apps: [lra/mackup/,](https://github.com/lra/mackup/,) starship, etc
* Use templating for unsupported apps (mustache templating? Use structured template parsing for all supported configs
* Use explicit write paths (for generated configs) and optionally explicit read paths (template / pre-existing config) with default locations provided in the pictrix config folder if destination folder does not exist - which one to give precedence?
* Back up all overwritten config files
* Color print info on operations performed, write to file, write logs

## Sort -------------------------------------------------------------------------------------------------------------

* ( ) [vinceliuice/vimix-icon-theme](https://github.com/vinceliuice/vimix-icon-theme)
* ( ) [niri](https://github.com/YaLTeR/niri)
* ( ) [freepik.com/free-vector/gradient-hexagonal-background_13900571.htm](https://www.freepik.com/free-vector/gradient-hexagonal-background_13900571.htm)
* ( ) [wallpaperflare.com/landscape-photography-of-mountains-surrounded-by-body-of-water-wallpaper-hcoir](https://www.wallpaperflare.com/landscape-photography-of-mountains-surrounded-by-body-of-water-wallpaper-hcoir)
* ( ) [hyprwm/hyprland-plugins/tree/main/hyprexpo](https://github.com/hyprwm/hyprland-plugins/tree/main/hyprexpo)
* ( ) [xsghetti/HyprCrux](https://github.com/xsghetti/HyprCrux)
* ( ) [uncut.wtf/](https://uncut.wtf/) - font collection
* flag [video](https://www.youtube.com/@Sephyrulz)

## Colors

* ( ) [jcarlosroldan.com/about](https://jcarlosroldan.com/about)
* ( ) [media.discordapp.net/attachments/635625917623828520/1228755940887629885/screenshot.png?ex=66366da5&is=6623f8a5&hm=29a1c8817cc7f7c52456f5081152a7777e05df4a37d296320651f04a2ce1ba75&](https://media.discordapp.net/attachments/635625917623828520/1228755940887629885/screenshot.png?ex=66366da5&is=6623f8a5&hm=29a1c8817cc7f7c52456f5081152a7777e05df4a37d296320651f04a2ce1ba75&)
* ( ) [olivercederborg/poimandres.nvim](https://github.com/olivercederborg/poimandres.nvim)

## Ideal Setup

* Minimal use of mouse
* Unified, consistent, ergonomic keybindings
* Multiple layouts and configurations for different tasks
* Configurations well-documented and backed up, easy to reproduce with a few commands
* Aesthetically pleasing - unified color scheme (and ability to switch between themes)
* Privacy and security
* Maximized efficiency and productivity: work at the speed of thought, minimizing clutter & drag
* Reliable, solid system - no breakage
* browser bookmarks [r/NixOS/s/eq3YVMGevM](https://www.reddit.com/r/NixOS/s/eq3YVMGevM)
* ( ) [alphacoders](https://wall.alphacoders.com/) - wallpapers
* ( ) [Aylur's GTK Shell | AGS Wiki](https://aylur.github.io/ags-docs/)
* ( ) [Buffer splitting/tiling · Issue #55 · atlas-engineer/nyxt](https://github.com/atlas-engineer/nyxt/issues/55)
* ( ) [Capturing a screenshot of the GDM login screen | en gnome | ao2.it](https://ao2.it/en/blog/2016/10/01/capturing-screenshot-gdm-login-screen)
* ( ) [Customizing Matplotlib with style sheets and rcParams — Matplotlib 3.8.3 documentation](https://matplotlib.org/stable/users/explain/customizing.html)
* ( ) [Fonts - NixOS Wiki](https://nixos.wiki/wiki/Fonts)
* ( ) [GDM3 Theme Blur - Gnome-look.org](https://www.gnome-look.org/p/1275369)
* ( ) [Gtk – 3.0: CSS Properties](https://docs.gtk.org/gtk3/css-properties.html)
* ( ) [Gtk – 4.0: GTK CSS Properties](https://docs.gtk.org/gtk4/css-properties.html)
* ( ) [How tags work · riverwm/river Wiki](https://github.com/riverwm/river/wiki/How-tags-work)
* ( ) [How to fix qt themes in nixos? - Help - NixOS Discourse](https://discourse.nixos.org/t/how-to-fix-qt-themes-in-nixos/14495/7)
* ( ) [NixOS Hyprland - request some insight pls on how to ran codium and discord to in xwayland mode? : r/NixOS](https://www.reddit.com/r/NixOS/comments/17kg8rb/nixos_hyprland_request_some_insight_pls_on_how_to/)
* ( ) [Tint and Shade Generator](https://maketintsandshades.com/)
* ( ) [Wrong background with gtk2 theme Gnome OSX-IV-1.3 · Issue #32 · doublecmd/doublecmd](https://github.com/doublecmd/doublecmd/issues/32)
* ( ) [EliverLara/terminator-themes](https://github.com/EliverLara/terminator-themes)
* ( ) [hyprwm/hyprland-plugins](https://github.com/hyprwm/hyprland-plugins)
* ( ) [r/hyprland/comments/15f97ue/how_i_do_find_my_keybinds_for_hyprland/?rdt=42389](https://www.reddit.com/r/hyprland/comments/15f97ue/how_i_do_find_my_keybinds_for_hyprland/?rdt%3D42389)
* ( ) [nyxt-config/hsplit.lisp at master · aartaka/nyxt-config](https://github.com/aartaka/nyxt-config/blob/master/hsplit.lisp)
* ( ) [nyxt/source/renderer/gtk.lisp at 0a288c573e40b8b7ac12264782e095ca08d9f507 · atlas-engineer/nyxt](https://github.com/atlas-engineer/nyxt/blob/0a288c573e40b8b7ac12264782e095ca08d9f507/source/renderer/gtk.lisp%23L68)
* ( ) [sandesh236/sleek--themes](https://github.com/sandesh236/sleek--themes)

## Rice Browser

* ( ) [Home | Stylebot](https://stylebot.dev/)

## Rice Color

* ( ) [Forest Green and Brown Color Palette](https://www.color-hex.com/color-palette/101985)
* ( ) [Names of colors in English. Shades of green and brown | Colors name in english, Color, Color names](https://www.pinterest.com/pin/132856257736067260/)
* ( ) [http://wiki.gis.com/wiki/index.php/Saturation_(Color_Theory)
* ( ) [bottosson.github.io/posts/oklab/](https://bottosson.github.io/posts/oklab/)
* ( ) [chromatone.center/theory/color/models/perceptual/](https://chromatone.center/theory/color/models/perceptual/)
* ( ) [en.wikipedia.org/wiki/Color_model](https://en.wikipedia.org/wiki/Color_model)
* ( ) [en.wikipedia.org/wiki/Color_scheme](https://en.wikipedia.org/wiki/Color_scheme)
* ( ) [en.wikipedia.org/wiki/Color_space](https://en.wikipedia.org/wiki/Color_space)
* ( ) [en.wikipedia.org/wiki/Color_theory](https://en.wikipedia.org/wiki/Color_theory)
* ( ) [en.wikipedia.org/wiki/List_of_color_spaces_and_their_uses](https://en.wikipedia.org/wiki/List_of_color_spaces_and_their_uses)
* ( ) [mattlockyer.github.io/iat455/documents/rgb-hsv.pdf](https://mattlockyer.github.io/iat455/documents/rgb-hsv.pdf)
* ( ) [news.ycombinator.com/item?id=25830327](https://news.ycombinator.com/item?id%3D25830327)
* ( ) [opg.optica.org/oe/fulltext.cfm?uri=oe-25-13-15131&id=368272](https://opg.optica.org/oe/fulltext.cfm?uri%3Doe-25-13-15131%26id%3D368272)
* ( ) [programmingdesignsystems.com/color/perceptually-uniform-color-spaces/](https://programmingdesignsystems.com/color/perceptually-uniform-color-spaces/)
* ( ) [uxplanet.org/color-theory-brief-guide-for-designers-76e11c57eaa](https://uxplanet.org/color-theory-brief-guide-for-designers-76e11c57eaa)
* ( ) [colorfetch.com/](https://www.colorfetch.com/)
* ( ) [google.com/search?q=conversion%20between%20rgb%20and%20hsv&ie=utf-8&oe=utf-8&client=firefox-b-m](https://www.google.com/search?q%3Dconversion%2520between%2520rgb%2520and%2520hsv%26ie%3Dutf-8%26oe%3Dutf-8%26client%3Dfirefox-b-m)  implement color converter / modifier in Nix and look at 2 sister projects for reference (are there more?)   conversion between rgb and hsv
* ( ) [interaction-design.org/literature/topics/color-theory](https://www.interaction-design.org/literature/topics/color-theory)
* ( ) [pnas.org/doi/full/10.1073/pnas.2119753119](https://www.pnas.org/doi/full/10.1073/pnas.2119753119)
* ( ) [r/neovim/comments/199c6zd/seamless_jupyter_notebook_editing_in_neovim_demo/](https://www.reddit.com/r/neovim/comments/199c6zd/seamless_jupyter_notebook_editing_in_neovim_demo/)
* ( ) [sciencedirect.com/topics/engineering/perceptual-color-space](https://www.sciencedirect.com/topics/engineering/perceptual-color-space)
* ( ) [toptal.com/designers/ux/color-in-ux](https://www.toptal.com/designers/ux/color-in-ux)
* ( ) [www2.konicaminolta.eu/eu/Measuring/pcc/en/index.html](https://www2.konicaminolta.eu/eu/Measuring/pcc/en/index.html)
* ( ) [16colo.rs - Sixteen Colors is an online ANSI and ASCII Art Gallery collecting all of the art packs released since the early 1990s](https://forum.16colo.rs/)
* ( ) [Color Psychology: A Guide for Designers, Marketers & Students](https://www.colorpsychology.org/)
* ( ) [HSL and HSV - Wikipedia](https://en.wikipedia.org/wiki/HSL_and_HSV)
* ( ) [Switching from solarized to gruvbox](https://blog.jeaye.com/2018/02/01/gruvbox/)
* ( ) [bottosson.github.io/misc/colorpicker/#f0f0f0](https://bottosson.github.io/misc/colorpicker/%23f0f0f0)
* ( ) [thvardhan/Gradianto](https://github.com/thvardhan/Gradianto)
* ( ) [quickfix.es/2023/11/off-theme-presents-shades-of-purple/](https://quickfix.es/2023/11/off-theme-presents-shades-of-purple/)
* ( ) [iTerm2-Color-Schemes/dynamic-colors/AlienBlood.sh at master · mbadolato/iTerm2-Color-Schemes](https://github.com/mbadolato/iTerm2-Color-Schemes/blob/master/dynamic-colors/AlienBlood.sh)

## Rice Image

* ( ) [peakpx.com/en/search?q=dark+green+forest](https://www.peakpx.com/en/search?q%3Ddark%2Bgreen%2Bforest)

## Rice Teams

```txt
* rice teams 'is-ipad': app.layoutService.isIPad,
* rice teams 'notification-banner-visible': app.appStateAdapter.mainNotificationBannerStore.currentBanner,
* ( ) [0])!=-1){return"rtl"}return"ltr"}function getStylesheetUrl(e){for(var t=0;t<themedStyleSheets.length;t++){var s=themedStyleSheets
* ( ) [t];if(s.indexOf(".theme-"+e+".")!==-1){return s}}return themedStyleSheets
* ( ) [0]}function getStylesheetUrl2(e){let t=setCssLanguageDirection();let s=t==="rtl"?e+"-"+t:e;for(var h=0;h<themedStyleSheets.length;h++){if(themedStyleSheets
* ( ) [h].indexOf(".theme-"+s+".")!=-1){return themedStyleSheets
* ( ) [h]}}return themedStyleSheets
* ( ) [themedStyleSheets.length-1]}function getStoredTheme(){const e="ts.upgradeV2Themes";const t="ts.appliedActiveTheme";const s=readCookie("storedTheme");let h;if(s&&s!=="undefined"){h=s}else{var a=window.serverFlags.appEnvironment||"";h=a.indexOf("life")>=0||location.hostname.indexOf("live")>=0?"tfl-default":"default"}if(window.localStorage){var n=window.localStorage.getItem(e);if(n==="true"){switch(h){case"default":h="defaultV2";break;case"dark":h="darkV2";break;default:break}}window.localStorage.setItem(t,h)}return h}function setStylesheetFromCookie(e,t){var s=document.head||document.getElementsByTagName("head")
* ( ) [0];var h=document.createElement("style");h.innerHTML="* { transition-property: background-color; transition-duration: .22s; transition-timing-function: ease-out; }";if(!t){s.appendChild(h)}var a=document.querySelectorAll("#themed-stylesheet");var n=getStoredTheme();var d=getStylesheetUrl2(n);var l=document.createElement("link");http://l.id/);var o=function(){if(e){e()}var t=document.getElementById("loading-stylesheet");if(t){s.removeChild(t)}if(h.parentElement==s){s.removeChild(h)}s=null;h=null;a=null};l.onload=function(){console.log("
* ( ) [Index] Loaded stylesheet: "+d);var e=a&&a.length;if(e){var t;for(t=0;t<e;t++){var s=a
* ( ) [t];if(s&&s.parentElement){s.parentElement.removeChild(s)}}}o()};l.onerror=function(e){console.log("
* ( ) [Index] Failed to load stylesheet: "+d+" >>> "+JSON.stringify(e));appStartFailed(errorMessage.cssLoadError,d);o()};s.appendChild(l);l=null}window.setStylesheetFromCookie=setStylesheetFromCookie;setStylesheetFromCookie((function(){_.defer((function(){$("body").addClass("initialized")}))}),true);$(window).on("load",(function e(){angular.bootstrap(document.documentElement,
```

```html
["teamspace"]);if(window.electronSafeIpc&&window.desktop&&window.desktop.perf&&window.desktop.perf.getProcessMemoryInfo){window.electronSafeIpc.send("telemetryEvent",{name:"memoryIndexAppBootstrap",Perf_WorkingSetSizeKB:window.desktop.perf.getProcessMemoryInfo().workingSetSize})}}));sendAppStateChanged("IndexJsLoaded");</script><div ng-if=!app.layoutService.isLoaded id=app-loading-elem class="app-loading animated" analytics-panel={{::app.panelRegions.main}}><app-header-bar ng-if="!app.layoutService.isRigel && (!(app.layoutService.surfaceHubEnabled || app.layoutService.smartDeviceEnabled || app.layoutService.hidePowerBarElements) || app.layoutService.isElectron)"></app-header-bar><loading-application layout-service=app.layoutService environment=app.settingsService.appConfig.environment.type></loading-application></div><div ng-if="app.layoutService.isLoaded && !app.skipFirstRun" class=first-run analytics-panel={{::app.panelRegions.firstRun}}><app-header-bar ng-if="!app.layoutService.isRigel && (!(app.layoutService.surfaceHubEnabled || app.layoutService.smartDeviceEnabled || app.layoutService.hidePowerBarElements) || app.layoutService.isElectron)"></app-header-bar><div class="ts-first-run ts-add-members-common" ui-view={{::app.panelRegions.firstRun}} noanimation=true></div></div><div ng-if="app.layoutService.isInitialized && app.skipFirstRun" ng-class="{ 'invisible': !app.layoutService.isLoaded, |  |
* ( ) [http://statics.teams.cdn.office.net/hashed/stylesheets.theme-contrast-rtl.min-99a2c48.css](http://statics.teams.cdn.office.net/hashed/stylesheets.theme-contrast-rtl.min-99a2c48.css)
* ( ) [grwlf/mobile-nixos-cfg](https://github.com/grwlf/mobile-nixos-cfg)
* ( ) [statics.teams.cdn.office.net/hashed/stylesheets.theme-contrast-rtl.min-99a2c48.css](https://statics.teams.cdn.office.net/hashed/stylesheets.theme-contrast-rtl.min-99a2c48.css)
* ( ) [statics.teams.cdn.office.net/hashed/stylesheets.theme-contrast.min-c13716d.css](https://statics.teams.cdn.office.net/hashed/stylesheets.theme-contrast.min-c13716d.css)
* ( ) [teams.microsoft.com/_](https://teams.microsoft.com/_)
* rice teams view-source
* rice teams | themedStyleSheets.push("https://statics.teams.cdn.office.net/hashed/stylesheets.theme-contrast-rtl.min-99a2c48.css);themedStyleSheets.push("https://statics.teams.cdn.office.net/hashed/stylesheets.theme-contrast.min-c13716d.css);themedStyleSheets.push("https://statics.teams.cdn.office.net/hashed/stylesheets.theme-dark-rtl.min-f34329e.css);themedStyleSheets.push("https://statics.teams.cdn.office.net/hashed/stylesheets.theme-dark.min-40ddca9.css);themedStyleSheets.push("https://statics.teams.cdn.office.net/hashed/stylesheets.theme-darkV2-rtl.min-3b6961e.css);themedStyleSheets.push("https://statics.teams.cdn.office.net/hashed/stylesheets.theme-darkV2.min-ea15c0d.css);themedStyleSheets.push("https://statics.teams.cdn.office.net/hashed/stylesheets.theme-default-rtl.min-af690f7.css);themedStyleSheets.push("https://statics.teams.cdn.office.net/hashed/stylesheets.theme-default.min-0efad32.css);themedStyleSheets.push("https://statics.teams.cdn.office.net/hashed/stylesheets.theme-defaultV2-rtl.min-9cda25c.css);themedStyleSheets.push("https://statics.teams.cdn.office.net/hashed/stylesheets.theme-defaultV2.min-88ff9d4.css);themedStyleSheets.push("https://statics.teams.cdn.office.net/hashed/stylesheets.theme-tfl-dark-rtl.min-2da3d8b.css);themedStyleSheets.push("https://statics.teams.cdn.office.net/hashed/stylesheets.theme-tfl-dark.min-61565ac.css);themedStyleSheets.push("https://statics.teams.cdn.office.net/hashed/stylesheets.theme-tfl-default-rtl.min-7e0ad38.css);themedStyleSheets.push("https://statics.teams.cdn.office.net/hashed/stylesheets.theme-tfl-default.min-1cdcd8d.css);function setCssLanguageDirection(){let e=
* ( ) ["ar","he","fl"];if(window.TS_PREFERRED_LOCALES&&window.TS_PREFERRED_LOCALES
* ( ) [0]&&typeof window.TS_PREFERRED_LOCALES
* ( ) [0]=="string"&&e.indexOf(window.TS_PREFERRED_LOCALES
* ( ) [0].split("-")
```

## Dual Monitor

* ( ) [fedoramagazine.org/how-to-setup-multiple-monitors-in-sway/](https://fedoramagazine.org/how-to-setup-multiple-monitors-in-sway/)
* ( ) [nwg-piotr/nwg-displays](https://github.com/nwg-piotr/nwg-displays)
* ( ) [search?q=repo%3Aswaywm%2Fsway](https://github.com/search?q%3Drepo%253Aswaywm%252Fsway) monitor&type=code
* ( ) [wiki.hyprland.org/Configuring/Monitors/](https://wiki.hyprland.org/Configuring/Monitors/)
* ( ) [r/swaywm/comments/jqj1ww/sway_on_ultrawide_monitor_tips_or_recommended/](https://www.reddit.com/r/swaywm/comments/jqj1ww/sway_on_ultrawide_monitor_tips_or_recommended/)

## Colortheme Development

### Repictor

## Recolor.jl, repictor (name?)

* Name ideas: spaceman, colorwrap, reimage
* DO repictor IN JULIA! good way to finally learn it for real
* Idea: Image recoloring to match a given color theme
* by shifting top k clusters (closer) to each to closest available colors in the theme - possibly easier with small color theme (2-3 colors?)
* Get elbow plot of clusters
* This would be visualizable as a continuous interpolation from current image to most extreme remapping.
* Maybe use something like PCA to get k dimensions of highest variation in the image, then shift along these axes instead → visualizable in 3D space.
* Look at using additional dimensions, such as saturation, brightness/darkness, etc.
* Like an abstract color space AB or just A, with two or one “abstract colors”, respectively, instead of RGB. Why not 3 or 4 or more?
* Step Zero: Visualize clusters by painting them onto an image
* First step: visualize image as point cloud in RGB space → then perceptual space
* Step Two: Experiment with different clustering algorithms
* Overall:
* Operate separately on different clusters, shifting each cluster closer to the target color selected from the colorscheme, based on some function to shift the average (mean. median, other?)* - this function can be more advanced, for example by preserving certain relationships within the cluster, such as standard deviation, relative darkness, relative saturation, or relative distance; these can act as constraints to which the average shift function is subject
* add smoothing by performing a weighted combination of each average shifting function, based on (some function of) respective distance from each cluster centroid → soints at the edge of a cluster will be more heavilty affected by the next largest cluster’s transformation → weighting function may be a good case for softmax or some variation of it
* Location-aware post-processing to adjust the amount of contrast between pixels of different clusters?
* Maybe learn custom perceptual distance functions that account for the way humans see color (different shades of blue may be closer than a blue and a red that share similar amounts of green)
* Nice potential for interactive GUI:
* first show clusters in color space and on the image → interactive correspondence
* user selects new color for each cluster (or color distribution)
* Idea: use hyperplanes for maximum separation between clusters
* Random idea: Maybe clustering algorithms can help with this a bit → information theory
* Someday: use TDA?

### Color Theme Development

* my own projectsto fork! [pensils](https://github.com/orsinium-labs/pencils) - interesting for exploring color themes via Python → fork and hack around on, maybe extend and turn into CLI*
* ( ) [🎨Recolor.jl, repictor (name?)](...)*
* ( ) [Reddit Code Review - Python class for working with and converting between RGB color codes](https://www.reddit.com/r/codereview/comments/10zy2j5/python_class_for_working_with_and_converting/)
* meta / other
* ( ) [nice idea for two-color theme](https://www.reddit.com/media?url=https%3A%2F%2Fi.redd.it%2F2k9xfo87648z.png) [...](https://bottosson.github.io/posts/colorwrong/) [catppuccin/catppuccin](https://github.com/catppuccin/catppuccin) → see list of software and use themes in developing colorlip / switchswatch
* color theory, readings→ see Rickrack in ‘interactive’ [colorhexa.com/](https://www.colorhexa.com/) - very thorough, very good
* ( ) [Podlodka Color Space Podcast](https://open.spotify.com/episode/7nymXLWGAhTnRdNxEvontC?si=ICCMnVZHTLCBy00jiiSRYQ)
* ( ) [...](http://www.brucelindbloom.com/https://www.dioptricdesign.com/)
* ( ) [michael-m.medium.com/true-color-interpolation-a1a17352ebf0](https://michael-m.medium.com/true-color-interpolation-a1a17352ebf0)
* ( ) [...](https://github.com/kdrag0n) [...]
        [...](https://michael-m.medium.com/true-color-interpolation-a1a17352ebf0) [kdrag0n)](https://github.com/kdrag0n)
* Color management & programming
        [meodai/color-names](https://github.com/meodai/color-names)
        [joshuaiz/hexy](https://github.com/joshuaiz/hexy)
        [meodai/color-names](https://github.com/meodai/color-names)
        [tesselle/khroma](https://github.com/tesselle/khroma) - for scientific vizualization, emphasis on accessibility
        [bottosson.github.io/posts/oklab/](https://bottosson.github.io/posts/oklab/) → list of tools
        [Ogeon/palette](https://github.com/Ogeon/palette) [docs.rs/palette/0.7.3/palette/](https://docs.rs/palette/0.7.3/palette/) - excellent rust tool for color correctness, conversion, etc
        [sharkdp/pastel](https://github.com/sharkdp/pastel) - CLI similar to palette
        [andrew-pa/unipalette](https://github.com/andrew-pa/unipalette)
* color space mapping, interpolation
        [ozwaldorf/lutgen-rs](https://github.com/ozwaldorf/lutgen-rs)
        [Axenide/ColorFuse](https://github.com/Axenide/ColorFuse)
        [...](https://github.com/JuliaGraphics/ColorSchemeTools.jl)
        [Axenide/ColorFuse)](https://github.com/Axenide/ColorFuse)) - a type of color interpolation, also has some templating
* interactive toolsvscode via json** ( ) [terminal.sexy/https://paletton.com/https://bottosson.github.io/misc/colorpicker](https://terminal.sexy/https://paletton.com/https://bottosson.github.io/misc/colorpicker)
* ( ) [realtimecolors.com](https://realtimecolors.com/?colors=000000-ffffff-4685ff-f2f2f2-ffb084)
* ( ) [Color Picker | Color from Image, HEX, RGB, HTML | RedKetchup](https://redketchup.io/color-picker)
* ( ) [pickr](https://github.com/Simonwep/pickr)
* ( ) [gitlab.gnome.org/World/gcolor3](https://gitlab.gnome.org/World/gcolor3) [kryogenix.org/code/pick/](https://www.kryogenix.org/code/pick/) [thezbyg/gpick**](https://github.com/thezbyg/gpick**) [coolors.co/?home](https://coolors.co/?home) - easy interactive generation*
* ( ) [brianreilly.me/Base16Designer/](http://brianreilly.me/Base16Designer/)
* ( ) [themix-project/themix-gui](https://github.com/themix-project/themix-gui) - A Graphical application for generating different color variations of a Numix-based and Flat-Plat themes (GTK2, GTK3), GNOME-Colors and Archdroid icons. → [themix-project](https://github.com/themix-project)
* ( ) [keshavbhatt/ColorPicker**](https://github.com/keshavbhatt/ColorPicker**)
* ( ) [eigenmiao/Rickrack](https://github.com/eigenmiao/Rickrack) - [eigenmiao.com/rickrack/](https://eigenmiao.com/rickrack/) - phenomenl, guided by color theory**
* ( ) [plainas/cubecolors](https://github.com/plainas/cubecolors)
* ( ) [plainas.github.io/cubecolors/](http://plainas.github.io/cubecolors/) → maybe change isometry from continuous to perceptual scale?
* ( ) [...](https://github.com/yrwq/ccc) - 🎨 Show off your color palette - good for quick interactive development in the terminal
* ( ) [adobe/leonardo](https://github.com/adobe/leonardo) - generation based on desired contrast
* small-set generation
* ( ) [luizdemoraes/mono](https://github.com/luizdemoraes/mono) - monochromatic theme generator in react; website down → try to get up and running myself
* ( ) [simurai/duotone-dark-syntax](https://github.com/simurai/duotone-dark-syntax) -
* ( ) [logic](https://github.com/simurai/duotone-dark-syntax/blob/master/lib/duotone.coffee) - see also [simurai/vscode-tritone](https://github.com/simurai/vscode-tritone) [metaory/mxcolr-lite,](https://github.com/metaory/mxcolr-lite) [metaory/mxcolr-v2](https://github.com/metaory/mxcolr-v2) - pseudo-random color generation
* exploration, collections
* ( ) [Explore Color Palettes - Coolors](https://coolors.co/palettes/popular/forest)
* from picturepywal
        [robwaz/pywal](https://github.com/robwaz/pywal) - current fork
        [dylanaraps/pywal](https://github.com/dylanaraps/pywal)
        [matthewlscarlson/zathura-pywal](https://github.com/matthewlscarlson/zathura-pywal)
        [Quicksilver151/CustomTools/tree/master/wal](https://github.com/Quicksilver151/CustomTools/tree/master/wal)
        [bluedrack/vscode-wal](https://github.com/bluedrack/vscode-wal)
        [xi/xiwal](https://github.com/xi/xiwal)
        [JuliaGraphics/ColorSchemeTools.jl](https://github.com/dylanaraps/pywal)
        [...](https://github.com/JuliaGraphics/ColorSchemeTools.jl)
        [pywal](https://github.com/dylanaraps/pywal)
        [bluedrack/vscode-wal](https://github.com/bluedrack/vscode-wal)
        [xi/xiwal](https://github.com/xi/xiwal)
        [JuliaGraphics/ColorSchemeTools.jl)](https://github.com/JuliaGraphics/ColorSchemeTools.jl)
        [dylanaraps/wal](https://github.com/dylanaraps/wal) - generate and change colorschemes on the fly.
        [...](https://github.com/TesterTech/rice-i3-from-scratch-pywal)
* ( ) [reddit](https://www.reddit.com/r/unixporn/comments/12ug679/i3wm_image_browser_for_pywal_to_test_out_color/)
* ( ) [auto-base16-theme](https://github.com/makuto/auto-base16-theme)
* ( ) [misterio77/flavours/](https://github.com/misterio77/flavours/)
* ( ) [Flavours, a simple and unixy way to use base16 schemes : unixporn](https://www.reddit.com/r/unixporn/comments/jhbyoy/oc_flavours_a_simple_and_unixy_way_to_use_base16/)
* ( ) [Make a terminal theme with Base16 and Flavours - Part 2 - YouTube](https://www.youtube.com/watch?v=Hjq15PVY0Tk) → see parts I and III |
* ( ) [flavours/Cargo.toml at master · Misterio77/flavours](https://github.com/Misterio77/flavours/blob/master/Cargo.toml)
* ( ) [github.com/entscheidungsproblem/K-means](...)
* ( ) [f0x48/ricemood](https://github.com/f0x48/ricemood)
* ( ) [Reddit - [OC] I create a tool to magically match your color scheme based on the wallpaper](https://www.reddit.com/r/unixporn/comments/dzgu7i/oc_i_create_a_tool_to_magically_match_your_color/)
* AI colorscheme generation
* ( ) [khroma.co/](https://www.khroma.co/)
* format, conversion, etc.
* ( ) [ansifilter](http://www.andre-simon.de/doku/ansifilter/en/ansifilter.php)
* ( ) [no-color.org](https://no-color.org/)
* calibration, device, control, other
* ( ) [DisplayCAL](https://displaycal.net/) - Open Source Display Calibration and Characterization powered by ArgyllCMS.
* ( ) [OpenRGB](https://openrgb.org/) - Open source RGB lighting control that doesn’t depend on manufacturer software. For Windows, Linux, MacOS.
* with specific softwarevim / nvim
* ( ) [nokobear/vim-colorscheme-edit](https://github.com/nokobear/vim-colorscheme-edit)
* ( ) [utubo/vim-6colors](https://github.com/utubo/vim-6colors)
* ( ) [strrts/swatch.vim](https://github.com/strrts/swatch.vim)
* ( ) [glowfish](https://github.com/daylerees/colour-schemes/blob/master/vim/colors/glowfish.vim)
* ( ) [GideonWolfe/vim.reaper](https://github.com/GideonWolfe/vim.reaper)
* ( ) [rktjmp/lush.nvim](https://github.com/rktjmp/lush.nvim) - colorscheme creation
* ( ) [lifepillar/vim-colortemplate](https://github.com/lifepillar/vim-colortemplate)
* ( ) [chadcat7/prismvscode→](https://github.com/chadcat7/prismvscode→) see vscode-wal
* ( ) [yelircaasi/schwarzwald-vscode-theme](https://github.com/yelircaasi/schwarzwald-vscode-theme) [code.visualstudio.com/api/references/theme-color](https://code.visualstudio.com/api/references/theme-color)
* ( ) [code.visualstudio.com/docs/getstarted/themes#_customizing-a-color-theme](https://code.visualstudio.com/docs/getstarted/themes#_customizing-a-color-theme)
* ( ) [css-tricks.com/creating-a-vs-code-theme/](https://css-tricks.com/creating-a-vs-code-theme/) 
* ( ) [VSCode Theme Creator](https://themes.vscode.one/) [...](https://code.visualstudio.com/docs/getstarted/themes) [code.visualstudio.com/api/extension-guides/color-theme#create-a-new-color-theme](https://code.visualstudio.com/api/extension-guides/color-theme#create-a-new-color-theme)
* UBUNTU STACK [sommaa/dots](https://github.com/sommaa/dots)  → get working in VanillaOS in a VM
* ( ) [en.wikipedia.org/wiki/Xrdb](https://en.wikipedia.org/wiki/Xrdb)
* ( ) [Changing the colors - Material for MkDocs](https://squidfunk.github.io/mkdocs-material/setup/changing-the-colors/#automatic-light-dark-mode)
* ( ) [...](https://github.com/hyprwm/hyprpicker)
* ( ) [Soft/xcolor](https://github.com/Soft/xcolor)
* ( ) [solarized/xresources](https://github.com/solarized/xresources)
* ( ) [sphinx-design.readthedocs.io/en/latest/index.html](https://sphinx-design.readthedocs.io/en/latest/index.html)
* ( ) [Gogh - Color Scheme](https://github.com/Mayccoll/Gogh) - Color Scheme for Gnome Terminal
* ( ) [DioptricDesign/qtile-chameleon](https://github.com/DioptricDesign/qtile-chameleon)
* ( ) [dconf - How to save GNOME settings in a file? - Ask Ubuntu](https://askubuntu.com/questions/984205/how-to-save-gnome-settings-in-a-file)
* 1S
* ( ) [command line - Changing colour of text and background of terminal? - Ask Ubuntu](https://askubuntu.com/questions/558280/changing-colour-of-text-and-background-of-terminal)
* templating, instantiation, switching, etc.
* ( ) [flavours](https://github.com/misterio77/flavours/)
* ( ) [Flavours, a simple and unixy way to use base16 schemes : unixporn](https://www.reddit.com/r/unixporn/comments/jhbyoy/oc_flavours_a_simple_and_unixy_way_to_use_base16/)
* ( ) [...](https://draculatheme.com/) - great collection of templates
        [deviantfero/wpgtk](https://github.com/deviantfero/wpgtk) - A universal theming software for all themes defined in text files, compatible with all terminals, with default themes for GTK2, GTK+, openbox and Tint2 that uses pywal as it’s core for colorscheme generation.
        [estilo](https://github.com/jacoborus/estilo)
        [Saecki/alco](https://github.com/Saecki/alco) -rust, Update terminal colorschemes on the fly
        [base16-builder/base16-builder](https://github.com/base16-builder/base16-builder) [mjswensen/themer
        [piutranq/cologen](https://github.com/piutranq/cologen)
        [Kumux/kumux-colorscheme-engine](https://github.com/Kumux/kumux-colorscheme-engine)
        [mjswensen/themer](https://github.com/mjswensen/themer)
        [piutranq/cologen](https://github.com/piutranq/cologen)
        [Kumux/kumux-colorscheme-engine)](https://github.com/Kumux/kumux-colorscheme-engine) (good source of templates! - also in pictrix page)
        [just-colors](https://github.com/andreyvpng/just-colors)
        [magnickolas/alacritty-scheme-switcher](https://github.com/magnickolas/alacritty-scheme-switcher)
* ( ) [→ ideas for colorflip](https://github.com/gh0stzk/dotfiles)
* ( ) [dash-dotfiles](https://github.com/cherrynoize/dash-dotfiles)
* ( ) [bspwm dark light mode switcher](https://www.reddit.com/r/unixporn/comments/13hpfdv/bspwmpolybar_dark_mode_switcher/) [gh0stzk/dotfiles](https://github.com/gh0stzk/dotfiles) - bspwm

## color switching

* ( ) [stav121/i3wm-themer](https://github.com/stav121/i3wm-themer)
* ( ) [shvedes/dotfiles](https://github.com/shvedes/dotfiles) (hyprland) - theme switching script**
* ( ) [Kumux/kumux-colorscheme-engine](https://github.com/Kumux/kumux-colorscheme-engine) → advanced circadian cycle adaptive colorscheme feature → good list of software → add this functionality to a sister app of pictrix? make compatible?
* → look at design and implementation - [colorscheme.kumux.io/](https://colorscheme.kumux.io/) → somewhat different and worth adding eventually; not top prio
* other, maybe someday, etc
        [imgly/rembrandt](https://github.com/imgly/rembrandt) - image comparison
* Browser, websitestylus
* ( ) [live_stylus](https://pypi.org/project/live_stylus/)
* ( ) [stylus-ui](https://pypi.org/project/py-stylus-ui/)
* ( ) [stilus](https://github.com/jw/stilus)
* ( ) [stilus](https://pypi.org/project/stilus/) for colorflip [jw/styrus](https://github.com/jw/styrus) → resurrect? for colorflip [stevepryde/thirtyfour](https://github.com/stevepryde/thirtyfour) → is this even needed?bkad/python-stylus: python bridge for the stylus css compilerStylus | PyCharm Documentation
* ( ) [jw/stilus](https://github.com/jw/stilus) -
* ( ) [stilus · PyPI](https://pypi.org/project/stilus/)
* ( ) [bkad/python-stylus](https://github.com/bkad/python-stylus)
* stylesheetsall
* ( ) [knecon.com](http://knecon.com/) sitesstackoverflowpython docsadd to Documenter.jlPython, Julia, etc docsRedditTeams
* ( ) [local storage - Where does chrome store LocalStorage on my computer? - Super User](https://superuser.com/questions/1703794/where-does-chrome-store-localstorage-on-my-computer)
* ( ) [Chrome Extensions: Give users options - Chrome Developers](https://developer.chrome.com/docs/extensions/mv3/options/#view_page)
* ( ) [In which file are stored an add-on settings/options? - Add-ons / Add-on Support - Mozilla Discourse](https://discourse.mozilla.org/t/in-which-file-are-stored-an-add-on-settings-options/26064/2)
* ( ) [Profiles - Where Firefox stores your bookmarks, passwords and other user data | Firefox Help](https://support.mozilla.org/en-US/kb/profiles-where-firefox-stores-user-data)
* ( ) [Profiles - Where Firefox stores your bookmarks, passwords and other user data | Firefox Help](https://support.mozilla.org/en-US/kb/profiles-where-firefox-stores-user-data#w_how-do-i-find-my-profile)
* ( ) [Reddit - Web Scraping with Rust (A Beginner Friendly Tutorial)](https://www.reddit.com/r/rust/comments/10gtqn0/web_scraping_with_rust_a_beginner_friendly/)Find a way to change info programmatically in extensionsfind /home/isaac/.mozilla/ -name "*sqlite" | grep -v "https\?\+\+\+”ls ~/.config/google-chrome/Default/Extensions/ponfpcnoihfmfllpaingbgckeeldkhle/2.0.117.10_0
* ( ) [developer.chrome.com/docs/extensions/reference/storage/](https://developer.chrome.com/docs/extensions/reference/storage/)
* ( ) [(2) How do I find the file location of an extension? : firefox](https://www.reddit.com/r/firefox/comments/a1enek/how_do_i_find_the_file_location_of_an_extension/)Debugging - Runtime / this-firefoxIndex of file:///home/isaac/.mozilla/firefox/uxoqb3lu.default-release/extensions/
* ( ) [(2) Where are extensions data stored ? : firefox](https://www.reddit.com/r/firefox/comments/ei70ii/where_are_extensions_data_stored/)
* ( ) [(2) Firefox retaining private data from uninstalled extensions : firefox](https://www.reddit.com/r/firefox/comments/g4m306/firefox_retaining_private_data_from_uninstalled/)10407e4f-a5b2-4f9f-84dc-b3934502b25e/manifest.jsonLocal StorageSession StorageCache StorageCookiesIndexed DBabout:support
* ( ) [Gpick](http://www.gpick.org/) - Gpick allows you to sample any color from anywhere on your desktop, and it also provides some other advanced features!

## Dotfiles & Configs, Colors, Ricing, WMs, Colorflip

* ( ) [video](https://www.youtube.com/watch?v=avhEMANmfIk)
* Custom Linux Kernels
* ( ) [nixos.wiki/wiki/Linux_kernel](https://nixos.wiki/wiki/Linux_kernel) *
* ( ) [GNU Linux-libre](https://www.fsfla.org/ikiwiki/selibre/linux-libre/) - GNU Linux-libre is a project to maintain and publish 100% Free distributions of Linux, suitable for use in Free System Distributions.
* ( ) [Linux-Hardened](https://github.com/anthraxx/linux-hardened) - A security-focused Linux kernel applying a set of hardening patches to mitigate kernel and userspace exploits. It also enables more upstream kernel hardening features than linux.
* ( ) [linux-tkg](https://github.com/Frogging-Family/linux-tkg) - Scripts to automatically download, patch and compile the Linux Kernel from the official Linux git repository, with a selection of patches aiming for better desktop/gaming experience.
* ( ) [Liquorix](https://liquorix.net/) - Liquorix is a distro kernel replacement built using the best configuration and kernel sources for desktop, multimedia, and gaming workloads.
* ( ) [XanMod](https://xanmod.org/) - XanMod is a general-purpose Linux kernel distribution with custom settings and new features. Built to provide a stable, responsive and smooth desktop experience.
* ( ) [Zen](https://github.com/zen-kernel/zen-kernel) - Result of a collaborative effort of kernel hackers to provide the best Linux kernel possible for everyday systems.
* Init System & Related
* ( ) [fedoramagazine.org/what-is-an-init-system/](https://fedoramagazine.org/what-is-an-init-system/)
* ( ) [Why Systemd is the Devil but I Love It](https://www.youtube.com/watch?v=hc7J-zWEty8)
* ( ) [Linux Init Systems Compared! (SystemD, OpenRC, Runit)](https://www.youtube.com/watch?v=k1Wh8sWR8v0)
* ( ) [Systemd Is Hated By Many, But Does It Deserve It?](https://www.youtube.com/watch?v=y3NYrC5RiRo)
* ( ) [systemd, initsystem... que es eso?](https://www.youtube.com/watch?v=oKvyTGWsZEM)
* ( ) [Linux processes, init, fork/exec, ps, kill, fg, bg, jobs](https://www.youtube.com/watch?v=TJzltwv7jJs)
* ( ) [🤓 Aprende a usar Systemctl | Comandos Básicos de Linux 🐧](https://www.youtube.com/watch?v=4xIsPJWf9l0)
* ( ) [r/initFreedom/](https://www.reddit.com/r/initFreedom/)
* systemd, runit, dinit, logind, elogind, openrc -> search login and init systems *
* Wallpaper
* ( ) [Horus645/swww](https://github.com/Horus645/swww)
* ( ) [leaves](https://github.com/Aylur/dotfiles/blob/main/wallpapers/leaves.jpg)
* ( ) [splash-cli](https://github.com/splash-cli/splash-cli)) - Beautiful wallpapers from Unsplash.
* ( ) [wallpaper-cli](https://github.com/sindresorhus/wallpaper-cli)) - Get or set the desktop wallpaper.
* ( ) [JackPaper](https://github.com/jackel27/jackpaper)) - Set images from Unsplash as wallpaper.
* ( ) [QuickWall](https://github.com/deepjyoti30/QuickWall)) - Directly set wallpapers from Unsplash.
* ( ) [HydraPaper](https://hydrapaper.gabmus.org/) - Wallpaper manager with multi monitor support.
* ( ) [Variety](https://peterlevi.com/variety/) - Variety is an open-source wallpaper changer for Linux, packed with great features, yet slim and easy to use.
* ( ) [Tohrusky/Final2x: 2^x Image Super-Resolution](https://github.com/Tohrusky/Final2x)
* ( ) [r/wallpaper/comments/12yenwu/night_landscape_3840x2160/](https://www.reddit.com/r/wallpaper/comments/12yenwu/night_landscape_3840x2160/)
* ( ) [leaf_veins-wallpaper-1440x900 | Green nature wallpaper, Dark green wallpaper, Green nature](https://www.pinterest.de/pin/305611524685708869/)
* ( ) [Nahaufnahme Naturansicht Der Grünen Blatt Textur Dunkle Tapete Konzept Stockfoto und mehr Bilder von Abstrakt - iStock](https://www.istockphoto.com/de/foto/nahaufnahme-naturansicht-der-gr%C3%BCnen-blatt-textur-dunkle-tapete-konzept-gm1220144391-357159752)
* ( ) [DARK GREEN - Oceans & Nature Background Wallpapers on Desktop Nexus (Image 389775)](https://nature.desktopnexus.com/wallpaper/389775/)
* ( ) [wallpaper for desktop, laptop | nj32-landscape-green-nature-country-dark](https://papers.co/desktop/nj32-landscape-green-nature-country-dark/)
* ( ) [forest, Trees, Green, Moss, Old Wallpapers HD / Desktop and Mobile Backgrounds](https://wallup.net/forest-trees-green-moss-old/)
* ( ) [HD wallpaper: forest, nature, path, woodland, green, ecosystem, tree, road | Wallpaper Flare](https://www.wallpaperflare.com/forest-nature-path-woodland-green-ecosystem-tree-road-wallpaper-trhlc)
* ( ) [[74+] Windows Landscape Wallpaper - WallpaperSafari](https://wallpapersafari.com/windows-landscape-wallpaper/)
* ( ) [[50+] Bing Wallpaper Collection Landscape Pack - WallpaperSafari](https://wallpapersafari.com/bing-wallpaper-collection-landscape-pack/)
* ( ) [[41+] Landscape Images for PC Wallpaper - WallpaperSafari](https://wallpapersafari.com/landscape-images-for-pc-wallpaper/)
* ( ) [Free download Summer Landscape Nature 13 Wallpaper 1920x1080 Summer Landscape [1920x1080] for your Desktop, Mobile & Tablet | Explore 37+ Summer Landscape Wallpaper |wallpaper dl](https://wallpapersafari.com/w/ptOmj8)
* ( ) [wallpaper dl](https://wallpapersafari.com/w/GE2osA)
* ( ) [wallpaper dl](https://wallpapersafari.com/w/twTgG8)
* ( ) [wallpaper dl](https://wallpapersafari.com/w/uMxnKT)
* ( ) [wallpaper dl](https://wallpapersafari.com/w/8U7zWk)
* ( ) [wallpaper dl](https://wallpapersafari.com/w/wegCSh)
* ( ) [wallpaper dl](https://wallpapersafari.com/w/sM6wiy)
* ( ) [wallpaper img](https://wallpapersafari.com/w/h7orMx)
* ( ) [Free download beautiful landscape nature hd wallpapers best background nature [1920x1080] for your Desktop, Mobile & Tablet | Explore 43+ Beautiful Landscape Backgrounds Landscape Wallpapers | Landscape Background Images, Landscape Background, Beautiful Landscape Backgrounds](https://wallpapersafari.com/w/JKwvL6)
* ( ) [Foto zum Thema Nahaufnahmefotografie der grünen Sukkulente – Kostenloses Bild zu Schwarz auf Unsplash](https://unsplash.com/de/fotos/CIyDU5WLxxw)
* ( ) [Black and Green Wallpapers - Top Free Black and Green Backgrounds - WallpaperAccess](https://wallpaperaccess.com/black-and-green)
* ( ) [blackish-green wallpaper - Google Search](https://www.google.com/imgres?imgurl=https%3A%2F%2Fw0.peakpx.com%2Fwallpaper%2F368%2F606%2FHD-wallpaper-texture-leaves-green-dark-background-flowers-black-abstract.jpg&imgrefurl=https%3A%2F%2Fwww.peakpx.com%2Fen%2Fhd-wallpaper-desktop-fpsgp&tbnid=7jKV4u1O2nhN5M&vet=10CBAQxiAoCWoXChMIwNvC98CL_QIVAAAAAB0AAAAAEBE..i&docid=-GyEeayEbGS99M&w=800&h=566&itg=1&q=blackish-green%20wallpaper&client=firefox-b-d&ved=0CBAQxiAoCWoXChMIwNvC98CL_QIVAAAAAB0AAAAAEBE)
* ( ) [Dark Green Forest Wallpaper Images - Free Download on Freepik](https://www.freepik.com/free-photos-vectors/dark-green-forest-wallpaper)
* ( ) [dark green forest wallpaper - Google Search](https://www.google.com/search?client=firefox-b-d&q=dark+green+forest+wallpaper#imgrc=sSPmfN5UCCiAIM)
* ( ) [green nature, green forest, dark forest, deep forest, thick forest HD wallpaper in 2023 | Green nature wallpaper, Nature desktop wallpaper, Dark green aesthetic](https://www.pinterest.de/pin/green-nature-green-forest-dark-forest-deep-forest-thick-forest-hd-wallpaper--1007539747861143396/)
* ( ) [Thick forest 1080P, 2K, 4K, 5K HD wallpapers free download | Wallpaper Flare](https://www.wallpaperflare.com/search?wallpaper=thick+forest)
* ( ) [1920x1080px | free download | HD wallpaper: green leafed trees, landscape photography of forest, path, fall | Wallpaper Flare](https://www.wallpaperflare.com/green-leafed-trees-landscape-photography-of-forest-path-fall-wallpaper-hzh/download/1920x1080)
* ( ) [HD wallpaper: forest, dark forest, deep forest, thick forest, tree, land | Wallpaper Flare](https://www.wallpaperflare.com/forest-dark-forest-deep-forest-thick-forest-tree-land-wallpaper-mrzvx)
* ( ) [1920x1080px | free download | HD wallpaper: united kingdom, coleford, puzzle wood, forest floor, moss, leaves | Wallpaper Flare](https://www.wallpaperflare.com/united-kingdom-coleford-puzzle-wood-forest-floor-moss-leaves-wallpaper-egufg/download/1920x1080)
* ( ) [HD wallpaper: green leafed trees, dirt road in between trees during daytime | Wallpaper Flare](https://www.wallpaperflare.com/green-leafed-trees-dirt-road-in-between-trees-during-daytime-wallpaper-msb)
* ( ) [HD wallpaper: Thick forest-High Quality HD Wallpaper, tree, plant, land, beauty in nature | Wallpaper Flare](https://www.wallpaperflare.com/thick-forest-high-quality-hd-wallpaper-tree-plant-land-beauty-in-nature-wallpaper-pzmsb)
* ( ) [1920x1080px | free download | HD wallpaper: green leafed plant, green leaf tree, ovate, shrubs, foliage, leaves | Wallpaper Flare](https://www.wallpaperflare.com/green-leafed-plant-green-leaf-tree-ovate-shrubs-foliage-leaves-wallpaper-wjqzz/download/1920x1080)
* ( ) [HD wallpaper: green leafed trees, nature, landscape, morning, forest, path | Wallpaper Flare](https://www.wallpaperflare.com/green-leafed-trees-nature-landscape-morning-forest-path-wallpaper-hpzye)
* ( ) [HD wallpaper: green leafed trees, forest, road, grass, mist, path, rain, sunlight | Wallpaper Flare](https://www.wallpaperflare.com/green-leafed-trees-forest-road-grass-mist-path-rain-sunlight-wallpaper-pznum)
* ( ) [HD wallpaper: green leafed trees, green rain forest, nature, landscape, mist | Wallpaper Flare](https://www.wallpaperflare.com/green-leafed-trees-green-rain-forest-nature-landscape-mist-wallpaper-pkn)
* ( ) [1920x1080px | free download | HD wallpaper: green leafed tree, nature, landscape, trees, hills, leaves, mist | Wallpaper Flare](https://www.wallpaperflare.com/green-leafed-tree-nature-landscape-trees-hills-leaves-mist-wallpaper-qwdf/download/1920x1080)
* ( ) [1920x1080px | free download | HD wallpaper: green leafed tree wallpaper, nature, landscape, moss, forest | Wallpaper Flare](https://www.wallpaperflare.com/green-leafed-tree-wallpaper-nature-landscape-moss-forest-wallpaper-bvo/download/1920x1080)
* ( ) [beautiful forest](https://imgur.com/a/kNRbuGm)
* ( ) [Oman395/kde-sunset-wallpaper](https://github.com/Oman395/kde-sunset-wallpaper)
* ( ) [leafy wallpaper](https://www.wallpaperflare.com/green-leafed-plant-nature-closeup-plants-leaves-dark-depth-of-field-wallpaper-agk)
* ( ) [Free download best desktop wallpapers of all time best desktop wallpaper size best [1600x1066] for your Desktop, Mobile & Tablet | Explore 46+ Greatest Wallpapers of All Time | Best Wallpapers Of All Time, Best Desktop Wallpapers of All Time, Greatest Wallpaper](https://wallpapersafari.com/w/nGAUM9)
* ( ) [Popular nature Wallpapers on WallpaperSafari](https://wallpapersafari.com/collection/nature/)
* ( ) [Free download nature 4K Ultra HD HD Background 3 HD Wallpapers Ultra HD [3840x2160] for your Desktop, Mobile & Tablet | Explore 40+ 4K Ultra HD Nature Wallpaper | 4K Ultra Wallpaper, 8K Ultra HD Nature Wallpaper, 4K Ultra HD Wallpaper](https://wallpapersafari.com/w/MlVPOF)
* ( ) [Reddit - [OC] text2wallpaper - CLI script to generate images using AI and set it as wallpaper.](https://www.reddit.com/r/unixporn/comments/124v406/oc_text2wallpaper_cli_script_to_generate_images/)
* ( ) [commons.m.wikimedia.org/wiki/File:Kraichgau-Landschaft_im_Mai_-_170521_(34826402275).jpg](https://commons.m.wikimedia.org/wiki/File:Kraichgau-Landschaft_im_Mai_-_170521_(34826402275).jpg)
* ( ) [213480149-6ba92b81-1ada-46a4-89bd-4e2bb25d19c3.png (PNG Image, 2600 × 1480 pixels) — Scaled (57%)](https://user-images.githubusercontent.com/56817415/213480149-6ba92b81-1ada-46a4-89bd-4e2bb25d19c3.png)
* ( ) [[49+] Beautiful Landscape Wallpapers for Desktop - WallpaperSafari](https://wallpapersafari.com/beautiful-landscape-wallpapers-for-desktop/)
* ( ) [[45+] Free Landscape Wallpaper - WallpaperSafari](https://wallpapersafari.com/free-landscape-wallpaper/)
* ( ) [Derek Taylor / Wallpapers · GitLab](https://gitlab.com/dwt1/wallpapers)
* ( ) [good for picker - Free download Nature HD Background [2560x1600] for your Desktop, Mobile & Tablet | Explore 47+ HD Nature Wallpapers for Desktop | Nature Wallpaper Hd, Wallpaper Hd For Nature, Hd Wallpaper Nature](https://wallpapersafari.com/w/y9XN2W)
* ( ) [bzz4hxovkxg11.png (WEBP Image, 1919 × 1079 pixels) — Scaled (22%) - isaac.r.riley@gmail.com - Gmail](https://mail.google.com/mail/u/0/#inbox/QgrcJHrnzvwsgqpZBznSmgcqVJlRCTjVDlB)
* ( ) [bzz4hxovkxg11.png (WEBP Image, 1919 × 1079 pixels) — Scaled (70%)](https://preview.redd.it/bzz4hxovkxg11.png?auto=webp&s=2a25a01a48d141f130692a3a873f11fd00016fb2)
* ( ) [drive.google.com/drive/folders/19O9qHXYdETtf-l67Gnrl_FZVswLn23ER?usp=sharing](https://drive.google.com/drive/folders/19O9qHXYdETtf-l67Gnrl_FZVswLn23ER?usp=sharing)
* ( ) [nice wallpaper](https://wallhaven.cc/w/vqm813)
* raining wallpaper [(4)
* ( ) [i3-gaps | no bar, play RPCS3 : unixporn](https://www.reddit.com/r/unixporn/comments/110udd9/i3gaps_no_bar_play_rpcs3/)
* ( ) [jszczerbinsky/lwp](https://github.com/jszczerbinsky/lwp)
* ( ) [drive.google.com/drive/folders/1741M3BYbUsU2CtCNO8Nqnt1fYjeaCV6m](https://drive.google.com/drive/folders/1741M3BYbUsU2CtCNO8Nqnt1fYjeaCV6m) Wallpapers
* ( ) [ChrisTitusTech/nord-background*](https://github.com/ChrisTitusTech/nord-background*)
* Meta
* ( ) [dotfiles prezi](https://docs.google.com/presentation/d/1HOLKb63i-aXNLug5hZsH9QIYxifn2ak-YQf2gRD7jII/edit#slide=id.p)   [Kansas Linux Fest 2019 - Neal Fultz - Dotfiles: A Survey](https://www.youtube.com/watch?v=cwy9hrVvdnY&pp=ygUTTmVhbCBGdWx0eiBkb3RmaWxlcw%3D%3D)
* ( ) [dotfiles.github.io](https://dotfiles.github.io/) - Collected dotfile resources. Has sections with dotfile bootstraps and lists of frameworks for various shells and editors.
* ( ) [GitHub does dotfiles - dotfiles.github.io](https://dotfiles.github.io/)
* ( ) [jondot/awesome-devenv: A curated list of awesome tools, resources and workflow tips making an awesome development environment.](https://github.com/jondot/awesome-devenv)
* ( ) [sinister.ly/Thread-Tutorial-The-Lazy-Man-s-Guide-to-Ricing-Linux-WM-i3](https://sinister.ly/Thread-Tutorial-The-Lazy-Man-s-Guide-to-Ricing-Linux-WM-i3) *
* → Collections
* ( ) [r/UsabilityPorn/](https://www.reddit.com/r/UsabilityPorn/)
* ( ) [r/unixporn/](https://www.reddit.com/r/unixporn/)
* ( ) [Awesome dotfiles | Curated list of awesome lists | Project-Awesome.org](https://project-awesome.org/webpro/awesome-dotfiles)
* ( ) [Inspiration - dotfiles.github.io](https://dotfiles.github.io/inspiration/)
* ( ) [webpro/awesome-dotfiles: A curated list of dotfiles resources.](https://github.com/webpro/awesome-dotfiles)
* ( ) [dotfiles · GitHub Topics](https://github.com/topics/dotfiles)
* ( ) [dotshare.it/](http://dotshare.it/)
* ( ) [Reddit - Can anyone share his dotfile ? I’m bored from mine](https://www.reddit.com/r/neovim/comments/11zi6i3/can_anyone_share_his_dotfile_im_bored_from_mine/)*
* Video / Blog Presenting Dotfiles
* ( ) [Productive Workstation with Linux](https://www.youtube.com/playlist?list=PL2B6OzTsMUrz3RBEhYGb-0wtH9SqFpcDj) 
* ( ) [Setup Video](https://www.youtube.com/watch?v=stCXFxC4OH0)
* ( ) [Setting up Arch Linux chris@machine chris@machine • •](https://www.youtube.com/watch?v=4Uc3-PIq-80&list=PLhoH5vyxr6QpGSDfaYLxOgjCzCej6q0kP)
* 1-shot reading
* ( ) [Making Debian and SwayWM and GTK play nicely. Starting over. nwg-look rocks!](https://www.youtube.com/watch?v=IV74fRNfhdM)
* ( ) [ ]  [xbitlabs.com/how-to-use-laptop-as-monitor/](https://www.xbitlabs.com/how-to-use-laptop-as-monitor/)
* ( ) [video](https://www.youtube.com/results?search_query=linux+laptop+as+second+monitor)
* ( ) [ ]  [hpsaturn.com/old-laptop-like-second-monitor/](https://hpsaturn.com/old-laptop-like-second-monitor/)
* ( ) [ ]  [quora.com/How-can-I-use-an-old-laptop-as-a-second-monitor-Ubuntu](https://www.quora.com/How-can-I-use-an-old-laptop-as-a-second-monitor-Ubuntu)
* ( ) [ ]  [superuser.com/questions/1545045/use-laptop-as-monitor-ubuntu-18-04](https://superuser.com/questions/1545045/use-laptop-as-monitor-ubuntu-18-04)
* ( ) [ ]  [XDG user directories - ArchWiki](https://wiki.archlinux.org/title/XDG_user_directories)
* ( ) [ ]  [I DID THIS - ADD TO NOTION partitioning - Ubuntu Server 20.04.1 LTS, not all disk space was allocated during installation? - Ask Ubuntu](https://askubuntu.com/questions/1269493/ubuntu-server-20-04-1-lts-not-all-disk-space-was-allocated-during-installation)
* ( ) [x]  [Zsh/Bash startup files loading order (.bashrc, .zshrc etc.) | The Lumber Room](https://shreevatsa.wordpress.com/2008/03/30/zshbash-startup-files-loading-order-bashrc-zshrc-etc/)* ( ) [electronjs.org/docs/latest/tutorial/window-customization](https://electronjs.org/docs/latest/tutorial/window-customization)
* ( ) [endlessm/gnome-software](https://github.com/endlessm/gnome-software) - Fork of GNOME Software with Endless customizations
* ( ) [my feelings on Gnome](https://www.reddit.com/media?url=https%3A%2F%2Fi.redd.it%2Fotedjf68hms91.png)

* Icons, Theming, Fonts
* ( ) [ ]  Patch my own font (Conda logo, Nvidia logo) → [ryanoasis/nerd-fonts#font-patcher*](https://github.com/ryanoasis/nerd-fonts#font-patcher*)

## Desktop Customization

## Desktop Icon Packs)

* ( ) [Candy Icons](https://github.com/EliverLara/candy-icons) - An icon theme colored with sweet gradients.
* ( ) [Flat Remix](https://github.com/daniruiz/Flat-Remix) - Flat Remix is an icon theme inspired by material design. It is mostly flat using a colorful palette with some shadows, highlights, and gradients for some depth.
* ( ) [Fluent Icon Theme](https://github.com/vinceliuice/Fluent-icon-theme) - Fluent icon theme for linux desktops.
* ( ) [La Capitaine Icon Theme](https://github.com/keeferrourke/la-capitaine-icon-theme) - A macOS and Material design inspired icon theme designed to fit into most desktop environments.
* ( ) [Moka Icon Theme](https://snwh.org/moka) - Moka was created with simplicity in mind. With the use simple geometry & bright colours.
* ( ) [Numix Icon Theme](https://github.com/numixproject/numix-icon-theme) - A flat icon theme that comes in two varieties, Numix Main, and Numix circle.
* ( ) [Papirus Icon Theme](https://github.com/PapirusDevelopmentTeam/papirus-icon-theme) - SVG icon theme for Linux systems, based on Paper with a few extras like (hardcode-tray support, kde-color-scheme support, libreoffice icon theme, filezilla theme, smplayer themes, …) and other modifications. The theme is available for GTK and KDE.
* ( ) [Qogir Icon Theme](https://github.com/vinceliuice/Qogir-icon-theme) - A flat colorful design icon theme for linux desktops.
* ( ) [Reversal Icon Theme](https://github.com/yeyushengfan258/Reversal-icon-theme) - A colorful design icon theme for linux desktops.
* ( ) [Tela Icon Theme](https://github.com/vinceliuice/Tela-icon-theme) - A flat colorful Design icon theme.
* ( ) [WhiteSur Icon Theme](https://github.com/vinceliuice/WhiteSur-icon-theme) - MacOS Big Sur style icon theme for linux desktops.
* ( ) [Zafiro Icons](https://github.com/zayronxio/Zafiro-icons) - Minimalist icons created with the flat-desing technique, utilizing washed out colors and always accompanied by white.

* Desktop Themes
* ( ) [Ant Theme](https://github.com/EliverLara/Ant) - Ant is a flat GTK theme for Ubuntu and other GNOME-based Linux desktops it comes in three varieties: vanilla, Bloody, or Dracula.
* ( ) [Arc Theme](https://github.com/jnsh/arc-theme) - A flat theme with transparent elements.
* ( ) [Catppuccin](https://github.com/catppuccin) - Catppuccin is a community-driven pastel theme that aims to be the middle ground between low and high contrast themes.
* ( ) [Dracula](https://draculatheme.com/gtk) - A dark theme using the awesome Dracula color pallete.
* ( ) [Flat Remix](https://github.com/daniruiz/Flat-Remix-GTK) - Flat Remix is a GTK application theme inspired by material design.
* ( ) [Graphite](https://github.com/vinceliuice/Graphite-gtk-theme) - Graphite GTK theme.
* ( ) [Gruvbox](https://github.com/Fausto-Korpsvart/Gruvbox-GTK-Theme) - A GTK theme based on the Gruvbox colour palette.
* ( ) [Kimi](https://github.com/EliverLara/Kimi) - Kimi is a light Gtk3.20+ theme.
* ( ) [Layan](https://github.com/vinceliuice/Layan-gtk-theme) - Layan is a flat Material Design theme for GTK 3, GTK 2 and Gnome-Shell which supports GTK 3 and GTK 2 based desktop environments like Gnome, Budgie, etc.
* ( ) [Material Ocean Theme](https://github.com/material-ocean/material-ocean) - A material design theme with oceanic colors(GTK, QT).
* ( ) [Mojave GTK Theme](https://github.com/vinceliuice/Mojave-gtk-theme) - Mojave is a Mac OSX like theme for GTK 3, GTK 2 and GNOME-Shell which supports GTK 3 and GTK 2 based desktop environments like GNOME, Pantheon, XFCE, Mate, etc.
* ( ) [Nordic](https://github.com/EliverLara/Nordic) - Dark Gtk3.20+ theme created using the awesome Nord color pallete.
* ( ) [Orchis theme](https://github.com/vinceliuice/Orchis-theme) - Orchis is a Material Design theme for GNOME/GTK based desktop environments.
* ( ) [Qogir](https://github.com/vinceliuice/Qogir-theme) - Qogir is a flat Design theme for GTK.
* ( ) [Sweet](https://github.com/EliverLara/Sweet) - Light and dark colorful Gtk3.20+ theme.
* ( ) [WhiteSur GTK Theme](https://github.com/vinceliuice/WhiteSur-gtk-theme) - MacOS Big Sur like theme for GNOME desktops.

## Font management

* ( ) [FIGlet](https://github.com/cmatsuoka/figlet) - Not exactly a font manager, but a nice program for making large letters out of ordinary text; an astonishing number of different fonts is available
* ( ) [toilet](https://github.com/cacalabs/toilet) - A program that tries to improve `FIGlet`; can load FIGlet fonts; supports Unicode input and output, colour fonts and output, and various output formats, including HTML, IRC and ANSI; uses `libcaca` to produce nice textual effects.

## GTK Themes, Icons, etc

* ( ) [erikdubois.be/listing/](https://www.erikdubois.be/listing/)
* ( ) [erikdubois.be/downloads/](https://www.erikdubois.be/downloads/)
* ( ) [vinceliuice/Fluent-gtk-theme](https://github.com/vinceliuice/Fluent-gtk-theme)
* ( ) [vinceliuice/Fluent-icon-theme*](https://github.com/vinceliuice/Fluent-icon-theme*)
* > fonts from Cneude
* ( ) [gradience.readthedocs.io/en/latest/](https://gradience.readthedocs.io/en/latest/)
* ( ) [FontForge](https://fontforge.github.io/) - Free (libre) font editor for Windows, Mac OS X and GNU+Linux.
* ( ) [Hardcode Tray](https://github.com/bilelmoussaoui/Hardcode-Tray) - This script fixes hardcoded tray icons in Linux by automatically detecting your default theme, the right icon size, the hard-coded applications, the right icons for each indicator and fix them.
* *   [google-font-installer](https://github.com/lordgiotto/google-font-installer)) - Download and install Google Web Fonts on your local machine.
* ( ) [Cursor themes - ArchWiki](https://wiki.archlinux.org/title/Cursor_themes)
* ( ) [How to change mouse cursor theme? : i3wm](https://www.reddit.com/r/i3wm/comments/3su58i/how_to_change_mouse_cursor_theme/)
* ( ) [tsujan/Kvantum](https://github.com/tsujan/Kvantum)
* ( ) [How to Install Nerd Fonts on Linux - ByteXD](https://bytexd.com/how-to-install-nerd-fonts-on-linux/)
* ( ) [Flatpak App Changing Cursor Theme And Size (Is This Normal Behavior?) : flatpak](https://www.reddit.com/r/flatpak/comments/rxnyh7/flatpak_app_changing_cursor_theme_and_size_is/)
* ( ) [r/neovim/comments/13vudj5/what_is_this_font_used_from_the_everforest_repo](https://www.reddit.com/r/neovim/comments/13vudj5/what_is_this_font_used_from_the_everforest_repo)
* Terminess Nerd Font
* Iosevka, Source Sans Pro

*  [loichyan/nerdfix](https://github.com/loichyan/nerdfix)
* -> [awesome-ricing](https://github.com/fosslife/awesome-ricing)
* ( ) [...](https://github.com/nickgerace/gfold)
* ( ) [...](https://github.com/alex35mil/NeoHub)
* ( ) [...](https://github.com/FlafyDev/combined-manager) 
* ( ) [...](https://github.com/lucc/nvimpager)
* ( ) [...](https://github.com/ron-rs/ron)
* ( ) [...](https://git-scm.com/docs/gitk)
* ( ) [...](https://ghaiklor.github.io/terminal-canvas/)
* ( ) [...](https://devicon.dev/ )
* ( ) [...](https://github.com/cue-lang)
* ( ) [...](https://git.sr.ht/~cdv/scfg-rs )
* ( ) [...](https://github.com/projectfluent/fluent)
* ( ) [...](https://github.com/ttytm/wthrr-the-weathercrab)
* ( ) [...](https://github.com/ulyssa/iamb )
* ( ) [...](https://gitlab.com/mildlyparallel/pscircle)
* ( ) [...](https://github.com/paul-nameless/tg)
* ( ) [...](https://github.com/aandrew-me/tgpt)
* ( ) [...](https://github.com/lukesmithxyz/mutt-wizard)
* ( ) [...](https://github.com/OpenRC/openrc)
* ( ) [...](https://github.com/FlafyDev/flutter_background_bar)
* ( ) [...](https://github.com/FlafyDev/epub_reader)
* ( ) [Conky](https://conky.cc/) - Conky is a free, light-weight system monitor for X, that displays any kind of information on your desktop.
* ( ) [...](https://acidwords.com/posts/2016-07-26-hacking-mupdf-custom-background-colors.html)
* ( ) [...](https://github.com/Lxtharia/minegrub-theme)
* ( ) [...](https://github.com/bevry/dorothy)
* ( ) [...](https://nwg-piotr.github.io/nwg-shell/) 
* ( ) [...](https://fsd.it/shop/fonts/pragmatapro/)
* ( ) [...](https://github.com/lucc/nvimpager)
* ( ) [...](https://github.com/Lxtharia/minegrub-theme)
* ( ) [read](https://www.reddit.com/r/unixporn/comments/5o1mic/what_display_manager_do_you_guys_use/)
* ( ) [Git Bare Repository - A Better Way To Manage Dotfiles - YouTube](https://www.youtube.com/watch?v=tBoLDpTWVOM)
* ( ) [FlafyDev/flutter_workspaces_2](https://github.com/FlafyDev/flutter_workspaces_2) -
* {rice} [...](https://github.com/adi1090x/widgets) [...](https://github.com/outfoxxed/hy3) [...](https://github.com/mahkoh/jay) [...](https://github.com/MrVivekRajan/Grub-Themes)
* {rice} [...](https://github.com/dawsers/hyprscroller) [...](https://github.com/hyprland-community/awesome-hyprland) [...](https://nwg-piotr.github.io/nwg-shell/)
* {rice} [...](https://github.com/mathix420/dotfiles/blob/master/beeper.css)
* {rice} [...](https://talyian.github.io/ansicolors/)
* {rice} [aphrodite-terminal-theme](https://github.com/win0err/aphrodite-terminal-theme) — Minimalistic Aphrodite theme (prompt) for sexy terminals that works in bash, fish and zsh → prompts
* {rice} [Base16 Designer](http://brianreilly.me/Base16Designer/)
* {rice} [catppuccin](https://github.com/catppuccin/catppuccin) → see list of software
* ( ) [...](https://github.com/Haruno19/fuzzy-c-means-processing)
* ( ) [...](https://github.com/Haruno19/c-halloc)
* {rice} [commit mono](https://commitmono.com/) neutral font
* {rice} [gautam_linux/colours.sh at master · gkotian/gautam_linux](https://github.com/gkotian/gautam_linux/blob/master/scripts/colours.sh)
* {rice} [Misterio77/flavours: 🎨💧 An easy to use base16 scheme manager that integrates with any workflow.](https://github.com/Misterio77/flavours)
* {rice} [Misterio77/flavours: 🎨💧 An easy to use base16 scheme manager that integrates with any workflow.](https://github.com/misterio77/flavours/#custom-templates-and-schemes)
* {rice} [vifm/vifm-colors: Various colorschemes for vifm file explorer.](https://github.com/vifm/vifm-colors)
* {rice} [wall.alphacoders](https://wall.alphacoders.com/)
* {rice} [wallpaper mountain lake](https://media.discordapp.net/attachments/1071922148991574056/1209591503836422224/aholmes_canada.cleaned.jpg?ex=66159f5f&is=66032a5f&hm=328996956fe6d340af05baa8a1575ec23eec9fb482de03a00141c1a9fa63c950&)
* {rice} [xvzftube/darknerdthemes: Dark ggplots themes for nerds](https://github.com/xvzftube/darknerdthemes)
rice * VanillaOS wallpaper channel
* {rice color} [gtaylor/python-colormath: A python module that abstracts common color math operations. For example, converting from CIE L*a*b to XYZ, or from RGB to CMYK](https://github.com/gtaylor/python-colormath)
* {rice color} [nChain](https://github.com/Nocxium/nChain) great color themes and screenshots
* {rice color dev} [xyy](https://joedrago.github.io/xyy/)
* {rice font} [Iosevka](https://github.com/be5invis/Iosevka)
* {rice font} [monaspace](https://monaspace.githubnext.com/) - An innovative superfamily of fonts for code
* [ColorFetch](https://github.com/Selbi182/ColorFetch)
* [ColorPie](https://github.com/keshavbhatt/ColorPie)
* ( ) [Customizing Colors - Tailwind CSS](https://tailwindcss.com/docs/customizing-colors)
* [perfect green](https://github.com/supabase-community/postgres_lsp/raw/main/docs/images/pls-github.png)

## Harmonizing QT and GTK, KDE and Gnome

* [possibly the gold-standard article](https://wiki.archlinux.org/title/Uniform_look_for_Qt_and_GTK_applications)
* [KDE theming](https://www.reddit.com/r/unixporn/comments/1b3prdn/how_do_i_uniformly_theme_qt_and_gtk_apps_please/)


]