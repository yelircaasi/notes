* question-driven development
* interesting OSes: Theseus, Redox, Fuchsia, Minix, Genode, Tock, Medley Interlisp, Mezzano(on old laptop?), Interim OS (also a language), Chrysalisp, Urbit OS, House OS
* parallax

“Code is like humor. When you have to explain it, it's bad.” - Cory House
* FOSS contributions: Rust NLP, Julia NLP, Rasa, C++ GUI, Torch NLP

FIXME# Low-Level

FIXME## exercism

* [exercism.org/tracks/x86-64-assembly/](https://exercism.org/tracks/x86-64-assembly/)
* [exercism.org/tracks/x86-64-assembly/exercises/hello-world/solutions](https://exercism.org/tracks/x86-64-assembly/exercises/hello-world/solutions)
* [exercism.org/tracks/x86-64-assembly/exercises/leap/solutions](https://exercism.org/tracks/x86-64-assembly/exercises/leap/solutions)
* [exercism.org/tracks/x86-64-assembly/exercises/two-fer/solutions](https://exercism.org/tracks/x86-64-assembly/exercises/two-fer/solutions)
* [exercism.org/tracks/x86-64-assembly/exercises/resistor-color/solutions](https://exercism.org/tracks/x86-64-assembly/exercises/resistor-color/solutions)
* [exercism.org/tracks/x86-64-assembly/exercises/space-age/solutions](https://exercism.org/tracks/x86-64-assembly/exercises/space-age/solutions)
* [exercism.org/tracks/x86-64-assembly/exercises/hamming/solutions](https://exercism.org/tracks/x86-64-assembly/exercises/hamming/solutions)
* [exercism.org/tracks/x86-64-assembly/exercises/allergies/solutions](https://exercism.org/tracks/x86-64-assembly/exercises/allergies/solutions)
* [exercism.org/tracks/x86-64-assembly/exercises/rotational-cipher/solutions](https://exercism.org/tracks/x86-64-assembly/exercises/rotational-cipher/solutions)
* [exercism.org/tracks/x86-64-assembly/exercises/matching-brackets/solutions](https://exercism.org/tracks/x86-64-assembly/exercises/matching-brackets/solutions)
* [exercism.org/tracks/x86-64-assembly/exercises/reverse-string/solutions/solutions](https://exercism.org/tracks/x86-64-assembly/exercises/reverse-string/solutions/solutions)
* [exercism.org/tracks/x86-64-assembly/exercises/rna-transcription/solutions](https://exercism.org/tracks/x86-64-assembly/exercises/rna-transcription/solutions)
* [exercism.org/tracks/x86-64-assembly/exercises/pangram/solutions](https://exercism.org/tracks/x86-64-assembly/exercises/pangram/solutions)
* [exercism.org/tracks/x86-64-assembly/exercises/grains/solutions](https://exercism.org/tracks/x86-64-assembly/exercises/grains/solutions)
* [exercism.org/tracks/x86-64-assembly/exercises/isogram/solutions](https://exercism.org/tracks/x86-64-assembly/exercises/isogram/solutions)
* [exercism.org/tracks/x86-64-assembly/exercises/difference-of-squares/solutions](https://exercism.org/tracks/x86-64-assembly/exercises/difference-of-squares/solutions)
* [exercism.org/tracks/x86-64-assembly/exercises/binary-search/solutions](https://exercism.org/tracks/x86-64-assembly/exercises/binary-search/solutions)
* [exercism.org/tracks/x86-64-assembly/exercises/collatz-conjecture/solutions](https://exercism.org/tracks/x86-64-assembly/exercises/collatz-conjecture/solutions)

FIXME## Low-Level Reading

* [How Binary Works](https://youtu.be/PMpNhbMjDj0)
* [Book: Numbers and Computers](http://library.lol/main/0ED6B117074071DF946B58FF8AEDD36A)
* [same game in Assembly, C, C++](https://www.youtube.com/watch?v=2eeXj-ck9VA)
* [Introduction - Kernel Development Course Part 1](https://youtu.be/HNIg3TXfdX8)
* [o-oconnell/minixfromscratch](https://github.com/o-oconnell/minixfromscratch)
* [Embedded Systems with ARM Cortex-M Microcontrollers in Assembly Language and C](https://web.eece.maine.edu/~zhu/book/)
* [Apress/learn-to-program-w-assembly](https://github.com/Apress/learn-to-program-w-assembly)

FIXME## Boot etc

* [de.wikipedia.org/wiki/Bootloader](https://de.wikipedia.org/wiki/Bootloader)
* [de.wikipedia.org/wiki/Grand_Unified_Bootloader](https://de.wikipedia.org/wiki/Grand_Unified_Bootloader)

FIXME## Cracking

* [gtfobins.github.io/](https://gtfobins.github.io/)

FIXME## Other People’s Projects

* [os.phil-opp.com/](https://os.phil-opp.com/)  * notes on writing an OS in Rust
* [raymii.org/s/blog/Bare_Metal_Boot_to_Vi.html](https://raymii.org/s/blog/Bare_Metal_Boot_to_Vi.html)
* [skilldrick.github.io/easy6502/index.html](http://skilldrick.github.io/easy6502/index.html)
* [uLisp](http://www.ulisp.com/show?3KN3)
* [Intel 8080 CPU Emulator](https://www.tramm.li/i8080/)

FIXME## Courses and Tutorials

FIXME### Long

* [x86 Assembly Course (whatsacreel)](https://www.youtube.com/playlist?list=PLKK11Ligqitg9MOX3-0tFT1Rmh3uJp7kA)
* [Digitaltechnik-Tutorial](https://www.youtube.com/playlist?list=PLBF281451AA9A2E13)    nand2tetris    ‣
* [ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-004-computation-structures-spring-2017/c10/](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-004-computation-structures-spring-2017/c10/)
* [buildyourownlisp.com/contents](http://www.buildyourownlisp.com/contents)
* [construa-seu-proprio-lisp.herokuapp.com/contents](https://construa-seu-proprio-lisp.herokuapp.com/contents)    *[*Build an 8-bit computer | Ben Eater](https://eater.net/8bit/control)
* [Языки программирования и компиляторы (2013)](https://www.youtube.com/watch?v=RqPL2pLuZkk&list=PL-_cKNuVAYAUkjhvHtKoH5Of2F0w3I400)
* [Assembly Programming Tutorial](https://www.tutorialspoint.com/assembly_programming/)

FIXME### Short

* [Hello World with NASM Assembler | DevDungeon](https://www.devdungeon.com/content/hello-world-nasm-assembler)
* [**Architecture of the central processing unit (CPU) - Computer Science Wiki](https://computersciencewiki.org/index.php/Architecture_of_the_central_processing_unit_(CPU))
* [Introduction to Assembly Language](https://www.swansontec.com/sprogram.html)
* [The Simplest Possible Tutorial... Glossary of Computer Terms](http://www.dave-cushman.net/computing/glossary.html)
* [dev.to/henrybarreto/getting-started-with-webassembly-outside-a-browser-with-rust-19a0](https://dev.to/henrybarreto/getting-started-with-webassembly-outside-a-browser-with-rust-19a0)
* [0xAX/asm](https://github.com/0xAX/asm)
* [Little Man Computer - Teach Computer Science](https://teachcomputerscience.com/little-man-computer/)
* [cs.lmu.edu/~ray/notes/nasmtutorial/](https://cs.lmu.edu/~ray/notes/nasmtutorial/)
* [x86 Assembly Language Programming](https://cs.lmu.edu/~ray/notes/x86assembly/)
* [8086 Assembly - Pong](https://www.youtube.com/watch?v=dyANHsj2UOw&list=PLvpbDCl_H7mfgmEJPl1bTHlH5g-f0kWDM)
* [andystanton/cmake-nasm-test: Building a nasm hello world app with cmake](https://github.com/andystanton/cmake-nasm-test)

FIXME## Media

FIXME### Video

* [youtube.com/c/LowLevelLearning](https://youtube.com/c/LowLevelLearning)    WebAssembly for Web Developers
* [Intro to WA](https://www.youtube.com/watch?v=3sU557ZKjUs)
* [Write your own Operating System in 1 hour - YouTube](https://www.youtube.com/watch?v=1rnA6wpF0o4)
* [I made an entire OS that only runs Tetris](https://www.youtube.com/watch?v=FaILnmUYS_U)
* [Programming my 8-bit breadboard computer](https://www.youtube.com/watch?v=9PPrrSyubG0)
* [Simplest possible homebrew 8-bit Z8 computer](https://www.youtube.com/watch?v=CS44XJt_gYc)
* [video](https://www.youtube.com/watch?v=Z5JC9Ve1sfI&list=PLVWtXi_Jrj_2CjtJJGAArDfyzKg2IVgkp&index=101)
* [The Fetch-Execute Cycle: What's Your Computer Actually Doing? - YouTube](https://www.youtube.com/watch?v=Z5JC9Ve1sfI)
* [Complete Home-Built 8-bit CPU + Computer with graphics and sound made from scratch using 74HC Logic](https://www.youtube.com/watch?v=g_ZaioqF1B0)
* [Simplest possible homebrew Z80 8-bit computer](https://www.youtube.com/watch?v=CS44XJt_gYc&t=3s)
* [Lets Build - 8 Bit Computer Part 1 Introduction](https://www.youtube.com/watch?v=bCVT1BtlZn0&t=14s)
* [Top 10 Craziest Assembly Language Instructions](https://www.youtube.com/watch?v=Wz_xJPN7lAY)
* [Operating System Basics - YouTube](https://www.youtube.com/watch?v=9GDX-IyZ_C8)
* [video](https://www.youtube.com/watch?v=LnzuMJLZRdU&list=PLVWtXi_Jrj_2CjtJJGAArDfyzKg2IVgkp&index=85)
* [EightZero: Building an 8-bit Computer From Zero](https://www.youtube.com/watch?v=cKoRRA4MyM4)
* [TRONIK AVENTUR N°50 - CREER ORDINATEUR A 4 BITS - ADDITION - COMPUTER HOME MADE - YouTube](https://www.youtube.com/watch?v=kCRN0DL8U9A)
* [video](https://www.youtube.com/watch?v=cNN_tTXABUA&list=PLVWtXi_Jrj_2CjtJJGAArDfyzKg2IVgkp&index=99)
* [x86 Assembly Crash Course - YouTube](https://www.youtube.com/watch?v=75gBFiFtAb8)
* [video](https://www.youtube.com/watch?v=iYRl50gtprA&list=PLVWtXi_Jrj_14rUJDWFEvyhOmYF2JdHmk&index=37)
* [x86 Assembly: Hello World! - YouTube](https://www.youtube.com/watch?v=HgEGAaYdABA)
* [What Is Assembly Language? - YouTube](https://www.youtube.com/watch?v=1FXhjErUz58)
* [Compilers: Innovation from the Bottom-Up—Viral Shah & Keno Fischer on TechLifeSkills w/Tanmay Ep. 20](https://www.youtube.com/watch?v=mWAiCI43nqA&list=PLVWtXi_Jrj_14rUJDWFEvyhOmYF2JdHmk&index=61&t=14s)

FIXME## Examples and Collections

* [Largest proper divisor of n - Rosetta Code](http://www.rosettacode.org/wiki/Largest_proper_divisor_of_n#X86_Assembly)
* [Category:ARM Assembly - Rosetta Code](http://www.rosettacode.org/wiki/Category:ARM_Assembly)
* [Category:MIPS Assembly - Rosetta Code](http://www.rosettacode.org/wiki/Category:MIPS_Assembly)
* [Category:6502 Assembly - Rosetta Code](http://www.rosettacode.org/wiki/Category:6502_Assembly)
* [Category:8086 Assembly - Rosetta Code](http://www.rosettacode.org/wiki/Category:8086_Assembly)

FIXME## Tools and Software Resources

* [webassembly.studio](https://webassembly.studio/)
* [SASM - Simple crossplatform IDE for NASM, MASM, GAS, FASM assembly languages](https://dman95.github.io/SASM/english.html)
* [Pages · Dman95/SASM Wiki](https://github.com/Dman95/SASM/wiki/)
* [whaleygeek/MyLittleComputer: A complete toolchain for a tiny computer architecture](https://github.com/whaleygeek/MyLittleComputer)
* [JuliaLang/PackageCompiler.jl: Compile your Julia Package](https://github.com/JuliaLang/PackageCompiler.jl)
* [Online Asm Compiler - Online Asm Editor - Online Asm IDE - Asm Coding Online - Practice Asm Online - Execute Asm Online - Compile Asm Online - Run Asm Online](https://www.tutorialspoint.com/compile_assembly_online.php)
* [llvm/llvm-project](https://github.com/llvm/llvm-project)
* [compile nasm online](https://rextester.com/l/nasm_online_compiler)
* [jj's useful and ugly FXT page](https://www.jjj.de/fxt/#fxt)

FIXME## Docs

* [as. The GNU Assembler.pdf](https://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=6C2EA7D9BCE553D77A12DFC96DB7A990?doi=10.1.1.32.4503&rep=rep1&type=pdf)
* [GNU Assembler - CodeDocs](https://codedocs.org/what-is/gnu-assembler)
* [Top (Using as)
* [sourceware.org/binutils/docs-2.12/as.info/index.html#Top](https://www.sourceware.org/binutils/docs-2.12/as.info/index.html#Top)
* [NASM - The Netwide Assembler](https://www.nasm.us/doc/)
* [NASM](https://www.nasm.us/)
* [Getting Started with the LLVM System — LLVM 10 documentation](https://llvm.org/docs/GettingStarted.html)

FIXME## Disassembly

* [ disassembler.io](https://onlinedisassembler.com/static/home/index.html)
* [**tools - Is there any disassembler to rival IDA Pro? - Reverse Engineering Stack Exchange](https://reverseengineering.stackexchange.com/questions/1817/is-there-any-disassembler-to-rival-ida-pro)
* [ ODA - The Online Disassembler](https://onlinedisassembler.com/odaweb/)
* [The 101 of ELF files on Linux: Understanding and Analysis - Linux Audit](https://linux-audit.com/elf-binaries-on-linux-understanding-and-analysis/)
* [**The Top 53 Disassembler Open Source Projects](https://awesomeopensource.com/projects/disassembler)
* [** ==> x86 Disassembly/Disassemblers and Decompilers - Wikibooks, open books for an open world](https://en.wikibooks.org/wiki/X86_Disassembly/Disassemblers_and_Decompilers)
* [Hopper ==> see if I can learn anything from tutorial](https://www.hopperapp.com/)

FIXME## Julia

* [How to execute julia code in a bash shell script itself - Usage - JuliaLang](https://discourse.julialang.org/t/how-to-execute-julia-code-in-a-bash-shell-script-itself/30848)
* [JuliaComputing/static-julia: Static AOT Julia compilation, demos and instructions](https://github.com/JuliaComputing/static-julia)
* [How do I see the C++ code from my Julia code? - Quora](https://www.quora.com/How-do-I-see-the-C-code-from-my-Julia-code)
* [State of Compilation to Single Executable for Julia - Usage - JuliaLang](https://discourse.julialang.org/t/state-of-compilation-to-single-executable-for-julia/30792/3)
* [**What is the difference between @code_native, @code_typed and @code_llvm in Julia? - Stack Overflow](https://stackoverflow.com/questions/43453944/what-is-the-difference-between-code-native-code-typed-and-code-llvm-in-julia)

FIXME## Java

* [Java Decompiler](http://java-decompiler.github.io/)

FIXME## Python

* [[dis — Disassembler for Python bytecode — Python 3.8.4rc1 documentation](https://docs.python.org/3/library/dis.html#:~:text=The dis module supports the,in the file Include%2Fopcode.&text=No guarantees are made that,changed between versions of Python.)](https://docs.python.org/3/library/dis.html#:~:text=The%20dis%20module%20supports%20the,in%20the%20file%20Include%2Fopcode.&text=No%20guarantees%20are%20made%20that,changed%20between%20versions%20of%20Python.))

FIXME## Reading List

FIXME### SORT

* -> look into Risc-V
* [What is Microarchitecture?](https://www.computerhope.com/jargon/m/microarchitecture.htm)
* [hackaday.com/2023/06/18/learning-x86_64-assembly-by-building-a-gui-from-scratch/](https://hackaday.com/2023/06/18/learning-x86_64-assembly-by-building-a-gui-from-scratch/)
* [Контроллеры (ПЛК)](https://vk.com/wall-16108331_152245)
* [Программирование ПЛК (Программируемый логический контроллер)](https://vk.com/wall-16108331_152139)
* [Рабочий цикл контроллера (ПЛК)56 переглядів](https://vk.com/video-16108331_456267607?list=e780dc7b2fcec6a2e4)
* [cea-sec/miasm: Reverse engineering framework in Python](https://github.com/cea-sec/miasm)
* [PC Hardware Explained: The illustrated guide to personal computer components in 2022](http://library.lol/main/F2E13C7E8F9EA53918D5E13671E4CF0C)
* [Essential Computer Hardware: The Illustrated Guide to Understanding Computer Hardware](http://library.lol/main/87B08BF4B62F2FA93AF1745A2ABD62B6)
* [Computer Arithmetic: Algorithms and Hardware Implementations](http://library.lol/main/B7871F2CDA2CC780274EED5C06E1E285)
* [Computer Science: The Hardware, Software and Heart of IT](http://library.lol/main/20312EDB01D6FA249C583E660FF77110)
* [The Architecture of Computer Hardware, Systems Software, & Networking: An Information Technology Approach, 4th Edition](http://library.lol/main/ED88650DDD0C8ABF9E3DC1F07E0CD825)
* [Computer Organization and Design Fundamentals. Examining Computer Hardware from the Bottom to the Top](http://library.lol/main/9AE6356A95587F2142F65478135E0501)
* [A+ Guide to Computer Hardware](http://library.lol/main/C3D83B755E363CD800F678348A83E803)
* [The Hardware Hacker: Adventures in Making and Breaking Hardware](http://library.lol/main/AF6E995E14874665C08834AD582AE471)
* [Handmade Electronic Music: The Art of Hardware Hacking](http://library.lol/main/B49BE9587F13E82535D421EA7D8FE41D)
* [Cryptography Arithmetic: Algorithms and Hardware Architectures](http://library.lol/main/A9C74B2323D02F2D7DA0E2F8DCD2738D)
* [Introduction To Computer Organisation - An Under-the-Hood Look at Hardware and x86-64 Assembly](http://library.lol/main/0E4377FB561B05A618466AE1E5B7928C)
* [Thinking Machines: Machine Learning and Its Hardware Implementation](http://library.lol/main/F6F18E517390C42F86D9A53B3C712CB2)
* [The Art of Writing Efficient Programs: An advanced programmer's guide to efficient hardware utilization and compiler optimizations using C++](http://library.lol/main/7FD4FB5F0DA703AC9C346E086A2C601C)
* [examples](http://library.lol/main/7FD4FB5F0DA703AC9C346E086A2C601C)
* [The All New Illustrated Guide to Everything Sold in Hardware Stores](http://library.lol/main/097FA1B5C41176BEADA2F6AEE8AAB300)
* [giga.de/downloads/windows-10/specials/wie-funktioniert-ein-computer-erklaerung-fuer-laien-profis/](http://www.giga.de/downloads/windows-10/specials/wie-funktioniert-ein-computer-erklaerung-fuer-laien-profis/)
* [coreight.com/content/ordinateur-pc-fonctionnement-composants](https://coreight.com/content/ordinateur-pc-fonctionnement-composants)
* [lehollandaisvolant.net/tuto/computer/](https://lehollandaisvolant.net/tuto/computer/)
* [Un ordinateur, comment ça marche ? Le rôle des principaux composants](https://coreight.com/content/ordinateur-pc-fonctionnement-composants)
* Wie funktioniert ein Computer?
* [Wie funktioniert ein Computer? – Erklärung für Laien & Profis – GIGA](http://www.giga.de/downloads/windows-10/specials/wie-funktioniert-ein-computer-erklaerung-fuer-laien-profis/)
* [Код (c229)](https://drive.google.com/file/d/1BuT8ak9x8uYjuNH7XUIOSv-n-3BCZ8ob/view?usp=sharing)
* [Цифровая техника ](https://vk.com/wall-16108331_151442)
* [what-happens-when](https://github.com/alex/what-happens-when)
* [Wie funktionieren Programmiersprachen? (+Arduino/C-Tutorial)](https://www.youtube.com/watch?v=vO-0czLZ6_E&list=WL&index=409)
* [Code Binaire - Conversion Traduction - Logiciel en Ligne](https://www.dcode.fr/code-binaire)
* [Exploring Binary - Binary Numbers, Binary Code, and Binary Logic](http://www.exploringbinary.com/)
* [How do logic gates work? - Explain that Stuff](http://www.explainthatstuff.com/logicgates.html)
* [theflyingkeyboard.net/logic-gates/logic-gates-exercises-easy-ii/](http://theflyingkeyboard.net/logic-gates/logic-gates-exercises-easy-ii/)
* [explainthatstuff.com/logicgates.html](http://www.explainthatstuff.com/logicgates.html)
* [swarthmore.edu/NatSci/echeeve1/Ref/ProbsLogic/LogicProbs.html](http://www.swarthmore.edu/NatSci/echeeve1/Ref/ProbsLogic/LogicProbs.html)
* [academo.org/demos/logic-gate-simulator/](https://academo.org/demos/logic-gate-simulator/)
* [brilliant.org/practice/building-logic-gates/](https://brilliant.org/practice/building-logic-gates/)
* [en.wikipedia.org/wiki/Inverter_(logic_gate)](https://en.wikipedia.org/wiki/Inverter_(logic_gate))
* [en.wikipedia.org/wiki/Logic_gate](https://en.wikipedia.org/wiki/Logic_gate)
* [sites.google.com/site/stephenmatthewssite/logic-gates-exercises](https://sites.google.com/site/stephenmatthewssite/logic-gates-exercises)
* [gatestudy.com/wp-content/uploads/2014/06/MCQ4-DC-LOGIC-GATES.pdf](https://www.gatestudy.com/wp-content/uploads/2014/06/MCQ4-DC-LOGIC-GATES.pdf)
* [geeksforgeeks.org/digital-electronics-logic-design-tutorials/](https://www.geeksforgeeks.org/digital-electronics-logic-design-tutorials/)
* [proprofs.com/quiz-school/story.php?title=logic-gate-quiz](https://www.proprofs.com/quiz-school/story.php?title=logic-gate-quiz)
* [Inverter (logic gate) - Wikipedia](https://en.wikipedia.org/wiki/Inverter_(logic_gate))
* [Les composants de l'Ordinateur (Matériels + Logiciels) : les pros de la souris leçon 01 - YouTube](https://www.youtube.com/watch?v=r__dSFv1HXk)
* [Logic gate - Wikipedia](https://en.wikipedia.org/wiki/Logic_gate)
* [Как работают логические элементы](https://vk.com/wall-16108331_153882)
* [x86-64 Assembly Language Programming with Ubuntu](http://libgen.is/book/index.php?md5=D6F668C44D3831380022063F10B8D311)
* Assembler (Rohde, Roming)
* [Assembler | Physics.Math.Code.Books](https://vk.com/topic-51126445_32122105)
* Astrofísica para gente con prisa
* Das Assembler-Buch
* [General-purpose graphics processor architectures](http://library.lol/main/F08089FEC6C96769B1C4200CA2A8C979)
* [Hardware Malware](http://library.lol/main/714C4AD10C1CF1FB7ED17E3DBA0E6CB6)
* Cbersetzerbau
* Compiler (Aho, Ullman, ...)
* Compiler Design (Wilhelm, Seidl, Hack)
* [Processor Microarchitecture: An Implementation Perspective](http://library.lol/main/4C202E94B6271153FBC50DC9D5CE4498)
* [Компиляторы | Physics.Math.Code.Books](https://vk.com/topic-51126445_36569049)
* how Computers Work (White)
* Ich glaube, es hackt!
* [Introduction to Digital Systems Design_Giuliano Donzellini, Luca Oneto, Domenico Ponta, Davide Anguita_1st ed. 2019](http://link.springer.com/openurl?genre=book&isbn=978-3-319-92804-3)
* [Introduction to Embedded Systems_Manuel Jiménez, Rogelio Palomera, Isidoro Couvertier_2014](http://link.springer.com/openurl?genre=book&isbn=978-1-4614-3143-5)
* Mikrocontroller
* Moderne Betriebssysteme
* Rechnerarchitektur (Tanenbaum, Austin)
* Rechnerorganisation und Rechnerentwurf (Patterson & Hennessey)
* [Программирование на ассемблере х64](https://vk.com/doc44301783_606069205?hash=58906ae26db0ac94a1&dl=f6349e4ce1b21ebb63)
* [Современные операционные системы [2015]](https://vk.com/doc576778753_560263135?hash=4e504e7aa22a64dda3&dl=33ac2c55463ec73c0c)
* [b-ok.cc/s/java%20virtual%20machine](https://b-ok.cc/s/java%20virtual%20machine)
* [Wireshark · Go Deep.](https://www.wireshark.org/)
* [Understanding Operating Systems](https://drive.google.com/file/d/1HJeHRSlPbMNDwqK4fZG39s74BLXhFA9V/view?usp=sharing)
* [Системное программное обеспечение: Учебник для вузов. 3-е изд. - Google Play](https://play.google.com/books/reader?id=F7DyBKZlrDcC&printsec=frontcover&output=reader&hl=es&pg=GBS.PA1)
* [Write Your Own 64-bit Operating System Kernel #1](https://youtu.be/FkrpUaGThTQ)
* [docs.micropython.org/en/latest/](http://docs.micropython.org/en/latest/)
* [micropython.org/](http://micropython.org/)
* [An introduction to Python bytecode](https://opensource.com/article/18/4/introduction-python-bytecode)
* [MicroPython: An Intro to Programming Hardware in Python – Real Python](https://realpython.com/micropython/)
* [video](https://www.youtube.com/user/TheWizadro)
* [TheWizardo](https://www.youtube.com/user/TheWizadro)
* [programminggroundup.blogspot.com/](http://programminggroundup.blogspot.com/)
* [it-uroki.ru/*](http://it-uroki.ru/*) [Tony Gambacorta](https://www.youtube.com/channel/UCGbeTQOPHwFikUlme8Txzvw)
* [disassembler.io](https://onlinedisassembler.com/static/home/index.html)
* [onlinedisassembler.com/static/home/index.html](https://onlinedisassembler.com/static/home/index.html)
* [onworks.net/programs/objdump-online?amp=0](https://www.onworks.net/programs/objdump-online?amp=0)
* [sites.fastspring.com/hopperapp/product/hopperdisassemblerv4](https://sites.fastspring.com/hopperapp/product/hopperdisassemblerv4)
* [hopperapp.com/download.html](https://www.hopperapp.com/download.html)
* [Is there any disassembler to rival IDA Pro?](https://reverseengineering.stackexchange.com/questions/1817/is-there-any-disassembler-to-rival-ida-pro)
* [IDA Freeware Download Page – Hex Rays](https://www.hex-rays.com/products/ida/support/download_freeware/)
* [Reverse Engineering | ELF File Format | Beginners - YouTube](https://www.youtube.com/watch?v=OBDuoqyZ4UA)
* [Convertitore di Codice Binario in Testo Ascii - ConvertBinary.com](https://it.convertbinary.com/)
* [debuild.co/](https://debuild.co/)
* [¿Cómo funciona un transistor? - Quora](https://es.quora.com/C%C3%B3mo-funciona-un-transistor)
* [¿Cómo trabaja el transistor? - Quora](https://es.quora.com/C%C3%B3mo-trabaja-el-transistor)
* [(2) What is a Transistor? - Quora](https://www.quora.com/What-is-a-Transistor-2)
* [#04 - Le Transistor, l'invention qui a révolutionné le Monde - Le Point](https://youtu.be/Q3_wIWSN2D8)
* [Building logic gates from MOSFET transistors](https://www.youtube.com/watch?v=1rZyGL1K5QI&list=PLVWtXi_Jrj_2CjtJJGAArDfyzKg2IVgkp&index=128)
* [Buscar - transistor - Quora](https://es.quora.com/search?q=transistor)
* [How does a transistor work?](http://www.physlink.com/Education/AskExperts/ae430.cfm)
* [users.polytech.unice.fr/~lorenz/Transistor_Bipolaire.pdf](http://users.polytech.unice.fr/~lorenz/Transistor_Bipolaire.pdf)
* [de.wikipedia.org/wiki/Bipolartransistor](https://de.wikipedia.org/wiki/Bipolartransistor)
* [es.quora.com/C%C3%B3mo-funciona-un-transistor](https://es.quora.com/C%C3%B3mo-funciona-un-transistor)
* [es.quora.com/C%C3%B3mo-trabaja-el-transistor](https://es.quora.com/C%C3%B3mo-trabaja-el-transistor)
* [es.quora.com/search?q=transistor](https://es.quora.com/search?q=transistor)
* [fr.quora.com/Quelle-est-la-diff%C3%A9rence-entre-un-relais-et-un-transistor](https://fr.quora.com/Quelle-est-la-diff%C3%A9rence-entre-un-relais-et-un-transistor)
* [learn.sparkfun.com/tutorials/transistors](https://learn.sparkfun.com/tutorials/transistors)
* [quora.com/What-is-a-Transistor-2](https://www.quora.com/What-is-a-Transistor-2)
* [thoughtco.com/what-is-a-transistor-2698913](https://www.thoughtco.com/what-is-a-transistor-2698913)
* [logic gates from transistors](https://m.youtube.com/watch?v=sTu3LwpF6XI)
* [Making logic gates from transistors](https://www.youtube.com/watch?v=sTu3LwpF6XI&list=WL&index=380)
* [Making your own 4 bit computer from transistors - YouTube](https://www.youtube.com/watch?v=xISG4nGTQYE)
* [Quelle est la différence entre un relais et un transistor ? - Quora](https://fr.quora.com/Quelle-est-la-diff%C3%A9rence-entre-un-relais-et-un-transistor)
* [Silicon, Diodes, and Transistors (Bits in Hardware)](https://www.youtube.com/watch?v=eXYN2e5kDdw&list=PLVWtXi_Jrj_2CjtJJGAArDfyzKg2IVgkp&index=127)
* [Transistors](http://hyperphysics.phy-astr.gsu.edu/hbase/Solids/trans.html)
* [transistors - memory for the simplest possible computer (Pi0K) - Electrical Engineering Stack Exchange](https://electronics.stackexchange.com/questions/210057/memory-for-the-simplest-possible-computer-pi0k)
* [Transistors and CMOS Logic - An Introduction to Semiconductor Physics, Technology, and Industry](https://www.anandtech.com/show/8223/an-introduction-to-semiconductor-physics-technology-and-industry/2)
* [Transistors: What Are They and How Do They Work?](https://www.thoughtco.com/what-is-a-transistor-2698913)
* [Wie funktionieren Transistoren und Mikrochips?](https://youtu.be/IhCZu8ALmFE)
* [Программируемые логические контроллеры](http://library.lol/main/8904AF33F96B7983D062F2451428FA02)
* [google.com/search?q=disassemble+elf+file+online&ie=UTF-8&oe=UTF-8&hl=it-us&client=safari](https://www.google.com/search?q=disassemble+elf+file+online&ie=UTF-8&oe=UTF-8&hl=it-us&client=safari)
* [What is LLVM? Definition and Related FAQs | OmniSci](https://www.omnisci.com/technical-glossary/llvm)
* [Assembly and Review - PE6502 Hobby Computer](https://www.youtube.com/watch?v=KAivGLHJzJM)
* [Astable 555 timer - 8-bit computer clock - part 1](https://www.youtube.com/watch?v=kRlSFm519Bo&list=PLowKtXNTBypGqImE405J2565dvjafglHU&index=1)
* [Let's Build an 8-Bit Computer! - Codename: JCM-1 [Episode 1]](https://www.youtube.com/watch?v=lgK2X3qjgCg)
* [How to Make an 8 bit Computer | Part 1](https://www.youtube.com/watch?v=4Ta1JuhYO7k)
* [DUO ADEPT: An 8-bit Homebrew Computer](https://www.youtube.com/watch?v=qYvr0b8jqbg)
* [Running "Hello World" on a 8-bit breadboard computer](https://www.youtube.com/watch?v=odEIWwqJOI4)
* [Eight bit transistor computer](https://www.youtube.com/watch?v=2eOaRF9VFdQ)
* [CONSTRUA UM COMPUTADOR DE 8 BITS | 8-bit Computer #00](https://www.youtube.com/watch?v=2llmPWBYvQo)
* [EightZero: Building an 8-bit Computer From Zero](https://www.youtube.com/watch?v=cKoRRA4MyM4)
* [Making your own 4 bit computer from transistors](https://www.youtube.com/watch?v=xISG4nGTQYE&t=1s)
* [Transistors, How do they work ?](https://www.youtube.com/watch?v=7ukDKVHnac4)
* [instructables.com/id/How-to-Build-an-8-Bit-Computer/](http://www.instructables.com/id/How-to-Build-an-8-Bit-Computer/)
* [extremetech.com/computing/128035-how-to-build-an-8-bit-computer-from-scratch](https://www.extremetech.com/computing/128035-how-to-build-an-8-bit-computer-from-scratch)
* [makezine.com/2012/04/30/building-an-8-bit-computer-from-scratch/](https://makezine.com/2012/04/30/building-an-8-bit-computer-from-scratch/)
* [instructables.com/id/How-to-Build-an-8-Bit-Computer/](http://www.instructables.com/id/How-to-Build-an-8-Bit-Computer/)
* [eater.net/](https://eater.net/)
* [Computerphile Logic Gates](https://www.youtube.com/watch?v=UvI-AMAtrvE)
* [Logic Gate Expressions](https://www.youtube.com/watch?v=z9s8A8oBe7g)
* [Hobbyelektronika](https://www.youtube.com/channel/UCSN02uTVekoxvW64JnX2RVg)
* [Martin](https://www.youtube.com/channel/UCE9rVpMUtcpWhHNkU7THkdA)
* [4-bit Computer](https://www.waitingforfriday.com/?p=529)
* [Computerphile on 3 basic logic gates](https://youtu.be/c3C_NaIaa1U)
* [Search · nand2tetris](https://github.com/search?q=nand2tetris)
* [Nand2Tetris setup guide | nand2tetris](https://www.nand2tetris.org/copy-of-nestedcall-1)
* [Nand2Tetris/01 at master · havivha/Nand2Tetris](https://github.com/havivha/Nand2Tetris/tree/master/01)
* [Home | nand2tetris](https://www.nand2tetris.org/)
* [Project 01 | nand2tetris](https://www.nand2tetris.org/project01)
* [quora.com/What-is-the-lowest-level-programming-language](https://www.quora.com/What-is-the-lowest-level-programming-language)
* [iep.utm.edu/consciou/](http://www.iep.utm.edu/consciou/)
* [Basic Electronics Tutorials and Revision](https://www.electronics-tutorials.ws/)
* [best podcasts about how computers work - Поиск в Google](https://www.google.com/search?q=best+podcasts+about+how+computers+work&rlz=1C5CHFA_enUS800US800&oq=best+podcasts+about+how+computers+work&aqs=chrome..69i57.8149j0j4&sourceid=chrome&ie=UTF-8)
* [Bipolar Transistor Tutorial, The BJT Transistor](https://www.electronics-tutorials.ws/transistor/tran_1.html)
* [Bootstrapping (compilers)](https://en.wikipedia.org/wiki/Bootstrapping_%28compilers%29)
* [Bootstrapping (compilers) - Wikipedia](https://en.wikipedia.org/wiki/Bootstrapping_%28compilers%29)
* Compilateurs avec C++ | Jacques Menu | download
* [Compilers - Compilers for contrarians](https://crypto.stanford.edu/~blynn/compiler/)
* [Coursera - Nand to Tetris](https://www.coursera.org/learn/build-a-computer/home/welcome)
* [Digital Logic Gate Tutorial - Basic Logic Gates](https://www.electronics-tutorials.ws/logic/logic_1.html)
* [Fetch Decode Execute Cycle in more detail - YouTube](https://www.youtube.com/watch?v=jFDMZpkUWCw)
* [Fetch execute walk-through using a simplified processor model](https://www.youtube.com/watch?v=h8NO0POQY34)
* [Formal Languages and Compilation (3rd Edition) | Stefano Crespi Reghizzi, Luca Breveglieri, Angelo Morzenti | download](https://b-ok.cc/book/4982692/2781e2?dsource=recommend)
* [Free Binary Translator | Translate Binary Code to Text - BinaryTranslator.com](http://www.binarytranslator.com/)
* [How does learning assembly aid in programming? - Software Engineering Stack Exchange](https://softwareengineering.stackexchange.com/questions/156722/how-does-learning-assembly-aid-in-programming)
* google search: how to tell which part of the source code a function is using
* [binarytranslator.com/](http://www.binarytranslator.com/)
* [r/askscience/comments/2b24y7/what_happens_inside_the_computer_when_i_run_a/](https://www.reddit.com/r/askscience/comments/2b24y7/what_happens_inside_the_computer_when_i_run_a/)
* [en.wikipedia.org/wiki/Low-level_programming_language](https://en.wikipedia.org/wiki/Low-level_programming_language)
* [it.convertbinary.com/](https://it.convertbinary.com/)
* [jvns.ca/blog/2014/09/06/how-to-read-an-executable/](https://jvns.ca/blog/2014/09/06/how-to-read-an-executable/)
* [allaboutcircuits.com/worksheets/boolean-algebra/](https://www.allaboutcircuits.com/worksheets/boolean-algebra/)
* [pdfdrive.com/computer-architecture-books.html](https://www.pdfdrive.com/computer-architecture-books.html)
* [Kernel (operating system) - Wikipedia](https://en.wikipedia.org/wiki/Kernel_(operating_system))
* [Microcode - Wikipedia](https://en.wikipedia.org/wiki/Microcode)
* [Syllabus | Introduction to Electrical Engineering and Computer Science I | Electrical Engineering and Computer Science | MIT OpenCourseWare](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-01sc-introduction-to-electrical-engineering-and-computer-science-i-spring-2011/syllabus/)
* [Системное программное обеспечение: Учебник для вузов. 3-е изд. - Google Play](https://play.google.com/books/reader?id=F7DyBKZlrDcC&printsec=frontcover&output=reader&hl=es&pg=GBS.PA1)
* [Таненбаум Э. - Современные операционные системы. 3-е изд. (Классика Computer Science) - 2010.djvu](https://vk.com/doc44301783_453645331?hash=317a46612f065704c0&dl=5df31c0734ec677184)
* [**Basic CPU Configuration - ALU, MDR, CU, IR, MAR, Accumulator, Program Counter](https://www.tech-wonders.com/2008/12/basic-cpu-configuration-alu-mdr-cu-ir-mar-accumulator-program-counter.html)
* [**commentaires de Ruddahbagga sur ELI5: What is information?](https://www.reddit.com/r/explainlikeimfive/comments/17iyys/eli5_what_is_information/c864h4n/)
* [**ELI5: How do computers read and "produce" the 1 and 0 they use to send commands? : explainlikeimfive](https://www.reddit.com/r/explainlikeimfive/comments/1j3jnt/eli5_how_do_computers_read_and_produce_the_1_and/)
* [**Lets Build - 8 Bit Computer Part 1 Introduction - YouTube](https://www.youtube.com/watch?v=bCVT1BtlZn0)
* [Architecture des ordinateurs- Leçon 1 - YouTube](https://www.youtube.com/watch?v=UP61XnKW2eg)
* [Arithmetik in Computern - Grundlagen Rechnerarchitektur](https://www.youtube.com/watch?v=0Exik_Q3kDk&list=PLgZuSc7xewdd9UiqudDJTqRiCpR6p7maj)
* [Así funciona: la radio](https://www.youtube.com/watch?v=FlgRxp-O6pc&list=WL&index=290)
* [Binary number - Wikipedia](https://en.wikipedia.org/wiki/Binary_number)
* [Bits und Bytes: Binärziffern 0 und 1 - Arithmetik in Computern 1 ● Gehe auf SIMPLECLUB.DE/GO - YouTube](https://www.youtube.com/watch?v=0Exik_Q3kDk&list=PLgZuSc7xewdcRWq0xieAjPzwcL5BdnSQT)
* [Boolean algebra - Wikipedia](https://en.wikipedia.org/wiki/Boolean_algebra)
* [Building an Analog Computer](https://www.clear.rice.edu/elec301/Projects99/anlgcomp/)
* [Comment fonctionne un ordinateur ?](https://www.culture-informatique.net/comment-ca-marche-un-ordinateur/)
* [Comment fonctionne un ordinateur ? - lehollandaisvolant.net](https://lehollandaisvolant.net/tuto/computer/)
* [Computer History Museum](https://www.youtube.com/user/ComputerHistory)
* [Computer science - Wikipedia](https://en.wikipedia.org/wiki/Computer_science#Computer_architecture_and_computer_engineering)
* [Computer Science Unplugged](http://csunplugged.org/)
* [Computer Simulators](http://billr.incolor.com/computer_simulators.htm)
* [Computerhardware für Anfänger – Wikibooks, Sammlung freier Lehr-, Sach- und Fachbücher](https://de.wikibooks.org/wiki/Computerhardware_f%C3%BCr_Anf%C3%A4nger)
* [Convertitore di Codice Binario in Testo Ascii - ConvertBinary.com](https://it.convertbinary.com/)
* [Cours/Formations informatique à télécharger](https://www.cours-gratuit.com/)
* [CS Principles: Big Ideas in Programming — Runestone Interactive Overview](http://www.openbookproject.net/books/StudentCSP/)
* [CS Unplugged](http://csunplugged.org/wp-content/uploads/2015/03/CSUnplugged_OS_2015_v3.1.pdf)
* [CS Unplugged](http://csunplugged.org/wp-content/uploads/2014/12/unpluggedTeachersDec2008-Spanish-master-ar-12182008.pdf) ES
* [csunplugged en](http://csunplugged.org/wp-content/uploads/2015/03/CSUnplugged_OS_2015_v3.1.pdf)
* [csunplugged es](http://csunplugged.org/wp-content/uploads/2014/12/unpluggedTeachersDec2008-Spanish-master-ar-12182008.pdf)
* [Execution (computing) - Wikipedia](https://en.wikipedia.org/wiki/Execution_(computing))
* [F.M.H. Studios](https://www.youtube.com/channel/UCyCkNRtYHN_okkwPqeam6aA)
* [Fetch Decode Execute Cycle in more detail](https://www.youtube.com/watch?v=jFDMZpkUWCw&list=PLVWtXi_Jrj_2CjtJJGAArDfyzKg2IVgkp&index=100)
* [Flip-flop](https://it.wikipedia.org/wiki/Flip-flop)
* [Free Binary Translator | Translate Binary Code to Text - BinaryTranslator.com](http://www.binarytranslator.com/)
* [Getting started with the Raspberry Pi - Introduction | Raspberry Pi Projects](https://projects.raspberrypi.org/en/projects/raspberry-pi-getting-started)
* [Ghidra](https://ghidra-sre.org/) (reverse engineering tool)
* [hawa0643](https://www.youtube.com/user/hawa0643)
* [how cpu interprets instructions - YouTube](https://www.youtube.com/results?search_query=how+cpu+interprets+instructions)
* [How do computers read code?](https://www.youtube.com/watch?v=QXjU9qTsYCc&list=PLVWtXi_Jrj_2CjtJJGAArDfyzKg2IVgkp&index=137)
* [How the ARM32 kernel starts](https://www.reddit.com/r/programming/comments/id6ooq/how_the_arm32_kernel_starts/)
* [(4) What actually happens inside a computer when we press a key? - Quora](https://www.quora.com/What-actually-happens-inside-a-computer-when-we-press-a-key)
* [When FFI Function Calls Beat Native C](https://nullprogram.com/blog/2018/05/27/)
FPGAs
* [Is There Any Benefit to Learning Machine Code? - Software Engineering Stack Exchange](https://softwareengineering.stackexchange.com/questions/195155/is-there-any-benefit-to-learning-machine-code)
* [berthub.eu/articles/posts/reverse-engineering-source-code-of-the-biontech-pfizer-vaccine/](https://berthub.eu/articles/posts/reverse-engineering-source-code-of-the-biontech-pfizer-vaccine/)
* [Eigenen 8-Bit-Prozessor realisieren](https://www.mikrocontroller.net/topic/437876)
* [(4) How do I visualize what happens inside a computer processor in action? - Quora](https://www.quora.com/How-do-I-visualize-what-happens-inside-a-computer-processor-in-action)
* [(4) How does a computer chip work? How do we get all of that information compacted onto that ever-shrinking chip? - Quora](https://www.quora.com/How-does-a-computer-chip-work-How-do-we-get-all-of-that-information-compacted-onto-that-ever-shrinking-chip)
* [quora.com/How-do-computers-work-on-their-most-basic-level](https://www.quora.com/How-do-computers-work-on-their-most-basic-level)
* [A Brief History of the Personal Computer | HowStuffWorks](https://computer.howstuffworks.com/history-of-the-personal-computer.htm)
* [leloctai.tk/game/mechanicalAdder/](https://leloctai.tk/game/mechanicalAdder/)
* [Virtual Mechanical Adder](https://leloctai.tk/game/mechanicalAdder/)
* [How Microprocessors Work | HowStuffWorks](https://computer.howstuffworks.com/microprocessor.htm)
* [How does computer memory work? - Explain that Stuff](http://www.explainthatstuff.com/how-computer-memory-works.html)
* [How do computers work? A simple introduction](http://www.explainthatstuff.com/howcomputerswork.html)
* [The Hardware Lottery](https://arxiv.org/abs/2009.06489)
* [c++ - How to disassemble a binary executable in Linux to get the assembly code? - Stack Overflow](https://stackoverflow.com/questions/5125896/how-to-disassemble-a-binary-executable-in-linux-to-get-the-assembly-code)
* [computer.howstuffworks.com/microprocessor.htm](https://computer.howstuffworks.com/microprocessor.htm)
* [system - How to get current CPU and RAM usage in Python? - Stack Overflow](https://stackoverflow.com/questions/276052/how-to-get-current-cpu-and-ram-usage-in-python)
* [assembly - How to view a binary file? - Unix & Linux Stack Exchange](https://unix.stackexchange.com/questions/282215/how-to-view-a-binary-file/282240#282240)
* [Open/read Unix Executable file - Unix & Linux Stack Exchange](https://unix.stackexchange.com/questions/194521/open-read-unix-executable-file)
* [winapi - How to write hello world in assembler under Windows? - Stack Overflow](https://stackoverflow.com/questions/1023593/how-to-write-hello-world-in-assembler-under-windows/1029093#1029093)
* [How do you get assembler output from C/C++ source in gcc? - Stack Overflow](https://stackoverflow.com/questions/137038/how-do-you-get-assembler-output-from-c-c-source-in-gcc)
* [Low Level Systems Programming in High Level Julia | Todd Green - YouTube](https://www.youtube.com/watch?v=AaQ7XuAR2yY)
* [Making an OS (x86) - CPU, Assembly, Booting - YouTube](https://www.youtube.com/watch?v=MwPjvJ9ulSc)
* [NASM - The Netwide Assembler](https://www.nasm.us/doc/)
* [Onur Mutlu Lectures](https://www.youtube.com/c/OnurMutluLectures/playlists)
* [PC Assembly Book](https://pacman128.github.io/pcasm/)
* [...](https://www.nand2tetris.org/software*) [pypi.org/project/vm-translator/*](https://pypi.org/project/vm-translator/*) [pypi.org/project/hack-assembler/*](https://pypi.org/project/hack-assembler/*) [nandgame.com/*](https://www.nandgame.com/*) [libgen.rs/search.php?req=Klaus+dembowski&open=0&res=25&view=simple&phrase=1&column=author](http://libgen.rs/search.php?req=Klaus+dembowski&open=0&res=25&view=simple&phrase=1&column=author)
* Heidelberg: Klaus Dembowski: Die Computer-Werkstatt* [aur.archlinux.org/packages/nand2tetris/*](https://aur.archlinux.org/packages/nand2tetris/*) [Nanometer-Scale Ge-Based Adaptable Transistors Providing Programmable Negative Differential Resistance Enabling Multivalued Logic](https://pubs.acs.org/doi/10.1021/acsnano.1c06801)

FIXME## [ project euler in NASM - Поиск в Google](https://www.google.com/search?q=project+euler+in+NASM&rlz=1C5CHFA_enUS800US800&oq=project+euler+in+NASM&aqs=chrome..69i57j33.3608j0j4&sourceid=chrome&ie=UTF-8)

* [AidanFray/ProjectEuler_x86_Assembler: Some Project Euler challenges coded in x86 NASM Assembler](https://github.com/AidanFray/ProjectEuler_x86_Assembler)
* [jfmatt-zz/euler-asm: Project Euler in x86 assembly](https://github.com/jfmatt-zz/euler-asm)
* [Large number (Project Euler #10)](https://forum.nasm.us/index.php?topic=1675.0)
* [NASM - The Netwide Assembler - Index](https://forum.nasm.us/index.php?PHPSESSID=vre8di58ggnkki0ok567rtvo4b&)
* [NASMX download](https://sourceforge.net/projects/nasmx/)
* [thlorenz/nasmx: The NASMX Project (manually maintained mirror) Documentation: [thlorenz.github.io/nasmx](https://thlorenz.github.io/nasmx)
* [NASMX](http://assembler.com.ua/viki/117-nasmx)
* [Ассемблер | сайт языка ассемблера](http://assembler.com.ua/)
* [ассемблер уроки](http://assembler.com.ua/lessons-assembly)
* [NASM-X Manual](http://thlorenz.com/nasmx/nasmx1.html)
* [Raymond's page](http://www.ray.masmcode.com/)

FIXME## [**June | 2013 | Programming Logic](https://www.programminglogic.com/2013/06/)

* [Nasm X86 Segfault](https://progi.pro/nasm-x86-segfault-8899673)
* [Ответы на Ваши Вопросы по Программированию!](https://progi.pro/)
* [How to solve Project Euler 1 using x86 Assembly - YouTube](https://www.youtube.com/watch?v=Q6fV-ZaNw0M)
* [How to solve Project Euler 2 using x86 Assembly - YouTube](https://www.youtube.com/watch?v=AU-rgZF7d-Q)
* [Project Euler exercise 1 in C, Python 3 and x86 assembly language | John Pierce](http://www.arti-sec.com/article/project-euler-exercise-1-c-python-3-and-x86-assembly-language)

FIXME## [**Assembly Language Programming Tutorial - YouTube](https://www.youtube.com/watch?v=zEuvNYe7WG0)

* [WebAssembly](https://webassembly.org/)
* [GaetanoCausio/AssemblerOnMac: Assembler on your Mac? Yes We Can ! A quick tutorial together with a bunch of sample assembler programs for the Mac.](https://github.com/GaetanoCausio/AssemblerOnMac)
* [GNU Assembler](https://cs.lmu.edu/~ray/notes/gasexamples/)
* [x86 Assembly: Hello World! (understandable hw)](https://youtu.be/HgEGAaYdABA)
* [Python trace](https://docs.python.org/3/library/trace.html)
* [Julia source code](https://discourse.julialang.org/t/source-code-of-a-function/4499)
* [Julia assembler](https://discourse.julialang.org/t/understanding-generated-assembly-for-simple-loop/9698)
* [Программирование с нуля.ассемблер](https://www.youtube.com/playlist?list=PLP6-uXxKE5Nuvajs8J9NeuoaPRGZwUlaG)
* [How do computers read code?](https://youtu.be/QXjU9qTsYCc)
* [Write your own VM](https://www.reddit.com/r/programming/comments/i9ijd0/write_your_own_virtual_machine/)
* [Python assembly](https://stackoverflow.com/questions/10660266/python-program-into-a-standard-assembly)
* [Assembly for C](https://stackoverflow.com/questions/16241771/how-can-i-view-assembly-code-produced-for-c-functions)
* [Assembler for C functions](https://stackoverflow.com/questions/16241771/how-can-i-view-assembly-code-produced-for-c-functions)
* [Julia stacktrace](https://docs.julialang.org/en/v1/manual/stacktraces/index.html)
* [Julia profiling](https://opensourc.es/blog/constraint-solver-1/)
* [From Nand to Tetris Part 1](https://www.youtube.com/playlist?list=PLrDd_kMiAuNmSb-CKWQqq9oBFN_KNMTaI)
* [From Nand to Tetris Part 2](https://www.youtube.com/playlist?list=PLrDd_kMiAuNmllp9vuPqCuttC1XL9VyVh)
* [Gynvael's Asm (PL)](https://www.youtube.com/playlist?list=PL7CA8FE35B665D4DD)
* [Программирование с нуля.ассемблер](https://youtube.com/playlist?list=PLP6-uXxKE5Nuvajs8J9NeuoaPRGZwUlaG)
* [...](https://www.youtube.com/playlist?list=PLetF-YjXm-sCH6FrTz4AQhfH6INDQvQSn)
* [Assembly Language Tutorial](http://www.pravaraengg.org.in/Download/MA/assembly_tutorial.pdf)
* [learn assembly language pdf - Поиск в Google](https://www.google.com/search?q=learn+assembly+language+pdf&rlz=1C1GCEA_enUS820&oq=learn+assembly+language+pdf&aqs=chrome..69i57j0l5.5111j0j4&sourceid=chrome&ie=UTF-8)
* [x86 Assembly Language Programming](https://cs.lmu.edu/~ray/notes/x86assembly/)
* code snake in assembler
* [vk.com/@physics_math-16-luchshih-knigi-po-assembleru-znaniya-i-navyki-shag-za-sha](https://vk.com/@physics_math-16-luchshih-knigi-po-assembleru-znaniya-i-navyki-shag-za-sha)
* [Assembly Language Step-by-Step](https://drive.google.com/file/d/1EAdU3U0Yt3oFMj_glpb_vQc89r6_LeKw/view?usp=sharing)
* [Язык ассемблера для процессоров Intel](https://drive.google.com/file/d/100KIiB91hcjrAqDAkugIWyLGhoQ8ZXX_/view?usp=sharing)

FIXME## [** Even Better Tutorial](https://asmtutor.com/)

* [101 of ELF Files](https://linux-audit.com/elf-binaries-on-linux-understanding-and-analysis/)
* [asm64-handout.dvi](https://www.cs.cmu.edu/~fp/courses/15213-s07/misc/asm64-handout.pdf)
* [Assembly language - Wikipedia](https://en.wikipedia.org/wiki/Assembly_language)
* [Assembly Overview](http://www.cs.columbia.edu/~sedwards/classes/2002/w4995-02/assembly.9up.pdf)
* [Assembly Programming Tutorial](https://www.tutorialspoint.com/assembly_programming/)
* [assembly.9up.pdf](http://www1.cs.columbia.edu/~sedwards/classes/2002/w4995-02/assembly.9up.pdf)
* [assembly64.pdf](http://www.egr.unlv.edu/~ed/assembly64.pdf)
* [Best Tutorial](https://cs.lmu.edu/~ray/notes/nasmtutorial/)
* [Book DE](https://beginners.re/RE4B-DE.pdf)
* [Book EN](https://beginners.re/RE4B-EN.pdf)
* [Book FR](https://beginners.re/RE4B-FR.pdf)
* [Comparing C to machine language](https://www.youtube.com/watch?v=yOyaJXpAYZQ&t=6s)
* [Comparing C to machine language - YouTube](https://www.youtube.com/watch?v=yOyaJXpAYZQ&t=6s)
* [CppCon 2017: Charles Bailey “Enough x86 Assembly to Be Dangerous” - YouTube](https://www.youtube.com/watch?v=IfUPkUAEwrk)
* [ELF](http://ftp.openwatcom.org/devel/docs/elf-64-gen.pdf)
* [ELF YT](https://www.youtube.com/playlist?list=PLWqAVn2zLR7TBTmnkqXeFk2QFYwBkgDmM)
* [From Assembly Language To Executable](http://cs.lmu.edu/~ray/notes/asmtoexe/)
* [Good general-purpose tutorial](https://www.tutorialspoint.com/assembly_programming/assembly_tutorial.pdf)
* [Good Tutorial](http://asm.sourceforge.net/intro/Assembly-Intro.html)
* [How to Learn Assembly](https://www.whoishostingthis.com/resources/assembly-language/)
* [en.wikipedia.org/wiki/Assembly_language](https://en.wikipedia.org/wiki/Assembly_language)
* [stackoverflow.com/questions/1910171/how-can-i-become-good-at-assembly](https://stackoverflow.com/questions/1910171/how-can-i-become-good-at-assembly)
* [r/learnprogramming/comments/5dr5yb/best_way_to_learn_assembly/](https://www.reddit.com/r/learnprogramming/comments/5dr5yb/best_way_to_learn_assembly/)
* [swansontec.com/sprogram.html](https://www.swansontec.com/sprogram.html)
* [interesting assemby answers](https://stackoverflow.com/questions/19035742/are-all-programs-eventually-converted-to-assembly-instructions)
* [Intro to ELF Part II](http://blog.k3170makan.com/2018/09/introduction-to-elf-format-part-ii.html)
* [Introduction to Assembly Language](https://www.swansontec.com/sprogram.html)
* [Introduction_to_x64_Assembly.pdf](https://software.intel.com/sites/default/files/m/d/4/1/d/8/Introduction_to_x64_Assembly.pdf)
* [IT](https://beginners.re/RE4B-IT.pdf)
* [Learn Assembly Language : Assembly Programming Tutorial for Beginners! (3 hours)](https://youtu.be/eC3MGJIn3Us)
* [Linux ASM Assembly](http://asm.sourceforge.net/)
* [NASM Documentation](https://www.nasm.us/xdoc/2.13.03rc1/html/nasmdoc0.html)
* [NASM Guide](https://www.nasm.us/xdoc/2.09.04/nasmdoc.pdf)
* [NASM Tutorial](https://cs.lmu.edu/~ray/notes/nasmtutorial/)
* [NASM. Первая программа. Урок 1](https://youtu.be/krLaV6aMGtA)
* [RU](https://beginners.re/RE4B-RU.pdf)
* [x64_cheatsheet.pdf](https://cs.brown.edu/courses/cs033/docs/guides/x64_cheatsheet.pdf)
* [x86 and amd64 instruction reference](https://www.felixcloutier.com/x86/)
* [x86 Assembly Guide](https://www.youtube.com/watch?v=4ult09c78ro&list=PLWqAVn2zLR7TBTmnkqXeFk2QFYwBkgDmM&index=3)
* [x86 Assembly Language Reference Manual](https://docs.oracle.com/cd/E19253-01/817-5477/817-5477.pdf)
* [x86 Assembly Language Wikipedia](https://en.wikipedia.org/wiki/X86_assembly_language)
* [YT DE](https://www.youtube.com/watch?v=4ult09c78ro&list=PLWqAVn2zLR7TBTmnkqXeFk2QFYwBkgDmM&index=3)
* [Денис Юричев](https://yurichev.com/)
* [Best way to learn Assembly? : learnprogramming](https://www.reddit.com/r/learnprogramming/comments/5dr5yb/best_way_to_learn_assembly/)
* [exploringbinary.com/](http://www.exploringbinary.com/)
* [csunplugged.org/](http://csunplugged.org/)
* [tutorialspoint.com/assembly_programming/](https://www.tutorialspoint.com/assembly_programming/)
* [en.wikipedia.org/wiki/Machine_code](https://en.wikipedia.org/wiki/Machine_code)
* [en.wikipedia.org/wiki/Computer_science#Computer_architecture_and_computer_engineering](https://en.wikipedia.org/wiki/Computer_science#Computer_architecture_and_computer_engineering)
* [en.wikipedia.org/wiki/Microarchitecture](https://en.wikipedia.org/wiki/Microarchitecture)
* [electronics.stackexchange.com/questions/210057/memory-for-the-simplest-possible-computer-pi0k](https://electronics.stackexchange.com/questions/210057/memory-for-the-simplest-possible-computer-pi0k)
* [codemines.blogspot.com/2012/02/simplest-possible-computer.html](http://codemines.blogspot.com/2012/02/simplest-possible-computer.html)
* [Category:Assembly - Rosetta Code](https://rosettacode.org/wiki/Category:Assembly)
* [100 doors - Rosetta Code](https://rosettacode.org/wiki/100_doors#X86_64_Assembly)
* [Category:X86 Assembly - Rosetta Code](https://rosettacode.org/wiki/Category:X86_Assembly)
* [Intro to x86 Assembly Language](https://www.youtube.com/playlist?list=PLmxT2pVYo5LB5EzTPZGfFN0c2GDiSXgQe)
* [eater.net/8bit/parts](https://eater.net/8bit/parts)
* [Modern X86 Assembly Language Programming: Covers x86 64-bit, AVX, AVX2, and AVX-512](https://b-ok.cc/book/3640076/d00285)
* [64-bit Assembly Language Programming Quick Start](https://b-ok.cc/book/3631855/2b6e98)
* [What is the relation between MLJ and Flux?](https://discourse.julialang.org/t/what-is-the-relation-between-mlj-and-flux/32680)
* [Compiler performance tips](https://discourse.julialang.org/t/compiler-performance-tips/32559)
* Derek Banas Assembly Language Tutorial
* [Assembler book links](https://b-ok.cc/book/3631855/2b6e98)
* [syncfusion.com/ebooks/assemblylanguage](https://www.syncfusion.com/ebooks/assemblylanguage)
* [Easy 6502 by skilldrick](https://skilldrick.github.io/easy6502/)
* [6502 Assembly - Wikibooks, open books for an open world](https://en.wikibooks.org/wiki/6502_Assembly)
* [VICE - the Versatile Commodore Emulator](http://vice-emu.sourceforge.net/)
* [cc65 - a freeware C compiler for 6502 based systems](https://www.cc65.org/)
* [cc65 - a freeware C compiler for 6502 based systems](https://cc65.github.io/)
* [AVR microcontrollers - Wikipedia](https://en.wikipedia.org/wiki/AVR_microcontrollers)
* [What Assembly Language is best to learn? - Quora](https://www.quora.com/What-Assembly-Language-is-best-to-learn)
* [x86-64 Hints](http://bob.cs.sonoma.edu/hints.html)
* [bob.cs.sonoma.edu/IntroCompOrg-x64/book.html](http://bob.cs.sonoma.edu/IntroCompOrg-x64/book.html)
* [Introduction to Computer Organization](http://bob.cs.sonoma.edu/IntroCompOrg-RPi/intro-co-rpi.html)
* [azure-docs/iot-hub-raspberry-pi-web-simulator-get-started.md at master · MicrosoftDocs/azure-docs · GitHub](https://github.com/MicrosoftDocs/azure-docs/blob/master/articles/iot-hub/iot-hub-raspberry-pi-web-simulator-get-started.md)
* [Raspberry Pi Azure IoT Web Simulator](https://azure-samples.github.io/raspberry-pi-web-simulator/)

FIXME## [*Programming from the Ground Up Book - Accueil [Savannah]](http://savannah.nongnu.org/projects/pgubook/)

* [Programming from the Ground Up](http://programminggroundup.blogspot.com/)
* [? Tech Docs | AMD](https://www.amd.com/en/support/tech-docs)
* [x86 Instructions - Tutorial](https://www.cs.cmu.edu/~fp/courses/15213-s06/misc/asm64-handout.pdf)
* [Art of Assembly Language Programming and HLA by Randall Hyde](http://www.plantation-productions.com/Webster/HighLevelAsm/index.html)
* [Microsoft Word - CoursASM.doc](http://lancelot.pecquet.org/download/science/aesthack/2003-BenoitM-ASM.pdf)
* [Art of Assembly Language Programming and HLA by Randall Hyde](http://www.plantation-productions.com/Webster/HighLevelAsm/HLADoc/index.html)
* [strace Introduction](http://www.brendangregg.com/blog/2014-05-11/strace-wow-much-syscall.html)
* [NASM - The Netwide Assembler](https://www.nasm.us/xdoc/2.14.02/html/nasmdoc0.html)
* [Sega Game Coding in Assembly - Computerphile](https://www.youtube.com/watch?v=GH94fKtGr0M&list=WL&index=1437)
* [x86 Assembly Crash Course](https://www.youtube.com/watch?v=75gBFiFtAb8&list=WL&index=459&t=174s)
* [How assembly language loops work](https://www.youtube.com/watch?v=ZYJIakkcLYw&list=PLVWtXi_Jrj_14rUJDWFEvyhOmYF2JdHmk&index=52)
* [circuit simulator online - Поиск в Google](https://www.google.com/search?rlz=1C1GCEA_enUS820US820&ei=TDPOW-74A6nD0PEP3rqA6Ao&q=circuit+simulator+online&oq=circuit+simulator+online&gs_l=psy-ab.3..0i7i30k1j0i203k1j0i30k1l8.7368.11304.0.12185.17.17.0.0.0.0.310.1950.0j8j2j1.11.0....0...1c.1.64.psy-ab..8.9.1507...0i7i30i19k1j0i19k1j0i7i10i30i19k1.0.HaKQR0_au8A)
* [Design of Digital Circuits - Lecture 11: Microarchitecture](https://youtu.be/_pRC1gM1UCU)
* [Design of Digital Circuits - Lecture 11: Microarchitecture (ETH Zürich, Spring 2018)](https://www.youtube.com/watch?v=_pRC1gM1UCU&list=PLVWtXi_Jrj_2CjtJJGAArDfyzKg2IVgkp&index=102)
* [Design of Digital Circuits - Lecture 11: Microarchitecture (ETH Zürich, Spring 2019)](https://www.youtube.com/watch?v=A8ssg3HTzVA&list=PLVWtXi_Jrj_2CjtJJGAArDfyzKg2IVgkp&index=103)
* [Education - All About Circuits](https://www.allaboutcircuits.com/education/)
* [How do integrated circuits work? - Explain that Stuff](http://www.explainthatstuff.com/integratedcircuits.html)
* [math.hws.edu/TMCM/java/labs/xLogicCircuitsLab1.html](http://math.hws.edu/TMCM/java/labs/xLogicCircuitsLab1.html)
* [explainthatstuff.com/integratedcircuits.html](http://www.explainthatstuff.com/integratedcircuits.html)
* [allaboutcircuits.com/education/](https://www.allaboutcircuits.com/education/)
* [allaboutcircuits.com/textbook/direct-current/](https://www.allaboutcircuits.com/textbook/direct-current/)
* [allaboutcircuits.com/textbook/experiments/chpt-3/a-very-simple-computer/](https://www.allaboutcircuits.com/textbook/experiments/chpt-3/a-very-simple-computer/)
* [britannica.com/technology/computer-circuitry](https://www.britannica.com/technology/computer-circuitry)
* [NAND/NOR circuits](https://www.youtube.com/watch?v=JaZrrDAkB5s&list=PLVWtXi_Jrj_2CjtJJGAArDfyzKg2IVgkp&index=129)
* [Online Circuit Simulator with SPICE](http://www.partsim.com/simulator)
* how were the first compilers made?
* [Compiler Construction Course](https://cs.nyu.edu/courses/spring11/G22.2130-001/)
* [Compiler Construction Using Java, Javacc, and Yacc](https://libgen.is/book/index.php?md5=45A94C008FBA278D33659DC4D550D5DC)
* Compilers: Principles, Techniques, and Tools, 2nd Edition
* [Ben Eater](https://eater.net/)
* [Build an 8-bit computer from scratch – Ben Eater](https://eater.net/8bit/)
* [Building an 8-bit breadboard computer! - YouTube - YouTube](https://www.youtube.com/playlist?list=PLowKtXNTBypGqImE405J2565dvjafglHU)
* [Comparing C to machine language - YouTube](https://www.youtube.com/watch?v=yOyaJXpAYZQ&t=6s)
* [eater.net/8bit/](https://eater.net/8bit/)
* [Digital electronics - Wikipedia](https://en.wikipedia.org/wiki/Digital_electronics)
* [A Pragmatic Introduction to the Art of Electrical Engineering](http://aggregate.org/hankd/piaee12.pdf)
* [A Very Simple Computer | DC Circuits | Electronics Textbook](https://www.allaboutcircuits.com/textbook/experiments/chpt-3/a-very-simple-computer/)
* [Computer circuitry | electronics | Britannica.com](https://www.britannica.com/technology/computer-circuitry)
* [Digital Electronics - YouTube](https://www.youtube.com/playlist?list=PLBlnK6fEyqRjMH3mWf6kwqiTbT798eAOm)
* [Digital Electronics Playlist](https://www.youtube.com/playlist?list=PLBlnK6fEyqRjMH3mWf6kwqiTbT798eAOm)
* [Electricity Tutorial](https://www.swansontec.com/set.html)
* [Elektriciteit en Magnetisme](https://www.nikhef.nl/~jo/em/index.html)
* [Elektronik Kompendium](https://www.elektronik-kompendium.de/)
* [Elektrotechnik in 5 Minuten by Alexander Stöger](https://www.youtube.com/channel/UCKC9gZw2CxA8y9sgBA58Wnw)
* [ElProCus - Electronic Projects for Engineering Students - ElProCus is an educational website on electronic projects for ECE and EEE students.](https://www.elprocus.com/)
* [Fundamentals of Electrical Engineering I](https://www.ece.rice.edu/~dhj/courses/elec241/col10040.pdf)
* [ibiblio.org/kuphaldt/electricCircuits/](http://www.ibiblio.org/kuphaldt/electricCircuits/)
* [ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-004-computation-structures-spring-2017/](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-004-computation-structures-spring-2017/)
* [ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-004-computation-structures-spring-2017/c10/](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-004-computation-structures-spring-2017/c10/)
* [ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-01sc-introduction-to-electrical-engineering-and-computer-science-i-spring-2011/unit-1-software-engineering/object-oriented-programming/](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-01sc-introduction-to-electrical-engineering-and-computer-science-i-spring-2011/unit-1-software-engineering/object-oriented-programming/)
* [ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-034-artificial-intelligence-fall-2010/readings/](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-034-artificial-intelligence-fall-2010/readings/)
* [ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-034-artificial-intelligence-fall-2010/readings/MIT6_034F10_netmath.pdf](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-034-artificial-intelligence-fall-2010/readings/MIT6_034F10_netmath.pdf)
* [ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-042j-mathematics-for-computer-science-spring-2015/proofs/tp2-2/digital-logic-video/digital-logic/](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-042j-mathematics-for-computer-science-spring-2015/proofs/tp2-2/digital-logic-video/digital-logic/)
* [svbitec.files.wordpress.com/2013/09/introduction-to-electrical-engineering.pdf](https://svbitec.files.wordpress.com/2013/09/introduction-to-electrical-engineering.pdf)
* [elektronik-kompendium.de/](https://www.elektronik-kompendium.de/)
* [elektronik-kompendium.de/sites/com/1905131.htm](https://www.elektronik-kompendium.de/sites/com/1905131.htm)
* [Lessons In Electric Circuits](http://www.ibiblio.org/kuphaldt/electricCircuits/)
* [Liste der Schaltzeichen (Elektrik/Elektronik) – Wikipedia](https://de.wikipedia.org/wiki/Liste_der_Schaltzeichen_(Elektrik/Elektronik))
* [en.wikipedia.org/wiki/Digital_electronics](https://en.wikipedia.org/wiki/Digital_electronics)
* [Scherz P., Monk S. - Practical Electronics for Inventors, 4th Edition - 2016.pdf](https://vk.com/doc44301783_448549104?hash=4961c2f50fb58858cc&dl=9b79734bbd29a7cf91)
* [Как читать радиосхемы](https://vk.com/video-16108331_456266760?list=a56e388ce734c118b2)
* [Основы электроники для чайников [2018] Шамие Кэтлин.pdf](https://vk.com/doc44301783_517617014?hash=3c12abcaea588cc316&dl=d5fe2cfe36aab450bc)
* [Уроки радиоэлектроники для начинающих](https://vk.com/wall-16108331_151052)
* [Цифровая электроника - YouTube](https://www.youtube.com/results?search_query=%D0%A6%D0%B8%D1%84%D1%80%D0%BE%D0%B2%D0%B0%D1%8F+%D1%8D%D0%BB%D0%B5%D0%BA%D1%82%D1%80%D0%BE%D0%BD%D0%B8%D0%BA%D0%B0)
* [Цифровая электроника.](http://go-radio.ru/cifrovaya-elektronika.html)
* [Что такое ЭЛЕКТРИЧЕСТВО](https://vk.com/wall-16108331_153269)
* [hyperphysics.phy-astr.gsu.edu/hbase/Solids/trans.html](http://hyperphysics.phy-astr.gsu.edu/hbase/Solids/trans.html)
* [mathmutation.blogspot.com/2011/12/46-worlds-simplest-computer.html](http://mathmutation.blogspot.com/2011/12/46-worlds-simplest-computer.html)
* [mirror.thelifeofkenneth.com/lib/electronics_archive/DigitalElectronicsBook.pdf](http://mirror.thelifeofkenneth.com/lib/electronics_archive/DigitalElectronicsBook.pdf)
* [ee.surrey.ac.uk/Projects/Labview/gatesfunc/QuizFrameSet.htm](http://www.ee.surrey.ac.uk/Projects/Labview/gatesfunc/QuizFrameSet.htm)
* [explainthatstuff.com/how-computer-memory-works.html](http://www.explainthatstuff.com/how-computer-memory-works.html)
* [explainthatstuff.com/howcomputerswork.html](http://www.explainthatstuff.com/howcomputerswork.html)
* [physlink.com/Education/AskExperts/ae430.cfm](http://www.physlink.com/Education/AskExperts/ae430.cfm)
* [de.wikibooks.org/wiki/Computerhardware_f%C3%BCr_Anf%C3%A4nger](https://de.wikibooks.org/wiki/Computerhardware_f%C3%BCr_Anf%C3%A4nger)
* [de.wikipedia.org/wiki/Integrierter_Schaltkreis](https://de.wikipedia.org/wiki/Integrierter_Schaltkreis)
* [deeprajbhujel.blogspot.com/2015/12/sap-1-architecture.html](https://deeprajbhujel.blogspot.com/2015/12/sap-1-architecture.html)
* [deeprajbhujel.blogspot.com/2015/12/sap-1-instructions-and-instruction-cycle.html](https://deeprajbhujel.blogspot.com/2015/12/sap-1-instructions-and-instruction-cycle.html)
* [engineering.purdue.edu/ece270/Refs/supp_text_copyright_dgmeyer.pdf](https://engineering.purdue.edu/ece270/Refs/supp_text_copyright_dgmeyer.pdf)
* [makina-corpus.com/formations](https://makina-corpus.com/formations)
* [anandtech.com/show/8223/an-introduction-to-semiconductor-physics-technology-and-industry/2](https://www.anandtech.com/show/8223/an-introduction-to-semiconductor-physics-technology-and-industry/2)
* [culture-informatique.net/comment-ca-marche-un-ordinateur/](https://www.culture-informatique.net/comment-ca-marche-un-ordinateur/)
* [dcode.fr/code-binaire](https://www.dcode.fr/code-binaire)
* [electronics-tutorials.ws/](https://www.electronics-tutorials.ws/)
* [electronics-tutorials.ws/combination/comb_1.html](https://www.electronics-tutorials.ws/combination/comb_1.html)
* [faz.net/aktuell/wirtschaft/digitec/intel-sicherheitsluecke-was-in-einem-computer-so-passiert-15376904.html?printPagedArticle=true#pageIndex_2](https://www.faz.net/aktuell/wirtschaft/digitec/intel-sicherheitsluecke-was-in-einem-computer-so-passiert-15376904.html?printPagedArticle=true#pageIndex_2)
* [quora.com/How-do-I-visualize-what-happens-inside-a-computer-processor-in-action](https://www.quora.com/How-do-I-visualize-what-happens-inside-a-computer-processor-in-action)
* [quora.com/How-does-a-computer-chip-work-How-do-we-get-all-of-that-information-compacted-onto-that-ever-shrinking-chip](https://www.quora.com/How-does-a-computer-chip-work-How-do-we-get-all-of-that-information-compacted-onto-that-ever-shrinking-chip)
* [quora.com/Is-there-a-person-that-can-build-a-computer-from-scratch](https://www.quora.com/Is-there-a-person-that-can-build-a-computer-from-scratch)
* [quora.com/What-actually-happens-inside-a-computer-when-we-press-a-key](https://www.quora.com/What-actually-happens-inside-a-computer-when-we-press-a-key)
* [r/AskReddit/comments/39w84d/how_many_people_would_it_take_to_build_a_computer/](https://www.reddit.com/r/AskReddit/comments/39w84d/how_many_people_would_it_take_to_build_a_computer/)
* [r/askscience/comments/1t0fcw/when_a_computer_reads_binary_how_does_it_know/](https://www.reddit.com/r/askscience/comments/1t0fcw/when_a_computer_reads_binary_how_does_it_know/)
* [r/explainlikeimfive/comments/1j3jnt/eli5_how_do_computers_read_and_produce_the_1_and/](https://www.reddit.com/r/explainlikeimfive/comments/1j3jnt/eli5_how_do_computers_read_and_produce_the_1_and/)
* [swansontec.com/set.html](https://www.swansontec.com/set.html)
* [video](https://www.youtube.com/playlist?list=PLNUL7DzXzp_J4TztZYOVtayTfp0DV1z5H)
* [video](https://www.youtube.com/playlist?list=PLowKtXNTBypGqImE405J2565dvjafglHU)
* [video](https://www.youtube.com/watch?v=kCRN0DL8U9A)
* [video](https://www.youtube.com/watch?v=Mv2XQgpbTNE)
* [IDA — Википедия](https://ru.wikipedia.org/wiki/IDA)
* [Inside the Machine (58)](https://drive.google.com/file/d/1yflPPcBUzjtVp0DUuXPCmhGtaYq9vNcA/view?usp=sharing)
* [Instruction Decoder - an overview](https://www.sciencedirect.com/topics/engineering/instruction-decoder)
* instruction set
* [Integrierter Schaltkreis – Wikipedia](https://de.wikipedia.org/wiki/Integrierter_Schaltkreis)
* [Intel-Sicherheitslücke: Was in einem Computer so passiert](http://www.faz.net/aktuell/wirtschaft/diginomics/intel-sicherheitsluecke-was-in-einem-computer-so-passiert-15376904.html)
* [Interstices - Explorez les sciences du numérique - Accueil](https://interstices.info/jcms/jalios_5127/accueil)
* [Introduction to SR Flip Flop](https://www.youtube.com/watch?v=HZg7fNu-l24&list=WL&index=277)
* [Jacob Sorber](https://www.youtube.com/c/JacobSorber)
* [Jak pracuje Hardware](https://www.youtube.com/watch?v=IrIkwmuGNoU&list=WL&index=140)
* Jak pracuje Hardwarede rudydabel
* [Lecture Notes for Digital Electronics](http://pages.uoregon.edu/rayfrey/DigitalNotes.pdf)
* [Les bases de l’informatique et de la programmation](https://www.enseignement.polytechnique.fr/profs/informatique/Francois.Morain/TC/X2005/Poly/polyX05.pdf)
* [Les Composants d’un Ordinateur - YouTube](https://www.youtube.com/watch?v=0e2fEhuvorU&index=2&list=PLEHbQ49A2-gvKv8GsBslLGVHLH9AL_-cm)
* [Let's Build an 8-bit Computer](https://www.youtube.com/watch?v=bCVT1BtlZn0)
* [Lets Build 8 Bit Computer - YouTube - YouTube](https://www.youtube.com/playlist?list=PLNUL7DzXzp_J4TztZYOVtayTfp0DV1z5H)
* [LLVM Github](https://github.com/llvm)
* [Logikgatter](https://youtu.be/Imt0apjnwYw)
* [Machine code - Wikipedia](https://en.wikipedia.org/wiki/Machine_code)
* [Machine Code Instructions - YouTube](https://www.youtube.com/watch?v=Mv2XQgpbTNE)
* [Magnetischer Datenspeicher](https://www.elektronik-kompendium.de/sites/com/1905131.htm)
* [Making your own 4-bit computer](https://www.youtube.com/watch?v=xISG4nGTQYE)
* [Math Mutation: 46: The World's Simplest Computer](http://mathmutation.blogspot.com/2011/12/46-worlds-simplest-computer.html)
* [Microsoft PowerPoint - Transistor Bipolaire [Mode de compatibilité]](http://users.polytech.unice.fr/~lorenz/Transistor_Bipolaire.pdf)
* [Nuitka Home](http://nuitka.net/)
* [Onur Mutlu Lectures](https://www.youtube.com/channel/UCIwQ8uOeRFgOEvBLYc3kc3g)
* [Operation Systems: Three Easy Pieces](http://pages.cs.wisc.edu/~remzi/OSTEP/)
* [Ordinateur tout un programme - C&#39;est pas sorcier - YouTube](https://www.youtube.com/watch?v=c96KP5jZVYk)
* [Rechnerarchitektur - Alle Themen besser sortiert auf www.thesimpleclub.de](https://www.youtube.com/watch?v=0Exik_Q3kDk&list=PLgZuSc7xewdcRWq0xieAjPzwcL5BdnSQT)
* [rudydabel](https://www.youtube.com/user/rudydabel)
* [nasm.us/doc/](https://www.nasm.us/doc/)
* [intel.com/content/www/us/en/developer/articles/technical/intel-sdm.html](https://www.intel.com/content/www/us/en/developer/articles/technical/intel-sdm.html)
* [Expanded Main Page - OSDev Wiki](https://wiki.osdev.org/Main_Page)
* [Game Physics (in Assembler) - Computerphile - YouTube](https://www.youtube.com/watch?v=Kalmryn9_sE)
* [Introduction to x64 Assembly](https://software.intel.com/content/www/us/en/develop/articles/introduction-to-x64-assembly.html)

FIXME### comparisons

* [MASM Vs NASM Vs GAS | Abu Bakar](https://bakarabu.wordpress.com/2021/01/31/masm-vs-nasm-vs-gas/)
* [asm, GAS vs. MASM](http://computer-programming-forum.com/46-asm/0484c7edd213a17b.htm)
* [assembly - MASM/NASM Differences - Stack Overflow](https://stackoverflow.com/questions/2035747/masm-nasm-differences)
* [Linux assemblers: A comparison of GAS and NASM](https://web.archive.org/web/20090303224539/http://ibm.com/developerworks/linux/library/l-gas-nasm.html)
* [Linux assemblers: A comparison of GAS and NASM – IBM Developer](https://developer.ibm.com/articles/l-gas-nasm/)

FIXME### Wikipedia

* [Assembly language - Wikipedia](https://en.wikipedia.org/wiki/Assembly_language)
* [x86 assembly language - Wikipedia](https://en.wikipedia.org/wiki/X86_assembly_language#Syntax)
* [Netwide Assembler - Wikipedia](https://en.wikipedia.org/wiki/Netwide_Assembler)
* [Krivine machine - Wikipedia](https://en.wikipedia.org/wiki/Krivine_machine)
* [Simplified Instructional Computer - Wikipedia](https://en.wikipedia.org/wiki/Simplified_Instructional_Computer)
* [Category:Educational abstract machines - Wikipedia](https://en.wikipedia.org/wiki/Category:Educational_abstract_machines)
* [WDR paper computer - Wikipedia](https://en.wikipedia.org/wiki/WDR_paper_computer)
* [CPU Sim - Wikipedia](https://en.wikipedia.org/wiki/CPU_Sim)
* [Assembly language - Wikipedia](https://en.wikipedia.org/wiki/Assembly_language)
* [Microarchitecture - Wikipedia](https://en.wikipedia.org/wiki/Microarchitecture)
* [microarchitecture](https://en.m.wikipedia.org/wiki/Microarchitecture?wprov=sfti1)
* [Executable and Linkable Format - Wikipedia](https://en.wikipedia.org/wiki/Executable_and_Linkable_Format)
* [a.out - Wikipedia](https://en.wikipedia.org/wiki/A.out)
* [Mach-O - Wikipedia](https://en.wikipedia.org/wiki/Mach-O)
* [LLVM - Wikipedia](https://en.wikipedia.org/wiki/LLVM)

FIXME# Linux Resources

FIXME## Good Miscellaneous Sites

* [Make a Linux App](https://makealinux.app/#/)

FIXME## Documentation

* [Linux Kernel Documentation](https://www.kernel.org/doc/html/v6.8/)

FIXME## Community

* [/r/commandline](https://www.reddit.com/r/commandline) - This is for anything regarding the command line, in any operating system.
* [/r/osxterminal](https://www.reddit.com/r/osxterminal) - Tips for using terminal.app in macOS.
* [/r/zsh/](https://www.reddit.com/r/zsh/) - Everything on zsh.
* [/r/unixporn/](https://www.reddit.com/r/unixporn/) - Everything on unix.
* [#bash](https://webchat.freenode.net/?channels=bash) - Bash IRC channel on freenode.
* [Stack Overflow](https://stackoverflow.com/questions/tagged/terminal) - Terminal tagged questions.

FIXME## Subreddits

* [AlmaLinux](https://www.reddit.com/r/AlmaLinux/)
* [Arch Linux](https://www.reddit.com/r/archlinux/)
* [Asahi Linux](https://www.reddit.com/r/AsahiLinux/)
* [AwesomeWM](https://www.reddit.com/r/awesomewm/)
* [CentOS](https://www.reddit.com/r/CentOS/)
* [Cinnamon DE](https://www.reddit.com/r/CinnamonDE/)
* [Command Line](https://www.reddit.com/r/commandline/)
* [Debian](https://www.reddit.com/r/debian/)
* [Deepin](https://www.reddit.com/r/deepin/)
* [elementary OS](https://www.reddit.com/r/elementaryos/)
* [EndeavourOS](https://www.reddit.com/r/EndeavourOS/)
* [Fedora](https://www.reddit.com/r/Fedora/)
* [FreeBSD](https://www.reddit.com/r/freebsd/)
* [Garuda Linux](https://www.reddit.com/r/GarudaLinux/)
* [Gentoo Linux](https://www.reddit.com/r/Gentoo/)
* [GNOME](https://www.reddit.com/r/gnome/)
* [Haiku](https://www.reddit.com/r/haikuOS/)
* [i3 Window Manager](https://www.reddit.com/r/i3wm/)
* [Kali Linux](https://www.reddit.com/r/Kalilinux/)
* [KDE](https://www.reddit.com/r/kde/)
* [Kubuntu](https://www.reddit.com/r/Kubuntu/)
* [Linux4Noobs](https://www.reddit.com/r/linux4noobs/)
* [Linux](https://www.reddit.com/r/linux/)
* [Linux From Scratch](https://www.reddit.com/r/linuxfromscratch/)
* [Linux Gaming](https://www.reddit.com/r/linux_gaming/)
* [Linux Hardware](https://www.reddit.com/r/linuxhardware/)
* [Linux Kernel](https://www.reddit.com/r/kernel/)
* [Linux Mint](https://www.reddit.com/r/linuxmint/)
* [Linux Questions](https://www.reddit.com/r/linuxquestions/)
* [Manjaro](https://www.reddit.com/r/ManjaroLinux/)
* [Nix](https://www.reddit.com/r/Nix/)
* [NixOS](https://www.reddit.com/r/NixOS/)
* [Open Source](https://www.reddit.com/r/opensource/)
* [openSUSE](https://www.reddit.com/r/openSUSE/)
* [Pop!_OS](https://www.reddit.com/r/pop_os/)
* [Qubes OS](https://www.reddit.com/r/Qubes/)
* [Red Hat](https://www.reddit.com/r/redhat/)
* [Rocky Linux](https://www.reddit.com/r/RockyLinux/)
* [Slackware](https://www.reddit.com/r/slackware/)
* [Solus Project](https://www.reddit.com/r/SolusProject/)
* [Sway Window Manager](https://www.reddit.com/r/swaywm/)
* [Tails](https://www.reddit.com/r/tails/)
* [Ubuntu](https://www.reddit.com/r/Ubuntu/)
* [Unix Porn](https://www.reddit.com/r/unixporn/)
* [Void Linux](https://www.reddit.com/r/voidlinux/)
* [Whonix](https://www.reddit.com/r/Whonix/)
* [Xfce](https://www.reddit.com/r/xfce/)
* [Xubuntu](https://www.reddit.com/r/xubuntu/)
* [Zorin OS](https://www.reddit.com/r/zorinos/)

FIXME## Blogs

* [BrainBlasted's Privacy and Free Software Blog](https://brainblasted.gitlab.io/) - Practical look at issues involving free software and privacy.

FIXME## Businesses

* [Bytemark](https://www.bytemark.co.uk/company/manifesto/) - Transparent UK hosting company that offers a 50% discount for anyone publishing free software.

FIXME## Discovery

* [Free Software Directory](https://directory.fsf.org/wiki/Main_Page) - Over 15,000 free software packages.
* [Free GNU/Linux Distributions](https://www.gnu.org/distros/free-distros.html) - Entirely free distributions.
* [freepost](https://freepo.st/) - Everything related to free culture.

FIXME## Events

* [LibrePlanet](https://libreplanet.org/) - Annual conference on free software.
* [Software Freedom Day](https://en.wikipedia.org/wiki/Software_Freedom_Day) - Annual worldwide celebration of free software with the aim of increasing awareness of free software and its virtues.

FIXME## Licensing

* [FOSSology](https://www.fossology.org/) - License compliance toolkit for software projects.
* [gplenforced.org](https://gplenforced.org/) - Community-oriented GPL enforcement.

FIXME## Organizations

* [April](https://www.april.org/) - Promouvoir et défendre le logiciel libre.
* [Digital Freedom Foundation](https://en.wikipedia.org/wiki/Digital_Freedom_Foundation) - Promotes access to knowledge via technology.
* [Framasoft](https://framasoft.org/) - Network dedicated to globally promoting free software, innovative projects, and a world of sharing and cooperation.
* [Free Software Foundation](https://www.fsf.org/) - Nonprofit with a worldwide mission to promote computer user freedom.
* [Free Software Movement Karnataka](https://fsmk.org/) - Group in Bengaluru, India that spreads awareness about free software.
* [Free Software Movement of India](http://fsmi.in/) - Coalition of free software organizations in India.
* [FSF India](http://gnu.org.in/) - Indian sister site for the FSF.
* [FSFE](https://fsfe.org/) - European sister site for the FSF.
* [FSFLA](http://www.fsfla.org/ikiwiki/) - Latin American sister site for the FSF.
* [GNU](https://www.gnu.org/) - Home of the GNU/Linux operating system.
* [Open Source Hardware Association](https://www.oshwa.org/) - Promotes hardware that respects user freedom.
* [Outreachy](https://www.outreachy.org/) - Helps people from underrepresented backgrounds find internships with FOSS software companies.
* [Peers](https://peers.community/) - Community that helps support and grow free projects.
* [Software Freedom Conservancy](https://sfconservancy.org/) - Charity that helps promote, improve, develop, and defend free, libre, and open source software projects.
* [Software Freedom Law Center](https://www.softwarefreedom.org/) - Provider of no-cost legal services to free, libre, and open source software creators.
* [Snowdrift.coop](https://snowdrift.coop/) - Crowdmatching for public goods.
* [TuxFamily](https://www.tuxfamily.org/) - No cost hosting and other services for libre projects.

FIXME## Other Lists

* [Awesome Humane Tech](https://github.com/engagingspaces/awesome-humane-tech) - List of projects focusing on ethics, transparency, and privacy.
* [Awesome Self-Hosted](https://github.com/Kickball/awesome-selfhosted) - List of FLOSS network services and web applications which can be hosted locally.
* [Awesome Sysadmin](https://github.com/n1trux/awesome-sysadmin) - List of free software sysadmin tools.

FIXME## People

* [Maxime Lathuilière](https://maxlath.eu/) - Reorganizing information and resources through libre software to enable a free society.
* [Erik Dubios](https://www.youtube.com/@ErikDubois)

FIXME## Linux News, Apps, and more

* [9To5Linux](https://9to5linux.com/)
* [AllTop](https://linux.alltop.com/)
* [ArchiveOS](https://archiveos.org/linux/)
* [Are We Anti-Cheat Yet?](https://areweanticheatyet.com/)
* [Dedoimedo](https://www.dedoimedo.com/)
* [DistroTube](https://distrotube.com/)
* [DistroWatch](https://distrowatch.com/)
* [FAMILUG](https://www.familug.org/)
* [GamingOnLinux](https://www.gamingonlinux.com/)
* [How-To Geek](https://www.howtogeek.com/t/linux/)
* [ITSFOSS](https://itsfoss.com/)
* [Lemmy c/Linux](https://lemmy.ml/c/linux)
* [Liliputing](https://liliputing.com/)
* [Linoxide](https://linoxide.com/)
* [Linux Gaming Central](https://linuxgamingcentral.com/)
* [LinuxHandbook](https://linuxhandbook.com/)
* [LinuxLinks](https://www.linuxlinks.com/)
* [Linux official](https://www.linux.com/)
* [LinuxSmartphones](https://linuxsmartphones.com/)
* [LinuxStans](https://linuxstans.com/)
* [Linux Timeline](https://github.com/FabioLolix/LinuxTimeline/releases)
* [LWN](https://lwn.net/)
* [Make use of](https://www.makeuseof.com/service/linux/)
* [Nixcraft forum](https://www.nixcraft.com/)
* [Nixcraft](https://www.cyberciti.biz/)
* [Noobslab](https://www.noobslab.com/)
* [OMG!Linux](https://www.omglinux.com/)
* [OMG!Ubuntu](https://www.omgubuntu.co.uk/)
* [Open Source](https://opensource.com/)
* [Phoronix](https://www.phoronix.com/)
* [ProtonDB](https://www.protondb.com/)
* [Repology](https://repology.org/)
* [Slashdot](https://linux.slashdot.org/)
* [TecMint](https://www.tecmint.com/)
* [Ubuntu Geek](https://www.ubuntugeek.com/)
* [UbuntuHandbook](https://ubuntuhandbook.org/)
* [Unixmen](https://www.unixmen.com/)
* [Webupd8](http://www.webupd8.org/)
* [WineDB](https://appdb.winehq.org/)

FIXME## Hardware Resources

* [disaster.radio](https://disaster.radio/) - Off-grid, solar-powered, long-range mesh network built on free software and affordable, open hardware.
* [h-node](https://h-node.org/) - Database of hardware that works with a fully free operating system.
* [Linux Preloaded](https://linuxpreloaded.com/) - Hand-picked list of vendors from many regions that sell computers preinstalled with free software.
* [Respects Your Freedom Hardware Certification](https://www.fsf.org/resources/hw/endorsement/criteria) - Requirements to qualify for the Free Software Foundation's RYF certification.* [Learning the UNIX Operating System](http://library.lol/main/16B2C707EE31783CF27916D163CD896B)
* [bash Cookbook](https://libgen.is/book/index.php?md5=D30E555779831E7DF78ECE12D142F170)
* [neo-sh/neosh](https://github.com/neo-sh/neosh)
* CUDA, etc.
* [docs.nvidia.com/cuda/doc/index.html](https://docs.nvidia.com/cuda/doc/index.html)
* [docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html](https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html)
* [docs.nvidia.com/cuda/cuda-toolkit-release-notes/contents.html](https://docs.nvidia.com/cuda/cuda-toolkit-release-notes/contents.html)
* [nvidia/cuda-samples](https://github.com/nvidia/cuda-samples)
* [developer.nvidia.com/cuda-python](https://developer.nvidia.com/cuda-python)
* [CUDA-X](https://developer.nvidia.com/gpu-accelerated-libraries#deep-learning)
* [Math Libraries](https://developer.nvidia.com/gpu-accelerated-libraries#linear-algebra)
* [cuBLAS](https://developer.nvidia.com/cublas) - [docs.nvidia.com/cuda/cublas/index.html](https://docs.nvidia.com/cuda/cublas/index.html)
* [cuFFT](https://developer.nvidia.com/cufft) - [docs](https://docs.nvidia.com/cuda/cufft/index.html)
* [CUDA Math Library](https://developer.nvidia.com/cuda-math-library)
* [cuRAND](https://developer.nvidia.com/curand) - [docs](https://docs.nvidia.com/cuda/curand/index.html)
* [cuSOLVER](https://developer.nvidia.com/cusolver) - [docs](https://docs.nvidia.com/cuda/cusolver/index.html)
* [cuSPARSE](https://developer.nvidia.com/cusparse) - [docs](https://docs.nvidia.com/cuda/cusparse/index.html)
* [cuTENSOR](https://developer.nvidia.com/cutensor) - [docs](https://docs.nvidia.com/cuda/cutensor/index.html)
* [AmgX](https://developer.nvidia.com/amgx)
* [Deep Learning](https://developer.nvidia.com/gpu-accelerated-libraries#deep-learning)
* [NVIDIA cuDNN](https://developer.nvidia.com/cudnn) - [docs](https://docs.nvidia.com/cudnn/index.html)
* [NVIDIA TensorRT™](https://developer.nvidia.com/tensorrt) - [docs](...) ([Triton](https://docs.nvidia.com/deeplearning/triton-inference-server/user-guide/docs/index.html))
* [NVIDIA Riva](...) - [docs](https://docs.nvidia.com/riva/index.html)
* [NVIDIA DeepStream SDK](https://developer.nvidia.com/deepstream-sdk) - [docs](https://docs.nvidia.com/metropolis/deepstream/dev-guide/index.html)
* [NVIDIA DALI](https://developer.nvidia.com/DALI) - [docs](https://docs.nvidia.com/deeplearning/dali/user-guide/docs/index.html)
* [Partner Libraries](https://developer.nvidia.com/gpu-accelerated-libraries#partner-libraries)
* [OpenCV](https://developer.nvidia.com/opencv)
* [FFmpeg](https://developer.nvidia.com/ffmpeg)
* [ArrayFire](https://developer.nvidia.com/arrayfire)
* [MAGMA](https://developer.nvidia.com/magma)
* [IMSL Fortran Numerical Library](https://developer.nvidia.com/imsl-fortran-numerical-library)
* [Gunrock](https://developer.nvidia.com/https://gunrock.github.io/docs/)
* [CHOLMOD](https://developer.nvidia.com/cholmod)
* [Triton Ocean SDK](https://developer.nvidia.com/triton-ocean-sdk)
* [CUVIlib](https://cuvilib.com/)
* [Parallel Algorithms](https://developer.nvidia.com/gpu-accelerated-libraries#parallel-alg)
* [Thrust](https://developer.nvidia.com/thrust) - [docs](https://docs.nvidia.com/cuda/thrust/index.html)
* [Image and Video Libraries](https://developer.nvidia.com/gpu-accelerated-libraries#signal)
* [nvJPEG](https://developer.nvidia.com/nvjpeg)
* [NVIDIA Performance Primitives](https://developer.nvidia.com/npp) - [docs](https://docs.nvidia.com/cuda/npp/index.html)
* [NVIDIA Video Codec SDK](https://developer.nvidia.com/nvidia-video-codec-sdk)
* [NVIDIA Optical Flow SDK](https://developer.nvidia.com/opticalflow-sdk)
* [Communication Libraries](https://developer.nvidia.com/gpu-accelerated-libraries#comm)
* [NVSHMEM](https://developer.nvidia.com/nvshmem) - [docs](https://docs.nvidia.com/nvshmem/index.html)
* [NCCL](https://developer.nvidia.com/nccl) - [docs](https://docs.nvidia.com/deeplearning/nccl/user-guide/docs/index.html)
* [CUDA Toolkit](https://docs.nvidia.com/cuda/cuda-toolkit-release-notes/index.html)
* [NVIDIA HPC SDK](https://developer.nvidia.com/hpc-sdk)
* [NVCC](https://docs.nvidia.com/cuda/cuda-compiler-driver-nvcc/index.html)

FIXME## LinuxTube

* [Diolinux](https://www.youtube.com/@Diolinux)
* [video](https://www.youtube.com/@Akitando)
* [video](https://www.youtube.com/@morrolinux)
* [video](https://www.youtube.com/@extraordy)
* [video](https://www.youtube.com/@alternativalinux)
* [video](https://www.youtube.com/@HolaMundoDev)
* [video](https://www.youtube.com/@LocosporLinux)
* [TUXEDO Computers](https://www.youtube.com/user/LinuxOnlineshop)

FIXME## Guides

* [Pure Bash Bible](https://github.com/dylanaraps/pure-bash-bible)
* [Bash Official Reference Manual](https://www.gnu.org/savannah-checkouts/gnu/bash/manual/bash.html)
* [Bash Hackers Wiki](https://wiki.bash-hackers.org/)
* [Greg Wooledge's (aka "greycat") wiki](https://mywiki.wooledge.org/). Specifically [Bash Guide](https://mywiki.wooledge.org/BashGuide), [Bash FAQ](https://mywiki.wooledge.org/BashFAQ) and [Bash Pitfalls](https://mywiki.wooledge.org/BashPitfalls)
* [Google's Shell Style Guide](https://google.github.io/styleguide/shell.xml)
* [The Linux Documentation Project: Bash Programming - Intro/How-to](https://tldp.org/HOWTO/Bash-Prog-Intro-HOWTO.html)
* [The Linux Documentation Project: Advanced Bash Scripting Guide](https://tldp.org/LDP/abs/html/)
* [WikiBooks: Bash Shell Scripting](https://en.wikibooks.org/wiki/Bash_Shell_Scripting)
* [Use the Unofficial Bash Strict Mode (Unless You Looove Debugging)
* [The Art of Command Line](https://github.com/jlevy/the-art-of-command-line)
* [Learn Enough Command Line to Be Dangerous](https://www.learnenough.com/command-line-tutorial/basics)
* [A guide to learn bash](https://github.com/Idnan/bash-guide)
* [Shell Field Guide](https://raimonster.com/scripting-field-guide/)
* [bash-guide](https://github.com/Idnan/bash-guide) - Guide to learn bash.
* [the-art-of-command-line](https://github.com/jlevy/the-art-of-command-line) - Master the command line, in one page.
* [cmdchallenge.com/](https://cmdchallenge.com/)  - Presents small shell challenge with user submitted solutions.
* Guide avancé d'écriture des scripts Bash
* [Advanced Bash-Scripting Guide](https://tldp.org/LDP/abs/html/)**

FIXME## Media Sites

* [tuxmachines.org/index/](http://www.tuxmachines.org/index/)
* [9to5linux.com/](https://9to5linux.com/)
* [gnulinux.ch/](https://gnulinux.ch/)

FIXME## Podcasts

* [focusonlinux.podigee.io/](https://focusonlinux.podigee.io/)
* Podcast: This Week in Linux+

FIXME## Companies and Organizations

* [Aleph Objects](https://www.alephobjects.com/) - Respects Your Freedom (RYF) certified 3D printer built with libre hardware and software.
* [Libiquity](http://www.libiquity.com/) - Designs and develops embedded software and firmware systems.
* [Purism](https://puri.sm/) - Privacy, security, and freedom focused computers and software.
* [Raptor Computing Systems](https://raptorcs.com/) - Desktops, motherboards, and other parts utilizing the IBM POWER9 processor and OpenBMC firmware.
* [Technoethical](https://tehnoetic.com/) - Laptops, adapters, and mobile devices compatible with free operating systems.
* [ThinkPenguin](https://www.thinkpenguin.com/) - Modern laptops, desktops, and printers that contain no proprietary software.
* [Vikings](https://vikings.net/) - Hosting company powered by Libreboot firmware, libre software, and green energy that also sells hardware.
* [framasoft.org/en/ →](https://framasoft.org/en/) [degooglisons-internet.org/en/](https://degooglisons-internet.org/en/)

FIXME## Distro

* {distro } [...](https://github.com/Vanilla-OS/custom-image)
* {distro} [...](https://github.com/Vanilla-OS/Vib)
* {distro} [...](https://gitlab.com/garuda-linux/)
* {distro} [...](https://guix.gnu.org/en/blog/2018/guix-on-android/)
* {distro} [...](https://ubuntu.com/blog/ubuntu-core-an-immutable-linux-desktop)
* {distro} [...](https://www.openbsdhandbook.com/openbsd_for_linux_users/)
* {distro} [ais](https://github.com/archsinner/ais) archsinner install script
* {distro} [Arch Linux Automated Install Script](https://low-orbit.net/arch-linux-automated-install-script)
* {distro} [axyl-os/axyl-iso/releases](https://github.com/axyl-os/axyl-iso/releases)
* {distro} [distinstall-python](https://github.com/Thanatisia/distinstall-python) hn
* {distro} [ExpidusOS](https://expidusos.com/en/)
* {distro} [Front Page | ReactOS Project](https://reactos.org/)
* {distro} [Internet OS](https://www.reddit.com/r/linux/s/2hLxTTSWC6) [...](https://www.reddit.com/r/linux/s/QB2fxnMkOy)
* {distro} [parametrized packages for guix](https://guix.gnu.org/blog/2023/parameterized-packages-for-gnu-guix/)
* {distro guix} [channel-x](https://github.com/daviwil/channel-x)

FIXME## Drivers

* Torch install

```bash
* Collecting torch
  Obtaining dependency information for torch from [files.pythonhosted.org/packages/e1/24/f7fe3fe82583e6891cc3fceeb390f192f6c7f1d87e5a99a949ed33c96167/torch-2.1.0-cp38-cp38-manylinux1_x86_64.whl.metadata](https://files.pythonhosted.org/packages/e1/24/f7fe3fe82583e6891cc3fceeb390f192f6c7f1d87e5a99a949ed33c96167/torch-2.1.0-cp38-cp38-manylinux1_x86_64.whl.metadata)
  Downloading torch-2.1.0-cp38-cp38-manylinux1_x86_64.whl.metadata (25 kB)
* Collecting torchvision
  Obtaining dependency information for torchvision from [files.pythonhosted.org/packages/c9/52/d3f1c4253ad17e4ab08a2230fb184a3a180e2348db6c144c64977335b654/torchvision-0.16.0-cp38-cp38-manylinux1_x86_64.whl.metadata](https://files.pythonhosted.org/packages/c9/52/d3f1c4253ad17e4ab08a2230fb184a3a180e2348db6c144c64977335b654/torchvision-0.16.0-cp38-cp38-manylinux1_x86_64.whl.metadata)
  Downloading torchvision-0.16.0-cp38-cp38-manylinux1_x86_64.whl.metadata (6.6 kB)
* Requirement already satisfied: filelock in /root/.pyenv/versions/3.8.16/lib/python3.8/site-packages (from torch) (3.12.2)
* Requirement already satisfied: typing-extensions in /root/.pyenv/versions/3.8.16/lib/python3.8/site-packages (from torch) (4.8.0)
* Collecting sympy (from torch)
  Downloading sympy-1.12-py3-none-any.whl (5.7 MB)
 ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 5.7/5.7 MB 12.0 MB/s eta 0:00:00
* Collecting networkx (from torch)
  Downloading networkx-3.1-py3-none-any.whl (2.1 MB)
 ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 2.1/2.1 MB 19.0 MB/s eta 0:00:00
* Collecting jinja2 (from torch)
  Downloading Jinja2-3.1.2-py3-none-any.whl (133 kB)
 ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 133.1/133.1 kB 12.7 MB/s eta 0:00:00
* Collecting fsspec (from torch)
  Obtaining dependency information for fsspec from [files.pythonhosted.org/packages/e8/f6/3eccfb530aac90ad1301c582da228e4763f19e719ac8200752a4841b0b2d/fsspec-2023.10.0-py3-none-any.whl.metadata](https://files.pythonhosted.org/packages/e8/f6/3eccfb530aac90ad1301c582da228e4763f19e719ac8200752a4841b0b2d/fsspec-2023.10.0-py3-none-any.whl.metadata)
  Downloading fsspec-2023.10.0-py3-none-any.whl.metadata (6.8 kB)
* Collecting nvidia-cuda-nvrtc-cu12==12.1.105 (from torch)
  Downloading nvidia_cuda_nvrtc_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (23.7 MB)
 ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 23.7/23.7 MB 24.2 MB/s eta 0:00:00
* Collecting nvidia-cuda-runtime-cu12==12.1.105 (from torch)
  Downloading nvidia_cuda_runtime_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (823 kB)
 ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 823.6/823.6 kB 22.8 MB/s eta 0:00:00
* Collecting nvidia-cuda-cupti-cu12==12.1.105 (from torch)
  Downloading nvidia_cuda_cupti_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (14.1 MB)
 ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 14.1/14.1 MB 29.5 MB/s eta 0:00:00
* Collecting nvidia-cudnn-cu12==8.9.2.26 (from torch)
  Obtaining dependency information for nvidia-cudnn-cu12==8.9.2.26 from [files.pythonhosted.org/packages/ff/74/a2e2be7fb83aaedec84f391f082cf765dfb635e7caa9b49065f73e4835d8/nvidia_cudnn_cu12-8.9.2.26-py3-none-manylinux1_x86_64.whl.metadata](https://files.pythonhosted.org/packages/ff/74/a2e2be7fb83aaedec84f391f082cf765dfb635e7caa9b49065f73e4835d8/nvidia_cudnn_cu12-8.9.2.26-py3-none-manylinux1_x86_64.whl.metadata)
  Downloading nvidia_cudnn_cu12-8.9.2.26-py3-none-manylinux1_x86_64.whl.metadata (1.6 kB)
* Collecting nvidia-cublas-cu12==12.1.3.1 (from torch)
  Downloading nvidia_cublas_cu12-12.1.3.1-py3-none-manylinux1_x86_64.whl (410.6 MB)
 ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 410.6/410.6 MB 5.4 MB/s eta 0:00:00
* Collecting nvidia-cufft-cu12==11.0.2.54 (from torch)
  Downloading nvidia_cufft_cu12-11.0.2.54-py3-none-manylinux1_x86_64.whl (121.6 MB)
 ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 121.6/121.6 MB 16.4 MB/s eta 0:00:00
* Collecting nvidia-curand-cu12==10.3.2.106 (from torch)
  Downloading nvidia_curand_cu12-10.3.2.106-py3-none-manylinux1_x86_64.whl (56.5 MB)
 ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 56.5/56.5 MB 23.2 MB/s eta 0:00:00
* Collecting nvidia-cusolver-cu12==11.4.5.107 (from torch)
  Downloading nvidia_cusolver_cu12-11.4.5.107-py3-none-manylinux1_x86_64.whl (124.2 MB)
 ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 124.2/124.2 MB 16.6 MB/s eta 0:00:00
* Collecting nvidia-cusparse-cu12==12.1.0.106 (from torch)
  Downloading nvidia_cusparse_cu12-12.1.0.106-py3-none-manylinux1_x86_64.whl (196.0 MB)
 ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 196.0/196.0 MB 11.6 MB/s eta 0:00:00
* Collecting nvidia-nccl-cu12==2.18.1 (from torch)
  Downloading nvidia_nccl_cu12-2.18.1-py3-none-manylinux1_x86_64.whl (209.8 MB)
 ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 209.8/209.8 MB 11.1 MB/s eta 0:00:00
* Collecting nvidia-nvtx-cu12==12.1.105 (from torch)
  Downloading nvidia_nvtx_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (99 kB)
 ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 99.1/99.1 kB 9.4 MB/s eta 0:00:00
* Collecting triton==2.1.0 (from torch)
  Obtaining dependency information for triton==2.1.0 from [files.pythonhosted.org/packages/72/98/34f43ed68ee6455ea874f749a5515c0600243186301ecd83819d942ce08a/triton-2.1.0-0-cp38-cp38-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata](https://files.pythonhosted.org/packages/72/98/34f43ed68ee6455ea874f749a5515c0600243186301ecd83819d942ce08a/triton-2.1.0-0-cp38-cp38-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata)
  Downloading triton-2.1.0-0-cp38-cp38-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (1.3 kB)
* Collecting nvidia-nvjitlink-cu12 (from nvidia-cusolver-cu12==11.4.5.107->torch)
  Obtaining dependency information for nvidia-nvjitlink-cu12 from [files.pythonhosted.org/packages/45/de/885b6d3e1fa07bf19124076b348d3cf30f68051f813cba99e103f53d2f75/nvidia_nvjitlink_cu12-12.3.52-py3-none-manylinux1_x86_64.whl.metadata](https://files.pythonhosted.org/packages/45/de/885b6d3e1fa07bf19124076b348d3cf30f68051f813cba99e103f53d2f75/nvidia_nvjitlink_cu12-12.3.52-py3-none-manylinux1_x86_64.whl.metadata)
  Downloading nvidia_nvjitlink_cu12-12.3.52-py3-none-manylinux1_x86_64.whl.metadata (1.5 kB)
* Collecting numpy (from torchvision)
  Obtaining dependency information for numpy from [files.pythonhosted.org/packages/98/5d/5738903efe0ecb73e51eb44feafba32bdba2081263d40c5043568ff60faf/numpy-1.24.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata](https://files.pythonhosted.org/packages/98/5d/5738903efe0ecb73e51eb44feafba32bdba2081263d40c5043568ff60faf/numpy-1.24.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata)
  Downloading numpy-1.24.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (5.6 kB)
* Requirement already satisfied: requests in /root/.pyenv/versions/3.8.16/lib/python3.8/site-packages (from torchvision) (2.31.0)
* Collecting pillow!=8.3.*,>=5.3.0 (from torchvision)
  Obtaining dependency information for pillow!=8.3.*,>=5.3.0 from [files.pythonhosted.org/packages/1e/74/638f982ab43fb3b19c8a151b1a0065cafefe436f8590c1c57d5fdf2475f1/Pillow-10.1.0-cp38-cp38-manylinux_2_28_x86_64.whl.metadata](https://files.pythonhosted.org/packages/1e/74/638f982ab43fb3b19c8a151b1a0065cafefe436f8590c1c57d5fdf2475f1/Pillow-10.1.0-cp38-cp38-manylinux_2_28_x86_64.whl.metadata)
  Downloading Pillow-10.1.0-cp38-cp38-manylinux_2_28_x86_64.whl.metadata (9.5 kB)
* Collecting MarkupSafe>=2.0 (from jinja2->torch)
  Obtaining dependency information for MarkupSafe>=2.0 from [files.pythonhosted.org/packages/de/e2/32c14301bb023986dff527a49325b6259cab4ebb4633f69de54af312fc45/MarkupSafe-2.1.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata](https://files.pythonhosted.org/packages/de/e2/32c14301bb023986dff527a49325b6259cab4ebb4633f69de54af312fc45/MarkupSafe-2.1.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata)
  Downloading MarkupSafe-2.1.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.0 kB)
* Requirement already satisfied: charset-normalizer<4,>=2 in /root/.pyenv/versions/3.8.16/lib/python3.8/site-packages (from requests->torchvision) (3.2.0)
* Requirement already satisfied: idna<4,>=2.5 in /root/.pyenv/versions/3.8.16/lib/python3.8/site-packages (from requests->torchvision) (3.4)
* Requirement already satisfied: urllib3<3,>=1.21.1 in /root/.pyenv/versions/3.8.16/lib/python3.8/site-packages (from requests->torchvision) (1.26.16)
* Requirement already satisfied: certifi>=2017.4.17 in /root/.pyenv/versions/3.8.16/lib/python3.8/site-packages (from requests->torchvision) (2023.7.22)
* Collecting mpmath>=0.19 (from sympy->torch)
  Downloading mpmath-1.3.0-py3-none-any.whl (536 kB)
 ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 536.2/536.2 kB 26.5 MB/s eta 0:00:00
* Downloading torch-2.1.0-cp38-cp38-manylinux1_x86_64.whl (670.2 MB)
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 670.2/670.2 MB 4.3 MB/s eta 0:00:00
* Downloading nvidia_cudnn_cu12-8.9.2.26-py3-none-manylinux1_x86_64.whl (731.7 MB)
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 731.7/731.7 MB 3.7 MB/s eta 0:00:00
* Downloading triton-2.1.0-0-cp38-cp38-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (89.2 MB)
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 89.2/89.2 MB 18.2 MB/s eta 0:00:00
* Downloading torchvision-0.16.0-cp38-cp38-manylinux1_x86_64.whl (6.9 MB)
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 6.9/6.9 MB 32.7 MB/s eta 0:00:00
* Downloading Pillow-10.1.0-cp38-cp38-manylinux_2_28_x86_64.whl (3.6 MB)
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 3.6/3.6 MB 31.9 MB/s eta 0:00:00
* Downloading fsspec-2023.10.0-py3-none-any.whl (166 kB)
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 166.4/166.4 kB 11.0 MB/s eta 0:00:00
* Downloading numpy-1.24.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.3 MB)
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 17.3/17.3 MB 34.0 MB/s eta 0:00:00
* Downloading MarkupSafe-2.1.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (25 kB)
* Downloading nvidia_nvjitlink_cu12-12.3.52-py3-none-manylinux1_x86_64.whl (20.5 MB)
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 20.5/20.5 MB 31.4 MB/s eta 0:00:00
* Installing collected packages: mpmath, triton, sympy, pillow, nvidia-nvtx-cu12, nvidia-nvjitlink-cu12, nvidia-nccl-cu12, nvidia-curand-cu12, nvidia-cufft-cu12, nvidia-cuda-runtime-cu12, nvidia-cuda-nvrtc-cu12, nvidia-cuda-cupti-cu12, nvidia-cublas-cu12, numpy, networkx, MarkupSafe, fsspec, nvidia-cusparse-cu12, nvidia-cudnn-cu12, jinja2, nvidia-cusolver-cu12, torch, torchvision
* Successfully installed MarkupSafe-2.1.3 fsspec-2023.10.0 jinja2-3.1.2 mpmath-1.3.0 networkx-3.1 numpy-1.24.4 nvidia-cublas-cu12-12.1.3.1 nvidia-cuda-cupti-cu12-12.1.105 nvidia-cuda-nvrtc-cu12-12.1.105 nvidia-cuda-runtime-cu12-12.1.105 nvidia-cudnn-cu12-8.9.2.26 nvidia-cufft-cu12-11.0.2.54 nvidia-curand-cu12-10.3.2.106 nvidia-cusolver-cu12-11.4.5.107 nvidia-cusparse-cu12-12.1.0.106 nvidia-nccl-cu12-2.18.1 nvidia-nvjitlink-cu12-12.3.52 nvidia-nvtx-cu12-12.1.105 pillow-10.1.0 sympy-1.12 torch-2.1.0 torchvision-0.16.0 triton-2.1.0
* WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: [pip.pypa.io/warnings/venv](https://pip.pypa.io/warnings/venv)

```

FIXME## SORT

* [Welcome to linuxzoo](https://linuxzoo.net/)

$$$ POSIX standard [pubs.opengroup.org/onlinepubs/9699919799/](https://pubs.opengroup.org/onlinepubs/9699919799/)
* ( ) [blfs](https://www.linuxfromscratch.org/blfs/read.html)

FIXME# Gen Prog Reading List Sorted

FIXME## Misc

    > see "Challenge & Projects" section of "Learning" tab
* [leachim6/hello-world](https://github.com/leachim6/hello-world)
* [rosetta.alhur.es/](https://rosetta.alhur.es/)
* [Віртуальна Академія](https://youtube.com/c/VirtuAka)
* [Computer Science - The Learning Point (C, Py, Ruby, esp C)](https://www.thelearningpoint.net/computer-science)
* [Parsing with Perl 6 Regexes and Grammars. A Recursive Descent into Parsing](http://library.lol/main/C6761CAA2ACF8FD63AB2CC42E5B26011)
* [regexlearn.com](https://regexlearn.com/)
* [Clean Code - Uncle Bob - all lessons](https://www.youtube.com/watch?v=7EmboKQH8lM&list=PLmmYSbUCWJ4x1GO839azG_BBw8rkh-zOj)
* [pslmodels.github.io/Git-Tutorial/content/intro.html](https://pslmodels.github.io/Git-Tutorial/content/intro.html)
* [dev.to/lydiahallie/cs-visualized-useful-git-commands-37p1](https://dev.to/lydiahallie/cs-visualized-useful-git-commands-37p1)
* [MLOps vs. DevOps: the similarities and differences](https://www.datasciencecentral.com/profiles/blogs/mlops-vs-devops-the-similarities-and-differences)
* [Как разобраться в Computer Science самостоятельно](https://vk.com/@weekkey-kak-razobratsya-v-computer-science-samostoyatelno)
* Geogrebra, SymPy, P5.js, Processing lang
* → [awesome-github](https://github.com/fffaraz/awesome-github) - Faraz Fallahi maintains a curated list of GitHub & Git resources.
* [Is your PC hacked? RAM Forensics with Volatility](https://www.youtube.com/watch?v=VK3fvNFGAzE)
* [wsgac](https://github.com/wsgac)
* [pdelfino.com.br/](http://www.pdelfino.com.br/)
* [dioptricdesign.com/](https://www.dioptricdesign.com/)

FIXME## Dev and LLM

* [How to learn to code FAST using ChatGPT (it's a game](https://www.youtube.com/watch?v=VznoKyh6AXs)
* [ChatGPT Tutorial for Developers - 38 Ways to 10x Your Productivity Programming with Mosh Programming with Mosh Verificada • • 838.254 visualizaciones hace 11 días](https://www.youtube.com/watch?v=sTeoEFzVNSc)

FIXME## Practice

* [ByteByteGoHq/system-design-101](https://github.com/ByteByteGoHq/system-design-101) 
* [7 Habits I've Picked Up From Senior Software Developers](https://youtu.be/zivngNtLiuY)

FIXME## Privacy and Cryptography

* [kssytsrk/nx-freestance-handler: nx-freestance-handler, a redirector from the mainstream sites (Youtube, Twittter, Instagram, Reddit) to their privacy-supporting mirrors](https://github.com/kssytsrk/nx-freestance-handler)
* [20 most secure email providers to use in 2023 - PrivacySavvy](https://privacysavvy.com/email/best/secure-email-providers/)
* [10 Best Private and Secure Email Services for 2023](https://restoreprivacy.com/email/secure/)
    11 Best Free (& Private) Email Accounts & Service Providers of 2023 Best Secure Email Services For Privacy Concerned People
* [Email Services - Privacy Guides](https://www.privacyguides.org/en/email/)
* [These 4 Gmail alternatives put your privacy first](https://www.fastcompany.com/90392612/these-4-gmail-alternatives-put-your-privacy-first)
* [6 things to know about OpenAI's Mira Murati, the most interesting pers](https://www.fastcompany.com/90855799/6-things-to-know-about-openais-mira-murati-the-most-interesting-person-in-tech-right-now)
* [Rocket.Chat: Communications Platform You Can Fully Trust](https://www.rocket.chat/)
* [What is PeerTube? | JoinPeerTube](https://joinpeertube.org/?ref=blog.cloudron.io)
* [Ditch VSCode Spyware For VSCodium](https://youtu.be/iq6hbY_fzYg)
* [joinpeertube.org/](https://joinpeertube.org/)
    Gnoppix
* {    AdBlocker Ultimate   } [RSA (cryptosystem) - Wikipedia](https://en.wikipedia.org/wiki/RSA_(cryptosystem))
* [Rabin fingerprint - Wikipedia](https://en.wikipedia.org/wiki/Rabin_fingerprint)

FIXME## Langs / Compiler / Interpreter / Parser

* [hackaday.com/2022/11/27/create-a-compiler-step-by-step/](https://hackaday.com/2022/11/27/create-a-compiler-step-by-step/)
* [tlbh.it/005_parsers.html](https://tlbh.it/005_parsers.html)
* [transpiler/awesome-transpiler](https://github.com/transpiler/awesome-transpiler)
* [konchunas/pyrs](https://github.com/konchunas/pyrs)
* [ralfbiedert/interoptopus: The polyglot bindings generator for your library (C#, C, Python, …) 🐙](https://github.com/ralfbiedert/interoptopus)

FIXME## Git

* [Git tutorial — Tuto git](https://gdevops.gitlab.io/tuto_git/index.html)
* [dzone.com/refcardz/git-patterns-and-anti-patterns](https://dzone.com/refcardz/git-patterns-and-anti-patterns)
* [interrupt.memfault.com/blog/pre-commit](https://interrupt.memfault.com/blog/pre-commit)
* [stackoverflow.com/questions/61032281/exclude-some-files-on-running-black-using-pre-commit](https://stackoverflow.com/questions/61032281/exclude-some-files-on-running-black-using-pre-commit)
* [How do I push a new local branch to a remote Git repository and track it too? - Stack Overflow](https://stackoverflow.com/questions/2765421/how-do-i-push-a-new-local-branch-to-a-remote-git-repository-and-track-it-too)
* [git add remote branch - Stack Overflow](https://stackoverflow.com/questions/11266478/git-add-remote-branch)
* [Git - Git Hooks](https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks)
* [pre commit.com - Exclude some files on running black using pre-commit - Stack Overflow](https://stackoverflow.com/questions/61032281/exclude-some-files-on-running-black-using-pre-commit)
* [Git - An Example Git-Enforced Policy](https://git-scm.com/book/en/v2/Customizing-Git-An-Example-Git-Enforced-Policy#_an_example_git_enforced_policy)
* [Git Tutorial For Dummies - YouTube](https://www.youtube.com/watch?v=mJ-qvsxPHpY)
* [git - How to override a rule set in .gitignore - Stack Overflow](https://stackoverflow.com/questions/24844782/how-to-override-a-rule-set-in-gitignore)
* [atlassian.com/git/tutorials/git-subtree](https://www.atlassian.com/git/tutorials/git-subtree)

FIXME## Aesthetics

* [academia.edu/24948341/THE_ROLE_OF_AESTHETICS_IN_SOFTWARE_DESIGN_DEVELOPMENT_AND_EDUCATION](https://www.academia.edu/24948341/THE_ROLE_OF_AESTHETICS_IN_SOFTWARE_DESIGN_DEVELOPMENT_AND_EDUCATION)
* [monoskop.org/images/f/f1/Cox_McLean_Ward_2004_Coding_Praxis_Reconsidering_the_Aesthetics_of_Code.pdf](https://monoskop.org/images/f/f1/Cox_McLean_Ward_2004_Coding_Praxis_Reconsidering_the_Aesthetics_of_Code.pdf)
* [softdevtube.com/2015/11/24/aesthetics-and-the-evolution-of-code/](https://www.softdevtube.com/2015/11/24/aesthetics-and-the-evolution-of-code/)
* [Experience of programming beauty: some patterns of programming aesthetics](https://www.sciencedirect.com/science/article/abs/pii/S0020737388800592)
* [Aesthetics and the Evolution of Code - Coraline Ada Ehmke](https://www.youtube.com/watch?v=qmBL4THJtuM)
* [theorangeduck.com/page/aesthetics-code](https://theorangeduck.com/page/aesthetics-code)

FIXME## Practice

* [Agile Prozesse: Von XP über Scrum bis MAP](http://library.lol/main/0B20DE63B5B435BE2FE48A00E1A2AE38)
* [Maîtrise d'ouvrage des projets informatiques - 4e éd. : La responsabilité métier tournée vers l'agile](http://library.lol/main/316C50DF83379B5DC7CAEFB1BDF325DD)
* [Scrum - 4e éd.- Le guide pratique de la méthode agile la plus populaire](http://library.lol/main/C432EA82B8B6E866C14671D471D44D44)
* [Agile для всех](http://library.lol/main/3B6859ABB1FDFB2E175391E5EE2B6023)
* [Быстрая разработка программ. Принципы, примеры, практика](http://library.lol/main/B9776DF705D9AC560B7A719E7AB52B06)
* [Agile Checklist - Краткое описание практик гибкой разработки](http://library.lol/main/37009E422DC24B0680707A698863E9F8)
* [Блистательный Agile. Гибкое управление проектами с помощью Agile, Scrum и Kanban](http://library.lol/main/D7A6BF8552408D1BA3050B3F5F61C9C0)
* [Agile. Процессы, проекты, компании](http://library.lol/main/FB56EDC3E9B6D2577B555A715C9F734E)
* [Agile: оценка и планирование проектов](http://library.lol/main/9C77D1973081CD2D443736F964CECCEF)
* [Постигая Agile: ценности, принципы, методологии](http://library.lol/main/917A0BDC7B2D9C989D419ABEA2F7C2B0)
* [Código Limpo: Habilidades Práticas do Agile Software](http://library.lol/main/887A3FBF9FDB69AB5F1604F7B2A680E8)
* [Scrum. Praktyczny przewodnik po najpopularniejszej metodyce Agile](http://library.lol/main/FDC5357B7D39AEAD1CD064F410CC210E)
* {    Jira Book   } [Architecting for Scale: How to Maintain High Availability and Manage Risk in the Cloud](http://library.lol/main/903C9F6FC42748423D2109B8452EDF50)

FIXME## Graphics

    Fundamentals of Computer Graphics
    Computer Graphics : From Pixels to Programmable Graphics Hardware
    Vector Analysis for Computer Graphics
    Image Objects: An Archaeology of Computer Graphics
    Introduction to Flat Panel Displays
* [video](https://www.youtube.com/results?search_query=monitor+calibration)
    Optimizing the Display and Interpretation of Data
* handbook of Visual Display Technology

FIXME## Media

* [thenextweb.com/](https://thenextweb.com/)
* [bbvaopenmind.com/](https://www.bbvaopenmind.com/)
* [increment.com/](https://increment.com/)
* [increment.com/topics/](https://increment.com/topics/)
* [softwareengineeringdaily.com/](https://softwareengineeringdaily.com/)
* [wearedevelopers.com/magazine](https://www.wearedevelopers.com/magazine)
* [indiehackers.com/podcasts](https://www.indiehackers.com/podcasts)
* [wired.it/](https://www.wired.it/)
* [xataka.com/tag/programacion](https://www.xataka.com/tag/programacion)
* [Zip](https://podcast.ru/1608873219)
* [studio.ribbonfarm.com/](https://studio.ribbonfarm.com/)

FIXME## Boot

    Изучаем BIOS
* [Hands-on Booting: Learn the Boot Process of Linux, Windows, and Unix](http://library.lol/main/92909EA7B3B12F3D742F5D1D7EA8FA6E)
* [Секреты BIOS](http://library.lol/main/B51F2CA8EA16EAFE1CEB8A88CC29B1E2)
* [Quick Boot: A Guide for Embedded Firmware Developers](http://library.lol/main/3B79E790F58D7E791281477FC7DDF515)
* [Beyond BIOS: Developing with the Unified Extensible Firmware Interface](http://library.lol/main/CBE35CD2D861F5520D426CFB1E444DF4)
* [Оптимизация BIOS. Полный справочник по всем параметрам BIOS и их настройкам](http://library.lol/main/781E147CFAAE02B047A815F8EB5F7A43)
* [Harnessing the Uefi Shell: Moving the Platform Beyond Dos](http://library.lol/main/9F60269484B41B81E4CCCE4FD78C05E7)

FIXME## Math Expression Parsing

* [→](https://github.com/beltoforion/muparserx)
* [→](https://www.geeksforgeeks.org/parsing-string-of-symbols-to-expression/)
* [→](https://github.com/beltoforion/muparser)
* [→](http://www2.lawrence.edu/fast/GREGGJ/CMSC270/parser/parser.html)
* [→](https://stackoverflow.com/questions/2276021/evaluating-a-string-as-a-mathematical-expression-in-javascript)
* [→](https://stackoverflow.com/questions/2371436/evaluating-a-mathematical-expression-in-a-string)
* [→](https://stackoverflow.com/questions/3422673/how-to-evaluate-a-math-expression-given-in-string-form)
* [→](https://stackoverflow.com/questions/40966319/parsing-program-input-string-for-math-expression)
* [→](https://stackoverflow.com/questions/2969561/how-to-parse-mathematical-expressions-involving-parentheses)
* [→](https://stackoverflow.com/questions/54544125/parsing-mathematical-expression-string/54552283)
* [→](https://stackoverflow.com/questions/28256/equation-expression-parser-with-precedence)
* [→](https://stackoverflow.com/questions/3972854/parse-math-expression)
* [→](https://stackoverflow.com/questions/1432245/how-to-parse-a-mathematical-expression-given-as-a-string-and-return-a-number)
* [→](https://pretagteam.com/question/how-to-parse-a-mathematical-expression-given-as-a-string-and-return-a-number-duplicate)

FIXME## Encodings

* [\xc5\xa0 - Поиск в Google](https://www.google.com/search?q=%5Cxc5%5Cxa0&rlz=1C1GCEA_enUS814US814&oq=%5Cxc5%5Cxa0&aqs=chrome..69i57j69i58j0.2623j0j7&sourceid=chrome&ie=UTF-8)
* [Character Encoding Recommendation for Languages | Scratchpad | FANDOM powered by Wikia](http://scratchpad.wikia.com/wiki/Character_Encoding_Recommendation_for_Languages)
* [Handling Non-English Text in Python](https://graduate.artsci.wustl.edu/files/graduatepages/imce/constanza/cfs_methodsworkshop_python.pdf)
* [graduate.artsci.wustl.edu/files/graduatepages/imce/constanza/cfs_methodsworkshop_python.pdf](https://graduate.artsci.wustl.edu/files/graduatepages/imce/constanza/cfs_methodsworkshop_python.pdf)
* [pythonadventures.wordpress.com/2012/12/02/writing-non-ascii-text-to-file/](https://pythonadventures.wordpress.com/2012/12/02/writing-non-ascii-text-to-file/)
* [ru.wikipedia.org/wiki/%D0%9D%D0%B0%D0%B1%D0%BE%D1%80_%D1%81%D0%B8%D0%BC%D0%B2%D0%BE%D0%BB%D0%BE%D0%B2](https://ru.wikipedia.org/wiki/%D0%9D%D0%B0%D0%B1%D0%BE%D1%80_%D1%81%D0%B8%D0%BC%D0%B2%D0%BE%D0%BB%D0%BE%D0%B2)
* [stackoverflow.com/questions/10376923/reading-non-ascii-characters-from-a-text-file](https://stackoverflow.com/questions/10376923/reading-non-ascii-characters-from-a-text-file)
* [stackoverflow.com/questions/11086752/read-a-text-file-with-non-ascii-characters-in-an-unknown-encoding](https://stackoverflow.com/questions/11086752/read-a-text-file-with-non-ascii-characters-in-an-unknown-encoding)
* [stackoverflow.com/questions/18847378/print-non-ascii-text-in-python](https://stackoverflow.com/questions/18847378/print-non-ascii-text-in-python)
* [stackoverflow.com/questions/33255846/python-write-a-list-with-non-ascii-characters-to-a-text-file](https://stackoverflow.com/questions/33255846/python-write-a-list-with-non-ascii-characters-to-a-text-file)
* [python.org/dev/peps/pep-3131/](https://www.python.org/dev/peps/pep-3131/)
* [r/Python/comments/1g62eh/explain_it_like_im_five_python_and_unicode/](https://www.reddit.com/r/Python/comments/1g62eh/explain_it_like_im_five_python_and_unicode/)
* [PEP 3131 -- Supporting Non-ASCII Identifiers | Python.org](https://www.python.org/dev/peps/pep-3131/)
* [Read an Arabic File in Python - Stack Overflow](https://stackoverflow.com/questions/33356886/read-an-arabic-file-in-python)
* [Reading Files Using Python - Python | Dream.In.Code](https://www.dreamincode.net/forums/topic/211768-reading-files-using-python/)
* [unicode - Print non-ascii text in Python - Stack Overflow](https://stackoverflow.com/questions/18847378/print-non-ascii-text-in-python)
* [Unicode HOWTO — Python 3.7.1rc2 documentation](https://docs.python.org/3/howto/unicode.html)
* [Unicode/UTF-8-character table - starting from code position 0080](https://www.utf8-chartable.de/unicode-utf8-table.pl?start=128&number=128&utf8=string-literal&unicodeinhtml=hex)
* [Unicode/UTF-8-character table - starting from code position 0100](https://www.utf8-chartable.de/unicode-utf8-table.pl?start=256&names=-&utf8=string-literal)
* [What is ' and why google search replaces it with apostrophe? - Stack Overflow](https://stackoverflow.com/questions/29314231/what-is-39-and-why-google-search-replaces-it-with-apostrophe)
* [Writing non-ASCII text to file | Python Adventures](https://pythonadventures.wordpress.com/2012/12/02/writing-non-ascii-text-to-file/)
* [Explain it like I'm five: Python and Unicode? : Python](https://www.reddit.com/r/Python/comments/1g62eh/explain_it_like_im_five_python_and_unicode/)

FIXME## Quantum

* [Grundlegende Algorithmen: Einführung in den Entwurf und die Analyse effizienter Algorithmen](https://b-ok.cc/book/2099038/13eab0)
* [A Beginner’s Guide To Quantum Computing - YouTube](https://www.youtube.com/watch?v=JRIPV0dPAd4)
* [Elements of Quantum Computing: History, Theories and Engineering Applications | Seiki Akama (auth.) | download](http://b-ok.cc/book/2465803/070eed)
* [Quantum Computing Expert Explains One Concept in 5 Levels of Difficulty | WIRED - YouTube](https://www.youtube.com/watch?v=OWJCfOvochA)
* [kingofgeek.com/2013/11/lordinateur-quantique-pour-les-nuls/](http://www.kingofgeek.com/2013/11/lordinateur-quantique-pour-les-nuls/)
* [Квантовая информатика [12 лекций]](https://vk.com/wall-51126445_43404)
* [Квантовый компьютер – Юлия Зотова](https://vk.com/video-9471321_456240334?list=483256309f3e04e9c1)
* [Лекция 1. Введение, q-бит](https://vk.com/video-51126445_456241142?list=a405df4490ef9d00c4)
* [medium.freecodecamp.org/almost-everything-you-ever-wanted-to-know-about-quantum-computers-5ee6bc2f40ba](https://medium.freecodecamp.org/almost-everything-you-ever-wanted-to-know-about-quantum-computers-5ee6bc2f40ba)
* [L'ordinateur quantique](https://www.youtube.com/watch?v=3GCAF0x8cV0)
* [Quantum Computing for Computer Scientists (Microsoft)](https://www.youtube.com/watch?v=F_Riqjdh2oM)
* [Quantum Computing for Computer Scientists (Microsoft)](https://www.youtube.com/watch?v=F_Riqjdh2oM&t=15s)
* Practical Quantum Computing for Developers: Programming Quantum Rigs in the Cloud using
* Programming on quantum computers – Build Smart. Build Secure. IBM Developer
* Python, Quantum Assembly Language and IBM QExperience | Vladimir Silva | download
* [Natural Computing: DNA, Quantum Bits, and the Future of Smart Machines](https://b-ok.cc/book/2064066/07dded)
* [coursera.org/learn/quantum-computing-lfmu](https://www.coursera.org/learn/quantum-computing-lfmu)
* [A Beginner’s Guide To Quantum Computing](https://www.youtube.com/watch?v=JRIPV0dPAd4&list=PLVWtXi_Jrj_2tT8mrtkFYm64Exm0OLts7&index=34)
* [A Beginner’s Guide To Quantum Computing](https://www.youtube.com/watch?v=JRIPV0dPAd4&list=PLVWtXi_Jrj_2tT8mrtkFYm64Exm0OLts7&index=34)
* [Building the Bits and Qubits](https://www.youtube.com/watch?v=F8U1d2Hqark&list=PLVWtXi_Jrj_14rUJDWFEvyhOmYF2JdHmk&index=45)
* [Compact Representations for the Design of Quantum Logic.pdf](https://vk.com/doc348852382_464088013?hash=ffb77ba18d9ef83ea5&dl=8c46ab07386bddb601)
* [Graduate Student Solves Quantum Verification Problem](https://www.quantamagazine.org/graduate-student-solves-quantum-verification-problem-20181008/)
* [L’ordinateur quantique est-il le prochain paradigme de l’informatique ? | The Flares](https://www.youtube.com/watch?v=3GCAF0x8cV0&list=PLVWtXi_Jrj_14rUJDWFEvyhOmYF2JdHmk&index=2)
* [New State of Matter to Boost Quantum Computers](https://www.reddit.com/r/compsci/comments/dvcyov/new_state_of_matter_to_boost_quantum_computers/)
* [Principles of Quantum Artificial Intelligence.pdf](https://vk.com/doc348852382_471615320?hash=7edb6e7b807e267ed2&dl=8a9d53bf7640dac90b)
* [The Mathematics of Quantum Computers | Infinite Series](https://www.youtube.com/watch?v=IrbJYsep45E&list=WL&index=371)
* Will Quantum Computers break encryption?
* [Квантовая информатика](https://vk.com/wall-51126445_41509)
* [Quantum Computing for Computer Architects (Synthesis Lectures on Computer Architecture)
* [Quanteninformation (Bruß)
* [Morgan Claypool Quantum Computer Science](http://library.lol/main/73A9FCFC6E91EA1D0A97CE2C7041343F)

FIXME## History

* Who Invented the Computer?
* [Computer History Online](http://www.weller.to/)
* [Computergeschichte - YouTube - YouTube](https://www.youtube.com/playlist?list=PLC3B4155A75F91B07)
* [Computergeschichte: Die ersten Computer](http://www.weller.to/his/h05-erste-computer.htm)
* [Eine Maschine verändert die Welt | Teil 1 - Wie die Computer rechnen lernten - YouTube](https://www.youtube.com/watch?v=gZxyb2Efrcg)
* [HistoireInformatique.ppt](https://ibisc.univ-evry.fr/~hutzler/Cours/I11_InfoGene/Cours/CM1_HistoireInformatique.pdf)
* [spektrum.de/magazin/wege-und-irrwege-des-konrad-zuse/823599](http://www.spektrum.de/magazin/wege-und-irrwege-des-konrad-zuse/823599)
* [stefan-lenz.ch/bit-glossar/56.php](http://www.stefan-lenz.ch/bit-glossar/56.php)
* [website-go.com/artikel/geschichte.php](http://www.website-go.com/artikel/geschichte.php)
* [weller.to/](http://www.weller.to/)
* [weller.to/his/h05-erste-computer.htm](http://www.weller.to/his/h05-erste-computer.htm)
* [en.wikipedia.org/wiki/ENIAC](https://en.wikipedia.org/wiki/ENIAC)
* [knowledge.allbest.ru/programming/3c0b65625b3bc68b5c53b89421306c27_0.html](https://knowledge.allbest.ru/programming/3c0b65625b3bc68b5c53b89421306c27_0.html)
* [ru.wikipedia.org/wiki/%D0%98%D1%81%D1%82%D0%BE%D1%80%D0%B8%D1%8F_%D0%B2%D1%8B%D1%87%D0%B8%D1%81%D0%BB%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%BE%D0%B9_%D1%82%D0%B5%D1%85%D0%BD%D0%B8%D0%BA%D0%B8](https://ru.wikipedia.org/wiki/%D0%98%D1%81%D1%82%D0%BE%D1%80%D0%B8%D1%8F_%D0%B2%D1%8B%D1%87%D0%B8%D1%81%D0%BB%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%BE%D0%B9_%D1%82%D0%B5%D1%85%D0%BD%D0%B8%D0%BA%D0%B8)
* [lmz-bw.de/geschichte-computer.html](https://www.lmz-bw.de/geschichte-computer.html)
* [planet-wissen.de/technik/computer_und_roboter/geschichte_des_computers/index.html](https://www.planet-wissen.de/technik/computer_und_roboter/geschichte_des_computers/index.html)
* [thoughtco.com/history-of-computers-4082769](https://www.thoughtco.com/history-of-computers-4082769)
* [video](https://www.youtube.com/playlist?list=PLC3B4155A75F91B07)
* [video](https://www.youtube.com/watch?v=a8Q2xpI7hbs)
* [video](https://www.youtube.com/watch?v=ATxKmDHfWWI)
* [video](https://www.youtube.com/watch?v=F3qWg1JBPZg)
* [video](https://www.youtube.com/watch?v=gZxyb2Efrcg)
* [video](https://www.youtube.com/watch?v=h1wRsbwnvDI)
* [video](https://www.youtube.com/watch?v=lsAeTXNQyIA)
* [video](https://www.youtube.com/watch?v=mFdUqqwzbVs)
* [video](https://www.youtube.com/watch?v=nBXv3SDZziE)
* [video](https://www.youtube.com/watch?v=Sx1Z_MGwDS8)
* [La Historia del Computador - YouTube](https://www.youtube.com/watch?v=h1wRsbwnvDI)
* [LMZ: Geschichte des Computers](https://www.lmz-bw.de/geschichte-computer.html)
* [Turing machine - Wikipedia](https://en.wikipedia.org/wiki/Turing_machine)
* [When was the first computer invented?](https://www.computerhope.com/issues/ch000984.htm)
* Ada Lovelace (1815 – 1852)
* [(10) Historia de la computadora (generaciones) - YouTube](https://www.youtube.com/watch?v=a8Q2xpI7hbs)
* [(13) HISTORIA : A EVOLUÇÃO DOS COMPUTADORES - YouTube](https://www.youtube.com/watch?v=mFdUqqwzbVs)
* [(15m) historia y evolución de las computadoras - YouTube](https://www.youtube.com/watch?v=nBXv3SDZziE)
* [(30) Evolução da Informática - Dos primeiros computadores à internet - YouTube](https://www.youtube.com/watch?v=Sx1Z_MGwDS8)
* [(5) La historia y la evolución de los ordenadores - YouTube](https://www.youtube.com/watch?v=lsAeTXNQyIA)
* [(7) HISTORIA DE LA COMPUTADORA - YouTube](https://www.youtube.com/watch?v=ATxKmDHfWWI)
* Who Invented the Computer?
* [1940 | Timeline of Computer History | Computer History Museum](https://www.computerhistory.org/timeline/1940/)
* [Computergeschichte - YouTube - YouTube](https://www.youtube.com/playlist?list=PLC3B4155A75F91B07)
* [Eine Maschine verändert die Welt | Teil 1 - Wie die Computer rechnen lernten - YouTube](https://www.youtube.com/watch?v=gZxyb2Efrcg)
* [HistoireInformatique.ppt](https://ibisc.univ-evry.fr/~hutzler/Cours/I11_InfoGene/Cours/CM1_HistoireInformatique.pdf)
* [computerhope.com/issues/ch000984.htm](https://www.computerhope.com/issues/ch000984.htm)
* [domusweb.it/it/design/2018/03/19/il-calcolatore-elea-9003-di-ettore-sottsass-funziona-ancora.html](https://www.domusweb.it/it/design/2018/03/19/il-calcolatore-elea-9003-di-ettore-sottsass-funziona-ancora.html)
* [La Historia del Computador - YouTube](https://www.youtube.com/watch?v=h1wRsbwnvDI)
* [fr.wikipedia.org/wiki/Histoire_des_ordinateurs](https://fr.wikipedia.org/wiki/Histoire_des_ordinateurs)
* [A Brief History of the Personal Computer | HowStuffWorks](https://computer.howstuffworks.com/history-of-the-personal-computer.htm)
* [Computer und Roboter: Geschichte - Computer und Roboter - Technik - Planet Wissen](https://www.planet-wissen.de/technik/computer_und_roboter/geschichte_des_computers/index.html)
* [Die Geschichte des Computers - website-go](http://www.website-go.com/artikel/geschichte.php)
* [ENIAC - Wikipedia](https://en.wikipedia.org/wiki/ENIAC)
* [Geschichte der Computer-Entwicklung](http://www.stefan-lenz.ch/bit-glossar/56.php)
* [computer.howstuffworks.com/history-of-the-personal-computer.htm](https://computer.howstuffworks.com/history-of-the-personal-computer.htm)
* [Il calcolatore Elea 9003 di Ettore Sottsass funziona ancora - Domus](https://www.domusweb.it/it/design/2018/03/19/il-calcolatore-elea-9003-di-ettore-sottsass-funziona-ancora.html)
* [Wege und Irrwege des Konrad Zuse - Spektrum der Wissenschaft](http://www.spektrum.de/magazin/wege-und-irrwege-des-konrad-zuse/823599)
* [История вычислительной техники — Википедия](https://ru.wikipedia.org/wiki/%D0%98%D1%81%D1%82%D0%BE%D1%80%D0%B8%D1%8F_%D0%B2%D1%8B%D1%87%D0%B8%D1%81%D0%BB%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%BE%D0%B9_%D1%82%D0%B5%D1%85%D0%BD%D0%B8%D0%BA%D0%B8)
* [История развития информатики (+ ссылки)](https://knowledge.allbest.ru/programming/3c0b65625b3bc68b5c53b89421306c27_0.html)
* [(10) Historia de la computadora (generaciones) - YouTube](https://www.youtube.com/watch?v=a8Q2xpI7hbs)
* [(13) HISTORIA : A EVOLUÇÃO DOS COMPUTADORES - YouTube](https://www.youtube.com/watch?v=mFdUqqwzbVs)
* [(15m) historia y evolución de las computadoras - YouTube](https://www.youtube.com/watch?v=nBXv3SDZziE)
* [(30) Evolução da Informática - Dos primeiros computadores à internet - YouTube](https://www.youtube.com/watch?v=Sx1Z_MGwDS8)
* [(5) La historia y la evolución de los ordenadores - YouTube](https://www.youtube.com/watch?v=lsAeTXNQyIA)
* [(7) HISTORIA DE LA COMPUTADORA - YouTube](https://www.youtube.com/watch?v=ATxKmDHfWWI)
* [(7) Historia do computador em minutos - YouTube](https://www.youtube.com/watch?v=F3qWg1JBPZg)


FIXME## Regex

FIXME### * RegEx and the limits of Reg Langs

* [python - reference length of regular expression group - Stack Overflow](https://stackoverflow.com/questions/42423601/reference-length-of-regular-expression-group)
* [Regular expression - Wikipedia](https://en.wikipedia.org/wiki/Regular_expression)
* [Limitations of Regular Expressions](http://www.yaldex.com/javascript_tutorial_2/LiB0059.html)
* [Regular Expression Limitations – jaredpar's WebLog](https://blogs.msdn.microsoft.com/jaredpar/2008/10/15/regular-expression-limitations/)
* [When Not to Use Regular Expressions – And How to Use them Better](https://spin.atomicobject.com/2018/02/21/regular-expressions/)
* [More on automata — Regular Expressions, limitations on automata](http://www.cs.cornell.edu/courses/cs2800/2014fa/lnotes/23_regexps.pdf)
* [Limitations of Regular Languages](http://www.cs.nuim.ie/~jpower/Courses/Previous/parsing/node18.html)
* [All you need to know about Regular expressions-Regex + Python code snippet to build your own tokenizer](https://gdcoder.com/all-you-need-to-know-about-regex/)
* [When you should NOT use Regular Expressions? - Software Engineering Stack Exchange](https://softwareengineering.stackexchange.com/questions/113237/when-you-should-not-use-regular-expressions)
* [Regular Expression Reference: Capturing Groups and Backreferences](https://www.regular-expressions.info/refcapture.html)
* [Regular Expression Reference: Special Groups](https://www.regular-expressions.info/refadv.html)
* [Debuggex: Online visual regex tester. JavaScript, Python, and PCRE.](https://www.debuggex.com/)
* The f' part tells Python to format the string by inserting the value of n in place of {n}. The double curly braces are just a way of escaping the curly braces. So if n = 4, for example, your string would be: 'a{4}b{4}'.
* Regular Expressions (Regex) Tutorial: How to Match Any Pattern of Text
* [Regular Expressions in R](https://www.youtube.com/watch?v=9K4N6MO_R1Y&list=PLVWtXi_Jrj_2CjtJJGAArDfyzKg2IVgkp&index=87)
* [C++ Tutorial 19 : C++ Regular Expressions](https://www.youtube.com/watch?v=9K4N6MO_R1Y&list=PLVWtXi_Jrj_2CjtJJGAArDfyzKg2IVgkp&index=87)
* [Is it possible to reference characteristics of capture groups, like their length, within the same regex? I'm working in Python, so we're dealing with Perl-like syntax.](https://www.reddit.com/r/regex/comments/d85u1n/is_it_possible_to_reference_characteristics_of/)
* It's beyond the scope of regular expressions, but it's relatively easy to do with Python string formatting:
* f'a{{{n}}}b{{{n}}}'
* [rextester.com](http://rextester.com/)
* [Regex Tutorial—From Regex 101 to Advanced Regex](http://www.rexegg.com/)
* [RegexOne - Learn Regular Expressions - Lesson 1: An Introduction, and the ABCs](https://www.regexone.com/)
* [RegexPlay - Test your regex skills!](http://play.inginf.units.it/#/)
* [RegExr: Learn, Build, & Test RegEx](https://regexr.com/)
* [Regular Expression Game](http://fetedoris.com/regex-game/)
* [Stata 11 help for regexr()](https://www.stata.com/help11.cgi?regexr())
* [The true power of regular expressions](https://nikic.github.io/2012/06/15/The-true-power-of-regular-expressions.html)
* [4. Pattern Matching with Regular Expressions - Java Cookbook, 3rd Edition [Book]](https://www.oreilly.com/library/view/java-cookbook-3rd/9781449338794/ch04.html)
* [Automatic Generation of Text Extraction Patterns from Examples](http://regex.inginf.units.it/)
* [HOWTO sulle Espressioni Regolari](http://www.python.it/doc/howto/Regex/regex-it/regex-it.html)
* [regex101.com/](https://regex101.com/)
* [Learn Regular Expressions the Hard Way](https://learncodethehardway.org/regex/)
* [Les expressions régulières - Apprenez à programmer en Python - OpenClassrooms](https://openclassrooms.com/courses/apprenez-a-programmer-en-python/les-expressions-regulieres)
* [Py RegEx](https://stackoverflow.com/search?q=python+regex+module&tab=newest%20%20%20Inviato%20da%20iPhone)
* [PyPI regex](https://pypi.org/project/regex/)
* [PyRegex](http://www.pyregex.com/)
* [Pythex: a Python regular expression editor](https://pythex.org/)
* [Python2 Tutorial: Regular Expression](https://www.python-course.eu/re.php)
* [RegEx Comparison Chart](https://gist.github.com/CMCDragonkai/6c933f4a7d713ef712145c5eb94a1816)
* [Regex Crossword](https://regexcrossword.com/)
* [regex features](https://bitbucket.org/mrabarnett/mrab-regex/src/default/docs/Features.rst)
* [Regex Match equal amount of two characters - Stack Overflow](https://stackoverflow.com/questions/39704916/regex-match-equal-amount-of-two-characters)
* [RegEx source](https://bitbucket.org/mrabarnett/mrab-regex/src/default/regex_3/_regex_core.py)
* [Regex Tutorial - The Question Mark Makes the Preceding Token Optional](http://www.regular-expressions.info/optional.html)

FIXME## Misc

* [Kubernetes for Full-Stack Developers](https://www.digitalocean.com/community/curriculums/kubernetes-for-full-stack-developers)
* [freecodecamp.org/news/the-docker-handbook/](https://www.freecodecamp.org/news/the-docker-handbook/)
* [Best Developer Tools for 2021](https://www.gitkraken.com/reports/best-developer-tools-2021)
* [Manim Community](https://www.manim.community/)
* [README.md](https://github.com/3b1b/manim)
* [README.md](https://github.com/ManimCommunity/manim)
* [ankitects/anki/tree/master](https://github.com/ankitects/anki/tree/master)
* [youtube-dl](https://youtube-dl.org/)
* [http://lilypond.org](http://lilypond.org/)
* [r/Anki/comments/bae3yx/building_addons_without_reading_all_the_source/](https://www.reddit.com/r/Anki/comments/bae3yx/building_addons_without_reading_all_the_source/)
* Making a 3D Gravity Simulator with OpenGL (Part 1)
* [khronos.org/opencl/](https://www.khronos.org/opencl/)
* CUDA
* OpenGL
* [Future Computers Will Be Radically Different (Analog Computing) - YouTube](https://www.youtube.com/watch?v=GVsUOuSjvcg)

FIXME## Docker and k8s

* [A tour of the Kubernetes source code - IBM Developer](https://developer.ibm.com/articles/a-tour-of-the-kubernetes-source-code/)
* [COMO ENTENDER E UTILIZAR DOCKER?](https://youtu.be/OIKhrLozFMg)
* [Docker – Tutorial, Folge 2: Docker installieren (Linux) // deutsch - YouTube](https://www.youtube.com/watch?v=-UNAvc9jOsw&list=PL6QrD7_cU23li4myvLoicA663wx1bmzQi&index=4&t=16s)
* [...](https://github.com/raffraffraff/docker-remarkable)
* [Docker на практике](http://libgen.rs/book/index.php?md5=24BEFCB16ADE6A3D458174AB8F0919FC)
* [Docker can slow down your code and distort your benchmarks](https://pythonspeed.com/articles/docker-performance-overhead/)
* [The Docker & Container Ecosystem | The New Stack](https://thenewstack.io/ebooks/docker-and-containers/the-docker-container-ecosystem/)
* [Three Ways to Create Dockernized LaTeX Environment | by Shinichi Okada | Towards Data Science](https://towardsdatascience.com/three-ways-to-create-dockernized-latex-environment-2534163ee0c4)
* [dzone.com/refcardz/getting-started-with-docker-1](https://dzone.com/refcardz/getting-started-with-docker-1)
* [stackoverflow.com/questions/58704447/edit-a-file-in-docker-container-from-outside-the-container](https://stackoverflow.com/questions/58704447/edit-a-file-in-docker-container-from-outside-the-container)
* [towardsdatascience.com/how-to-properly-use-the-gpu-within-a-docker-container-4c699c78c6d1](https://towardsdatascience.com/how-to-properly-use-the-gpu-within-a-docker-container-4c699c78c6d1)
* [freecodecamp.org/news/build-your-on-custom-container-without-docker/](https://www.freecodecamp.org/news/build-your-on-custom-container-without-docker/)

FIXME## Paradigms and Language Comparison

* [4 Programming Paradigms In 40 Minutes - YouTube](https://www.youtube.com/watch?v=cgVVZMfLjEI)
* [P vs. NP and the Computational Complexity Zoo - YouTube](https://www.youtube.com/watch?v=YX40hbAHx3s&t=32s)
* [Lambda Calculus - Computerphile - YouTube](https://www.youtube.com/watch?v=eis11j_iGMs)
* [Computer Programming Paradigms - YouTube](https://www.youtube.com/watch?v=kC5_Ya3ym30)
* [Comparing Programming Paradigms - YouTube](https://www.youtube.com/watch?v=fk1kwa_ctL8)
* [Programming Paradigms and Language Concepts - YouTube](https://www.youtube.com/watch?v=lqmMqtgWpms)
* [Object-oriented Programming in 7 minutes | Mosh - YouTube](https://www.youtube.com/watch?v=pTB0EiLXUC8)
* [Berechenbarkeit #03 - Deterministische Turing-Maschinen - YouTube](https://www.youtube.com/watch?v=qDv9pVMiKTc&t=611s)
* [Programming Languages | Electrical Engineering and Computer Science | MIT OpenCourseWare](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-821-programming-languages-fall-2002/)
* [Парадигма программирования — Википедия](https://ru.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B0%D0%B4%D0%B8%D0%B3%D0%BC%D0%B0_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F)
* [Process-oriented programming - Wikipedia](https://en.wikipedia.org/wiki/Process-oriented_programming)
* [Functional Programming Languages and the Pursuit of Laziness with Dr. Simon Peyton Jones](https://www.microsoft.com/en-us/research/blog/functional-programming-languages-pursuit-laziness-dr-simon-peyton-jones/?OCID=msr_podcast_sjones_FB)
* [microsoft.com/en-us/research/blog/functional-programming-languages-pursuit-laziness-dr-simon-peyton-jones/?OCID=msr_podcast_sjones_FB](https://www.microsoft.com/en-us/research/blog/functional-programming-languages-pursuit-laziness-dr-simon-peyton-jones/?OCID=msr_podcast_sjones_FB)
* [en.wikipedia.org/wiki/Programming_paradigm](https://en.wikipedia.org/wiki/Programming_paradigm)
* [en.wikipedia.org/wiki/Programming_paradigm](https://en.wikipedia.org/wiki/Programming_paradigm)
* [Функциональное программирование | Евгений Кирпичёв](https://www.youtube.com/watch?v=jEozVIGSDMU&list=PL-_cKNuVAYAWoMkUIhmaiJihYxirYrLbc)

FIXME## Anki

* [Janki Method Refined | Jack Kinsella](http://www.jackkinsella.ie/articles/janki-method-refined)
* [Janki Method | Jack Kinsella](http://www.jackkinsella.ie/articles/janki-method)
* [Ospalh’s Anki2 addons](https://ospalh.github.io/anki-addons/)

FIXME### *Streamlining Anki with LaTeX | cathy wu

* [scaling - Anki: Displayed size does not match specified size - TeX - LaTeX Stack Exchange](https://tex.stackexchange.com/questions/394311/anki-displayed-size-does-not-match-specified-size)
* [fontsize - Anki - LaTeX, Math Font Size, & DeclareMathSizes - TeX - LaTeX Stack Exchange](https://tex.stackexchange.com/questions/108418/anki-latex-math-font-size-declaremathsizes)
* [Decks - AnkiWeb](https://ankiweb.net/decks/)
* [(de)](https://ankiweb.net/shared/info/1574741184)
* [[anki-help] Importing Quizlet decks into Anki - WiseGuy - com.googlegroups.ankisrs - MarkMail](http://markmail.org/message/2hlc4x4v72czrryu)
* [Anki Manual](https://apps.ankiweb.net/docs/manual.html#adding-cards-and-notes)
* [Anki Manuale Utente](https://web.archive.org/web/20160423223801/http://192.167.9.6/Anki_ITA/Manual_ITA.htm)
* [Anki Tips: What I Learned Making 10,000 Flashcards - rs.io](http://rs.io/anki-tips/)
* [Anki: Make Your Own Deck: The Basics | Your Awesome Memory](https://yourawesomememory.com/content/anki-make-your-own-deck-basics)
* [Chord Symbols to piano keys - AnkiWeb](https://ankiweb.net/shared/info/946752090)
* [Complete Pop/Jazz Chords - AnkiWeb](https://ankiweb.net/shared/info/839456194)
* [Create Anki Cards Quickly using CSV - YouTube](https://www.youtube.com/watch?v=BwGNP3GXmxg)
* [Ear Training: Dissonant Intervals (harmonic) - AnkiWeb](https://ankiweb.net/shared/info/2051888923)
* [GitHub - dae/anki: Anki for desktop computers](https://github.com/dae/anki)
* [How to Automatically Generate Vocabulary Flashcards with Google Translate and Anki - Art of Memory Blog](https://blog.artofmemory.com/vocabulary-flashcards-google-translate-anki-4561.html)
* [How to make high quality Anki cards quickly | Managing Med-School](https://managingmedicine.org/2013/05/14/how-to-make-high-quality-anki-cards-quickly/)
* [Importing lists into Anki - YouTube](https://www.youtube.com/watch?v=IhUQyZYAbtY)
* [Italian Musical Terms - AnkiWeb](https://ankiweb.net/shared/info/797763840)
* [Joe's Ear: intervals, chords, scales - AnkiWeb](https://ankiweb.net/shared/info/1231313502)
* [Modes training - AnkiWeb](https://ankiweb.net/shared/info/1494466816)
* [Physics of Music and Sound - AnkiWeb](https://ankiweb.net/shared/info/1604035179)
* [S02 - Anki Decks &amp; Views: 01 Creating a deck and getting organised with sub-decks - YouTube](https://www.youtube.com/watch?v=2i1krBznenQ)
* [scienceofimagination / How to Create and Manipulate Decks in Anki](http://scienceofimagination.pbworks.com/w/page/25479284/How%20to%20Create%20and%20Manipulate%20Decks%20in%20Anki)
* [Code : anki](https://code.launchpad.net/anki)
* [Anki Manual](https://apps.ankiweb.net/docs/manual.html)
* [Anki Syntax Highlighting](https://ankiweb.net/shared/info/1463041493)
* [GitHub - badlydrawnrob/anki: Learn to code with Anki — flashcards and themes for all learning levels. Master your programming language of choice!](https://github.com/badlydrawnrob/anki)
* [Reddit - Anki - Anki 2.1: Code (Syntax) formatting?](https://www.reddit.com/r/Anki/comments/alpszi/anki_21_code_syntax_formatting/)
* [Sparkle - Anki Flashcards to facilitate your programming mastery](https://www.reddit.com/r/Anki/comments/d6rdk1/sparkle_anki_flashcards_to_facilitate_your/)

FIXME### **Anki machen (+ar. Verbforme): Stammform (Verb) – Wikipedia

* [Probability Theory and Mathematical Statistics - AnkiWeb](https://ankiweb.net/shared/info/1296010623)
* [基本数学术语 Fundamental Math Vocabulary: English–Chinese - AnkiWeb](https://ankiweb.net/shared/info/1225334140)
* Mathematical Statistics
* Machine Learning (DE)
* Machine Learning
* Topology
* Combinatorics
* Semantics
* Deep Learning
* Analysis
* Diff EQ

FIXME## OS    * [Linux: a Portable Operating System (Master of Science Thesis)

* [Linux: This Book Includes 4 Manuscripts. The Underground Bible to the UNIX Operating System with Tools On Security and Kali Hacking to Understand Computer Programming, Data Science and Command Line](http://libgen.li/ads.php?md5=9cc7a6d227d5363a7e9036a8ec9893e4)
* [Linux for Beginners: The Ultimate Practical Guide to Operating System, Command Line and Programming. Improve your Computer Skills and Become a Computing Expertise.](http://libgen.li/ads.php?md5=76aec583971f5b63f96a97a3c08a5725)
* [Linux Operating System: Introduction To Linux Operating System: Linux System Administrator](http://libgen.li/ads.php?md5=ef4dd51b6564eac0ecab1d8f53c753ea)
* [Practical System Programming with C: Pragmatic Example Applications in Linux and Unix-Based Operating Systems](http://libgen.li/ads.php?md5=2cc93231c0eefb6c4141459954c71621)
* [Linux: Learn the Ultimate Strategies to Master Operating System and Command Line. Improve Your Computer Programming Skills and Start Codi](http://libgen.li/ads.php?md5=e6368f0c4b13d3ec5fcbdb002b6e7258)
* [Operating Systems/ Betriebssysteme Bilingual Edition: English - German/ Zweisprachige Ausgabe: Englisch - Deutsch](http://libgen.li/ads.php?md5=bd6e5e78c7f9c063df0098e5d4809c31)
* [Operating Systems: Three Easy Pieces](http://libgen.li/ads.php?md5=133d518e3f69f4caaead32c569ae6c49)
* [Survey of Operating Systems](http://libgen.li/ads.php?md5=e24c060de4e3b177d36e69cb72cc862d)
* [Operating Systems: Internals and Design Principles](http://libgen.li/ads.php?md5=5b0c7356751347504e2f6ce19e42d218)
* [The Art of Linux Kernel Design: Illustrating the Operating System Design Principle and Implementation](http://libgen.li/ads.php?md5=d23976f913ae0a19ff94173bbd642123)
* [Embedded operating systems: a practical approach](http://libgen.li/ads.php?md5=4269524be215a1d0262f301283b04eb1)
* [Betriebssysteme kompakt: Grundlagen, Daten, Speicher, Dateien, Prozesse und Kommunikation](http://libgen.li/ads.php?md5=e1268cb4775d8a06dd6f3485828ff9e7)
* [Grundkurs Betriebssysteme: Architekturen, Betriebsmittelverwaltung, Synchronisation, Prozesskommunikation, Virtualisierung](http://libgen.li/ads.php?md5=3f4f40f1c3f02715d065a37543f757c1)
* [Linux with Operating System Concepts](http://libgen.li/ads.php?md5=6b2354b55956b65913212bed0d43dfd8)
* [Reddit - fox32os - multitasking operating system for a custom architecture](https://www.reddit.com/r/osdev/comments/10kjs3x/fox32os_multitasking_operating_system_for_a/)
* [arizonahanson/starlight-os](https://github.com/arizonahanson/starlight-os)
* [main-qimg-0a42529bf99de9597196b4c910128189-c (JPEG Image, 775 × 493 pixels)](https://qph.cf2.quoracdn.net/main-qimg-0a42529bf99de9597196b4c910128189-c)
* [bottlerocket-os/bottlerocket](https://github.com/bottlerocket-os/bottlerocket)

FIXME## Meta Topics

* [ImNotGoodEnough.js - YouTube](https://www.youtube.com/watch?v=6TYkDy54q4E)
* [golem.de/news/arbeit-in-der-it-depression-vorprogrammiert-2209-167567.html](https://www.golem.de/news/arbeit-in-der-it-depression-vorprogrammiert-2209-167567.html)
* [Как устроена IT-столица мира / Russian Silicon Valley (English subs)](https://www.youtube.com/watch?v=9lO06Zxhu88)
* [builtin.com/data-science/career-advancement-coding](https://builtin.com/data-science/career-advancement-coding)
* [14 Hard Lessons After 14 Years Of Software Development](https://youtu.be/iF0ntBn6NdA)

FIXME## Links to follow

* [Как разобраться в Computer Science самостоятельно](https://vk.com/@tproger-computer-science-step-by-step)
* [Как разобраться в Computer Science самостоятельно](https://vk.com/@tproger-computer-science-step-by-step)
* [awesome-courses](https://github.com/prakhar1989/awesome-courses/blob/master/README.md)
* [Similar Links](http://rosettacode.org/wiki/Help:Similar_Sites)
* [Mais de 450 cursos Online Grátis de Harvard, Yale, Columbia e outras](https://enciclopediavirtual.com.br/noticias/educacao/aqui-estao-450-cursos-da-ivy-league-que-voce-pode-fazer-online-agora-de-graca/?fbclid=IwAR1C2OaaMpVVs86ioiRvSaCyRGSjZXl6CQNIb7b-EVNW8jKBKu3QI5pREYE)
* [Все курсы ПостНауки, от кратких до глобальных](https://postnauka.ru/courses)
* [completely free Coursera courses](http://email.mail.class-central.com/c/eJxNkE1uhDAMhU8DO1D-WsIiCzQdroGMMTOREoKSINTbN4hKreSF_Vl-es-L6bp50bU1ggnGJBNcKi5Yy9uhfwzj8yk17z-U4l2lmAfrWnSQUoO05QhlCr5-GyVRwyKBz5rJvtOkpV5RKzavUgHo2hu-41w78855T5UcKjGWOs_z1vsnV3CkPcRcGgxHTBShWSNREzZnN2pumC4FOR7ZT6kApEp-IU4bnclRzhQr8XktPS328GVJl_tfiOB3sK-t4L-DyUPE93Q9oo7GJgBsYxuto--S_XWHL3Gz8SFgc5v8AYwIakM)
* [Ivy League MOOCs](https://www.classcentral.com/collection/ivy-league-moocs)
* [Isaac Riley - MOOC transcript, reviews, and interests | Class Central](https://www.classcentral.com/u/1064691/recommendations)
* [Best Online Courses of 2019](http://email.mail.class-central.com/c/eJxNUMuKhDAQ_Bq9RfJyooccdpH5DUnadiaQGEkiMn-_ERd2oQ_dVXRRVYtWyi5D6zSnnFLGFRNiELRjHeVqeozf0yhHIYehbyQNxvkOvMmZAG4lmXrF0L41U7K3VDHEEXDhdBl6CpTah-xhlbC2QbMdbOv1u5Q9N-Kr4c8653neev_kKpxwj6nUxWIuZE2IJG7ebUggHiljJpyy8ZIQz6OEOVcUsBETwLzhmT2Wgqnhj4sMuLgjVBIv-78gmLAb99oq_Pcwr2jTYdJnvspok3bZGOhSl5zHT83_uguokYsOMQK5jf4Ap1tq4w)
* [Free Online Tutorials and Courses](https://www.tutorialspoint.com/tutorialslibrary.htm)
* [Cours/Formations informatique à télécharger](https://www.cours-gratuit.com/)

FIXME## Regex

* [open source alternative to regex buddy - Google Search](https://www.google.com/search?client=firefox-b-d&q=open+source+alternative+to+regex+buddy)
* [Open Source RegexBuddy Alternatives - Page 2 | AlternativeTo](https://alternativeto.net/software/regexbuddy/?license=opensource&p=2)
* [RegExr: App Reviews, Features, Pricing & Download | AlternativeTo](https://alternativeto.net/software/regexr/about/)
* [iHateRegex: App Reviews, Features, Pricing & Download | AlternativeTo](https://alternativeto.net/software/ihateregex/about/)
* [Regulex: App Reviews, Features, Pricing & Download | AlternativeTo](https://alternativeto.net/software/regulex/about/)
* [jRegExAnalyser: App Reviews, Features, Pricing & Download | AlternativeTo](https://alternativeto.net/software/jregexanalyser/about/)
* [rgxg: App Reviews, Features, Pricing & Download | AlternativeTo](https://alternativeto.net/software/rgxg/about/)
* [Visual REGEXP: App Reviews, Features, Pricing & Download | AlternativeTo](https://alternativeto.net/software/visual-regexp/about/)
* [kiki: App Reviews, Features, Pricing & Download | AlternativeTo](https://alternativeto.net/software/kiki/about/)
* [Regexper: App Reviews, Features, Pricing & Download | AlternativeTo](https://alternativeto.net/software/https--regexper-com-/about/)
* [Regex Generator: App Reviews, Features, Pricing & Download | AlternativeTo](https://alternativeto.net/software/regex-generator/about/)
* [Scriptular: App Reviews, Features, Pricing & Download | AlternativeTo](https://alternativeto.net/software/scriptular/about/)
* [docs.rs/regex/latest/regex/](https://docs.rs/regex/latest/regex/)

FIXME## Algorithms

* [Introduction to Algorithms, Third Edition](https://www.youtube.com/watch?v=P_YNGE4mbE8&list=PL-_cKNuVAYAUV2ChK_qb93NDXe7CDYv-P)
* [Algorithmen verstehen](https://www.youtube.com/channel/UCswWBF6ZkGnLG3sLRR65xRw)
* [o8vm/ods](https://github.com/o8vm/ods)
* [patmorin/ods](https://github.com/patmorin/ods)
* [opendatastructures.org/](https://opendatastructures.org/)
* [A Practical Guide to Data Structures and Algorithms using Java (Chapman & Hall CRC](https://de1lib.org/book/837370/212b83)
* [Applied Algorithms and Data Structures series) | Sally A. Goldman, Kenneth J. Goldman | download](https://de1lib.org/book/837370/212b83)
* [Advanced Algorithms and Data Structures | Marcello La Rocca | download](https://de1lib.org/book/16088005/7a2b2f?dsource=recommend)
* [Advanced Algorithms and Data Structures in Action | La Rocca, Marcello | download](https://de1lib.org/book/16075033/e2ece3?dsource=recommend)
* [Algorithms and Data Structures for Massive Datasets (MEAP v03) | Dzejla Medjedovic, Emin Tahirovic | download](https://de1lib.org/book/12048574/90a3d1)
* [Algorithms and Data Structures: Foundations and Probabilistic Methods for Design and Analysis | Helmut Knebl | download](https://de1lib.org/book/11248674/efba31)
* [Algorithms and Data Structures: The Basic Toolbox | Kurt Mehlhorn, Peter Sanders | download](https://de1lib.org/book/502920/9ee1bd)
* [Algorithms and Data Structures: The Science of Computing | Douglas Baldwin, Greg W. Scragg | download](https://de1lib.org/book/458728/02aa4c)
* [The Constitution of Algorithms: Ground-Truthing, Programming, Formulating | Florian Jaton | download](https://de1lib.org/book/16423182/7d5aa4?dsource=recommend)
* [Algorithms through Puzzles](https://drive.google.com/file/d/19YhWHo6-J8pK7_HVaB9sEwDly7FRFOse/view?usp=sharing)
* [Quickselect - Wikipedia](https://en.wikipedia.org/wiki/Quickselect)
* Tree Implementation
* [160 LeetCode Algorithm Solution Videos](http://theanalysisofdata.com/probability/0_2.html)
* [18 Most Common Python List Questions | Learn Python (article) - DataCamp](https://www.datacamp.com/community/tutorials/18-most-common-python-list-questions-learn-python)
* [algorithm - Getting the closest string match - Stack Overflow](https://stackoverflow.com/questions/5859561/getting-the-closest-string-match)
* [Algorithms and Data Structures: The Basic Toolbox | Kurt Mehlhorn, Peter Sanders | download](https://b-ok.cc/book/502920/9ee1bd)
* [Algorithms to Live By: The Computer Science of Human Decisions | Brian Christian, Tom Griffiths | download](http://b-ok.cc/book/2746599/6200c7)
* [Clever Algorithms | Metaheuristic | Mathematical Optimization](https://fr.scribd.com/document/168217875/Clever-Algorithms)
* [Data Structures and Algorithms in C++ | Adam Drozdek | download](https://b-ok.cc/book/437104/c80747?dsource=recommend)
* [Graphs, Networks and Algorithms | Dieter Jungnickel (auth.) | download](https://b-ok.cc/book/437121/c789ff?dsource=recommend)
* [jellyfish.readthedocs.io/en/latest/comparison.html](http://jellyfish.readthedocs.io/en/latest/comparison.html)
* [jellyfish.readthedocs.io/en/latest/comparison.html#jaro-distance](http://jellyfish.readthedocs.io/en/latest/comparison.html#jaro-distance)
* [richardminerich.com/tag/jaro-winkler/](http://richardminerich.com/tag/jaro-winkler/)
* [en.wikipedia.org/wiki/Approximate_string_matching](https://en.wikipedia.org/wiki/Approximate_string_matching)
* [en.wikipedia.org/wiki/CORDIC](https://en.wikipedia.org/wiki/CORDIC)
* [en.wikipedia.org/wiki/Needleman%E2%80%93Wunsch_algorithm](https://en.wikipedia.org/wiki/Needleman%E2%80%93Wunsch_algorithm)
* [pypi.org/project/jellyfish/](https://pypi.org/project/jellyfish/)
* [coursera.org/learn/cs-algorithms-theory-machines](https://www.coursera.org/learn/cs-algorithms-theory-machines)
* [python-course.eu/levenshtein_distance.php](https://www.python-course.eu/levenshtein_distance.php)
* [Introduction to Algorithms, Third Edition](http://www.realtechsupport.org/UB/SR/algorithms/Cormen_Algorithms_3rd.pdf)
* [Jaro distance - Rosetta Code](https://rosettacode.org/wiki/Jaro_distance)
* [Java and Algorithmic Thinking for the Complete Beginner: Learn to Think Like a Programmer | Aristides S Bouras, Loukia V Ainarozidou | download](https://b-ok.cc/book/2665245/2cfcbd)
* [JellyFish on Julia - Libraries.io](https://libraries.io/julia/JellyFish)
* [Needleman–Wunsch algorithm - Wikipedia](https://en.wikipedia.org/wiki/Needleman%E2%80%93Wunsch_algorithm)
* [String Algorithms](https://web.stanford.edu/class/cs97si/10-string-algorithms.pdf)
* [Клейнберг Дж., Тардос Е. - Алгоритмы. Разработка и применение. (Классика Computer Science) - 2016.pdf](https://vk.com/doc44301783_453645372?hash=a35fecb6be75089f03&dl=f52f78cc6b807a2497)
    Основы современных алгоритмов Макконнелл Дж (McConnell J.J.)
* [algorist.com/](http://www.algorist.com/)
* [The Fast Fourier Transform (FFT): Most Ingenious Algorithm Ever? - YouTube](https://www.youtube.com/watch?v=h7apO7q16V0)
    1. Алгоритмы и структуры данных. Введение | Технострим
* [...](https://www.youtube.com/watch?v=qTRW7ELhhME&list=WL&index=1372)
* [algor](https://vk.com/wall-16108331_143570)
    Algorithm Design Manual
* [Algorithmen DE](https://visualgo.net/de)
* [Algorithmic Game Theory](https://b-ok.cc/book/1175211/2a7be7)
* [Algorithmique : Techniques fondamentales de programmation | Sébastien Rohaut | download](https://b-ok.cc/book/1236005/463716)
* [Algorithms (Sedgewick & Wayne)](https://algs4.cs.princeton.edu/home/)
* [Algorithms 4E Sedgewick](https://algs4.cs.princeton.edu/home/)
* [Algorithms Course - Graph Theory Tutorial from a Google Engineer](https://www.youtube.com/watch?v=09_LlHjoEiY&list=PLVWtXi_Jrj_14rUJDWFEvyhOmYF2JdHmk&index=59)
* [Algorithms for programmers: ideas and source code | Arndt J. | download](https://b-ok.cc/book/437076/eef026)
* [Algorithms in a Nutshell: A Practical Guide | George T. Heineman, Gary Pollice, Stanley Selkow | download](https://b-ok.cc/book/2694702/1d9a2b)
* [Algorithms In Machine Learning Paradigms](http://93.174.95.29/main/2CABB01CD817B32B1DAC33EB4412D63B)
* [Algorithms sequential & parallel: a unified approach](https://b-ok.cc/book/2082580/b08fa2)
* [Assignments | Introduction to Algorithms | Electrical Engineering and Computer Science | MIT OpenCourseWare](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/assignments/)
* [Blog Cyberini: Algoritmos](https://www.blogcyberini.com/search/label/Algoritmos?max-results=10)
* [Data Structures and Algorithm Analysis in C++, 3rd Edition | Dr. Clifford A. Shaffer | download](https://b-ok.cc/book/1192132/4f6da2)
* [Data Structures and Algorithms in C++ | Adam Drozdek | download](https://b-ok.cc/book/2315271/c157bc)
* [video](https://www.youtube.com/watch?v=oSWTXtMglKE&list=WL&index=377)
* [Encyclopedia of Algorithms | Ming-Yang Kao (Editor) | download](https://b-ok.cc/book/2802275/b0a515)
* [Encyclopedia of information science and technology | Mehdi Khosrow-Pour | download](https://b-ok.cc/book/436960/1612ca?dsource=recommend)
* [Foundations of Discrete Mathematics with Algorithms and Programming | Sriraman Sridharan, R. Balakrishnan | download](https://b-ok.cc/book/3629818/559c96?dsource=recommend)
* [How Binary Search Makes Computers Much, Much Faster](https://www.youtube.com/watch?v=KXJSjte_OAI&list=PLVWtXi_Jrj_14rUJDWFEvyhOmYF2JdHmk&index=64)
* [How to Think About Algorithms](https://book4you.org/book/502895/e12dac?dsource=recommend)
* [jeffe.cs.illinois.edu/teaching/algorithms/](http://jeffe.cs.illinois.edu/teaching/algorithms/)
* [coursera.org/specialization/algorithms](https://coursera.org/specialization/algorithms)
* [lagunita.stanford.edu/courses/course-v1:Engineering+Algorithms2+SelfPaced/about](https://lagunita.stanford.edu/courses/course-v1:Engineering+Algorithms2+SelfPaced/about)
* [zhubert.com/blog/2012/11/21/the-algorithm-design-manual/](https://www.zhubert.com/blog/2012/11/21/the-algorithm-design-manual/)
* [igraph – Network analysis software](https://igraph.org/)
    Introduction to Algorithms ./    * [Los Algoritmos Tras la Primera Imagen de un Agujero Negro | Feat. QuantumFracture](https://www.youtube.com/watch?v=pTXCs3A6NEM&list=WL&index=568)
    Neo4j
* [networkx.org](http://networkx.org/)
* [Problems on algorithms | Ian Parberry | download](https://b-ok.cc/book/464115/9b5e62?dsource=recommend)
    pykg2vec
* [Stepik - Математическая логика и теория алгоритмов](https://stepik.org/course/48679)
* [subsequence matching algorithms - Поиск в Google](https://www.google.com/search?q=subsequence+matching+algorithms&rlz=1C5CHFA_enUS800US800&oq=subsequence+matching+algorithms&aqs=chrome..69i57j0l2.4970j0j9&sourceid=chrome&ie=UTF-8)
* [The Algorithm Design Manual](http://www.algorist.com/)
* [Timo Bingmann](https://www.youtube.com/c/TimoBingmann)
* {    TinkerPop   } [video](https://www.youtube.com/watch?v=TPpWvpnQq5s&list=PLVWtXi_Jrj_14rUJDWFEvyhOmYF2JdHmk&index=54)
* [Алгоритмические применения древесных декомпозиций | Федор Фомин](https://www.youtube.com/watch?v=F1Wml6ayRpY&list=PL-_cKNuVAYAVc-vBx2fQnjy7F18vzi9NK)
* [Алгоритмы для NP-трудных задач](https://www.youtube.com/watch?v=P_YNGE4mbE8&list=PL-_cKNuVAYAUV2ChK_qb93NDXe7CDYv-P)
* [Алгоритмы для NP-трудных задач (2013)](https://www.youtube.com/watch?v=QBS1N9LU4tI&list=PL-_cKNuVAYAWpKLONs_YYrEwH7KrSPn9u)
    Алгоритмы и программы. Решение олимпиадных задач (Порублёв И., Ставровский А.)
* [Алгоритмы и структуры данных](https://vk.com/wall-16108331_148715)
* [Алгоритмы и структуры данных](https://vk.com/wall-16108331_153900)
* [Алгоритмы и структуры данных - JS](https://vk.com/wall-16108331_153624)
* [Алгоритмы и структуры данных (первый семестр)](https://www.youtube.com/watch?v=pxR3UoO9c9w&list=PL-_cKNuVAYAVrpuSr3B8nGPt0djIk7pio)
* [Алгоритмы и структуры данных 2 семестр](https://www.youtube.com/watch?v=cca8QY3tuCI&list=PL-_cKNuVAYAUhJ1CdU0wiEDQj58E51Zn-)
* [Алгоритмы обработки потоковых данных](https://www.youtube.com/watch?v=hFTImjnvqbw&list=PL-_cKNuVAYAWQo0yasBn3kIcqJlgnjdTF)
* [Алгоритмы, структуры данных и программирование на C++](https://vk.com/wall-16108331_148710)
    Алгоритмы. Руководство по разработке, Стивен Скиена (2011)
* [bookflow.ru/formalnaya-i-intuitivnaya-semantika-yazyka-programmirovaniya-na-primerah-js-i-jsx/](https://bookflow.ru/formalnaya-i-intuitivnaya-semantika-yazyka-programmirovaniya-na-primerah-js-i-jsx/)
* [Automaten & Formale Sprachen - Alle Videos, besser sortiert auf www.thesimpleclub.de](https://www.youtube.com/watch?v=JAvIyh0rIV4&list=PLgZuSc7xewdfEJTZWhZ9qVVTg6acjVVda)
* [Datenstrukturen - Alle Videos, besser sortiert auf www.thesimpleclub.de](https://www.youtube.com/watch?v=t43yaHT7aGw&list=PLgZuSc7xewdeOB9v1M7_GCnr-U7cHQ_Xj)
* [Theoretische Informatik - Alle Videos besser sortiert auf www.thesimpleclub.de](https://www.youtube.com/watch?v=JAvIyh0rIV4&list=PLgZuSc7xewdddmRYu_n8YDEXbSvkXRq9u)
    Алгоритмы. Справочник с примерами на C, C++, Java и Python
* [Курс "Алгоритмы и структуры данных"](https://vk.com/wall-16108331_150221)
* [Матроиды и параметризованные алгоритмы](https://www.youtube.com/watch?v=yGMi6ObL25o&list=PL-_cKNuVAYAX-r648qpgkXXJ3hyW6VskQ)
* [video](https://www.youtube.com/watch?v=_J-3nt9bhbI&list=PLVWtXi_Jrj_14rUJDWFEvyhOmYF2JdHmk&index=32)
* [Параметризованные алгоритмы](https://www.youtube.com/watch?v=LuhPRMn4SRQ&list=PL-_cKNuVAYAUTZWj2o-ZnPUM5yYrHYq51)
* [Параметризованные алгоритмы](https://www.youtube.com/watch?v=xRqNxlrwXtg&list=PL-_cKNuVAYAUXg0Pv4xhL32qL5Igo7Lr-)
    Учись писать, читать и понимать алгоритмы, Паронджанов Владимир (2012)
* [How Dijkstra's Algorithm Works](https://youtu.be/EFg3u_E6eHU)
* [1,606,240% FASTER algorithm - YouTube](https://www.youtube.com/watch?v=U16RnpV48KQ)
* [The hidden beauty of the A* algorithm](https://youtu.be/A60q6dcoCjw)

FIXME## Tasks/Challenges

    E-olymp — один из крупнейших украинских сайтов для изучения информатики и подготовки к олимпиадам.
* hackerRank — это социальная платформа, которая предлагает задания разной сложности по программированию. Запущена платформа была в 2012 году. Сейчас аудитория проекта насчитывает около полутора миллиона пользователей. Статистику по результатам решений заданий своими пользователями ресурс регулярно публикует в виде рейтинга по 50 странам.
    Coderbyte — предлагает 200+ соревновательных задач, которые вы можете решать в онлайн-редакторе, используя 10 различных языков программирования. Вы сможете ознакомиться с официальными решениями для некоторых задач, а также найти более 800 тысяч пользовательских решений. Coderbyte рекомендован командами многих известных образовательных курсов по программированию благодаря коллекции задач, полезных для подготовки к собеседованию.
    Codewars — предоставляет разработчиками большую коллекцию интересных задач, созданных сообществом платформы. Вы можете выполнять задания непосредственно в online-редакторе, используя один из 20 языков программирования. Зарабатывайте очки и поднимайтесь в рейтинге. Вы можете просмотреть обсуждение как для каждой задачи, так и для пользовательский решений.
    CodeFights — платформа, состоящая из коллекции задач, которые можно решать в онлайн-редакторе, и форума пользователей для обсуждения возникающих проблем. Отличительной особенностью является функция «Company Bots». Это возможность конкурировать с «ботами», которые были запрограммированы инженерами крупных технологических компаний. Вы когда-нибудь задумывались, насколько ваши навыки программирования соответствуют стандартам инженеров из Uber, Dropbox, Quora и других высокотехнологичных компаний? Посоревнуйтесь с этими ботами и узнайте.
    Где решать задачи по программированию - Часть 2
    CodinGame — Этот сайт отличается от перечисленных выше тем, что вместо обычного решения, на CodinGame вы пишете код непосредственно для того, чтобы сыграть в онлайн-игру. Это увлекательно и некоторые из игр очень забавны (см. пример). Игровая графика хороша, а пользовательский интерфейс редактора/игры очень плавный. В целом, это отличный веб-сайт для новичков, изучающих программирование.
    TopCoder — одна из первых платформ для соревнований по онлайн-программированию. Популярные Single Round Matches происходят несколько раз в месяц в определенное время. Это возможность посоревноваться с другими разработчиками. Вот несколько тем, которые могут быть затронуты. Помимо решения головоломок для развлечения, предлагаются и соревнования, в которых вы можете выиграть призы от спонсоров (реальных компаний) за лучшее решение.
    LeetCode — В LeetCode собрана одна из лучших коллекций задач на применение алгоритмов. Темы, которые охватывают задания, требуют знания структур данных (binary trees, heaps, linked lists, etc.) Задачи более сложные, чем на других сайтах, но они окажутся очень полезными, если использовать их при подготовке к собеседованию. Раздел "Mock Interview" (Пробное интервью) специально предназначен для подготовки к собеседованию. Также проводятся соревнования по программированию, и есть раздел статей, который поможет вам лучше понять определенные задания.
    CodeChef — это некоммерческая образовательная инициатива индийской софтверной компании. Это глобальное сообщество программистов, объединенное целью обучения и дружеской конкуренции в рамках платформы для соревновательного программирования. Каждый месяц CodeChef проводит три конкурса и раздает призы победителям в качестве поощрения.
    GeeksforGeeks — имеет лучшую коллекцию статей, объяснений и решений по теме алгоритмов и структурам данных. По ссылке вы можете увидеть пример того, как сложный вопрос разбивается на более простые части, объяснение и код решения. Если вы готовитесь к собеседованию, советуем вам использовать этот сайт, чтобы подготовиться и освежить сложные темы в изучении алгоритмов.
    Codeforces — российская платформа для соревнований по программированию, на которой регулярно проводятся турниры, в которых участвуют одни из лучших программистов в мире. Если вы начинающий кодер, задания, скорее всего, будут слишком сложны для вас — вот пример из недавнего соревнования. Для решения этих задач обычно требуются передовые знания в области математики и алгоритмов. Цель Codeforces — предложить разработчикам удобную платформу для создания, проведения и обсуждения соревнований по программированию.
* [ Rosetta Code](http://rosettacode.org/wiki/Rosetta_Code)
* [> By language](http://rosettacode.org/wiki/Category:Programming_Languages)
* [> By task](http://rosettacode.org/wiki/Category:Programming_Tasks)
* [Exercism](https://exercism.io/)
* [cyber-dojo.org/creator/home](https://cyber-dojo.org/creator/home)
* [Entraînez-vous à coder sur des challenges de programmation fun](https://www.codingame.com/start)
* [codewars.com/dashboard](https://www.codewars.com/dashboard)
* [screeps.com/a/#!/sim/tutorial/1](https://screeps.com/a/#!/sim/tutorial/1)
* Daily Coding Problem
* Project Euler
* [the-algorithms.com/](https://the-algorithms.com/)
* [exercism.org/tracks](https://exercism.org/tracks)
* [Code Golf StackExchange](https://codegolf.stackexchange.com/tags)
* [HackerRank](https://www.hackerrank.com/)
* [Problems - LeetCode](https://leetcode.com/problemset/all/)
* [Top Interview Questions - LeetCode](https://leetcode.com/explore/featured/card/top-interview-questions-easy/)
* [Explore - LeetCode](https://leetcode.com/explore/)
* [Code Review Stack Exchange](https://codereview.stackexchange.com/)
* [Coderbyte | The #1 Website for Coding Challenges](https://coderbyte.com/)
* [CodingBat Python](https://codingbat.com/python)
* [codechef.com/](https://www.codechef.com/)
* [CheckiO - coding games and programming challenges for beginner and advanced](https://checkio.org/)
* [Архив - Codeforces](http://codeforces.com/problemset)
* [CodeAbbey - programming problems to practice and learn for beginners](http://www.codeabbey.com/)
* [Brilliant Premium | Brilliant](https://brilliant.org/premium/)
* [Programming Challenges](https://www.reddit.com/r/programmingchallenges/)
* [challenges - dailyprogrammer](https://www.reddit.com/r/dailyprogrammer/wiki/challenges)
* [Timus Online Judge](http://acm.timus.ru/)
* [ZitingShen/Euler-Project](https://github.com/ZitingShen/Euler-Project)
* [muratcorlu.com/euler/](http://muratcorlu.com/euler/)
* [search?utf8=%E2%9C%93&q=euler&type=](https://github.com/search?utf8=%E2%9C%93&q=euler&type=)
* [search?q=project+euler](https://github.com/search?q=project+euler)
* [projecteuler.net/archives](https://projecteuler.net/archives)
* [alefi87/programmers-idea-book: An attempt to complete as many of the projects as](https://github.com/alefi87/programmers-idea-book)
* [ossible from The Programmers Idea Book.](https://github.com/alefi87/programmers-idea-book)
* [P-99: Ninety-Nine Prolog Problems](http://www.ic.unicamp.br/~meidanis/courses/mc336/2009s2/prolog/problemas/)
* [L-99: Ninety-Nine Lisp Problems](http://www.ic.unicamp.br/~meidanis/courses/mc336/2006s2/funcional/L-99_Ninety-Nine_Lisp_Problems.html)
* [The Python Challenge](http://www.pythonchallenge.com/)
* [karan/Projects: A list of practical projects that anyone can solve in any programming language.](https://github.com/karan/Projects)
* [dmoj.ca/problems/](https://dmoj.ca/problems/)
* [Computing Olympiads - Resources](http://usaco.org/index.php?page=resources)
* [Coding Project Solutions](https://github.com/karan/Projects-Solutions/blob/master/README.md)

FIXME## Parsing

* [rainingcomputers.blog/dist/the_path_to_implementing_a_programming_language.md](https://rainingcomputers.blog/dist/the_path_to_implementing_a_programming_language.md)
* [dailystuff.nl/projects/writing-a-6502-emulator-in-python](https://dailystuff.nl/projects/writing-a-6502-emulator-in-python)
* [kernal.eu/about/](https://kernal.eu/about/) (small hacker collective)
* [softdes.olin.edu/](https://softdes.olin.edu/)
* [nesoacademy.org/recommended-books](https://www.nesoacademy.org/recommended-books)
* [Parsing Explained - Computerphile - YouTube](https://www.youtube.com/watch?v=bxpc9Pp5pZM)
* [Building a Parser from scratch. Lecture [1/18]: Tokenizer | Parser - YouTube](https://www.youtube.com/watch?v=4m7ubrdbWQU&t=133s)
* [Types of Parsing in Compiler Design: The Full Explanation in Plain English - History-Computer](https://history-computer.com/types-of-parsing-in-compiler-design/)
* [Parsing - Wikipedia](https://en.wikipedia.org/wiki/Parsing)
* [eugenp/tutorials](https://github.com/eugenp/tutorials)
* [travisstaloch/pegzi](https://github.com/travisstaloch/pegzi)
* parsers (from Neso Academy video)
* top-down, with backtracking → brute forcing
* top-down, without backtracking → recursive descent parsers
* top-down, without backtracking → predive parsers LL(1)
* top-down, without backtracking → predive parsers LL(k)
* bottom-up, operator precedence parsers
* bottom-up, LR parsers → LR(0)
* bottom-up, LR parsers → SLR(1)
* bottom-up, LR parsers → LALR(1)
* bottom-up, LR parsers → CLR(1)
* [fop.davidshekunts.ru/](https://fop.davidshekunts.ru/)
* [8.pdf](https://web.stanford.edu/~jurafsky/slp3/8.pdf)
* [wiki.osdev.org/Main_Page](https://wiki.osdev.org/Main_Page)
* [google.github.io/comprehensive-rust/welcome.html](https://google.github.io/comprehensive-rust/welcome.html)
* read Implementing Programming Languages
* [Beck Testing Framework](https://web.archive.org/web/20150315073817/http://www.xprogramming.com/testfram.htm)
* [add to neorg notes GLR parser - Wikipedia](https://en.wikipedia.org/wiki/GLR_parser)
* [LALR parser - Wikipedia](https://en.wikipedia.org/wiki/LALR_parser)
* [parglare](http://www.igordejanovic.net/parglare/0.16.0/)
* [igordejanovic/parglare: A pure Python scannerless LR/GLR parser - [igordejanovic.net/parglare/](https://github.com/igordejanovic/parglare)
* [Six Commandments for Writing Good Code | Toptal®](https://www.toptal.com/software/six-commandments-of-good-code)
* [Code Forum - Where your coding journey begins](https://codeforum.org/)
* [Neso Academy - YouTube](https://www.youtube.com/@nesoacademy/playlists)
* [ Compiler Design - YouTube](https://www.youtube.com/playlist?list=PLBlnK6fEyqRjT3oJxFXRgjPNzeS-LFY-q)
* [Introduction to Parsers - YouTube](https://www.youtube.com/watch?v=OIKL6wFjFOo)
* [How TRANSISTORS do MATH - YouTube](https://www.youtube.com/watch?v=VBDoT8o4q00)
* [Parsing Algorithms - YouTube](https://www.youtube.com/playlist?list=PLGNbPb3dQJ_6aPNnlBvXGyNMlDtNTqN5I)
* [Building a Parser from scratch - YouTube](https://www.youtube.com/playlist?list=PLGNbPb3dQJ_5FTPfFIg28UxuMpu7k0eT4)
* [Parsing - Computerphile - YouTube](https://www.youtube.com/watch?v=r6vNthpQtSI)

FIXME## testing

* [List of unit testing frameworks - Wikipedia](https://en.wikipedia.org/wiki/List_of_unit_testing_frameworks#Haskell)
* [HUnit: A unit testing framework for Haskell](https://hackage.haskell.org/package/HUnit)
* [Top 9 JavaScript Testing Frameworks (2023 Updated) | BrowserStack](https://www.browserstack.com/guide/top-javascript-testing-frameworks)
* [Top 7 Unit Testing Frameworks: A Quick Comparison](https://brightsec.com/blog/unit-testing-frameworks/)
* [Top Unit Testing Frameworks in 2023 | BrowserStack](https://www.browserstack.com/guide/top-unit-testing-frameworks)
* [How to Write Tests - The Rust Programming Language](https://doc.rust-lang.org/book/ch11-01-writing-tests.html)

FIXME## Hacking

* [Hacklog Volume 1 Anonimato: Manuale Sulla Sicurezza Informatica E Hacking Etico.pdf](https://en.de1lib.org/book/5489693/cb3730)
* [Hacklog Volume 2 Web Hacking: Manuale sulla Sicurezza Informatica e Hacking Etico.pdf](https://en.de1lib.org/book/5489732/afec6e)
* hacking
* [Penetration Testing: A Hands-On Introduction to Hacking.pdf](https://en.de1lib.org/book/2482934/27a641)
* [Mastering Reverse Engineering: Re-engineer your ethical hacking skills](https://en.de1lib.org/book/3675169/498647)
* [¿Alguna vez te has preguntado cómo Bitcoin(y otras criptomonedas) realmente funcionan?](https://www.youtube.com/watch?v=bBC-nXj3Ng4&list=WL&index=403)
* [¿Qué es eso del problema P versus NP?](https://www.youtube.com/watch?v=UR2oDYZ-Sao&list=WL&index=249)
* [[общая семантика] О понятии абстрагирования](https://www.youtube.com/watch?v=ZtPNSuWwsnA&list=PLVWtXi_Jrj_2CjtJJGAArDfyzKg2IVgkp&index=159)
* commentaires de Ruddahbagga sur ELI5: What is information?
* [/r/buildapc - Planning on building a computer but need some advice? This is the place to ask!](https://www.reddit.com/r/buildapc/)
* [A Guide To Parsing: Algorithms And Terminology](https://tomassetti.me/guide-parsing-algorithms-terminology/)
* [A Technical Introduction to Blockchain - Better Programming - Medium](https://medium.com/better-programming/a-technical-introduction-to-blockchain-22ab05308151)
* Big O Notation
* [Coding Theory - Algorithms, Architectures, and Applications](https://b-ok.cc/book/437612/054fae?dsource=recommend)
* [DigiDigger](https://www.youtube.com/c/DigiDigger)
* [edgarredondo.com](http://edgarredondo.com/sistemas-complejidad-tipo-1-teoria-del-caos-complejidad-tipo-2/)
* [Execution (computing) - Wikipedia](https://en.wikipedia.org/wiki/Execution_(computing))
* [Formale Sprachen #30 - CYK-Algorithmus](https://www.youtube.com/watch?v=GNHuct1Lj1E&list=PLVWtXi_Jrj_2CjtJJGAArDfyzKg2IVgkp&index=82)
* [Geoffrey Nunberg - Timeline of Information](http://people.ischool.berkeley.edu/~nunberg/timeline.html)
* [Great Impractical Ideas in Computer Science: PowerPoint Programming](https://www.youtube.com/watch?v=_3loq22TxSc&list=PLVWtXi_Jrj_2CjtJJGAArDfyzKg2IVgkp&index=139)
* [How do programs draw to the screen?](https://www.reddit.com/r/AskProgramming/comments/id6mta/how_do_programs_draw_to_the_screen/)
* [How Do Touchscreens Work? - YouTube](https://www.youtube.com/watch?v=wKuqNuzM1oM)
* [abcnews.go.com/Technology/10-tech-visionaries-innovators/story?id=14681441](http://abcnews.go.com/Technology/10-tech-visionaries-innovators/story?id=14681441)
* [there.oughta.be/](http://there.oughta.be/)
* [alt-codes.net/](http://www.alt-codes.net/)
* [en.wikipedia.org/wiki/Binary_number](https://en.wikipedia.org/wiki/Binary_number)
* [en.wikipedia.org/wiki/Boolean_algebra](https://en.wikipedia.org/wiki/Boolean_algebra)
* [en.wikipedia.org/wiki/Execution_(computing)](https://en.wikipedia.org/wiki/Execution_(computing))
* [en.wikipedia.org/wiki/Turing_machine](https://en.wikipedia.org/wiki/Turing_machine)
* [islidedocs.net/document/maquinas-de-turing-dr-san-bruno-de-la-cruz-lisardo](https://islidedocs.net/document/maquinas-de-turing-dr-san-bruno-de-la-cruz-lisardo)
* [bigocheatsheet.com/](https://www.bigocheatsheet.com/)
* [Intro to Recursion](https://people.eecs.berkeley.edu/~bh/pdf/v1ch07.pdf)
* [Komplexität](https://www.youtube.com/playlist?list=PLG_1tsKrsKVOmNXayMalnfBJaQE5lVBis)
* [Kontextfreie Grammatik – Wikipedia](https://de.wikipedia.org/wiki/Kontextfreie_Grammatik)
* [La machine de Turing | Intelligence Artificielle 4](https://youtu.be/zlPWnNxBUCY)
* [Lambda calculus - Lambda Calculus](https://crypto.stanford.edu/~blynn/lambda/)
* [P versus NP y la complejidad computacional Zoo](https://www.youtube.com/watch?v=YX40hbAHx3s&list=PLVWtXi_Jrj_14rUJDWFEvyhOmYF2JdHmk&index=55)
* [P vs NP - Passe-science #18](https://www.youtube.com/watch?v=8TrIW-4kfRg&list=WL&index=313)
* [parsing eine zusammenfassung pdf - Поиск в Google](https://www.google.com/search?q=parsing+eine+zusammenfassung+pdf&rlz=1C5CHFA_enUS800US800&oq=parsing+eine+zusammenfassung+pdf&aqs=chrome..69i57.6255j0j4&sourceid=chrome&ie=UTF-8)
* [Parsing Explained - Computerphile](https://www.youtube.com/watch?v=bxpc9Pp5pZM&list=PLVWtXi_Jrj_2CjtJJGAArDfyzKg2IVgkp&index=140)
* [parsing.pdf](http://www.cip.ifi.lmu.de/~bruder/ma/HF/cl/parsing/parsing.pdf)
* [pdfcomments: extract comments from PDF](https://github.com/hoffmangroup/pdfcomments)
* [Self-replicating Python code | Quine](https://www.youtube.com/watch?v=a-zEbokJAgY)
* [Short Lesson - Compilation vs Interpretation](https://www.youtube.com/watch?v=JNMy969SjyU&list=PLVWtXi_Jrj_14rUJDWFEvyhOmYF2JdHmk&index=33)
* [Step-by-Step visual compiller](https://www.reddit.com/r/learnjava/comments/dnbf20/stepbystep_visual_compiller/)
* [Turing Equivalent vs. Turing Complete](https://scienceblogs.com/goodmath/2007/01/05/turing-equivalent-vs-turing-co)
* [Turingmaschine – Wikipedia](https://de.wikipedia.org/wiki/Turingmaschine#Formale_Definition)
* [TypeIt - Type accent marks, diacritics and foreign letters online](http://www.typeit.org/)
* [What Is Dynamic Programming and How To Use It](https://www.youtube.com/watch?v=vYquumk4nWw&list=PLVWtXi_Jrj_2CjtJJGAArDfyzKg2IVgkp&index=3)
* [Wireshark · Go Deep.](https://www.wireshark.org/)
* [Кельтон В., Лоу А. - Имитационное моделирование. Классика CS. 3-е изд. (Классика Computer Science) - 2004.djvu](https://vk.com/doc44301783_453645369?hash=849bd9db9777deab31&dl=51ce9c45b46d03b720)
* [Конечный автомат — Википедия](https://ru.wikipedia.org/wiki/%D0%9A%D0%BE%D0%BD%D0%B5%D1%87%D0%BD%D1%8B%D0%B9_%D0%B0%D0%B2%D1%82%D0%BE%D0%BC%D0%B0%D1%82)
* [Лекция 22: Формальная семантика языков функционального программирования](https://www.youtube.com/watch?v=eIoZ7FbIKhw&list=PLVWtXi_Jrj_2CjtJJGAArDfyzKg2IVgkp&index=156)
* [Ликбез: коды, исправляющие ошибки | Александр Шень](https://www.youtube.com/watch?v=DNCpIo1Gjco&list=PL-_cKNuVAYAWUa8VYEouryCuqkx_d4Z0E)
* [Набор символов — Википедия](https://ru.wikipedia.org/wiki/%D0%9D%D0%B0%D0%B1%D0%BE%D1%80_%D1%81%D0%B8%D0%BC%D0%B2%D0%BE%D0%BB%D0%BE%D0%B2)
* [Сложность бесконечных слов](https://www.youtube.com/watch?v=wH6mA3T7PbE&list=PL-_cKNuVAYAXP1qp5Y3Q6r0-8d5DxP-H5)
* [Сложность булевых функций](https://www.youtube.com/watch?v=GDWdmL01qqo&list=PL-_cKNuVAYAWrIb6LiFmvTmcBsFPNy8Yu)
* [Формальные грамматики | Александр Охотин](https://www.youtube.com/watch?v=_YuqR2Ov1II&list=PL-_cKNuVAYAUj2U9fURJEr2bybhr_9iBs)
* [Формальные языки и синтаксический анализ](https://www.youtube.com/watch?v=5yPxDkk4DDo&list=PL-_cKNuVAYAUNxGiqWgHkJMG1SzPDxyYf)
* [Функциональное программирование | Александр Кубенский](https://www.youtube.com/watch?v=V_umQOqZvKs&list=PL-_cKNuVAYAX_vMWzbtmC_DmcDDW7oVRE)
* [Что такое биткоин и как он на самом деле работает?](https://vk.com/wall-32342123_81271)
* [Создание децентрализованных приложений на блокчейн - Помощь в программировании искусственного интеллекта](https://craftappmobile.com/)

FIXME## Best Tips and Hacks

* [careercutler.substack.com/p/the-top-7-software-engineering-workflow](https://careercutler.substack.com/p/the-top-7-software-engineering-workflow)
* [careercutler.substack.com/](https://careercutler.substack.com/)
* [Open Source Guides | Learn how to launch and grow your project.](https://opensource.guide/)

FIXME## general notes on programming languages

* [cs.brown.edu/~adf/programming_languages.html](https://cs.brown.edu/~adf/programming_languages.html)
* [onlinecollegeplan.com/computer-programming-languages/](https://www.onlinecollegeplan.com/computer-programming-languages/)

FIXME## Interview

* [LeetCode Clean Code Handbook: 50 Common Interview Questions](http://library.lol/main/172F5D31191B965FE8CCB5A0F5BECD9A)
* [Cloud Computing Questions](https://www.sanfoundry.com/1000-cloud-computing-questions-answers/)
* [Object Oriented Programming Questions and Answers](https://www.sanfoundry.com/1000-object-oriented-programming-oops-questions-answers/)
* [sanfoundry.com/](https://www.sanfoundry.com/)
* [freecodecamp.org/news/10-common-coding-interview-problems-solved/](https://www.freecodecamp.org/news/10-common-coding-interview-problems-solved/)

FIXME## Gen * & CS

* [In One Lesson - YouTube](https://www.youtube.com/@InOneLesson)
* [How does Computer Hardware Work? 💻🛠🔬 [3D Animated Teardown] - YouTube](https://www.youtube.com/watch?v=d86ws7mQYIg)
* [How a Computer Works - from silicon to apps - YouTube](https://www.youtube.com/watch?v=5f3NJnvnk7k)
* [LanguageParsing - Python Wiki](https://wiki.python.org/moin/LanguageParsing)
* [Library Genesis: Raju Gandhi, Mark Richards, and Neal Ford - Head First Software Architecture (Second Early Release)](https://libgen.is/book/index.php?md5=6ED2F9106FFE1A50DFE53B987D6008EC)
* [Library Genesis: John Ousterhout - Prinzipien des Softwaredesigns: Entwurfsstrategien für komplexe Systeme](https://libgen.is/book/index.php?md5=E7C19BD995D0D61BFC2C56FDBA200DCA)
* [Category Theory for Programming](https://arxiv.org/pdf/2209.01259.pdf)
* [Handouts](https://www.ics.uci.edu/~pattis/ICS-33/handouts.html)
* [ hmemcpy/milewski-ctfp-pdf: Bartosz Milewski's 'Category Theory for Programmers' unofficial PDF and LaTeX source](https://github.com/hmemcpy/milewski-ctfp-pdf)
* [Fundamentals of Software Architecture: An Engineering Approach](http://library.lol/main/6B74DC7529E0DA638669B04943B309B6)
* [Linux: Das umfassende Handbuch](http://library.lol/main/ACC8321ABFC2CA38D1B2A1703DD0A2BA)
* [64-Bit Assembler Programmierung unter Linux](https://www.thalia.de/shop/home/artikeldetails/A1058736107)
* [Linux. Der kompakte Grundkurs. So lernen Sie das Linux-System grundlegend kennen](https://www.thalia.de/shop/home/artikeldetails/A1060319206)
* [heise.de/ratgeber/Programmieren-In-Assembler-hacken-wie-vor-40-Jahren-8928090.html](https://www.heise.de/ratgeber/Programmieren-In-Assembler-hacken-wie-vor-40-Jahren-8928090.html)
Storytelling im UX-Design
* handbuch moderner Softwarearchitektur
Prinzipien des Softwaredesigns
* [coderslegacy.com/comparison-of-sorting-algorithms/](https://coderslegacy.com/comparison-of-sorting-algorithms/)
* [vadimkravcenko.com/shorts/managing-bad-engineers/](https://vadimkravcenko.com/shorts/managing-bad-engineers/)
* [dealing with strong opinions in software development - YouTube](https://www.youtube.com/results?search_query=dealing+with+strong+opinions+in+software+development)
* [Reacting to Controversial Opinions of Software Engineers - YouTube](https://www.youtube.com/watch?v=goy4lZfDtCE)
* [Why Would Anyone Hate TDD? | Prime Reacts - YouTube](https://www.youtube.com/watch?v=0IhsNvUZS3s)
* [The Unicode Standard, Version 15.0 - U2500.pdf](https://www.unicode.org/charts/PDF/U2500.pdf)
* [Dependency Injection, The Best Pattern - YouTube](https://www.youtube.com/watch?v=J1f5b4vcxCQ)
* [Why Do I Shill Arch Linux So Much? - YouTube](https://www.youtube.com/watch?v=lunnbdFdPJE)
* [joshcollinsworth.com/blog/antiquated-react#scaling-isnt-really-a-frontend-concern-anymore](https://joshcollinsworth.com/blog/antiquated-react#scaling-isnt-really-a-frontend-concern-anymore)
* [Cursive: Function Calling - Replit](https://replit.com/@zahid/Cursive-Function-Calling?v=1)
* [computerworld.es/home](https://www.computerworld.es/home)
* [freecodecamp.org/news/mastering-javascript-functions-for-beginners/](https://www.freecodecamp.org/news/mastering-javascript-functions-for-beginners/)
* [Icons - ArchWiki](https://wiki.archlinux.org/title/Icons)
* [Carla Schroder - Linux Cookbook: Essential Skills for Linux Users and System & Network Administrators](https://libgen.is/book/index.php?md5=A9DEAE7D2E948C180F79D5E7C4E3B3F5)
* [Mike Amundsen - RESTful Web API Patterns and Practices Cookbook](https://libgen.is/book/index.php?md5=3DF18B0B933F66DCB0079AFC844959FE)
* [O’Reilly bestsellers](https://t.me/physics_lib/12115)
* [Dr. Bruce Powel Douglass - Agile Model-Based Systems Engineering Cookbook: Improve system development by applying proven recipes for effective agile systems engineering, 2nd Edition](https://libgen.is/book/index.php?md5=1C8FF2E979F1E06545BC1760AE2C7A48)
* [hyperskill.org/tracks](https://hyperskill.org/tracks)
* [mautic.hyperskill.org/email/view/64d3792462174214388877](https://mautic.hyperskill.org/email/view/64d3792462174214388877)
* [hackernoon.com/the-7-software-architecture-books-experienced-developers-need-to-read](https://hackernoon.com/the-7-software-architecture-books-experienced-developers-need-to-read)

FIXME# fcc
{"text": "[freecodecamp.org/learn/](https://www.freecodecamp.org/learn/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/13-awesome-freelance-developer-portfolios/](https://www.freecodecamp.org/news/13-awesome-freelance-developer-portfolios/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/automate-repetitive-tasks-in-excel-with-vba/](https://www.freecodecamp.org/news/automate-repetitive-tasks-in-excel-with-vba/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/discord-ai-chatbot/](https://www.freecodecamp.org/news/discord-ai-chatbot/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/fastapi-helps-you-develop-apis-quickly/](https://www.freecodecamp.org/news/fastapi-helps-you-develop-apis-quickly/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/freecodecamp-july-2021-summit/](https://www.freecodecamp.org/news/freecodecamp-july-2021-summit/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/git-for-professionals/](https://www.freecodecamp.org/news/git-for-professionals/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/github-stars-answer-the-communitys-most-asked-questions/](https://www.freecodecamp.org/news/github-stars-answer-the-communitys-most-asked-questions/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/how-does-the-internet-work/](https://www.freecodecamp.org/news/how-does-the-internet-work/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/how-git-branches-work/](https://www.freecodecamp.org/news/how-git-branches-work/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/how-to-become-a-certified-kubernetes-application-developer/](https://www.freecodecamp.org/news/how-to-become-a-certified-kubernetes-application-developer/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/how-to-start-a-blog-book/](https://www.freecodecamp.org/news/how-to-start-a-blog-book/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/how-to-start-freelancing/](https://www.freecodecamp.org/news/how-to-start-freelancing/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/keyboard-shortcuts-improve-productivity/](https://www.freecodecamp.org/news/keyboard-shortcuts-improve-productivity/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/learn-big-o-notation/](https://www.freecodecamp.org/news/learn-big-o-notation/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/learn-gatsby-version-3/](https://www.freecodecamp.org/news/learn-gatsby-version-3/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/linux-essentials-for-hackers/](https://www.freecodecamp.org/news/linux-essentials-for-hackers/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/logical-fallacies-definition-fallacy-examples/](https://www.freecodecamp.org/news/logical-fallacies-definition-fallacy-examples/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/protect-against-ddos-attacks/](https://www.freecodecamp.org/news/protect-against-ddos-attacks/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/recovering-from-deployment-hell-what-i-learned-from-deploying-my-discord-bot-to-a-1000-user-server/](https://www.freecodecamp.org/news/recovering-from-deployment-hell-what-i-learned-from-deploying-my-discord-bot-to-a-1000-user-server/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/schofields-laws-of-computing/](https://www.freecodecamp.org/news/schofields-laws-of-computing/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/scp-linux-command-example-how-to-ssh-file-transfer-from-remote-to-local/](https://www.freecodecamp.org/news/scp-linux-command-example-how-to-ssh-file-transfer-from-remote-to-local/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/securing-linux-servers-with-se-linux/](https://www.freecodecamp.org/news/securing-linux-servers-with-se-linux/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/the-model-view-controller-pattern-mvc-architecture-and-frameworks-explained/](https://www.freecodecamp.org/news/the-model-view-controller-pattern-mvc-architecture-and-frameworks-explained/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/types-of-software-testing/](https://www.freecodecamp.org/news/types-of-software-testing/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/what-is-a-block-cipher/](https://www.freecodecamp.org/news/what-is-a-block-cipher/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/what-is-an-outlier-definition-and-how-to-find-outliers-in-statistics/](https://www.freecodecamp.org/news/what-is-an-outlier-definition-and-how-to-find-outliers-in-statistics/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/what-is-binary-search/](https://www.freecodecamp.org/news/what-is-binary-search/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/what-is-cross-site-request-forgery/](https://www.freecodecamp.org/news/what-is-cross-site-request-forgery/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/what-is-open-source-software-explained-in-plain-english/](https://www.freecodecamp.org/news/what-is-open-source-software-explained-in-plain-english/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/what-is-software-engineering-how-to-become-a-software-engineer/](https://www.freecodecamp.org/news/what-is-software-engineering-how-to-become-a-software-engineer/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/what-is-web3/](https://www.freecodecamp.org/news/what-is-web3/)", "type": "book", "tags": ["freeCodeCamp", "?", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/learn-how-to-deploy-12-apps-to-aws-azure-google-cloud/](https://www.freecodecamp.org/news/learn-how-to-deploy-12-apps-to-aws-azure-google-cloud/)", "type": "book", "tags": ["freeCodeCamp", "app", "google", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/what-is-an-os-operating-system-definition-for-beginners/](https://www.freecodecamp.org/news/what-is-an-os-operating-system-definition-for-beginners/)", "type": "book", "tags": ["freeCodeCamp", "beginner", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/android-app-development-for-beginners/](https://www.freecodecamp.org/news/android-app-development-for-beginners/)", "type": "book", "tags": ["freeCodeCamp", "beginner", "app", "development", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/computer-basics-for-absolute-beginners/](https://www.freecodecamp.org/news/computer-basics-for-absolute-beginners/)", "type": "book", "tags": ["freeCodeCamp", "beginner", "computer", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/osi-model-computer-networking-for-beginners/](https://www.freecodecamp.org/news/osi-model-computer-networking-for-beginners/)", "type": "book", "tags": ["freeCodeCamp", "beginner", "computer", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/how-to-contribute-to-open-source-projects-beginners-guide/](https://www.freecodecamp.org/news/how-to-contribute-to-open-source-projects-beginners-guide/)", "type": "book", "tags": ["freeCodeCamp", "beginner", "project", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/the-apache-cassandra-beginner-tutorial/](https://www.freecodecamp.org/news/the-apache-cassandra-beginner-tutorial/)", "type": "book", "tags": ["freeCodeCamp", "beginner", "tutorial", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/what-is-the-c-programming-language-beginner-tutorial/](https://www.freecodecamp.org/news/what-is-the-c-programming-language-beginner-tutorial/)", "type": "book", "tags": ["freeCodeCamp", "beginner", "tutorial", "programming", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/build-a-hackintosh/](https://www.freecodecamp.org/news/build-a-hackintosh/)", "type": "book", "tags": ["freeCodeCamp", "build", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/build-a-portfolio-with-vuejs/](https://www.freecodecamp.org/news/build-a-portfolio-with-vuejs/)", "type": "book", "tags": ["freeCodeCamp", "build", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/build-six-node-js-and-express-js/](https://www.freecodecamp.org/news/build-six-node-js-and-express-js/)", "type": "book", "tags": ["freeCodeCamp", "build", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/how-to-build-mario-zelda-and-space-invaders-with-kaboom-js/](https://www.freecodecamp.org/news/how-to-build-mario-zelda-and-space-invaders-with-kaboom-js/)", "type": "book", "tags": ["freeCodeCamp", "build", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/learn-modern-cpp-by-building-an-audio-plugin/](https://www.freecodecamp.org/news/learn-modern-cpp-by-building-an-audio-plugin/)", "type": "book", "tags": ["freeCodeCamp", "building", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/learn-docker-by-building-a-node-express-app/](https://www.freecodecamp.org/news/learn-docker-by-building-a-node-express-app/)", "type": "book", "tags": ["freeCodeCamp", "building", "app", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/learn-react-by-building-an-ecommerce-site/](https://www.freecodecamp.org/news/learn-react-by-building-an-ecommerce-site/)", "type": "book", "tags": ["freeCodeCamp", "building", "react", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/learn-bootstrap-5-and-sass-by-building-a-portfolio-website/](https://www.freecodecamp.org/news/learn-bootstrap-5-and-sass-by-building-a-portfolio-website/)", "type": "book", "tags": ["freeCodeCamp", "building", "website", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/microsoft-security-compliance-certification-sc-900/](https://www.freecodecamp.org/news/microsoft-security-compliance-certification-sc-900/)", "type": "book", "tags": ["freeCodeCamp", "certification", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/what-is-terraform-learn-infrastructure-as-code/](https://www.freecodecamp.org/news/what-is-terraform-learn-infrastructure-as-code/)", "type": "book", "tags": ["freeCodeCamp", "code", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/code-an-endless-runner-game-using-unreal-engine-and-c/](https://www.freecodecamp.org/news/code-an-endless-runner-game-using-unreal-engine-and-c/)", "type": "book", "tags": ["freeCodeCamp", "code", "game", "using", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/why-learning-to-code-is-hard-and-how-to-make-it-easier/](https://www.freecodecamp.org/news/why-learning-to-code-is-hard-and-how-to-make-it-easier/)", "type": "book", "tags": ["freeCodeCamp", "code", "learning", "make", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/code-a-dictionary-with-react-and-material-ui/](https://www.freecodecamp.org/news/code-a-dictionary-with-react-and-material-ui/)", "type": "book", "tags": ["freeCodeCamp", "code", "react", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/low-code-tutorial/](https://www.freecodecamp.org/news/low-code-tutorial/)", "type": "book", "tags": ["freeCodeCamp", "code", "tutorial", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/angular-11-tutorial-code-a-project-from-scratch/](https://www.freecodecamp.org/news/angular-11-tutorial-code-a-project-from-scratch/)", "type": "book", "tags": ["freeCodeCamp", "code", "tutorial", "project", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/vs-code-dark-mode-theme/](https://www.freecodecamp.org/news/vs-code-dark-mode-theme/)", "type": "book", "tags": ["freeCodeCamp", "code", "vs", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/amazon-virtual-private-cloud-course/](https://www.freecodecamp.org/news/amazon-virtual-private-cloud-course/)", "type": "book", "tags": ["freeCodeCamp", "course", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/html-crash-course/](https://www.freecodecamp.org/news/html-crash-course/)", "type": "book", "tags": ["freeCodeCamp", "course", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/devops-engineering-course-for-beginners/](https://www.freecodecamp.org/news/devops-engineering-course-for-beginners/)", "type": "book", "tags": ["freeCodeCamp", "course", "beginner", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/full-javascript-course-for-beginners/](https://www.freecodecamp.org/news/full-javascript-course-for-beginners/)", "type": "book", "tags": ["freeCodeCamp", "course", "beginner", "full", "javascript", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/learn-javascript-in-spanish-full-course-for-beginners/](https://www.freecodecamp.org/news/learn-javascript-in-spanish-full-course-for-beginners/)", "type": "book", "tags": ["freeCodeCamp", "course", "beginner", "full", "javascript", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/game-development-for-beginners-unity-course/](https://www.freecodecamp.org/news/game-development-for-beginners-unity-course/)", "type": "book", "tags": ["freeCodeCamp", "course", "beginner", "game", "development", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/create-your-own-electronics-with-arduino-full-course/](https://www.freecodecamp.org/news/create-your-own-electronics-with-arduino-full-course/)", "type": "book", "tags": ["freeCodeCamp", "course", "create", "full", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/azure-data-fundamentals-certification-dp-900-pass-the-exam-with-this-free-4-5-hour-course/](https://www.freecodecamp.org/news/azure-data-fundamentals-certification-dp-900-pass-the-exam-with-this-free-4-5-hour-course/)", "type": "book", "tags": ["freeCodeCamp", "course", "data", "free", "hour", "thi", "certification", "exam", "pas", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/hands-on-data-science-course/](https://www.freecodecamp.org/news/hands-on-data-science-course/)", "type": "book", "tags": ["freeCodeCamp", "course", "data", "science", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/hashicorp-terraform-associate-certification-study-course-pass-the-exam-with-this-free-12-hour-course/](https://www.freecodecamp.org/news/hashicorp-terraform-associate-certification-study-course-pass-the-exam-with-this-free-12-hour-course/)", "type": "book", "tags": ["freeCodeCamp", "course", "free", "hour", "thi", "certification", "exam", "pas", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/azure-administrator-certification-az-104-pass-the-exam-with-this-free-11-hour-course/](https://www.freecodecamp.org/news/azure-administrator-certification-az-104-pass-the-exam-with-this-free-11-hour-course/)", "type": "book", "tags": ["freeCodeCamp", "course", "free", "hour", "thi", "exam", "certification", "pas", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/ivy-league-free-online-courses-a0d7ae675869/](https://www.freecodecamp.org/news/ivy-league-free-online-courses-a0d7ae675869/)", "type": "book", "tags": ["freeCodeCamp", "course", "free", "online", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/free-online-programming-cs-courses/](https://www.freecodecamp.org/news/free-online-programming-cs-courses/)", "type": "book", "tags": ["freeCodeCamp", "course", "free", "programming", "online", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/learn-react-js-in-this-free-7-hour-course/](https://www.freecodecamp.org/news/learn-react-js-in-this-free-7-hour-course/)", "type": "book", "tags": ["freeCodeCamp", "course", "free", "react", "hour", "thi", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/learn-angular-full-course/](https://www.freecodecamp.org/news/learn-angular-full-course/)", "type": "book", "tags": ["freeCodeCamp", "course", "full", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/uml-diagrams-full-course/](https://www.freecodecamp.org/news/uml-diagrams-full-course/)", "type": "book", "tags": ["freeCodeCamp", "course", "full", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/vue-3-full-course/](https://www.freecodecamp.org/news/vue-3-full-course/)", "type": "book", "tags": ["freeCodeCamp", "course", "full", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/google-cloud-digital-leader-course/](https://www.freecodecamp.org/news/google-cloud-digital-leader-course/)", "type": "book", "tags": ["freeCodeCamp", "course", "google", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/natural-language-processing-with-spacy-python-full-course/](https://www.freecodecamp.org/news/natural-language-processing-with-spacy-python-full-course/)", "type": "book", "tags": ["freeCodeCamp", "course", "python", "full", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/backend-web-development-with-python-full-course/](https://www.freecodecamp.org/news/backend-web-development-with-python-full-course/)", "type": "book", "tags": ["freeCodeCamp", "course", "python", "full", "development", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/create-complex-graphics-with-opengl/](https://www.freecodecamp.org/news/create-complex-graphics-with-opengl/)", "type": "book", "tags": ["freeCodeCamp", "create", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/how-to-create-3d-and-2d-graphics-with-opengl-and-cpp/](https://www.freecodecamp.org/news/how-to-create-3d-and-2d-graphics-with-opengl-and-cpp/)", "type": "book", "tags": ["freeCodeCamp", "create", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/create-a-mern-stack-app-with-a-serverless-backend/](https://www.freecodecamp.org/news/create-a-mern-stack-app-with-a-serverless-backend/)", "type": "book", "tags": ["freeCodeCamp", "create", "app", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/create-an-android-app/](https://www.freecodecamp.org/news/create-an-android-app/)", "type": "book", "tags": ["freeCodeCamp", "create", "app", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/how-to-create-an-email-newsletter-design-layout-send/](https://www.freecodecamp.org/news/how-to-create-an-email-newsletter-design-layout-send/)", "type": "book", "tags": ["freeCodeCamp", "create", "design", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/learn-how-to-create-a-design-system-in-figma/](https://www.freecodecamp.org/news/learn-how-to-create-a-design-system-in-figma/)", "type": "book", "tags": ["freeCodeCamp", "create", "design", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/learn-how-to-create-an-instagram-clone-using-react/](https://www.freecodecamp.org/news/learn-how-to-create-an-instagram-clone-using-react/)", "type": "book", "tags": ["freeCodeCamp", "create", "react", "using", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/how-to-make-a-video-game-create-your-own-game-from-scratch-tutorial/](https://www.freecodecamp.org/news/how-to-make-a-video-game-create-your-own-game-from-scratch-tutorial/)", "type": "book", "tags": ["freeCodeCamp", "create", "tutorial", "game", "make", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/css-position-property-explained/](https://www.freecodecamp.org/news/css-position-property-explained/)", "type": "book", "tags": ["freeCodeCamp", "css", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/learn-css-flexbox/](https://www.freecodecamp.org/news/learn-css-flexbox/)", "type": "book", "tags": ["freeCodeCamp", "css", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/10-css-tricks-for-your-next-coding-project/](https://www.freecodecamp.org/news/10-css-tricks-for-your-next-coding-project/)", "type": "book", "tags": ["freeCodeCamp", "css", "project", "coding", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/exploratory-data-analysis-with-numpy-pandas-matplotlib-seaborn/](https://www.freecodecamp.org/news/exploratory-data-analysis-with-numpy-pandas-matplotlib-seaborn/)", "type": "book", "tags": ["freeCodeCamp", "data", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/teach-yourself-data-analytics-in-30-days/](https://www.freecodecamp.org/news/teach-yourself-data-analytics-in-30-days/)", "type": "book", "tags": ["freeCodeCamp", "data", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/23-common-data-science-interview-questions-for-beginners/](https://www.freecodecamp.org/news/23-common-data-science-interview-questions-for-beginners/)", "type": "book", "tags": ["freeCodeCamp", "data", "beginner", "science", "interview", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/building-a-data-science-curriculum-with-advanced-math-and-machine-learning/](https://www.freecodecamp.org/news/building-a-data-science-curriculum-with-advanced-math-and-machine-learning/)", "type": "book", "tags": ["freeCodeCamp", "data", "building", "science", "learning", "machine", "math", "advanced", "curriculum", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/how-to-design-good-typography/](https://www.freecodecamp.org/news/how-to-design-good-typography/)", "type": "book", "tags": ["freeCodeCamp", "design", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/ui-ux-design-guide/](https://www.freecodecamp.org/news/ui-ux-design-guide/)", "type": "book", "tags": ["freeCodeCamp", "design", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/get-ready-to-pass-cissp-exam/](https://www.freecodecamp.org/news/get-ready-to-pass-cissp-exam/)", "type": "book", "tags": ["freeCodeCamp", "exam", "pas", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/learn-solidity-blockchain-and-smart-contracts-in-a-free/](https://www.freecodecamp.org/news/learn-solidity-blockchain-and-smart-contracts-in-a-free/)", "type": "book", "tags": ["freeCodeCamp", "free", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/free-coding-bootcamp-based-on-freecodecamp](https://www.freecodecamp.org/news/free-coding-bootcamp-based-on-freecodecamp)", "type": "book", "tags": ["freeCodeCamp", "free", "coding", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/free-textbooks-math-science-and-more-online-pdf-for-college-and-high-school/](https://www.freecodecamp.org/news/free-textbooks-math-science-and-more-online-pdf-for-college-and-high-school/)", "type": "book", "tags": ["freeCodeCamp", "free", "science", "math", "online", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/what-is-a-full-stack-developer-back-end-front-end-full-stack-engineer/](https://www.freecodecamp.org/news/what-is-a-full-stack-developer-back-end-front-end-full-stack-engineer/)", "type": "book", "tags": ["freeCodeCamp", "full", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/introduction-to-evolutionary-game-theory/](https://www.freecodecamp.org/news/introduction-to-evolutionary-game-theory/)", "type": "book", "tags": ["freeCodeCamp", "game", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/from-lawyer-to-google-engineer/](https://www.freecodecamp.org/news/from-lawyer-to-google-engineer/)", "type": "book", "tags": ["freeCodeCamp", "google", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/learn-google-sheets/](https://www.freecodecamp.org/news/learn-google-sheets/)", "type": "book", "tags": ["freeCodeCamp", "google", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/the-docker-handbook/](https://www.freecodecamp.org/news/the-docker-handbook/)", "type": "book", "tags": ["freeCodeCamp", "handbook", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/the-nginx-handbook/](https://www.freecodecamp.org/news/the-nginx-handbook/)", "type": "book", "tags": ["freeCodeCamp", "handbook", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/graph-algorithms-for-technical-interviews/](https://www.freecodecamp.org/news/graph-algorithms-for-technical-interviews/)", "type": "book", "tags": ["freeCodeCamp", "interview", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/how-to-implement-binary-tree-algorithms-in-technical-interviews/](https://www.freecodecamp.org/news/how-to-implement-binary-tree-algorithms-in-technical-interviews/)", "type": "book", "tags": ["freeCodeCamp", "interview", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/solve-coding-interview-backtracking-problem/](https://www.freecodecamp.org/news/solve-coding-interview-backtracking-problem/)", "type": "book", "tags": ["freeCodeCamp", "interview", "coding", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/learn-javascript-form-validation-by-making-a-form/](https://www.freecodecamp.org/news/learn-javascript-form-validation-by-making-a-form/)", "type": "book", "tags": ["freeCodeCamp", "javascript", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/what-is-the-dom-document-object-model-meaning-in-javascript/](https://www.freecodecamp.org/news/what-is-the-dom-document-object-model-meaning-in-javascript/)", "type": "book", "tags": ["freeCodeCamp", "javascript", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/the-javascript-array-handbook/](https://www.freecodecamp.org/news/the-javascript-array-handbook/)", "type": "book", "tags": ["freeCodeCamp", "javascript", "handbook", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/javascript-lexical-scope-tutorial/](https://www.freecodecamp.org/news/javascript-lexical-scope-tutorial/)", "type": "book", "tags": ["freeCodeCamp", "javascript", "tutorial", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/synchronous-vs-asynchronous-in-javascript/](https://www.freecodecamp.org/news/synchronous-vs-asynchronous-in-javascript/)", "type": "book", "tags": ["freeCodeCamp", "javascript", "vs", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/how-to-learn-programming/](https://www.freecodecamp.org/news/how-to-learn-programming/)", "type": "book", "tags": ["freeCodeCamp", "programming", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/understanding-recursion-in-programming/](https://www.freecodecamp.org/news/understanding-recursion-in-programming/)", "type": "book", "tags": ["freeCodeCamp", "programming", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/how-to-deploy-your-freecodecamp-project-on-aws/](https://www.freecodecamp.org/news/how-to-deploy-your-freecodecamp-project-on-aws/)", "type": "book", "tags": ["freeCodeCamp", "project", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/how-to-set-up-a-front-end-development-project/](https://www.freecodecamp.org/news/how-to-set-up-a-front-end-development-project/)", "type": "book", "tags": ["freeCodeCamp", "project", "development", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/](https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/)", "type": "book", "tags": ["freeCodeCamp", "python", "beginner", "code", "tutorial", "coding", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/advanced-computer-vision-with-python/](https://www.freecodecamp.org/news/advanced-computer-vision-with-python/)", "type": "book", "tags": ["freeCodeCamp", "python", "computer", "advanced", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/django-project-create-a-digital-resume-using-django-and-python/](https://www.freecodecamp.org/news/django-project-create-a-digital-resume-using-django-and-python/)", "type": "book", "tags": ["freeCodeCamp", "python", "create", "project", "using", "django", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/learn-algorithms-and-data-structures-in-python/](https://www.freecodecamp.org/news/learn-algorithms-and-data-structures-in-python/)", "type": "book", "tags": ["freeCodeCamp", "python", "data", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/learn-data-structures-flask-api-python/](https://www.freecodecamp.org/news/learn-data-structures-flask-api-python/)", "type": "book", "tags": ["freeCodeCamp", "python", "data", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/django-for-everybody-learn-the-popular-python-framework-from-dr-chuck/](https://www.freecodecamp.org/news/django-for-everybody-learn-the-popular-python-framework-from-dr-chuck/)", "type": "book", "tags": ["freeCodeCamp", "python", "django", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/how-to-integrate-google-apis-with-python-django/](https://www.freecodecamp.org/news/how-to-integrate-google-apis-with-python-django/)", "type": "book", "tags": ["freeCodeCamp", "python", "google", "django", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/how-to-use-opencv-and-python-for-computer-vision-and-ai/](https://www.freecodecamp.org/news/how-to-use-opencv-and-python-for-computer-vision-and-ai/)", "type": "book", "tags": ["freeCodeCamp", "python", "use", "computer", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/use-the-kivy-python-library-to-create-games-and-mobile-apps/](https://www.freecodecamp.org/news/use-the-kivy-python-library-to-create-games-and-mobile-apps/)", "type": "book", "tags": ["freeCodeCamp", "python", "use", "create", "game", "app", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/python-for-bioinformatics-use-machine-learning-and-data-analysis-for-drug-discovery/](https://www.freecodecamp.org/news/python-for-bioinformatics-use-machine-learning-and-data-analysis-for-drug-discovery/)", "type": "book", "tags": ["freeCodeCamp", "python", "use", "data", "learning", "machine", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/how-to-automate-things-using-python/](https://www.freecodecamp.org/news/how-to-automate-things-using-python/)", "type": "book", "tags": ["freeCodeCamp", "python", "using", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/learn-django-3-and-start-creating-websites-with-python/](https://www.freecodecamp.org/news/learn-django-3-and-start-creating-websites-with-python/)", "type": "book", "tags": ["freeCodeCamp", "python", "website", "django", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/designing-keyboard-accessibility-for-complex-react-experiences/](https://www.freecodecamp.org/news/designing-keyboard-accessibility-for-complex-react-experiences/)", "type": "book", "tags": ["freeCodeCamp", "react", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/whats-new-in-react-18/](https://www.freecodecamp.org/news/whats-new-in-react-18/)", "type": "book", "tags": ["freeCodeCamp", "react", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/how-to-make-2048-game-in-react/](https://www.freecodecamp.org/news/how-to-make-2048-game-in-react/)", "type": "book", "tags": ["freeCodeCamp", "react", "game", "make", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/html-css-tutorial-build-a-recipe-website/](https://www.freecodecamp.org/news/html-css-tutorial-build-a-recipe-website/)", "type": "book", "tags": ["freeCodeCamp", "tutorial", "website", "css", "build", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/how-to-use-opentelemetry/](https://www.freecodecamp.org/news/how-to-use-opentelemetry/)", "type": "book", "tags": ["freeCodeCamp", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/how-to-use-small-sustainable-habits-to-get-your-first-dev-job/](https://www.freecodecamp.org/news/how-to-use-small-sustainable-habits-to-get-your-first-dev-job/)", "type": "book", "tags": ["freeCodeCamp", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/learn-to-use-the-mysql-database/](https://www.freecodecamp.org/news/learn-to-use-the-mysql-database/)", "type": "book", "tags": ["freeCodeCamp", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/how-to-use-tensorflow-for-computer-vision/](https://www.freecodecamp.org/news/how-to-use-tensorflow-for-computer-vision/)", "type": "book", "tags": ["freeCodeCamp", "computer", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/use-selenium-to-create-a-web-scraping-bot/](https://www.freecodecamp.org/news/use-selenium-to-create-a-web-scraping-bot/)", "type": "book", "tags": ["freeCodeCamp", "create", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/how-to-use-css-media-queries-to-create-responsive-websites/](https://www.freecodecamp.org/news/how-to-use-css-media-queries-to-create-responsive-websites/)", "type": "book", "tags": ["freeCodeCamp", "create", "website", "css", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/use-css-selectors-to-style-webpage/](https://www.freecodecamp.org/news/use-css-selectors-to-style-webpage/)", "type": "book", "tags": ["freeCodeCamp", "css", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/use-pyspark-for-data-processing-and-machine-learning/](https://www.freecodecamp.org/news/use-pyspark-for-data-processing-and-machine-learning/)", "type": "book", "tags": ["freeCodeCamp", "data", "learning", "machine", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/how-to-use-currying-and-composition-in-javascript/](https://www.freecodecamp.org/news/how-to-use-currying-and-composition-in-javascript/)", "type": "book", "tags": ["freeCodeCamp", "javascript", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/learn-how-to-use-the-chrome-devtools-to-troubleshoot-websites/](https://www.freecodecamp.org/news/learn-how-to-use-the-chrome-devtools-to-troubleshoot-websites/)", "type": "book", "tags": ["freeCodeCamp", "website", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/how-to-use-figma-to-design-websites/](https://www.freecodecamp.org/news/how-to-use-figma-to-design-websites/)", "type": "book", "tags": ["freeCodeCamp", "website", "design", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/ipv4-vs-ipv6-what-is-the-difference-between-ip-addressing-schemes/](https://www.freecodecamp.org/news/ipv4-vs-ipv6-what-is-the-difference-between-ip-addressing-schemes/)", "type": "book", "tags": ["freeCodeCamp", "vs", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/tcp-vs-udp-which-is-faster/](https://www.freecodecamp.org/news/tcp-vs-udp-which-is-faster/)", "type": "book", "tags": ["freeCodeCamp", "vs", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},
{"text": "[freecodecamp.org/news/how-to-make-a-website-with-wordpress/](https://www.freecodecamp.org/news/how-to-make-a-website-with-wordpress/)", "type": "book", "tags": ["freeCodeCamp", "website", "make", ""], "status": "toRead", "rating": "", "language": "", "extraTags": {}},

FIXME# Reading-Linux, etc

FIXME## Recent Linux Reading

* [laptops](https://www.wired.com/story/best-linux-laptops/)
* [yiffOS](https://yiffos.gay/)
* [access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/networking_guide/index](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/networking_guide/index)
* [Home Clear Linux* Project | Clear Linux* Project](https://clearlinux.org/)
* [Ranking Linux Desktop Environments for 2023 - YouTube](https://www.youtube.com/watch?v=09cYQJBgKEs)
* [DerivativeTeam/Derivatives - Ubuntu Wiki](https://wiki.ubuntu.com/DerivativeTeam/Derivatives)
* [Zorin OS - Make your computer better.](https://zorin.com/os/)
* [Part I. Introduction](https://www.linuxfromscratch.org/blfs/view/svn/introduction/introduction.html)
* [Read LFS Online](https://www.linuxfromscratch.org/lfs/read.html)
* [Ubuntu 22.04 | Installati.one](https://installati.one/ubuntu/22.04/)
* [Why Debian is a cool Linux distro - YouTube](https://www.youtube.com/watch?v=UgBjh0PFRz4)
* [Vanilla OS Is Not Your Ordinary Linux Distro - YouTube](https://www.youtube.com/watch?v=yajUbh0H6-s)
* [itsfoss.com/install-kde-on-ubuntu/](https://itsfoss.com/install-kde-on-ubuntu/)
* [The Making of Linux: The World's First Open-Source Operating System - YouTube](https://www.youtube.com/watch?v=E0Q9KnYSVLc)
* [ubuntu package security checks - Google Search](https://www.google.com/search?client=firefox-b-d&q=ubuntu+package+security+checks)
* [Security | Ubuntu](https://ubuntu.com/security)
* [Repology](https://repology.org/)
* [Installation And First Look Of PCLinuxOS (An Oldie But A Goodie!) - YouTube](https://www.youtube.com/watch?v=aGkuSThSuTQ)
* [heise.de/tests/Innovative-Linux-Distribution-Vanilla-OS-im-Test-7524938.html?seite=3](https://www.heise.de/tests/Innovative-Linux-Distribution-Vanilla-OS-im-Test-7524938.html?seite=3)
* [Haiku Is Such A Unique Operating System - YouTube](https://www.youtube.com/watch?v=-KoI1Wz7wE8)
* [kdl.dev/](https://kdl.dev/)
* [Linux sucks](https://www.youtube.com/watch?v=TVHcdgrqbHE)

FIXME## Articles

* [Free Software](https://en.wikipedia.org/wiki/Free_software) - Wikipedia entry on the topic of free software.
* ['Libre' Software: Turning Fads into Institutions?](https://www.sciencedirect.com/science/article/pii/S0048733302000033) - Academic article presenting an economic analysis of libre software and its sustainability.
* [Software Freedom](https://devuan.org/os/free-software) - Short, simple explanation of why free software is important from Devuan.

FIXME## Talks

* [Agustín Benito: Free Software, Beyond Software (TEDxLaLaguna)](https://www.youtube.com/watch?v=_2Qq072wIDk) (Español)
* [Eben Moglen: How I Discovered Free Software](https://www.youtube.com/watch?v=uKxzK9xtSXM)
* [Prof. Nagarjuna G: Free Software for Digital India](https://www.youtube.com/watch?v=O1A4UZqPtMQ)
* [Richard Stallman: Free Software, Free Society (TEDxGeneva 2014)](https://www.youtube.com/watch?v=Ag1AKIl_2GM)
* [Stephen Fry: Free Software](https://www.youtube.com/watch?v=YGbMbF0mdPU)
* [Wrishiraj Kaushik: I Am Not a Free Software Guy](https://www.youtube.com/watch?v=KQCC5oSfAYo)

FIXME## Documentaries

* 2019: [Hacking for the Commons, by Philippe Borrel](https://vimeo.com/channels/1540870/393778517)

FIXME## SORT

* sonntagsOS

* learn systemd and its controversies and alternatives
* [10 ways KDE is just BETTER](https://youtu.be/3nX1YEQg5Z0)
* [en.wikipedia.org/wiki/Linux_console](https://en.wikipedia.org/wiki/Linux_console)
* [explainshell.com/](https://explainshell.com/)
* [xtermjs/xterm.js/](https://github.com/xtermjs/xterm.js/)
* [linusakesson.net/programming/tty/*](http://www.linusakesson.net/programming/tty/*) [read -r - Google Search](https://www.google.com/search?client=firefox-b-d&q=read+-r)
* [The Linux Kernel - Explained in an Easy to Understand Way - LinuxForDevices](https://www.linuxfordevices.com/tutorials/linux/linux-kernel)
* learn the basics and theory behind booting and boot systems     * [Mastering Linux Device Driver Development: Write custom device drivers to support computer peripherals in Linux operating systems](http://library.lol/main/1AADA903BA5864B644936811371911A0)
* [Linux Kernel Programming Part 2 - Char Device Drivers and Kernel Synchronization](http://library.lol/main/F3C3DD0F5D1B8400A53F04F6120E1497)
* [Essential Linux Device Drivers](http://library.lol/main/818F44C26B71502D7F8FE76C8E14544A)
* [Linux Device Drivers](http://library.lol/main/A6E50843003816AE68F62BD0E0DD39D6)
* [Baeldung on Linux](https://www.baeldung.com/linux/)
* [ls -al output is -rw------T](https://www.unix.com/unix-for-dummies-questions-and-answers/21352-ls-al-output-rw-t.html)
* [How to Change Group Ownership of a File (System Administration Guide: Security Services)](https://docs.oracle.com/cd/E19683-01/816-4883/6mb2joat3/index.html)
* [linusakesson.net/programming/tty/](http://www.linusakesson.net/programming/tty/)
* [gnome - Dead keys no longer work in some applications since Ubuntu Jammy - Ask Ubuntu](https://askubuntu.com/questions/1404613/dead-keys-no-longer-work-in-some-applications-since-ubuntu-jammy)
* [Signatures couldn't be verified - public key - Ubuntu 20.04 Focal · Issue #1181 · nodesource/distributions](https://github.com/nodesource/distributions/issues/1181)
* [Set Up SSH Keys on Ubuntu 20.04](https://www.cloudpanel.io/tutorial/set-up-ssh-keys-on-ubuntu-20-04/)
* [apt - How do I fix the GPG error "NO_PUBKEY"? - Ask Ubuntu](https://askubuntu.com/questions/13065/how-do-i-fix-the-gpg-error-no-pubkey)
* [tree: ignore directories with patterns](https://zaiste.net/posts/tree-ignore-directories-patterns/)
* [peropesis.org/](https://peropesis.org/)
* [1000 Linux Questions & Answers](https://www.sanfoundry.com/technical-interview-questions/)
* [Linux Kernel source code - Haevily Commented (Kernel Version 0.12)
* [2019 ed.](http://libgen.is/book/index.php?md5=002593EDE5F8004A784483A0FAF4AE29)
* [freecodecamp.org/news/how-to-install-arch-linux/](https://www.freecodecamp.org/news/how-to-install-arch-linux/)
* [wiki.archlinux.org/](https://wiki.archlinux.org/)
* [kali.org/docs/introduction/what-is-kali-linux/](https://www.kali.org/docs/introduction/what-is-kali-linux/)
* [wiki.gentoo.org/wiki/Handbook:Main_Page](https://wiki.gentoo.org/wiki/Handbook:Main_Page)
* [Linux from Scratch](http://libgen.is/search.php?&req=linux+from+scratch&phrase=1&view=simple&column=def&sort=year&sortmode=DESC)
* [opensuse.org/](https://www.opensuse.org/)
* [en.opensuse.org/Main_Page](https://en.opensuse.org/Main_Page)
* [upload.wikimedia.org/wikipedia/commons/1/1b/Linux_Distribution_Timeline.svg](https://upload.wikimedia.org/wikipedia/commons/1/1b/Linux_Distribution_Timeline.svg)
* [buildyourownlinux.com](http://www.buildyourownlinux.com/)
* [tldp.org/](https://tldp.org/)
* [Guake User Documentation — Guake 1.0 documentation](https://guake.readthedocs.io/en/stable/)
* [wiki.ubuntu.com/Spanish](https://wiki.ubuntu.com/Spanish)
* [docs.fedoraproject.org/fr/docs/](https://docs.fedoraproject.org/fr/docs/)
* [Ubuntu - A Beginner's Guide](http://cdn.makeuseof.com/wp-content/uploads/2017/10/Ubuntu-A-Beginner%E2%80%99s-Guide.pdf)
* [Chapter 1. Welcome to Ubuntu](https://help.ubuntu.com/lts/installation-guide/s390x/ch01.html)
* [Tips, Tutorials and Guides Index - Tips, Tricks and Tutorials - Ubuntu MATE Community](https://ubuntu-mate.community/t/tips-tutorials-and-guides-index/14519/2)
* [27 Best Linux Tutorial Books That You Need To Download Now](https://www.ubuntupit.com/27-best-linux-tutorial-books-need-download-now/)
* [willmcgugan/rich: Rich is a Python library for rich text and beautiful formatting in the terminal.](https://github.com/willmcgugan/rich)
* [charmbracelet/glow: Render markdown on the CLI, with pizzazz! 💅🏻](https://github.com/charmbracelet/glow)
* [Linux | Physics.Math.Code.Books](https://vk.com/topic-51126445_32152962)
* [Путівник про Linux](https://linuxguide.rozh2sch.org.ua/)
* [Learning the Linux File System](https://www.youtube.com/watch?v=HIXzJ3Rz9po&list=WL&index=410)
* [Linux File System/Structure Explained!](https://www.youtube.com/watch?v=HbgzrKJvDRw&list=PLVWtXi_Jrj_2CjtJJGAArDfyzKg2IVgkp&index=147)
* [Ubuntu 18.10 vs Fedora 29 - a different focus.](https://www.youtube.com/watch?v=LELgtzzu7sQ&list=WL&index=440)
* [Unix vs Linux](https://www.youtube.com/watch?v=jowCUo_UGts&list=WL&index=392)
* The Linux Command Line
* [A Guide To The Best Laptops For Linux 2019 - Make A Website Hub](https://makeawebsitehub.com/best-laptops-linux/#best-laptops-for-linux)
* [Best Linux laptops of 2019: the top open-source notebooks | TechRadar](https://www.techradar.com/news/best-linux-laptops)
* [Debian -- Revendeurs d'ordinateurs qui préinstallent Debian](https://www.debian.org/distrib/pre-installed#de)
* [The 8 Best Linux Laptops of 2019](https://www.lifewire.com/best-linux-laptops-4582617)
* [The Best Linux Laptops - Top Laptops for Ubuntu & other Linux Distros](https://laptopunderbudget.com/best-linux-laptops/)
* [24 Best laptops for Linux as of 2019 - Slant](https://www.slant.co/topics/1184/~best-laptops-for-linux)
* [XPS 13"-4K-Laptop der 8. Generation mit Touchscreen und HD-Webcam | Dell Deutschland](https://www.dell.com/de-de/shop/laptops-2-in-1-pcs/xps-13-laptop/spd/xps-13-9380-laptop)
* [16 Places To Buy A Linux Laptop With Linux Preloaded - nixCraft](https://www.cyberciti.biz/hardware/laptop-computers-with-linux-installed-or-preloaded/)
* [10 super sweet laptops that come with Linux pre-installed - Page 10 | ZDNet](https://www.zdnet.com/pictures/10-super-sweet-laptops-that-come-with-linux-pre-installed/10/)
* [Best 10 Laptops for Linux – Linux Hint](https://linuxhint.com/best_10_laptops_linux/)
* [5 Awesome Linux Laptops You Can Buy Right Now](https://www.makeuseof.com/tag/three-awesome-linux-laptops-can-buy-right-now/)
* [10 Places to Buy Linux Laptops in 2019](https://itsfoss.com/get-linux-laptops/)
* [*Pop OS Review: Is This Beautiful Linux Distribution Worth Your Time?](https://itsfoss.com/pop-os-linux-review/)
* [Linux Kernel Tutorial for Beginners – Linux Hint](https://linuxhint.com/linux-kernel-tutorial-beginners/)
* [Slurm Workload Manager](https://slurm.schedmd.com/squeue.html)
* [The Linux Command Line by William E. Shotts, Jr.](http://linuxcommand.org/tlcl.php)
* [Unix/Linux Kurzskript](http://www.roesen.org/files/unix_1_geschichtliches.pdf)
* [What is Linux? | Linux.com | The source for Linux information](https://www.linux.com/what-is-linux)
* [Путівник по Linux](https://linuxguide.rozh2sch.org.ua/)
* [Ubuntu Linux с нуля [2018] Волох.pdf](https://vk.com/doc44301783_514313769?hash=322a4ab221b3a495f9&dl=7d91c96387499e694f)
* [conqueringthecommandline.com/book/basics](http://conqueringthecommandline.com/book/basics)
* [Guide to useful Linux documentation - Fedora Project Wiki](https://fedoraproject.org/wiki/Guide_to_useful_Linux_documentation)
* [hypexr.org/linux_scp_help.php](http://www.hypexr.org/linux_scp_help.php)
* [askubuntu.com/questions/157381/in-ssh-how-do-i-mv-to-my-local-system](https://askubuntu.com/questions/157381/in-ssh-how-do-i-mv-to-my-local-system)
* [Joe Collins](https://www.youtube.com/user/BadEditPro)
* [ajeetdsouza/zoxide: A fast cd command that learns your habits](https://github.com/ajeetdsouza/zoxide)
* [Get The Software - zeromq](http://zeromq.org/intro%3aget-the-software)
* [Distrobox (GitHub Repo)](https://tracking.tldrnewsletter.com/CL0/https:%2F%2Fgithub.com%2F89luca89%2Fdistrobox%3Futm_source=tldrnewsletter/1/0100017d7ae10a75-bd5bba8d-5af5-4460-af01-771de58cb29d-000000/cBZk341BWtzRuL7Sph_cBFk3YxQuZalfsBOpPv5Zf8Y=226)
* [ibus/ibus/wiki](https://github.com/ibus/ibus/wiki)
* [utcc.utoronto.ca/~cks/space/blog/unix/XKeyboardRemappingNotes](https://utcc.utoronto.ca/~cks/space/blog/unix/XKeyboardRemappingNotes)
* [Unix-for-corpus-users.pdf](http://www2.port.ac.uk/media/contacts-and-departments/slas/corpus-linguistics/Unix-for-corpus-users.pdf)
* [freecodecamp.org/news/how-to-transfer-files-between-servers-in-linux-using-scp-and-ftp/](https://www.freecodecamp.org/news/how-to-transfer-files-between-servers-in-linux-using-scp-and-ftp/)
* [linux-tutorial.info/modules.php?name=MContent&obj=glossary](http://www.linux-tutorial.info/modules.php?name=MContent&obj=glossary)
* [roesen.org/files/unix_1_geschichtliches.pdf](http://www.roesen.org/files/unix_1_geschichtliches.pdf)
* [linux.com/what-is-linux](https://www.linux.com/what-is-linux)
* [Introduction to Linux](http://www.tldp.org/LDP/intro-linux/html/)
* [Linux All In One For Dummies](https://b-ok.cc/book/3621151/14e1a2)
* [Linux Books ](https://vk.com/wall-51126445_45334)
* [Linux File System for Humans](https://youtu.be/UFIoRLqhFpo)
* [Linux Knowledge Base and Tutorial](http://www.linux-tutorial.info/modules.php?name=MContent&obj=glossary)
* [Linux Machine](https://www.howtogeek.com/185286/how-to-buy-a-laptop-for-linux/)
* [Linux Machine Reddit](https://www.reddit.com/r/datascience/comments/8zghh1/best_laptop_recommendations_for_data_science/)
* [Introduction to Slurm (Part 1) — Introduction - YouTube](https://www.youtube.com/watch?v=K_JIPrcPHCg)
* [Introduction to SLURM Tools - YouTube](https://www.youtube.com/watch?v=U42qlYkzP9k)
* [Slurm Basics - YouTube](https://www.youtube.com/watch?v=49DzPT9HFJM)
* [Convenient SLURM Commands | FAS Research Computing](https://www.rc.fas.harvard.edu/resources/documentation/convenient-slurm-commands/)
* mkdir -p nonexistent/newfolder/
* how to create an atom plugin
* [atom-archive/xray](https://github.com/atom-archive/xray)
* [GNU/Linux - cours ✔](https://youtube.com/playlist?list=PLrSOXFDHBtfHKxuz6NySItyf4iSEcTw97)
* [help.ubuntu.com/stable/ubuntu-help/](https://help.ubuntu.com/stable/ubuntu-help/)
* [shell-tips.com/](https://www.shell-tips.com/)
* [freecodecamp.org/news/linux-server-course-system-configuration-and-operation/](https://www.freecodecamp.org/news/linux-server-course-system-configuration-and-operation/)
* [digitalocean.com/community/tutorials/how-to-set-up-jupyter-notebook-with-python-3-on-ubuntu-18-04](https://www.digitalocean.com/community/tutorials/how-to-set-up-jupyter-notebook-with-python-3-on-ubuntu-18-04)
* [What is Oh My Zsh?](https://ohmyz.sh/)
* [Volunteers · ohmyzsh/ohmyzsh Wiki · GitHub](https://github.com/ohmyzsh/ohmyzsh/wiki/Volunteers)
* [darkblood-modular/darkblood-modular.zsh-theme at master · InAnimaTe/darkblood-modular · GitHub](https://github.com/InAnimaTe/darkblood-modular/blob/master/darkblood-modular.zsh-theme)
* [Customizing your zsh prompt via themes Dec 14, 2014](https://scriptthe.net/2014/12/14/customizing-your-zsh-prompt/)
* [Customize your ZSH prompt with this one weird trick!](https://javorszky.co.uk/2020/04/16/customize-your-zsh-prompt-with-this-one-weird-trick/)
* [Shorten path in zsh prompt - Unix & Linux Stack Exchange](https://unix.stackexchange.com/questions/273529/shorten-path-in-zsh-prompt)
* [How to configure zsh prompt so that its length is proportional to terminal width](https://unix.stackexchange.com/questions/369847/how-to-configure-zsh-prompt-so-that-its-length-is-proportional-to-terminal-width)
* [13 Prompt Expansion](http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html)
* [Home · Spaceship ZSH](https://denysdovhan.com/spaceship-prompt/)
* [training.linuxfoundation.org/free-linux-training](https://training.linuxfoundation.org/free-linux-training)
* [Steven Rostedt - Learning the Linux Kernel with tracing - YouTube](https://www.youtube.com/watch?v=JRyrhsx-L5Y)
* [**How Linux Works: What Every Superuser Should Know | Brian Ward | download](https://b-ok.cc/book/2657555/50e8d7?dsource=recommend)
* [ixsoft.de/cgi-bin/web_store.cgi?ref=Products/de/ASF512FLHW-i78565-GY.html&gclid=CjwKCAiA7939BRBMEiwA-hX5J32hA88WbvnB-rziQRNQKj5xUWlX1sq3VIngL3b_ll2470cUMxy8WRoCRe0QAvD_BwE](https://www.ixsoft.de/cgi-bin/web_store.cgi?ref=Products/de/ASF512FLHW-i78565-GY.html&gclid=CjwKCAiA7939BRBMEiwA-hX5J32hA88WbvnB-rziQRNQKj5xUWlX1sq3VIngL3b_ll2470cUMxy8WRoCRe0QAvD_BwE)
* [ixsoft.de/cgi-bin/web_store.cgi?ref=Products/de/ASF512FLHW-i78565-GY.html&gclid=CjwKCAiA7939BRBMEiwA-hX5J32hA88WbvnB-rziQRNQKj5xUWlX1sq3VIngL3b_ll2470cUMxy8WRoCRe0QAvD_BwE](https://www.ixsoft.de/cgi-bin/web_store.cgi?ref=Products/de/ASF512FLHW-i78565-GY.html&gclid=CjwKCAiA7939BRBMEiwA-hX5J32hA88WbvnB-rziQRNQKj5xUWlX1sq3VIngL3b_ll2470cUMxy8WRoCRe0QAvD_BwE)
* [Laptop for data science](https://www.reddit.com/r/datascience/comments/7wmmw9/laptop_for_data_science/)
* [Learn Linux 101 – Build Smart. Build Secure. IBM Developer](https://developer.ibm.com/series/learn-linux-101/)
* [Linux All In One For Dummies | Emmett Dulaney | download](https://b-ok.cc/book/3621151/14e1a2?dsource=recommend)
* [Linux Basics for Hackers: Getting Started with Networking, Scripting, and Security in Kali | OccupyTheWeb | download](https://b-ok.cc/book/3653439/16c442?dsource=recommend)
* [Mac OS X for Unix Geeks](https://learning.oreilly.com/library/view/mac-os-x/0596003560/)
* [The Linux Command Line: A Complete Introduction | William E. Shotts | download](https://b-ok.cc/book/3704056/43b3c7?dsource=recommend)
* [The System Library: libSystem - Mac OS X for Unix Geeks](https://learning.oreilly.com/library/view/mac-os-x/0596003560/ch05s02.html)
* [Обзор Red Hat Enterprise Linux 6](https://www.youtube.com/watch?v=aChMK0wCXYQ&list=PL-_cKNuVAYAU0wszTQqn8uc-Kmhk5U1NE)
* [Программное обеспечение GNU/Linux](https://www.youtube.com/watch?v=QXVkOj6i2sY&list=PL-_cKNuVAYAUpajPpCyqYTuzx7j_28zps)
* [2020 Seminar Series: Slurm - YouTube](https://www.youtube.com/watch?v=grZVs1UUxug)
* [bwHPC - E-learning module "Introduction to bwHPC"](https://training.bwhpc.de/ilias/ilias.php?baseClass=ilLMPresentationGUI&ref_id=275&cmd=resume)
* [linuxfromscratch.org/](https://www.linuxfromscratch.org/)
* [LinuxFilesystemTreeOverview - Community Help Wiki](https://help.ubuntu.com/community/LinuxFilesystemTreeOverview)
* [Yocto Project – It's not an embedded Linux distribution – it creates a custom one for you](https://www.yoctoproject.org/)
* [Nitrux Is An Impressive Linux Distribution - YouTube](https://www.youtube.com/watch?v=LRqCe61yU30)
* [Curso GNU Linux de 0 a Avanzado](https://www.youtube.com/watch?v=D2JDLJB9zLk&list=PLHX61pZ-vckihCRXshppLfHPY9OnZnMVv)
* [Curso de linux avanzado](https://www.youtube.com/watch?v=vvJxNrQ26Os&list=PLyasZ9VOnqAJVlxs3q03ttyCBIUAmV4z8)
* [Linux Avanzado](https://www.youtube.com/watch?v=PevBBj8hn5k&list=PL7R8nGUeQOrPXQQRo5hjaoGrQ55yaGPqF)
* [Corso GNU/Linux Avanzato 2013](https://www.youtube.com/watch?v=bDF0NX3PY3Q&list=PLA27EZBY5veO_Vovf5jo4w4xqT2XH0kVX)
* [Linux avanzado :: Administración y servicios](https://www.youtube.com/watch?v=rvuhQlE7VZg&list=PLeUHBdY1mUv7j0k6uaRzlyoGkZqEu-99x)
* [CURSO DE LINUX CON UBUNTU 20.04 LTS](https://www.youtube.com/watch?v=SPHh1a_Dvu8&list=PLici-2x61p12a0b2pxSfIELXbnSleOg1r)
* [Una Píldora al Día](https://www.youtube.com/watch?v=4qiipSWj93g&list=PL_E2EXhZMivvJgAcOJFF-lKmOiqe8jsCD)
* [Curso de Linux](https://www.youtube.com/watch?v=oPG8cLhoyng&list=PL_E2EXhZMivsTzHxYUBuYcl6vM8mX1b8I) 
* [Linux desde cero con ubuntu](https://www.youtube.com/watch?v=HuirxQ3Nxvc&list=PLoRfWwOOv4jyPstV84CUsjxRaSZgTlfcj)
* [Sistemas operativos Ubuntu](https://www.youtube.com/watch?v=12s8XPrIMPg&list=PL6D829DA27F4C57DA)
* [Linux avanzado :: Administración y servicios](https://www.youtube.com/watch?v=rvuhQlE7VZg&list=PLeUHBdY1mUv7j0k6uaRzlyoGkZqEu-99x)
* [Curso de Linux Avançado Terminal](https://www.youtube.com/watch?v=11MiDMES140&list=PLGw1E40BSQnRZufbzjGVzkH-O8SngPymp)
* [Curso: GNU/LINUX de CERO a AVANZADO 👨‍💻](https://www.youtube.com/watch?v=D_NhILSrqKE&list=PLBAZgZE2cgAfHKVjnlbswWTqBO4EuD0zy)
* [GNU/Linux - cours ✔](https://www.youtube.com/watch?v=py1E14pXfAM&list=PLrSOXFDHBtfHKxuz6NySItyf4iSEcTw97)
* [Formation Red Hat Enterprise Linux 1/2 : Réussir la certification RHCSA](https://www.youtube.com/watch?v=vm_wTTrnlbo&list=PL1aYsXmhJ1We3Fb-jo_HndFSpeKmFRWeB)
* [...](https://www.youtube.com/results?search_query=%D0%BF%D1%80%D0%BE%D0%B4%D0%B2%D0%B8%D0%BD%D1%83%D1%82%D1%8B%D0%B9+%D0%BA%D1%83%D1%80%D1%81+linux+)
* [Tutorial: Building the Simplest Possible Linux System - Rob Landley, se-instruments.com](https://www.youtube.com/watch?v=Sk9TatW9ino&t=2067s)
* [Minimal Linux Live: The 7MB Linux OS](https://www.youtube.com/watch?v=01LknbMXqF8)
* [Maîtriser le Shell Unix | Commandes Linux](https://www.youtube.com/watch?v=rqC_gvktVkc&list=PLAM-SVky60yhI5HXtgAnlGaG-2IolmZ-1)
* [Curso Linux desde Cero 2022](https://www.youtube.com/watch?v=cAYFG_ZcM2s&list=PLParEH_BP8I0zA8RcXg6joiP4_t9hehi8)
* [Ubuntu Linux](https://www.youtube.com/watch?v=swpxE9Q2y84&list=PLucm8g_ezqNqh_9TMx-ST1pTEXSbgJlTy) PT
* [Mir Linux](https://www.youtube.com/playlist?list=PLVBQ16nKzRwpoeYSOS8aV78A6nHJ5V6xX)
* [Playlist Linux RU](https://www.youtube.com/playlist?list=PLVBQ16nKzRwpoeYSOS8aV78A6nHJ5V6xX)
* [Mir Linux](https://youtube.com/playlist?list=PLVBQ16nKzRwpoeYSOS8aV78A6nHJ5V6xX)
* [BYU Supercomputer Videos](https://www.youtube.com/watch?v=i1r9BxHBG0I&list=PL326A5EB4E3B16FED&feature=plpp_play_all)
* [Introduction to Memory Management in Linux - YouTube](https://www.youtube.com/watch?v=7aONIVSXiJ8)
* [Linux Explained in 2020: Just What is The Linux Kernel?! - YouTube](https://www.youtube.com/watch?v=pJ607nDnyE0)
* [Linux kernel Development - YouTube](https://www.youtube.com/watch?v=598Xe7OsPuU)
* [Introduction to Linux Kernel Architecture - YouTube](https://www.youtube.com/watch?v=yQ1XPe6gbK8)
* [Kernel Basics - YouTube](https://www.youtube.com/watch?v=rTcnTOXf_jM)
* [InfinitelyGalactic](https://www.youtube.com/user/InfinitelyGalactic)
* [iterm2.com/index.html](https://iterm2.com/index.html)
* [wiki.debian.org/NVIDIA](https://wiki.debian.org/NVIDIA) Optimus#Using_NVIDIA_PRIME_Render_Offload
* [rheinwerk-verlag.de/linux-das-umfassende-handbuch/](https://www.rheinwerk-verlag.de/linux-das-umfassende-handbuch/)
* [tutorialforlinux.com/2020/10/21/step-by-step-driver-epson-et-2750-ubuntu-20-10-installation-guide/3/](https://tutorialforlinux.com/2020/10/21/step-by-step-driver-epson-et-2750-ubuntu-20-10-installation-guide/3/)
* [keyman.com/linux/](https://keyman.com/linux/)
* [pine64.org/](https://www.pine64.org/)
* get kate ide?
* [wpdatatables.com/best-atom-packages/](https://wpdatatables.com/best-atom-packages/)
* [github.blog/2020-12-15-token-authentication-requirements-for-git-operations/](https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/)
* [video](https://www.youtube.com/@Chry55Player) (Linux IT)
* [video](https://www.youtube.com/@morrolinux) (Linux IT)
* [atareao.es/](https://atareao.es/) (Linux)
* [video](https://www.youtube.com/@SonTypimInternet) (Linux)
* [video](https://www.youtube.com/@TonDoesLinux)
* [video](https://www.youtube.com/@LinuxGuides) (DE)
* [blackdown.org/](https://www.blackdown.org/)
* [crux.nu/Main/Handbook3-7](https://crux.nu/Main/Handbook3-7)
* [yoctoproject.org/](https://www.yoctoproject.org/)
* {Git    } [Git Commands With Examples | Git Tutorial | Git Branching & Merging | DevOps Training | Edureka](https://www.youtube.com/watch?v=b5oQZdzA37I&list=PLVWtXi_Jrj_14rUJDWFEvyhOmYF2JdHmk&index=18)
* [GitHub action to automatically add blog posts to your profile](https://www.reddit.com/r/programming/comments/iga8ki/github_action_to_automatically_add_blog_posts_to/)
* [Clean Pull Request Instructions](https://gist.github.com/MarcDiethelm/7303312)
* [system76.com/laptops](https://system76.com/laptops)
* [system76.com/laptops/galp5/configure*](https://system76.com/laptops/galp5/configure*) [zdnet.com/pictures/10-super-sweet-laptops-that-come-with-linux-pre-installed/6/*](https://www.zdnet.com/pictures/10-super-sweet-laptops-that-come-with-linux-pre-installed/6/*) [zdnet.com/pictures/10-super-sweet-laptops-that-come-with-linux-pre-installed/7/](https://www.zdnet.com/pictures/10-super-sweet-laptops-that-come-with-linux-pre-installed/7/)
* ZaReason UltraLap 6440
ZaReason Verix-9100
* [news.lenovo.com/pressroom/press-releases/lenovo-launches-linux-ready-thinkpad-and-thinkstation-pcs-preinstalled-with-ubuntu/#:~:text=Lenovo%20Launches%20Linux%2DReady%20ThinkPad%20and%20ThinkStation%20PCs%20Preinstalled%20with%20Ubuntu,-23%20September%202020&text=September%2023%2C%202020%20%E2%80%93%20Today%2C,Ubuntu%C2%AE%20LTS%20operating%20system.](https://news.lenovo.com/pressroom/press-releases/lenovo-launches-linux-ready-thinkpad-and-thinkstation-pcs-preinstalled-with-ubuntu/#:~:text=Lenovo%20Launches%20Linux%2DReady%20ThinkPad%20and%20ThinkStation%20PCs%20Preinstalled%20with%20Ubuntu,-23%20September%202020&text=September%2023%2C%202020%20%E2%80%93%20Today%2C,Ubuntu%C2%AE%20LTS%20operating%20system.)
* [kofler.info/linux-notebook/*](https://kofler.info/linux-notebook/*) [support.lenovo.com/us/en/solutions/pd031426-linux-for-personal-systems](https://support.lenovo.com/us/en/solutions/pd031426-linux-for-personal-systems)
* [google.com/search?q=best+pre-installed+linux+machine](https://www.google.com/search?q=best+pre-installed+linux+machine&rlz=1C5CHFA_enUS800US800&oq=best+&aqs=chrome.0.69i59l3j69i57j69i61j69i65l2j69i61.2605j0j4&sourceid=chrome&ie=UTF-8)
* [pop-os](https://github.com/pop-os)
* [pop.system76.com/](https://pop.system76.com/)
* [r/pop_os/comments/g5m8sz/is_pop_os_open_source/](https://www.reddit.com/r/pop_os/comments/g5m8sz/is_pop_os_open_source/)
* [google.com/search?q=pros+and+cons+of+debian](https://www.google.com/search?q=pros+and+cons+of+debian)
* [datamation.com/open-source/7-reasons-to-use-debian-and-3-reasons-not-to.html](https://www.datamation.com/open-source/7-reasons-to-use-debian-and-3-reasons-not-to.html)
* [distrowatch.com/search.php?ostype=All&category=All&origin=All&basedon=Debian&notbasedon=None&desktop=All&architecture=All&package=All&rolling=All&isosize=All&netinstall=All&language=All&status=Active#simple](https://distrowatch.com/search.php?ostype=All&category=All&origin=All&basedon=Debian&notbasedon=None&desktop=All&architecture=All&package=All&rolling=All&isosize=All&netinstall=All&language=All&status=Active#simple)
* [Linux Action News](https://linuxactionnews.com/)
* Linux User (Zeitschrift)
* [tecmint.com/learn-nano-text-editor-in-linux/](https://www.tecmint.com/learn-nano-text-editor-in-linux/)
* [lifewire.com/beginners-guide-to-nano-editor-3859002](https://www.lifewire.com/beginners-guide-to-nano-editor-3859002)
* [howtogeek.com/howto/42980/the-beginners-guide-to-nano-the-linux-command-line-text-editor/](https://www.howtogeek.com/howto/42980/the-beginners-guide-to-nano-the-linux-command-line-text-editor/)
* [System76](https://www.youtube.com/channel/UC3JEJPE0Z5H3PQVOran_1hg)
* [system76](https://github.com/system76)
* [community.suse.com/](https://community.suse.com/)
* [debian.org/](https://www.debian.org/)
* [wiki.manjaro.org/index.php/Main_Page](https://wiki.manjaro.org/index.php/Main_Page)
* [linuxmint.com/documentation.php](https://linuxmint.com/documentation.php)
* [manjaro.org/](https://manjaro.org/)
* [zorin.com/](https://zorin.com/)
* Kroah-Hartman (Linux LL)
* [buildyourownlinux.com/](http://www.buildyourownlinux.com/)
* [Welcome to Linux From Scratch!](http://linuxfromscratch.org/)
* [kalker - A flexible calculator that supports variables and functions defined by the user](https://kalker.strct.net/)
* [PaddiM8/kalker: Kalker/kalk is a calculator with math syntax that supports user-defined variables and functions, complex numbers, and estimation of derivatives and integrals](https://github.com/PaddiM8/kalker)
* [linuxsurvival.com/](https://linuxsurvival.com/)

FIXME## Vim

* [vimdoc.sourceforge.net/](http://vimdoc.sourceforge.net/)
* [tnerual.eriogerg.free.fr/vimqrc.html](http://tnerual.eriogerg.free.fr/vimqrc.html)
* [coderwall.com/p/adv71w/basic-vim-commands-for-getting-started](https://coderwall.com/p/adv71w/basic-vim-commands-for-getting-started)
* [radford.edu/~mhtay/CPSC120/VIM_Editor_Commands.htm](https://www.radford.edu/~mhtay/CPSC120/VIM_Editor_Commands.htm)
* [fprintf.net/vimCheatSheet.html](https://www.fprintf.net/vimCheatSheet.html)
* [vim.rtorr.com/](https://vim.rtorr.com/)
* [learnvimscriptthehardway.stevelosh.com/](http://learnvimscriptthehardway.stevelosh.com/)
* [ichi.pro/fr/vim-pour-julia-27400288192084](https://ichi.pro/fr/vim-pour-julia-27400288192084)
* [spacevim.gitee.io/layers/](https://spacevim.gitee.io/layers/)
* [spacevim.gitee.io/layers/lang/julia/](https://spacevim.gitee.io/layers/lang/julia/)
* [SpaceVim/SpaceVim](https://github.com/SpaceVim/SpaceVim)
* [spacevim.org/](https://spacevim.org/)
* [spacevim.org/documentation/](https://spacevim.org/documentation/)
* [neoclide/coc.nvim](https://github.com/neoclide/coc.nvim)
* [realpython.com/vim-and-python-a-match-made-in-heaven/](https://realpython.com/vim-and-python-a-match-made-in-heaven/)
* [shawnaxsom/dotfiles/tree/master/nvim](https://github.com/shawnaxsom/dotfiles/tree/master/nvim)
* [dannyadam.com/blog/2019/05/debugging-in-vim/](https://www.dannyadam.com/blog/2019/05/debugging-in-vim/)
* [fullstackfeed.com/choosing-vim/](https://fullstackfeed.com/choosing-vim/)
* [awesomeopensource.com/projects/vim-plugin](https://awesomeopensource.com/projects/vim-plugin)
* [medium.com/coffee-in-a-klein-bottle/vim-for-julia-18eba071c654](https://medium.com/coffee-in-a-klein-bottle/vim-for-julia-18eba071c654)
* [learnbyexample.github.io/vim_reference/Regular-Expressions.html](https://learnbyexample.github.io/vim_reference/Regular-Expressions.html)
* [VimGenius](http://www.vimgenius.com/)
* [YBlog - Learn Vim Progressively](http://yannesposito.com/Scratch/en/blog/Learn-Vim-Progressively/)
* [Episode archive](http://vimcasts.org/episodes/archive/)
* [Interactive Vim tutorial](https://www.openvim.com/)
* [Learn VIM while playing a game - VIM Adventures](https://vim-adventures.com/)
* [VimConfig - Sane and simple Vim configuration](https://vimconfig.com/)
* [vim book](http://www.truth.sk/vim/vimbook-OPL.pdf)
* [Onramp to Vim | Online Tutorial by thoughtbot](https://thoughtbot.com/upcase/onramp-to-vim)
* [Vim games](https://www.reddit.com/r/vim/comments/a7wusl/vim_games/)
* [learnvimscriptthehardway.stevelosh.com](https://learnvimscriptthehardway.stevelosh.com/)
* [r/vim/comments/1x3my7/vimtronner_is_a_multiplayer_realtime_commandline/](https://www.reddit.com/r/vim/comments/1x3my7/vimtronner_is_a_multiplayer_realtime_commandline/)
* [r/vim/comments/a7wusl/vim_games/](https://www.reddit.com/r/vim/comments/a7wusl/vim_games/)
Vimtutor in MacVim app
* [vim.fandom.com/wiki/Vim_Tips_Wiki](https://vim.fandom.com/wiki/Vim_Tips_Wiki)
* [codecombat.com/](https://codecombat.com/)
* [vim-adventures.com/](https://vim-adventures.com/)
* [openvim.com/](http://www.openvim.com/)
* [How I'm able to take notes in mathematics lectures using LaTeX and Vim | Gilles Castel](https://castel.dev/post/lecture-notes-1/)
* [6 Best Vi/Vim-Inspired Code Editors for Linux](https://www.tecmint.com/vi-vim-inspired-code-editors-for-linux/)
* [Variables, values, and expressions – IBM Developer](https://developer.ibm.com/technologies/linux/articles/l-vim-script-1/)
* [r/neovim/comments/ojsm6m/experiences_using_neovim_as_a_full_ide/](https://www.reddit.com/r/neovim/comments/ojsm6m/experiences_using_neovim_as_a_full_ide/)
* [siduck76/NvChad](https://github.com/siduck76/NvChad)
* [r/neovim/comments/ojsm6m/experiences_using_neovim_as_a_full_ide/](https://www.reddit.com/r/neovim/comments/ojsm6m/experiences_using_neovim_as_a_full_ide/)
* [ChristianChiarulli/LunarVim](https://github.com/ChristianChiarulli/LunarVim)
* [duckduckgo.com/?q=install%20python%20programming%20plugins%20for%20vim&ia=web](https://duckduckgo.com/?q=install%20python%20programming%20plugins%20for%20vim&ia=web)
* [serhatcevikel.com/?p=56#more-56](http://www.serhatcevikel.com/?p=56#more-56)
* [stackoverflow.com/questions/18948491/running-python-code-in-vim](https://stackoverflow.com/questions/18948491/running-python-code-in-vim)
* [gist.github.com/bespokoid/87d6a58561a111d47246c998fd335714](https://gist.github.com/bespokoid/87d6a58561a111d47246c998fd335714)
* [Apprendre à utiliser ViM](http://ceyquem.free.fr/www/articles/misc_vim/vim.htm)
* [Apprendre vi.](http://www.linux-france.org/article/appli/vi/faq/vifaq-3.html)
* [download : vim online](http://www.vim.org/download.php/#mac)
* [ceyquem.free.fr/www/articles/misc_vim/vim.htm](http://ceyquem.free.fr/www/articles/misc_vim/vim.htm)
* [linux-france.org/article/appli/vi/faq/vifaq-3.html](http://www.linux-france.org/article/appli/vi/faq/vifaq-3.html)
* [radford.edu/~mhtay/CPSC120/VIM_Editor_Commands.htm](http://www.radford.edu/~mhtay/CPSC120/VIM_Editor_Commands.htm)
* [vim.org/download.php/#mac](http://www.vim.org/download.php/#mac)
* [yannesposito.com/Scratch/fr/blog/Learn-Vim-Progressively/](http://yannesposito.com/Scratch/fr/blog/Learn-Vim-Progressively/)
* [openclassrooms.com/courses/reprenez-le-controle-a-l-aide-de-linux/vim-l-editeur-de-texte-du-programmeur](https://openclassrooms.com/courses/reprenez-le-controle-a-l-aide-de-linux/vim-l-editeur-de-texte-du-programmeur)
* [Vim : l'éditeur de texte du programmeur - Reprenez le contrôle à l'aide de Linux ! - OpenClassrooms](https://openclassrooms.com/courses/reprenez-le-controle-a-l-aide-de-linux/vim-l-editeur-de-texte-du-programmeur)
* [Vim 101](https://www.reddit.com/r/vim/comments/dmh76t/vim_101_how_to_start_using_the_text_editor_for/)
* [Vim Cheat Sheet - English](https://vim.rtorr.com/)
* [VIM Editor Commands](http://www.radford.edu/~mhtay/CPSC120/VIM_Editor_Commands.htm)
* [Vim Theory and Reflections](https://www.reddit.com/r/vim/comments/bfxr2z/vim_theory_and_reflections/)
* [Vim Tips Wiki | FANDOM powered by Wikia](http://vim.wikia.com/wiki/Vim_Tips_Wiki)
* [YBlog - Apprenez Vim Progressivement](http://yannesposito.com/Scratch/fr/blog/Learn-Vim-Progressively/)
* [JuliaEditorSupport/julia-vim](https://github.com/JuliaEditorSupport/julia-vim)
* [JuliaEditorSupport/deoplete-julia](https://github.com/JuliaEditorSupport/deoplete-julia)
* [julia-vscode/LanguageServer.jl/wiki/Vim-and-Neovim](https://github.com/julia-vscode/LanguageServer.jl/wiki/Vim-and-Neovim)
* [laptrinhx.com/vim-support-for-julia-1370938118/](https://laptrinhx.com/vim-support-for-julia-1370938118/)
* [Vim Cheat Sheet](https://vim.rtorr.com/)
* [coderwall.com/p/s1i5pw/latex-with-vim](https://coderwall.com/p/s1i5pw/latex-with-vim)
* [onivim/oni2*](https://github.com/onivim/oni2*) [developer.ibm.com/articles/l-vim-script-1/](https://developer.ibm.com/articles/l-vim-script-1/)
* [vim.fandom.com/wiki/Use_Vim_like_an_IDE](https://vim.fandom.com/wiki/Use_Vim_like_an_IDE)
* [DamZiobro/vim-ide](https://github.com/DamZiobro/vim-ide)
* use vim like an IDE
* [jez/vim-as-an-ide](https://github.com/jez/vim-as-an-ide)
* [neoclide/coc.nvim](https://github.com/neoclide/coc.nvim)
* [neoclide](https://github.com/neoclide)
* [r/vim/comments/6zyavr/using_vimneovim_as_an_ide_recommendations_and/](https://www.reddit.com/r/vim/comments/6zyavr/using_vimneovim_as_an_ide_recommendations_and/)
* [dev.to/mainendra/neovim-as-ide-1cnp](https://dev.to/mainendra/neovim-as-ide-1cnp)
* [blog.ghaiklor.com/2019/10/12/vim-as-an-ide-not-the-text-editor/](https://blog.ghaiklor.com/2019/10/12/vim-as-an-ide-not-the-text-editor/)
* [r/vim/comments/6zyavr/using_vimneovim_as_an_ide_recommendations_and/](https://www.reddit.com/r/vim/comments/6zyavr/using_vimneovim_as_an_ide_recommendations_and/)
* [dev.to/mainendra/neovim-as-ide-1cnp](https://dev.to/mainendra/neovim-as-ide-1cnp)
* [spacevim.org/use-vim-as-a-python-ide/](https://spacevim.org/use-vim-as-a-python-ide/)

FIXME## Shell

* [Resultados de búsqueda - shell scripting](https://drive.google.com/drive/search?q=shell%20scripting)
* [Jürgen Wolf - Shell-Programmierung: Das umfassende Handbuch, 3. Auflage](http://libgen.rs/book/index.php?md5=7CCFBFA22DBC4A22AD79BA5189BEE788)
* [Bash Shell Scripting - Wikibooks, open books for an open world](https://en.wikibooks.org/wiki/Bash_Shell_Scripting)
* [Systems Programming in Unix/Linux_K.C. Wang_1st ed. 2018](http://link.springer.com/openurl?genre=book&isbn=978-3-319-92429-8)
* Shell Scripting (Robbins & Beebe)
What can't you do with shell scripting?
* [Shell Scripting Tutorial](https://www.youtube.com/watch?v=hwrnmQumtPw&list=WL&index=442)
* [Bash Quick Start Guide Get Up and Running with Shell Scripting with Bash | Tom Ryder | download](https://b-ok.cc/book/3608878/a2f513)
* [bash Cookbook: Solutions and Examples for bash Users | Carl Albing, JP Vossen | download](https://b-ok.cc/book/3382904/7f1b79)
* [Command Line Kung Fu: Bash Scripting Tricks, Linux Shell Programming Tips, and Bash One-liners | Jason Cannon | download](https://b-ok.cc/book/2553864/5c6051)
* [Loops - Shell Scripting Tutorial](https://www.shellscript.sh/loops.html)
* [3.5.3 Shell Parameter Expansion](http://www.gnu.org/software/bash/manual/html_node/Shell-Parameter-Expansion.html)
* [effective-shell.com/](https://effective-shell.com/)
* [dwmkerr/effective-shell](http://github.com/dwmkerr/effective-shell)
* [gnu.org/savannah-checkouts/gnu/bash/manual/bash.html](https://www.gnu.org/savannah-checkouts/gnu/bash/manual/bash.html)
* [Advanced Bash-Scripting Guide.pdf](https://vk.com/doc576778753_560263178?hash=0fc559d0244842027a&dl=4158b08dc20996cda5)
* [Advanced Bash-Scripting Guide](https://tldp.org/LDP/abs/html/)
* [Bash add trailing spaces to justify string - Unix & Linux Stack Exchange](https://unix.stackexchange.com/questions/354092/bash-add-trailing-spaces-to-justify-string)
* [Bash function not working in Zsh](https://unix.stackexchange.com/questions/59883/bash-function-not-working-in-zsh)
* [tldp.org/LDP/Bash-Beginners-Guide/html/Bash-Beginners-Guide.html](https://tldp.org/LDP/Bash-Beginners-Guide/html/Bash-Beginners-Guide.html)
* [devhints.io/bash](https://devhints.io/bash)
* [linux.die.net/man/1/bash](https://linux.die.net/man/1/bash)
* [Special prompt variable characters:](https://ss64.com/bash/syntax-prompt.html)
* [Create a machine learning model with Bash](https://opensource.com/article/20/11/machine-learning-bash)
* [How to Customize Your Terminal and BASH Profile from Scratch](https://medium.com/@adamtowers/how-to-customize-your-terminal-and-bash-profile-from-scratch-9ab079256380)
* [Moving to zsh, part 6 – Customizing the zsh Prompt](https://scriptingosx.com/2019/07/moving-to-zsh-06-customizing-the-zsh-prompt/)
* [bash2zsh.com/](http://www.bash2zsh.com/)
* [wiki.archlinux.org/title/zsh](https://wiki.archlinux.org/title/zsh)
* [zsh.sourceforge.io/Doc/](https://zsh.sourceforge.io/Doc/)
* [zsh.sourceforge.io/Guide/](https://zsh.sourceforge.io/Guide/)
* [zsh.sourceforge.io/Doc/](https://zsh.sourceforge.io/Doc/)
* [zsh.sourceforge.io/](https://zsh.sourceforge.io/)
* [wiki.archlinux.org/title/zsh](https://wiki.archlinux.org/title/zsh)
* [zsh.org/](https://www.zsh.org/)
* [ohmyz.sh/](https://ohmyz.sh/)
* [ohmyz.sh/](https://ohmyz.sh/)
* [Take control of your data with associative arrays in Bash](https://opensource.com/article/20/6/associative-arrays-bash)
* [linuxhint.com/bash_operator_examples/](https://linuxhint.com/bash_operator_examples/)
* [Розділ 1. Основи Bash](http://docs.linux.org.ua/LDP/Bash_beginners_guide/bash_and_bash_scripts/)
* [Документація українською](http://docs.linux.org.ua/)
* [zsh - Getting started with zsh | zsh Tutorial](https://riptutorial.com/zsh/)
* [RIP Tutorial (Stack Overflow Documentation)](https://riptutorial.com/)
* [Oh my zsh, linea de comandos interesante para Git - YouTube](https://www.youtube.com/watch?v=0SwiLFPqWLg)
* [Вступ linux](http://docs.linux.org.ua/LDP/Bash_beginners_guide/introduction/)
* [advanced zsh guide - Поиск в Google](https://www.google.com/search?q=advanced+zsh+guide&rlz=1C5CHFA_enUS800US800&oq=advanced+zsh+guide&aqs=chrome..69i57j0l5.3261j0j7&sourceid=chrome&ie=UTF-8)
* [robbyrussell/oh-my-zsh: 🙃 A delightful community-driven (with 1,300+ contributors) framework for managing your zsh configuration. Includes 200+ optional plugins (rails, git, OSX, hub, capistrano, brew, ant, php, python, etc), over 140 themes to spice u](https://github.com/robbyrussell/oh-my-zsh)
* [Oh My Zsh - a delightful & open source framework for Zsh](https://ohmyz.sh/)
* [Cheatsheet · robbyrussell/oh-my-zsh Wiki](https://github.com/robbyrussell/oh-my-zsh/wiki/Cheatsheet)
* [BASH Guide | Joseph Deveau | download](https://b-ok.cc/book/3704514/b67ef9)
* [BASH Guide for Beginners | Machtelt Garrels | download](https://b-ok.cc/book/1004511/66b1c6)
* [Bash Cookbook | Ganesh Naik & Ron Brash [Ganesh Naik] | download](https://b-ok.cc/book/3632622/d0c2ab)
* [graph.org/Bash---Sbor-informacii-o-sisteme-01-24](https://graph.org/Bash---Sbor-informacii-o-sisteme-01-24)
* [Bash - next step](https://drive.google.com/file/d/1E5dOZx-1lCExm1cvptAU0EUdn6kiVZnB/view?usp=sharing)
* [Linux Machine System76](https://system76.com/laptops/serw11/configure)
* [oh my zsh - Custom Commands in ZSH - Super User](https://superuser.com/questions/380622/custom-commands-in-zsh)
* [Shortcuts to move faster in Bash command line - teohm](http://teohm.com/blog/shortcuts-to-move-faster-in-bash-command-line/)
* [Scripting Bash – Scripting OS X](https://scriptingosx.com/bash/)
* [Anki Bash Decks](https://ankiweb.net/shared/decks/bash)
* [Anki Linux Decks](https://ankiweb.net/shared/decks/linux)
* [Bash](https://erkanerol.github.io/bash-lingua-non-grata/)
* [bash_cheat_sheet.pdf](https://learncodethehardway.org/unix/bash_cheat_sheet.pdf)
* [BashGuide - Greg's Wiki](http://mywiki.wooledge.org/BashGuide)
* [docs.linux.org.ua/LDP/Bash_beginners_guide/introduction/](http://docs.linux.org.ua/LDP/Bash_beginners_guide/introduction/)
* [The Bash environment](https://linux.die.net/Bash-Beginners-Guide/chap_03.html)
* [Summary](https://linux.die.net/Bash-Beginners-Guide/sect_02_05.html)

FIXME## Books

* [Arch Linux Books](http://libgen.is/search.php?req=arch+linux&lg_topic=libgen&open=0&view=simple&res=25&phrase=1&column=def)
* [Building Embedded Linux Systems [2 ed.]](http://libgen.is/book/index.php?md5=A2E20D7FF8A88E34C33CCBAA218E53EC)
* [Внутреннее устройство Linux [2016]](https://vk.com/doc576778753_560263169?hash=e719984355c032cd87&dl=8476340203234f884e)
* [Самоучитель системного администратора [2021]](https://vk.com/doc44301783_618870172?hash=8feacf85075255739c&dl=d29847838c595f4b11)
* [Программирование в Linux. Самоучитель](https://vk.com/doc44301783_599530508?hash=25d50fa490481176b7&dl=8337e7009f9a838afc)
* [Debian GNU, Linux das umfassende Handbuch](https://de1lib.org/book/2836049/716527)
* [Linux глазами хакера](https://vk.com/doc576778753_562289026?hash=1e62c7cdfb986f7918&dl=e0fa445c6b91d7b546)
* [Einführung in Unix/Linux für Naturwissenschaftler: Effizientes wissenschaftliches Arbeiten mit der Unix-Kommandozeile](https://de1lib.org/book/2921072/bad464)
* [The Definitive Guide to Linux Network Programming](http://library.lol/main/04DA144B319B513163311B32B3D9168D)
* [Linux-Server](https://de1lib.org/book/11841081/888599)
* [Ubuntu Linux Unleashed 2021 Edition](https://de1lib.org/book/11841555/5076c8)
* [Linux Pocket Guide: Essential Commands](https://b-ok.cc/book/2724628/b03b09)
* [Library Genesis: Brennon Thomas - The Cyber Plumber’s Handbook: The definitive guide to SSH tunneling, port redirection, and bending traffic like a boss.](http://libgen.rs/book/index.php?md5=DD1C99F471FE1600CC5B271D71DE12A8)
* [Library Genesis: Daniel J. Barrett, Richard E. Silverman, Robert G. Byrnes - SSH, The Secure Shell: The Definitive Guide](http://libgen.rs/book/index.php?md5=961787C66EF4F3856D42BA250F3E58C9)
* [Library Genesis: Michael W. Lucas - SSH Mastery: OpenSSH, PuTTY, Tunnels and Keys](http://libgen.rs/book/index.php?md5=33923FAC709AAAD53014216282CFAE39)
* [Linux API. Исчерпывающее руководство](https://en.de1lib.org/book/17302644/a858d6)
* [Linux. Установка, настройка, администрирование](https://en.de1lib.org/book/2209987/95574b?dsource=recommend)
* [Linux. Администрирование и системное программирование](https://en.de1lib.org/book/2294376/13c4f0?dsource=recommend)
* [abarrak.gitbook.io/linux-sysops-handbook](https://abarrak.gitbook.io/linux-sysops-handbook)
* [The Art of Linux Kernel Design: Illustrating the Operating System Design Principle and Implementation [1 ed.]](http://libgen.is/book/index.php?md5=D23976F913AE0A19FF94173BBD642123)
* [Linux Kernel Programming: A comprehensive guide to kernel internals, writing kernel modules, and kernel synchronization](http://libgen.is/book/index.php?md5=5101B7A38854D9EBD359C9A74D2686EF)
* [Linux Kernel Programming Part 2 - Char Device Drivers and Kernel Synchronization](http://libgen.is/book/index.php?md5=F3C3DD0F5D1B8400A53F04F6120E1497)
* [Linux Containers and Virtualization: A Kernel Perspective [1st ed.]](http://libgen.is/book/index.php?md5=BBF42E5ADAD8227D806FA121AB844150)
* [Mastering Linux Kernel Development](http://libgen.is/book/index.php?md5=1F740CBF8890CC1E1930D4F2559B3CD0)
* [Linux System Programming, 2nd Edition: Talking Directly to the Kernel and C Library](http://libgen.is/book/index.php?md5=8A37746E8E8823F7F01E821BD8BAEAA2) (→ already have RU)
* [Professional Linux kernel architecture](http://libgen.is/book/index.php?md5=43D6ABBD76FE1BD19BDE10E904CD0C79)
* [Linux Kernel Development [3 ed.]](http://libgen.is/book/index.php?md5=7C8AD75EE09CC182A500D57475BF06C3)
* [Linux Kernel Module Programming Guide](http://libgen.is/book/index.php?md5=9A2C5BD678C916E20F5F4F4A1BA5FD98)
* [Understanding the Linux Kernel [3rd ed]](http://libgen.is/book/index.php?md5=043116DD8F5FC7F4E004F7EE986031C0)
* [Linux Kernel in a Nutshell](http://libgen.is/book/index.php?md5=EDF990626779BEBAA268479F4CB5E9AB)
* [Linux Kernel Internals [2nd ed]](http://libgen.is/book/index.php?md5=0D7BDF514D114345E94C6E1A20F15B06)
* [Linux Kernel Crash Book Everything you need to know](http://libgen.is/book/index.php?md5=4235C4ACAAE3F9CEA960CA6FB25D0138)
* [Concrete Architecture of the Linux Kernel](http://libgen.is/book/index.php?md5=4E15C97E21A8F49742CF467593AC4C6A)

FIXME# Noteworthy Personal Sites

... and other sites worth taking note of

FIXME## Collections - Well-Designed Sites

* [personalsit.es/](https://personalsit.es/)

FIXME### Phenomenal

* [blog.wesleyac.com/](https://blog.wesleyac.com/)
* [Site example](https://codeyarns.github.io/tech/2012-11-30-how-to-set-a-specific-chapter-or-section-number-in-latex.html)
* [maelfabien.github.io/](https://maelfabien.github.io/)
* [colah.github.io/](http://colah.github.io/)
* [ritchieng.live/](https://ritchieng.live/)
* [shuzhanfan.github.io](https://shuzhanfan.github.io/)

FIXME### Educational, Book, etc

* [notesonai.com/Notes+on+AI](https://notesonai.com/Notes+on+AI)
* [randomekek.github.io/deep/deeplearning.html](https://randomekek.github.io/deep/deeplearning.html)
* [math.toronto.edu/ivan/](http://www.math.toronto.edu/ivan/)
* [introtcs.org/public/index.html](https://introtcs.org/public/index.html)
* [kareemalkaseer.com/](https://www.kareemalkaseer.com/)
* [hadrienj.github.io/](https://hadrienj.github.io/)
* [mlstory.org/](https://mlstory.org/)
* [trinilearn.com/](https://www.trinilearn.com/)
* [agill.xyz/](https://agill.xyz/)  [Notgnoshi (Austin Gill)](https://github.com/Notgnoshi)
* [Game Math Series | Ming-Lun "Allen" Chou | 周明倫](http://allenchou.net/game-math-series/)

FIXME## Interesting People

FIXME### YouTube

* [Hugo Larochelle](https://www.youtube.com/user/hugolarochelle)
* [cs-syd.eu/about](https://cs-syd.eu/about)
* [mrossinek.gitlab.io/](https://mrossinek.gitlab.io/)

FIXME### Tools & Tech

* [RossKnapman/HugoTheme](https://github.com/RossKnapman/HugoTheme) (great icons)
* [Academia Website](https://www.academia.edu/portfolio_creation)

FIXME## TO SORT

* ( ) [Brian Reilly · Entrepreneurial Front-End Web Developer](http://brianreilly.me/)
* ( ) [perso $$$](https://ariel-frischer.github.io/developerFolio/)
* ( ) [vhyrro.github](https://vhyrro.github.io/)
* ( ) [video](https://www.youtube.com/@unixbhaskar/videos) $$$

FIXME### Econ People

* [Albrecht Bohne](https://sites.google.com/site/albrechtbohne/welcome)
* [Bobkova_CV_2017_11.pdf - Google Drive](https://drive.google.com/file/d/0B3ny1wDLYF6AV3pQVFJYWFlFUHM/view)
* [Chia-Yu Tsai CV (2017 Nov).pdf - Google Drive](https://drive.google.com/file/d/1kK99x28sD2UGqI8vlFDj9IqC4Os2g6a1/view)
* [Curriculum Vitae | Niccolò Lomys](https://niccololomys.com/curriculum-vitae/)
* [CV – Chia-Yu Tsai](https://chiayutsai.wordpress.com/cv/)
* [CV_AlbrechtBohne.pdf - Google Drive](https://drive.google.com/file/d/0B2T3AGjlnKEyQUpycUVqT0hNZzg/view)
* [CV_Yao_Chen.pdf - Google Drive](https://drive.google.com/file/d/0B3qZCmwU5lEQYXdyWWU2Q2Vfa0k/view)
* [Daria Khromenkova](https://sites.google.com/site/dariakhromenkova/)
* [daria_khromenkova_cv.pdf](https://docs.google.com/viewer?a=v&pid=sites&srcid=ZGVmYXVsdGRvbWFpbnxkYXJpYWtocm9tZW5rb3ZhfGd4OjdlMTY0NTU2ZmUzOGE3NzM)
* [Eric Weinstein](https://www.ineteconomics.org/research/experts/eweinstein)
* [ekaterinakazakova.files.wordpress.com/2018/02/cv.pdf](https://ekaterinakazakova.files.wordpress.com/2018/02/cv.pdf)
* [bgse.uni-bonn.de/en/job-market/job-market-candidates/katja-mann-cv](https://www.bgse.uni-bonn.de/en/job-market/job-market-candidates/katja-mann-cv)
* [bgse.uni-bonn.de/en/job-market/job-market-candidates/tobits-cv.pdf](https://www.bgse.uni-bonn.de/en/job-market/job-market-candidates/tobits-cv.pdf)
* [gordon.edu/ace/](https://www.gordon.edu/ace/)
* [Markus Frölich | IDEAS/RePEc](https://ideas.repec.org/e/pfr76.html)
* [Markus Frölich | IZA - Institute of Labor Economics](https://www.iza.org/person/897/markus-frolich)
* [Simplice A. Asongu - Project Syndicate](https://www.project-syndicate.org/columnist/simplice-asongu)
* [The Homepage of David de la Croix](https://perso.uclouvain.be/david.delacroix/institutions.html)
* [WangCV.pdf - Google Drive](https://drive.google.com/file/d/0B5yI2QXpvj7AYWVFeTN1RFRHbUE/view)
* [WardFelix_CV.pdf - Google Drive](https://drive.google.com/file/d/1pp_G39Q4bKTj0hvi5b-lPmDYws1bsIMc/view)
* [Xiaodi Wang](https://sites.google.com/view/xiaodiwang/home)

FIXME### Personal Sites

* [tlkh.dev/](https://tlkh.dev/)  
* [adamspannbauer.github.io/](https://adamspannbauer.github.io/) 
* [curiousily.com/](https://curiousily.com/)
* [Talia Vogt](https://taliavogt.com/about/)
* [mattjustice.com/](https://www.mattjustice.com/)
* [8d9.ru/category/blog](https://8d9.ru/category/blog) - IT blog
* [uninsane.org/](https://uninsane.org/)
* ? [catonmat.net](https://catonmat.net/)
* [Archive · Thorsten Hans' blog](https://www.thorsten-hans.com/archive/)
* [Chris McDonough - YouTube](https://www.youtube.com/@ChrisMcDonough)
* [Chris McDonough - YouTube](https://www.youtube.com/@ChrisMcDonough/playlists)

FIXME#### Not Looked at in a While

* [math.toronto.edu/ivan/mat327/?courseinfo](http://www.math.toronto.edu/ivan/mat327/?courseinfo)
* [sebastianraschka.com/](https://sebastianraschka.com/)
* [jeapostrophe.github.io/index.html](https://jeapostrophe.github.io/index.html)
* [eleanorplatt.github.io/](https://eleanorplatt.github.io/)
* [brianjsingh.com/aesthetic33/](http://brianjsingh.com/aesthetic33/)
* [brianjsingh.com/](http://www.brianjsingh.com/)
* [lukemuehlhauser.com/](https://lukemuehlhauser.com/)
* [blog.moelter-online.de/](http://blog.moelter-online.de/)
* [daniel-braun.com/](https://www.daniel-braun.com/)
* [qntm.org/](https://qntm.org/)
* [junqing-zhang.github.io/](https://junqing-zhang.github.io/)
* [sauravabc16.github.io/index.html](https://sauravabc16.github.io/index.html)
* [Kenneth Reitz](https://www.kennethreitz.org/)
* [François Chollet](https://fchollet.com/)
* [tqchen.com/](https://tqchen.com/)
* [Dylan Holmes](http://web.mit.edu/dxh/www/)
* [ritchieng.com/](http://www.ritchieng.com/)
* [Edwin Leuven - personal site](http://leuven.economists.nl/)
* [Josselin THUILLIEZ - Home](http://www.josselinthuilliez.com/)
* [Kathleen Nosal](https://sites.google.com/site/kathleennosal/home)
* [Laurens van der Maaten – Laurens van der Maaten](https://lvdmaaten.github.io/)
* [http://madrury.github.io](http://madrury.github.io/)
* [randomekek.github.io/deep/deeplearning.html](https://randomekek.github.io/deep/deeplearning.html)
* [eax.me/](https://eax.me/)
* [louiscastricato.com/](https://www.louiscastricato.com/)
* [linguist.is/](http://linguist.is/)
* [jonkrohn.com/](https://www.jonkrohn.com/)
* [Aqua Rusa - Quality Blog ](https://aquarusa.wordpress.com/)
* [klokacitat.se/](http://klokacitat.se/)
* [Albrecht Bohne](https://sites.google.com/site/albrechtbohne/home)
* [Bobkova_CV_2017_11.pdf - Google Drive](https://drive.google.com/file/d/0B3ny1wDLYF6AV3pQVFJYWFlFUHM/view)
* [Chia-Yu Tsai CV (2017 Nov).pdf - Google Drive](https://drive.google.com/file/d/1kK99x28sD2UGqI8vlFDj9IqC4Os2g6a1/view)
* [Curriculum Vitae | Niccolò Lomys](https://niccololomys.com/curriculum-vitae/)
* [CV – Chia-Yu Tsai](https://chiayutsai.wordpress.com/cv/)
* [CV_AlbrechtBohne.pdf - Google Drive](https://drive.google.com/file/d/0B2T3AGjlnKEyQUpycUVqT0hNZzg/view)
* [CV_Yao_Chen.pdf - Google Drive](https://drive.google.com/file/d/0B3qZCmwU5lEQYXdyWWU2Q2Vfa0k/view)
* [Daria Khromenkova](https://sites.google.com/site/dariakhromenkova/)
* [daria_khromenkova_cv.pdf](https://docs.google.com/viewer?a=v&pid=sites&srcid=ZGVmYXVsdGRvbWFpbnxkYXJpYWtocm9tZW5rb3ZhfGd4OjdlMTY0NTU2ZmUzOGE3NzM)
* [Eric Weinstein](https://www.ineteconomics.org/research/experts/eweinstein)
* [ekaterinakazakova.files.wordpress.com/2018/02/cv.pdf](https://ekaterinakazakova.files.wordpress.com/2018/02/cv.pdf)
* [bgse.uni-bonn.de/en/job-market/job-market-candidates/katja-mann-cv](https://www.bgse.uni-bonn.de/en/job-market/job-market-candidates/katja-mann-cv)
* [bgse.uni-bonn.de/en/job-market/job-market-candidates/tobits-cv.pdf](https://www.bgse.uni-bonn.de/en/job-market/job-market-candidates/tobits-cv.pdf)
* [gordon.edu/ace/](https://www.gordon.edu/ace/)
* [Markus Frölich | IDEAS/RePEc](https://ideas.repec.org/e/pfr76.html)
* [Markus Frölich | IZA - Institute of Labor Economics](https://www.iza.org/person/897/markus-frolich)
* [Simplice A. Asongu - Project Syndicate](https://www.project-syndicate.org/columnist/simplice-asongu)
* [The Homepage of David de la Croix](https://perso.uclouvain.be/david.delacroix/institutions.html)
* [WangCV.pdf - Google Drive](https://drive.google.com/file/d/0B5yI2QXpvj7AYWVFeTN1RFRHbUE/view)
* [WardFelix_CV.pdf - Google Drive](https://drive.google.com/file/d/1pp_G39Q4bKTj0hvi5b-lPmDYws1bsIMc/view)
* [Xiaodi Wang](https://sites.google.com/view/xiaodiwang/home)
* [Jacob Eisenstein](https://jacobeisenstein.github.io/)
* [marcobaroni.org/](http://marcobaroni.org/)
* [-> check! sarnthil (Bostan Laura-Ana-Maria) / Following](https://github.com/sarnthil?tab=following)
* [bruno-latour.fr](http://www.bruno-latour.fr/fr.html)
* [Herr Dr. Roman Klinger | Institut für Maschinelle Sprachverarbeitung | Universität Stuttgart](https://www.ims.uni-stuttgart.de/institut/team/Klinger/)
* [Rob Larson](https://www.jacobinmag.com/author/rob-larson)
* [ageron](https://github.com/ageron)
* [justmarkham](https://github.com/justmarkham)
* [tfolkman](https://github.com/tfolkman)
* [setosa.io/#/](http://setosa.io/#/)
* [**Chris Albon](https://chrisalbon.com/)
* [Abigail See](http://www.abigailsee.com/)
* [Andreas Eberle: Home](http://wt.iam.uni-bonn.de/eberle/home/)
* [Awni Hannun – Writing About Machine Learning](https://awni.github.io/)
* [Bienvenue dans la tour d'ivoire de John Bonobo - La tour d'ivoire de John Bonobo](http://maths.wikidot.com/)
* [cognitivemedium.com](http://cognitivemedium.com/)
* [Dr. Phillip M. Feldman's home page](http://phillipmfeldman.org/)
* [gabgoh.github.io](http://gabgoh.github.io/)
* [GR's Website](https://data.princeton.edu/wws509/notes/c3s1)
* [Guillaume Genthial blog](https://guillaumegenthial.github.io/)
* [Homepage of Professor Lior Rokach](http://www.ise.bgu.ac.il/faculty/liorr/)
* [hooyuser (Huyi Chen)](https://github.com/hooyuser)
* [ase.tufts.edu/cogstud/jackendoff/](http://ase.tufts.edu/cogstud/jackendoff/)
* [richardminerich.com/](http://richardminerich.com/)
* [ruder.io/](http://ruder.io/)
* [sametmax.com/](http://sametmax.com/)
* [martinnowak.com/](http://www.martinnowak.com/)
* [acesounderglass.com/](https://acesounderglass.com/)
* [chrisalbon.com/](https://chrisalbon.com/)
* [danielmiessler.com/](https://danielmiessler.com/)
* [ncase](https://github.com/ncase)
* [sites.google.com/site/dahlenhmd/research-1](https://sites.google.com/site/dahlenhmd/research-1)
* [cs.washington.edu/people/faculty/nasmith](https://www.cs.washington.edu/people/faculty/nasmith)
* [Jana Beck: University of Pennsylvania Department of Linguistics](http://www.ling.upenn.edu/~janabeck/greek-corpora.html)
* [Jonathan Mugan – Noteworthy - The Journal Blog](https://blog.usejournal.com/@jmugan)
* [justmarkham (Kevin Markham)](https://github.com/justmarkham)
* [Kevin Meurer](http://kevinmeurer.com/)
* [Laurence Anthony's Software](http://www.laurenceanthony.net/software.html)
* [Martin Thoma](https://martin-thoma.com/)
* [MartinThoma (Martin Thoma) / Repositories](https://github.com/MartinThoma?tab=repositories)
* [Matthew W. Crocker - Home](http://www.coli.uni-saarland.de/~crocker/#page6/page8/page8)
* [Nicola Limodio](http://nicolalimodio.com/)
* [Quentin Pleplé](http://qpleple.com/)
* [Sergey Nikolenko](https://logic.pdmi.ras.ru/~sergey/)
* [Sharon Peperkamp](http://www.lscp.net/persons/peperkamp/)
* [Stephen Marsland](https://seat.massey.ac.nz/personal/s.r.marsland/MLBook.html)
* [tfolkman (Tyler Folkman) · GitHub](https://github.com/tfolkman)
* [Wiebke Petersen](https://user.phil.hhu.de/~petersen/index.de.shtml)
* [Stefan Th. Gries](http://www.stgries.info/)
* [Stefan Th. Gries: Teaching @ UCSB](http://www.stgries.info/teaching/overview-ucsb.html)
* [Terra Incognita](http://blog.christianperone.com/)
* [ Tutoriels - lehollandaisvolant.net](https://lehollandaisvolant.net/tuto/#divers)
* [johnerichumphries.com/](http://johnerichumphries.com/)
* [ben.orsee.org/#start](http://ben.orsee.org/#start)
* [sites.google.com/site/upetronijevic/home](https://sites.google.com/site/upetronijevic/home)
* [themuse.com/advice/the-35-best-personal-websites-weve-ever-seen](https://www.themuse.com/advice/the-35-best-personal-websites-weve-ever-seen)
* [Hello, I'm Kulani](http://www.kulanipdias.com/)
* [individual.utoronto.ca/cornelson/](http://individual.utoronto.ca/cornelson/)
* [jeffdenning.com/teaching](http://www.jeffdenning.com/teaching)
* [jonahlehrer.com/](http://www.jonahlehrer.com/)
* [jorgeluisgarcia.com/](http://www.jorgeluisgarcia.com/)
* [K. Baur, Lehre, Karl Franzens Universität Graz](https://imsc.uni-graz.at/baur/Teaching.html)
* [Yuxin Yao - Home](http://yuxinyao.weebly.com/)
* [gwern.net/index](http://www.gwern.net/index)
* [Aqua Rusa - Quality Blog ](https://aquarusa.wordpress.com/)
* [Notgnoshi (Austin Gill)](https://github.com/Notgnoshi)
* [klokacitat.se/](http://klokacitat.se/)
* [Jacob Eisenstein](https://jacobeisenstein.github.io/)
* [marcobaroni.org/](http://marcobaroni.org/)
* [-> check! sarnthil (Bostan Laura-Ana-Maria) / Following](https://github.com/sarnthil?tab=following)
* [bruno-latour.fr](http://www.bruno-latour.fr/fr.html)
* [Herr Dr. Roman Klinger | Institut für Maschinelle Sprachverarbeitung | Universität Stuttgart](https://www.ims.uni-stuttgart.de/institut/team/Klinger/)
* [Rob Larson](https://www.jacobinmag.com/author/rob-larson)
* [ageron](https://github.com/ageron)
* [justmarkham](https://github.com/justmarkham)
* [tfolkman](https://github.com/tfolkman)
* [setosa.io/#/](http://setosa.io/#/)
* <> [**Chris Albon](https://chrisalbon.com/)
* [Abigail See](http://www.abigailsee.com/)
* [Andreas Eberle: Home](http://wt.iam.uni-bonn.de/eberle/home/)
* [Andriy Burkov | LinkedIn](https://www.linkedin.com/today/author/andriyburkov?trk=pprof-feed)
* [Awni Hannun – Writing About Machine Learning](https://awni.github.io/)
* [Bienvenue dans la tour d'ivoire de John Bonobo - La tour d'ivoire de John Bonobo](http://maths.wikidot.com/)
* [cognitivemedium.com](http://cognitivemedium.com/)
* [Dr. Phillip M. Feldman's home page](http://phillipmfeldman.org/)
* [gabgoh.github.io](http://gabgoh.github.io/)
* [GR's Website](https://data.princeton.edu/wws509/notes/c3s1)
* [Guillaume Genthial blog](https://guillaumegenthial.github.io/)
* [Homepage of Professor Lior Rokach](http://www.ise.bgu.ac.il/faculty/liorr/)
* [hooyuser (Huyi Chen)](https://github.com/hooyuser)
* [ase.tufts.edu/cogstud/jackendoff/](http://ase.tufts.edu/cogstud/jackendoff/)
* [colah.github.io/](http://colah.github.io/)
* [richardminerich.com/](http://richardminerich.com/)
* [ruder.io/](http://ruder.io/)
* [sametmax.com/](http://sametmax.com/)
* [martinnowak.com/](http://www.martinnowak.com/)
* [acesounderglass.com/](https://acesounderglass.com/)
* [chrisalbon.com/](https://chrisalbon.com/)
* [danielmiessler.com/](https://danielmiessler.com/)
* [ncase](https://github.com/ncase)
* [sites.google.com/site/dahlenhmd/research-1](https://sites.google.com/site/dahlenhmd/research-1)
* [cs.washington.edu/people/faculty/nasmith](https://www.cs.washington.edu/people/faculty/nasmith)
* [Hugo Larochelle](https://www.youtube.com/user/hugolarochelle)
* [Jana Beck: University of Pennsylvania Department of Linguistics](http://www.ling.upenn.edu/~janabeck/greek-corpora.html)
* [Jonathan Mugan – Noteworthy - The Journal Blog](https://blog.usejournal.com/@jmugan)
* [justmarkham (Kevin Markham)](https://github.com/justmarkham)
* [Kevin Meurer](http://kevinmeurer.com/)
* [Laurence Anthony's Software](http://www.laurenceanthony.net/software.html)
* [Martin Thoma](https://martin-thoma.com/)
* [MartinThoma (Martin Thoma) / Repositories](https://github.com/MartinThoma?tab=repositories)
* [Matthew W. Crocker - Home](http://www.coli.uni-saarland.de/~crocker/#page6/page8/page8)
* [Meriem Beloucif (University of Hamburg)](https://belomeriem.github.io/)
* [Nicola Limodio](http://nicolalimodio.com/)
* [Quentin Pleplé](http://qpleple.com/)
* [Sergey Nikolenko](https://logic.pdmi.ras.ru/~sergey/)
* [Sharon Peperkamp](http://www.lscp.net/persons/peperkamp/)
* [Stephen Marsland](https://seat.massey.ac.nz/personal/s.r.marsland/MLBook.html)
* [tfolkman (Tyler Folkman) · GitHub](https://github.com/tfolkman)
* [Wiebke Petersen](https://user.phil.hhu.de/~petersen/index.de.shtml)
* [Stefan Th. Gries](http://www.stgries.info/)
* [Stefan Th. Gries: Teaching @ UCSB](http://www.stgries.info/teaching/overview-ucsb.html)
* [Terra Incognita](http://blog.christianperone.com/)
* <> [ Tutoriels - lehollandaisvolant.net](https://lehollandaisvolant.net/tuto/#divers)
* <> [Jesus Fernandez-Villaverde's Homepage](https://www.sas.upenn.edu/~jesusfv/teaching.html)
* <> [Lil'Log](https://lilianweng.github.io/lil-log/)
* <> [Sasank's Blog](http://chsasank.github.io/)
* [Abhijeet Chopra · GitHub Website](https://abhijeetchopra.github.io/)
* [Abhijeet Gupta – Researcher & Doctoral Student](http://abhijeetgupta.info/)
* [Alessandro Moschitti's Home Page](http://dit.unitn.it/moschitti/)
* [Archives - Eli Bendersky's website](https://eli.thegreenplace.net/archives/all)
* [Aymeric Damien (aymericdamien) - Libraries.io](https://libraries.io/github/aymericdamien)
* [Ben Lynn's Online Garbage](https://benlynn.blogspot.com/)
* [Çağrı Çöltekin Great Site](http://coltekin.net/cagri/#)
* [Christina's blog – Hello world!](https://christinakouridi.blog/)
* [Colleen Farrelly | LinkedIn](https://www.linkedin.com/in/colleenmfarrelly/)
* [Colleen M. Farrelly - Google Scholar Citations](https://scholar.google.com/citations?user=iNloCF0AAAAJ&hl=en)
* [Consulting in mathematics, statistics, and data privacy](https://www.johndcook.com/blog/)
* [Ehsan's Blog](https://ehsanmkermani.com/)
* [Erik Engheim – Medium](https://medium.com/@Jernfrost)
* [fxsjy/jieba: 结巴中文分词](https://github.com/fxsjy/jieba)
* [gotohaggstrom.com - Home](https://gotohaggstrom.com/index.html)
* [Graham Neubig](http://www.phontron.com/)
* [Heaviside’s Dinner](https://heavisidesdinner.com/index.html)
* [Home - Toban Wiebe](https://tobanwiebe.com/)
* [I Make Games](http://www.allenchou.net/)
* [James Tauber — Open Source ](https://jtauber.github.io/)
* [Kareem Alkaseer](http://www.kareemalkaseer.com/blog)
* [Karl Broman](https://kbroman.org/)
* [Kata Gábor](https://lipn.univ-paris13.fr/~gabor/)
* [Morris Riedel](http://www.morrisriedel.de/teaching)
* [News [D. Kriesel]](http://www.dkriesel.com/)
* [rasbt (Sebastian Raschka)](https://github.com/rasbt)
* [Ryan Baumann](https://ryanfb.github.io/)
* [Shagnik Das - FU Berlin](http://page.mi.fu-berlin.de/shagnik/teaching/history.html)
* [skansi (Sandro Skansi) · GitHub](https://github.com/skansi)
* [Software and etc « timmurphy.org](http://timmurphy.org/)
* [Soumith Chintala](http://soumith.ch/)
* [Theodore Bluche - Research Engineer](http://www.tbluche.com/publis.html)
* [Theodore Bluche - Research Engineer](http://www.tbluche.com/publis.html)
* [Theodore Bluche - Research Engineer](http://www.tbluche.com/scan_attend_read.html)
* [Yngve Hoiseth](https://yngve.hoiseth.net/)
* [Theodore Bluche - Research Engineer](http://www.tbluche.com/scan_attend_read.html)
* [Vivi Nastase](https://www.cl.uni-heidelberg.de/~nastase/)
* [milenkofadic.com/index.html](http://milenkofadic.com/index.html)
* [fasterthan.life/](https://www.fasterthan.life/)
* [Kyle P. Johnson](http://kyle-p-johnson.com/)
* [Björn Rudzewitz](http://www.sfs.uni-tuebingen.de/~brzdwtz/)
* [mschilli87](https://github.com/mschilli87)
* [phaazon.net/](https://phaazon.net/)
* [David Ingalls Bell's Homepage](https://members.tip.net.au/~dbell/)
* [Peter Norvig](http://norvig.com/)
* [Home](https://adamj.eu/)
* [Thomas Wolf](https://thomwolf.io/)
* [jakobgm.com/](https://jakobgm.com/)
* [Kai Hendry - YouTube](https://www.youtube.com/@kaihendry)
* [martinheinz.dev/](https://martinheinz.dev/)
* [snarky.ca/](https://snarky.ca/)
* [matthewball.vc/](https://www.matthewball.vc/)
* [hkupty](https://github.com/hkupty)
* [gsantner.net/](https://gsantner.net/)
* [jaredkhan.com/](https://jaredkhan.com/)
* [rebeccaskinner.net/](https://rebeccaskinner.net/)
* [gsantner.net/](https://gsantner.net/)
* [lukesmith.xyz/](https://lukesmith.xyz/)
* [tklitschi](https://github.com/tklitschi)
* [davidosomething.com/](https://www.davidosomething.com/)
* [monroe programs - YouTube](https://www.youtube.com/channel/UC_R_1_rGins-tF70LoxcG8A)
* [Brandon Rhodes](https://rhodesmill.org/brandon/)
* [threebean.org/](http://threebean.org/)
* [Ian Henry](https://ianthehenry.com/)
* [David Kobalia](https://insolitum.github.io/)
* [Daniel Siepmann - Friendica | Daniel Siepmann @ Daniel Siepmann - Friendica](https://friendica.daniel-siepmann.de/profile/danielsiepmann/profile)
* [Roman Sauer](https://www.youtube.com/channel/UCddOQj0eT6M9DvI7RRwXvGA)
* [jonisalonen.com/](https://jonisalonen.com/)
* [tobyho.com/index.html](https://tobyho.com/index.html)
* [timparks.com/non-fiction/out-of-my-head/](https://timparks.com/non-fiction/out-of-my-head/)
* [scaron.info/category/blog.html](https://scaron.info/category/blog.html)
* [thesquareplanet.com/](https://thesquareplanet.com/)
* [user/_mutex_](https://www.reddit.com/user/_mutex_)
* [johncodes.com/](https://johncodes.com/)
* [jdhao (jdhao)](https://github.com/jdhao)
* [raphlinus (raphlinus) / Repositories](https://github.com/raphlinus?tab=repositories)
* [Blog - Weblog](http://markus-beuckelmann.de/)
* [markus-beuckelmann (Markus Beuckelmann)](https://github.com/markus-beuckelmann)
* [Gram / Projects](https://orsinium.dev/projects.html)
* [Brandon Rohrer / cottonwood · GitLab](https://gitlab.com/brohrer/cottonwood)
* -> see other channels [video](https://www.youtube.com/@GavinFreeborn)
* [fasterthanli.me/about](https://fasterthanli.me/about)
* [Calin Leafshade - Linux & Productivity Videos](https://youtube.com/@LeafshadeSoftware)
* [Strazil001?tab=repositories](https://github.com/Strazil001?tab=repositories)
* [joshmedeski](https://github.com/joshmedeski)
* [youtube.com/@LoganKilpatrickYT](https://youtube.com/@LoganKilpatrickYT)
* [flyx.org/](https://flyx.org/)
* [wmvanvliet](https://github.com/wmvanvliet)
* [kfish.org/~conrad/](http://www.kfish.org/~conrad/)
* [Cubified](https://github.com/Cubified)
* [pragmaticpineapple.com/](https://pragmaticpineapple.com/)
* [immunant.com/blog/](https://immunant.com/blog/)
* [Hackflow](https://suor.github.io/)
* [nicco.love/](https://nicco.love/)
* [Elteoremadebeethoven (Alexander Vázquez)](https://github.com/Elteoremadebeethoven) (manim)
* ( ) [xuefuzhao.github.io/](https://xuefuzhao.github.io/)
* [Archives - Eli Bendersky's website](https://eli.thegreenplace.net/archives/all)
* [ArrynDoesTech - YouTube](https://www.youtube.com/@arryndoestech)
* [Chris Portela - Cloud, Software, and Photography](https://www.chrisportela.com/)
* [Chronicles of Weird ThingsChronicae Novis Rebus](https://chronicles.mad-scientist.club/) (Nix etc)
* [Emma Böcker (@boecker@chaos.social) - rheinneckar.social](https://rheinneckar.social/@boecker@chaos.social)
* [Ephoto :: Stephen Houston — Software Engineer](https://www.smhouston.us/ephoto/)
* [Hugo Barrera's site](https://whynothugo.nl/)
* [Monster](https://monster.codeberg.page/)
* [Projects - Eli Bendersky's website](https://eli.thegreenplace.net/pages/projects)
* [Projects - Federico Terzi - A Software Engineering Journey](https://federicoterzi.com/projects)
* [Victor Zheng](https://victor-zheng.com/)
* [ansidev's blog | Le Minh Tri | Substack](https://ansidev.substack.com/p/wezterm-cheatsheet)
* [bespinian Blog](https://blog.bespinian.io/)
* [bespinian Blog](https://blog.bespinian.io/)
* [SergioRibera](https://github.com/SergioRibera)
* [radicle.xyz/](https://radicle.xyz/)
* [linkedin.com/in/manuel-epp/](https://www.linkedin.com/in/manuel-epp/)
* [video](https://www.youtube.com/@devaslife)
* [video](https://www.youtube.com/@devopstoolbox)
* [video](https://www.youtube.com/@levonog)
* ansidev's blog

FIXME# Research Ideas

FIXME## Polyglot Phraseological Database

FIXME### Main Questions / Thoughts:

FIXME#### What data structure and format is best for our purposes?

FIXME#### Which database type?

FIXME#### What are the difference use cases for the database / corpus?

FIXME### How can we create a semantic transcription for each phrase?

* universal semantic language
* Anna Wierzbicka (esp. on semantic primes and USM)
* semantic features
* semantic universals
* cross-lingual semantic language
* computational semantics
* [Semantic analysis for Corpus Linguistics](https://www.aclweb.org/anthology/J93-2005.pdf)

FIXME### How to classify proverbs?

* [3 Categorization of Proverbs](https://content.sciendo.com/downloadpdf/book/9783110410167/10.2478/9783110410167.3.xml)
* [A Proverb in Mind](https://books.google.de/books?id=umBt3Wu-CuUC&pg=PA19&lpg=PA19&dq=classification+schema+for+proverb&source=bl&ots=CFoeCsF300&sig=ACfU3U3kmnKJ2M3jHXN0psp-mmYlTwFUyA&hl=ru&sa=X&ved=2ahUKEwjrtvf7xsrnAhVFKewKHVsrDIkQ6AEwE3oECAYQAQ)
* [Introduction to Paremiology](https://books.google.de/books?id=Rxs_CwAAQBAJ&pg=PT158&lpg=PT158&dq=classification+schema+for+proverb&source=bl&ots=n2LgM-GG3l&sig=ACfU3U1kF7xnsvFs2MKh6IEc5i6hamKrbg&hl=ru&sa=X&ved=2ahUKEwjrtvf7xsrnAhVFKewKHVsrDIkQ6AEwGHoECAcQAQ)
* [Classification of Proverbs](https://studfile.net/preview/5427909/page:3/)

FIXME### Brainstorming

* Create a large multilingual resource containing idiomatic expression and proverbs, and possibly other non-analytic collocations        > develop semantic representations of both literal and figurative meanings of units        > identify values/morals as well as literal SVO        > dual classification scheme: literal and figurative meaning, network data structure

FIXME### Features:

* Basic phrase text
* Variants
* Equivalents (lists of exact, close, and distant matches on both literal and figurative similarity)
* Literal semantic transcription(s) (each unambiguous)
* Figurative semantic transcription(s) (each unambiguous)        (temporary?) Literal meaning in English        (temporary?) Figurative meaning in English        (?) List of entity codes (WordNet-style hierarchical code, marked as subject, object, neither)        (?) List of entity codes (WordNet-style hierarchical code)
* Register(s) & (if applicable) dialect
* Distance between literal and figurative (values? - identical, abstract word sense, close, stretch, entirely unapparent)
* Source(s)
* Earliest attestation
* Corpus frequency (corpus-frequency pair)
* Types (proverb, idiomatic expression, slang)

FIXME### Collectioin

* [European Proverbs (Strauss) - Anki](https://docs.google.com/spreadsheets/d/1iSrCKxJ7R98VF8t1vFX7dTR4X_8MmE6afhjD4uglL5Q/edit?usp=sharing)
* [Proverb Collection](https://docs.google.com/spreadsheets/d/13UNAdR0u_uLzgJPf-Tb8AtxpcD_m46rzCJYSQQB9ATs/edit?usp=sharing)
* [Modismos diversos (borrador)](https://docs.google.com/spreadsheets/d/1_gtGJ-aPb-L98F3ylU9ADCoFLIPPo55waoiDgtvwgtU/edit?usp=sharing)
* [Polyglot Phraseological Database](https://docs.google.com/spreadsheets/d/1xQE30iCryMege8m63T-KdK3JYeIry2oDZ1YU_EiFftM/edit?usp=sharing)    Read up in depth on semantics and develop a semantic representation language for proverbs    Digitize all Strauss proverbs    Gather and sort all EN, DE, RU, FR, ES proverbs and idioms

FIXME### Storage

* [stackoverflow.com/questions/3287003/three-ways-to-store-a-graph-in-memory-advantages-and-disadvantages](https://stackoverflow.com/questions/3287003/three-ways-to-store-a-graph-in-memory-advantages-and-disadvantages)

FIXME### Theory, esp. Semantics

* [en.wikipedia.org/wiki/Computational_semantics](https://en.wikipedia.org/wiki/Computational_semantics)
* [libgen.is/search.php?req=Representation+and+Inference+for+Natural+Language+&lg_topic=libgen&open=0&view=simple&res=25&phrase=1&column=def](https://libgen.is/search.php?req=Representation+and+Inference+for+Natural+Language+&lg_topic=libgen&open=0&view=simple&res=25&phrase=1&column=def)
* [libgen.is/search.php?req=Computing+Meaning%2C&open=0&res=25&view=simple&phrase=1&column=def](https://libgen.is/search.php?req=Computing+Meaning%2C&open=0&res=25&view=simple&phrase=1&column=def)
* [Minimal Recursion Semantics. An introduction](https://web.archive.org/web/20120717034844/http://lingo.stanford.edu/sag/papers/copestake.pdf)
* [libgen.is/search.php?req=Computational+Semantics+with+Functional+Programming&open=0&res=25&view=simple&phrase=1&column=def](https://libgen.is/search.php?req=Computational+Semantics+with+Functional+Programming&open=0&res=25&view=simple&phrase=1&column=def)
* [Developing a large semantically annotated corpus.](https://scholar.google.com/scholar?q=%22meaning+representation%22+%22computational+semantics%22+%22underspecification%22+%22anaphora%22+%22scope+resolution%22&btnG=&hl=en&as_sdt=0%2C47#)
* [Computational lexical semantics](https://libgen.is/book/index.php?md5=3CAECF7E551F0710F438B8EF2D522AF0)
* [Special Interest Group on Computational Semantics (SIGSEM)
* [blog.wolfram.com/2016/12/22/the-semantic-representation-of-pure-mathematics/](https://blog.wolfram.com/2016/12/22/the-semantic-representation-of-pure-mathematics/)
* [Semantic analysis for Corpus Linguistics](https://www.aclweb.org/anthology/J93-2005.pdf)
* semantical+analysis+pdf
* [en.wikipedia.org/wiki/Semantic_analysis_(linguistics)](https://en.wikipedia.org/wiki/Semantic_analysis_(linguistics))
* [en.wikipedia.org/wiki/Semantic_feature](https://en.wikipedia.org/wiki/Semantic_feature)    semantische universalien    semantic universals    cross-lingual semantic language    universal semantic language
* universal+semantic+language

FIXME### Resources / References

* [A Multilingual Dictionary of Maxims and Proverbs](https://www.cambridgescholars.com/a-multilingual-dictionary-of-maxims-and-proverbs)
* [wordnet.princeton.edu/](https://wordnet.princeton.edu/)
* [COMPARATIVE STRUCTURAL-SEMANTIC ANALYSIS OF ENGLISH AND RUSSIAN PROVERBS EXPRESSING THE MORAL-ETHIC SENSE DOMINANT “STUDYING, KNOWLEDGE, WISDOM”](https://www.researchgate.net/publication/325662325_COMPARATIVE_STRUCTURAL-SEMANTIC_ANALYSIS_OF_ENGLISH_AND_RUSSIAN_PROVERBS_EXPRESSING_THE_MORAL-ETHIC_SENSE_DOMINANT_STUDYING_KNOWLEDGE_WISDOM)    Основы структурной паремиологии    Провербиальное пространство / Паремиологические исследования
* [How Proverbs Mean: Semantic Studies in English Proverbs](https://books.google.de/books?id=mXAFiNGsJqgC&pg=PA3&lpg=PA3&dq=semantic+representations+of+proverbs&source=bl&ots=la_7uFuFet&sig=ACfU3U0Kz5hnaLdfR0O2WEYGee-00ZzwWQ&hl=ru&sa=X&ved=2ahUKEwicw__W26nnAhXB6aQKHWgQA_QQ6AEwAXoECAkQAQ#v=onepage&q=semantic%20representations%20of%20proverbs&f=false)
* [Idiomatic Creavity (Andreas Langlotz)](https://books.google.de/books?id=YpfYSjNfCn4C&pg=PT64&lpg=PT64&dq=semantic+representations+of+proverbs&source=bl&ots=hj-91ymt0G&sig=ACfU3U13vVm-wgAC4KXDB4t-JVph0v_e5Q&hl=ru&sa=X&ved=2ahUKEwicw__W26nnAhXB6aQKHWgQA_QQ6AEwCXoECAgQAQ#v=onepage&q=semantic%20representations%20of%20proverbs&f=false)
* [Translation and Relevance: Cognition and Context](https://books.google.de/books?id=KsoJBAAAQBAJ&pg=PT182&lpg=PT182&dq=semantic+representations+of+proverbs&source=bl&ots=t5NZeIOcFa&sig=ACfU3U2AU_YwJ0hEHNJenhNHJkVh4_404g&hl=ru&sa=X&ved=2ahUKEwicw__W26nnAhXB6aQKHWgQA_QQ6AEwBXoECAoQAQ#v=onepage&q=semantic%20representations%20of%20proverbs&f=false)    phraseological corpus    corpus phraseology    Смысл как проблема межкультурной коммуникации / Лингвистические аспекты межкультурной коммуникации    Русская фразеология. Семантический, прагматический и лингвокультурологический аспекты    Английские пословицы и их русские соответствия    Сопоставительный анализ немецкой и русской фразеологии    Сопоставительный анализ фразеологических единиц.-Казань    Русские и английские пословицы как культурологические единицы    Смыслопорождение в языке и общественные инновации
* [wordnet.princeton.edu/](https://wordnet.princeton.edu/)
* [How Proverbs Mean: Semantic Studies in English Proverbs](https://books.google.de/books?id=mXAFiNGsJqgC&pg=PA3&lpg=PA3&dq=semantic+representations+of+proverbs&source=bl&ots=la_7uFuFet&sig=ACfU3U0Kz5hnaLdfR0O2WEYGee-00ZzwWQ&hl=ru&sa=X&ved=2ahUKEwicw__W26nnAhXB6aQKHWgQA_QQ6AEwAXoECAkQAQ#v=onepage&q=semantic%20representations%20of%20proverbs&f=false)
* [Idiomatic Creavity (Andreas Langlotz)](https://books.google.de/books?id=YpfYSjNfCn4C&pg=PT64&lpg=PT64&dq=semantic+representations+of+proverbs&source=bl&ots=hj-91ymt0G&sig=ACfU3U13vVm-wgAC4KXDB4t-JVph0v_e5Q&hl=ru&sa=X&ved=2ahUKEwicw__W26nnAhXB6aQKHWgQA_QQ6AEwCXoECAgQAQ#v=onepage&q=semantic%20representations%20of%20proverbs&f=false)
* [Translation and Relevance: Cognition and Context](https://books.google.de/books?id=KsoJBAAAQBAJ&pg=PT182&lpg=PT182&dq=semantic+representations+of+proverbs&source=bl&ots=t5NZeIOcFa&sig=ACfU3U2AU_YwJ0hEHNJenhNHJkVh4_404g&hl=ru&sa=X&ved=2ahUKEwicw__W26nnAhXB6aQKHWgQA_QQ6AEwBXoECAoQAQ#v=onepage&q=semantic%20representations%20of%20proverbs&f=false)
* [COMPARATIVE STRUCTURAL-SEMANTIC ANALYSIS OF ENGLISH AND RUSSIAN PROVERBS EXPRESSING THE MORAL-ETHIC SENSE DOMINANT “STUDYING, KNOWLEDGE, WISDOM”](https://www.researchgate.net/publication/325662325_COMPARATIVE_STRUCTURAL-SEMANTIC_ANALYSIS_OF_ENGLISH_AND_RUSSIAN_PROVERBS_EXPRESSING_THE_MORAL-ETHIC_SENSE_DOMINANT_STUDYING_KNOWLEDGE_WISDOM)

| Toy example: |  |  |  |  |  |  |  |
| --- | --- | --- | --- | --- | --- | --- | --- |
| EN | Concepts | Entities | Actions | DE | ES | RU | IT |
| A bird in the hand is worth two in the bush. | satisfaction, realism | bird, hand, birds, bush | _ | Ein Spatz in der Hand ist besser als eine Taube auf dem Dach. | Más vale pájaro en mano que ciento volando. | Не сули журавля в небе, а дай синицу в руки. | Meglio un uovo oggi che una gallina domani |
| A friend in need is a friend indeed. | friendship, need | friend | _ | Freunde in der Not gehen tausend auf ein Lot. | En la necesidad se reconoce a un verdadero amigo. | Друг познается в беде | (Gli amici si vedono|Un amico si vede) nel momento del bisogno. / Il buon amico in mal si riconosce |
| Birds of a feather flock together. | similarity, company | birds, feather | to congregate/assemble | Gleich und gleich gesellt sich gern. | Dios los cría y ellos se juntan. | Рыбак рыбака видит издалека. | Chi si somiglia, si piglia. / Dio li fa e poi li accoppia. / Chi si rassembra, s'assembra. |
| A rolling stone gathers no moss. | ... | ... | ... | Wer rastet, der rostet. | _ | Под лежачий камень вода не течёт. | Pietra mossa non fa muschio. / Chi va piano non va lontano. |
| Absence makes the heart grow fonder. |  |  |  | Durch die Ferne wächst die Liebe. | _ | Дальше с глаз, ближе к сердцу. / Разлука для любви, что ветер для искры: маленькую затушит, а большую сделает ещё сильнее.* | _ |
| Actions speak louder than words. |  |  |  | Taten sagen mehr als Worte. | Acciones valen más que las palabras. | Дела говорят громче слов. | Più delle parole pesano i fatti. |
| All's well that ends well |  |  |  | Ende gut alles gut. | Bien está lo que bien acaba. | Все хорошо, что | Tutto è bene (quel|ciò) che finisce bene. |
| Blood is thicker than water. |  |  |  | Blut ist dicker als Wasser. | La sangre tira (mucho). | Свой своему рад. / Как не порадеть родному человечку. | Il sangue non e'acqua. |
| Business before pleasure. |  |  |  | Erst die Arbeit, dann das Vergnügen. | Los negocios van primero. (?) | _ | Prima il dovere (e poi il piacere). |
| Carry coal to Newcastle |  |  |  | Eulen nach Athen tragen | Llevar agua al mar / Llevar hierro a Vizcaya / Llevar leña al bosque. / Vender miel al colmenero. | Ехать в Тулу со своим самоваром. / Идти в лес со своими дровами. | Portare acqua al mare. |
| Don't count (your|the) chickens before they are hatched. |  |  |  | Du sollst den Tag nicht vor dem Abend loben. / Man soll das Fell eines Bären nicht verteilen, bevor man ihn erlegt hat. / Die Toten werden nach der Schlacht gezählt." | No hay que vender la piel del oso antes de cazarlo. | Цыплят по осени считают. / Не делите шкуру неубитого медведя. | Non dire gatto se non l'hai nel sacco |

FIXME## SORT Papers

* ACOUSTIC PARAMETERS VERSUS PHONETIC FEATURES IN ASR.pdf
* Analytical Methods for Interpretable Ultradense Word Embeddings.pdf
* An Overview of Lexical Semantics.pdf
* A Tutorial on Acoustic Phonetic Feature Extraction for Automatic Speech Recognition (ASR) and Text-to-Speech (TTS) Applications in African Languages.pdf
* CHART OF NSM SEMANTIC PRIMES.pdf
* Concepts in space- a linear regression model for lexical decomposition.pdf
* Decomposing Word Embedding with the Capsule Network.pdf
* Development of Multilingual ASR Using GlobalPhone for Less-Resourced Languages. The Case of Ethiopian Languages.pdf
* Disambiguation of newly derived nominalizations in context- A Distributional Semantics approach.pdf
* Distributional Semantics and Linguistic Theory.pdf
* Distributional semantics and the conceptual foundations of verb meaning- how neural word embeddings memorize the unaccusative hypothesis.pdf
* Distributional Semantics.pdf
* Fähndrich - NSM Thesis.pdf
* GIPFA- GENERATING IPA PRONUNCIATION FROM AUDIO.pdf
* Grapheme-to-Phoneme Transduction for Cross-Language ASR.pdf
* Improving_Non-Native_ASR_Through_Stochastic_Multil.pdf
* IMS Semantics Paper.pdf
* Interpretable Word Embeddings For Medical Domain.pdf
* Interpreting Word Embeddings with Eigenvector Analysis.pdf
* IPA ALignment Using Vector Representations
* Learning Word Meta-Embeddings by Autoencoding.pdf
* Learning Word Meta-Embeddings.pdf
* LEARN INTERPRETABLE WORD EMBEDDINGS EFFI- CIENTLY WITH VON MISES-FISHER DISTRIBUTION.pdf
* Measuring out the relation between formal and conceptual semantics.pdf
* Meta-Embedding as Auxiliary Task Regularization.pdf
* Online Learning of Interpretable Word Embeddings.pdf
* PatPho- A phonological pattern generator for neural networks.pdf
* Phonetic Vector Representations for Sound Sequence Alignment.pdf
* Rotated Word Vector Representations and their Interpretability.pdf
* RPD- A Distance Function Between Word Embeddings.pdf
* Semantic Structure and Interpretability of Word Embeddings.pdf
* Sentence Meta-Embeddings for Unsupervised Semantic Textual Similarity.pdf
* That Sounds Familiar- an Analysis of Phonetic Representations Transfer Across Languages.pdf
* The Handbook of Contemporary Semantic Theory
* The structure of lexical meaning- Why semantics really matters
* Think Globally, Embed Locally — Locally Linear Meta-embedding of Words .pdf
* What about lexical semantics if syntac is the only generative component of the grammar A case study on word meaning in German
* Word2Sense - Sparse Interpretable Word Embeddings.pdf
* Word Embedding and WordNet Based Metaphor Identification and Interpretation .pdf
* WordNet Embeddings.pdf
* Zur Ontologie der Bedeutung sprachlicher Ausdrucke

FIXME## TDA and NSM

FIXME### NSM

* [x] Perform preliminary analysis with non-circular dictionary (norm propagation along definitions, distinguish between structure words and semantic content words)- [ ] scrape dictionar
* [ ] create data structure for dictionar
* [ ] put into graph
* [A survey of cross-lingual word embedding models](https://ruder.io/cross-lingual-embeddings/)
* [ithkuil.net/](http://www.ithkuil.net/)
* Research: use the NSM-based non-circular dictionary to identify related word embeddings; extract certain aspects
* [paperswithcode.com/task/topological-data-analysis](https://paperswithcode.com/task/topological-data-analysis)
* [b-ok.cc/s/homology](https://b-ok.cc/s/homology)
* [Séminaire informel - Introduction à l'homologie persistante](https://www.youtube.com/watch?v=uDba3kV3Sf0&list=PLVWtXi_Jrj_2CjtJJGAArDfyzKg2IVgkp&index=188&t=106s)
* [Séminaire informel - Introduction à l'homologie persistante](https://www.youtube.com/watch?v=uDba3kV3Sf0&list=PLVWtXi_Jrj_14rUJDWFEvyhOmYF2JdHmk&index=44&t=106s)
* topological data analysis
* [Topological Data Analysis in Information Space](https://www.researchgate.net/publication/331916154_Topological_Data_Analysis_in_Information_Space)
* [Topos](https://www.youtube.com/user/youdsp)
* geometry of word embeddings
* [en.wikipedia.org/wiki/Topological_data_analysis](https://en.wikipedia.org/wiki/Topological_data_analysis)

FIXME### [*Topological Data Analysis for Machine Learning](https://bastian.rieck.me/outreach/ecml_pkdd_2020/)

* → check out whole site!* [A gentle introduction to persistent homology · Christian Bock](https://christian.bock.ml/posts/persistent_homology/)
* [Persistent Homology — a Survey](https://www.maths.ed.ac.uk/~v1ranick/papers/edelhare.pdf)
* [Persistent homology - Wikipedia](https://en.wikipedia.org/wiki/Persistent_homology)
* [W H A T I S . . . Persistent Homology?](http://www.ams.org/notices/201101/rtx110100036p.pdf)
* [Topological Data Analysis - Persistent Homology](http://outlace.com/TDApart1.html)
* [A roadmap for the computation of persistent homology](https://www.math.ucla.edu/~otter/Roadmap_Queretaro.pdf)
* [Persistent Homology book](https://b-ok.cc/book/2925882/4bbfeb)
* [Algebraic Topology and Its Applications](https://b-ok.cc/book/2129120/901bfe)
* [Topological Data Analysis with Gunnar Carlsson - The TWIML AI Podcast (formerly This Week in Machine Learning & Artificial Intelligence)](https://twimlai.com/twiml-talk-053-topological-data-analysis-gunnar-carlsson/)
* [Gunnar Carlsson Google Scholar](http://scholar.google.com/citations?user=FdNREvoAAAAJ&hl=en)
* [TDA site](https://www.ayasdi.com/)
* [**Neural Networks, Manifolds, and Topology -- colah's blog](https://colah.github.io/posts/2014-03-NN-Manifolds-Topology/)

FIXME##3 [ topological data analysis - YouTube](https://www.youtube.com/results?search_query=topological+data+analysis)

FIXME### [**Persistent homology - Wikipedia](https://en.wikipedia.org/wiki/Persistent_homology)

* [Topological data analysis - Wikipedia](https://en.wikipedia.org/wiki/Topological_data_analysis)
* [researchgate.net/profile/Sara_Scaramuccia/publication/310406546_Persistent_homology_a_step-by-step_introduction_for_newcomers/links/582c6a4808aef19cb81005b0/Persistent-homology-a-step-by-step-introduction-for-newcomers.pdf?origin=publication_detail](https://www.researchgate.net/profile/Sara_Scaramuccia/publication/310406546_Persistent_homology_a_step-by-step_introduction_for_newcomers/links/582c6a4808aef19cb81005b0/Persistent-homology-a-step-by-step-introduction-for-newcomers.pdf?origin=publication_detail)
* intro to persistent homology
* introduction to cw complexes
* [Topology and Groups](http://www.homepages.ucl.ac.uk/~ucahjde/tg/html/index.html#index)
* [CW](http://www.homepages.ucl.ac.uk/~ucahjde/tg/html/cw-01.html)
* [math.upenn.edu/~ghrist/preprints/HAD.pdf](https://www.math.upenn.edu/~ghrist/preprints/HAD.pdf)
* [semanticscholar.org/paper/Homological-algebra-and-data-Ghrist/3d03742173d4fb5ce5bff217264c708e417bf626](https://www.semanticscholar.org/paper/Homological-algebra-and-data-Ghrist/3d03742173d4fb5ce5bff217264c708e417bf626)
* [pi.math.cornell.edu/~web6350/7400-notes_Homological_Algebra.pdf](http://pi.math.cornell.edu/~web6350/7400-notes_Homological_Algebra.pdf)
* [bookstore.ams.org/cdn-1595319758871/pcms-25/~~FreeAttachments/pcms-25-toc.pdf](https://bookstore.ams.org/cdn-1595319758871/pcms-25/~~FreeAttachments/pcms-25-toc.pdf)
* [video](https://www.youtube.com/playlist?list=PLP8iPy9hna6Tl2UHTrm4jnIYrLkIcAROR)
* [Séminaire informel - Introduction à l'homologie persistante](https://youtu.be/uDba3kV3Sf0)
* [4.01 CW complexes](https://youtu.be/XWg4LVbmm3M)
* [Topologie Algébrique II : Homologie, la théorie](https://youtu.be/Ws4bjDJoARo)
* [Raphaël Tinarrage ](https://www.youtube.com/channel/UCE5OLOmBR7vDfYpL9p9LAPw)
* [AyasdiAI Interview Podcast](https://open.spotify.com/episode/56c8sKY68Hx7qZT0JcljQr?si=0lEjVAmWRBSA8mi94B-nVw)
* [Ayasdi Knowledge Center](https://www.ayasdi.com/knowledge-center/)
* [Topological Surfaces](https://www.cis.upenn.edu/~jean/gbooks/surftop.html)
* search: topological data analysis in Julia
  ... and Word Embeddings
* [arxiv.org/abs/1906.09068](https://arxiv.org/abs/1906.09068)
* [A Novel Method of Extracting Topological Features from Word Embeddings](https://arxiv.org/abs/2003.13074)
* [arxiv.org/abs/1705.08488](https://arxiv.org/abs/1705.08488)
* [aclweb.org/anthology/W19-4722.pdf](https://www.aclweb.org/anthology/W19-4722.pdf)
* [pdfs.semanticscholar.org/df4b/7954a9f661ad89061c3b63b006db2517e564.pdf](https://pdfs.semanticscholar.org/df4b/7954a9f661ad89061c3b63b006db2517e564.pdf)
* [arxiv.org/abs/1507.01127](https://arxiv.org/abs/1507.01127)
* [arxiv.org/abs/1907.02423](https://arxiv.org/abs/1907.02423)
* [sciencedirect.com/science/article/pii/S0020025519306425](https://www.sciencedirect.com/science/article/pii/S0020025519306425)
* [nature.com/articles/s41586-019-1335-8](https://www.nature.com/articles/s41586-019-1335-8)
* [ieeexplore.ieee.org/abstract/document/8089444?casa_token=RKRdAlGzH3UAAAAA:XcNvFHemchXfKMn4xwU_JlD0plXJvo7t0C_nUqfSx0uVFif_W5NAc9NJRYpVX9Aqmd8i7UgoNA](https://ieeexplore.ieee.org/abstract/document/8089444?casa_token=RKRdAlGzH3UAAAAA:XcNvFHemchXfKMn4xwU_JlD0plXJvo7t0C_nUqfSx0uVFif_W5NAc9NJRYpVX9Aqmd8i7UgoNA)
* [arxiv.org/abs/2003.13138](https://arxiv.org/abs/2003.13138)
* [Meshes.jl](https://discourse.julialang.org/t/ann-announcing-meshes-jl/53973)

FIXME### Miscellaneous

* Opinion Dynamics on Discourse Sheaves [twitter.com/robertghrist/status/1265451863006216202](https://twitter.com/robertghrist/status/1265451863006216202)
* [> Fodor Concept 1](https://en.wikipedia.org/wiki/Language_of_thought_hypothesis)
* [> Fodor Conept 2](https://en.wikipedia.org/wiki/Modularity_of_mind#Fodor's_Modularity_of_Mind)
* [USL- Principia Cybernetica](http://pespmc1.vub.ac.be/UNSEMLAN.html)
* [en.wikipedia.org/wiki/Semantic_primes](https://en.wikipedia.org/wiki/Semantic_primes)
* [Introduction - Semantic Universals and Universal Semantics](https://epub.ub.uni-muenchen.de/5146/1/5146.pdf)
* [Slides - Semantic Universals](http://wwwhomes.uni-bielefeld.de/sgramley/Semantic%20Universals.pdf)
* [en.wikipedia.org/wiki/Natural_semantic_metalanguage](https://en.wikipedia.org/wiki/Natural_semantic_metalanguage)
* [linguisticsociety.org/resource/language-and-thought](https://www.linguisticsociety.org/resource/language-and-thought)
* [inovatiasociala.ro/en/on-the-relationship-between-language-and-thought/](https://www.inovatiasociala.ro/en/on-the-relationship-between-language-and-thought/)
* [Semantically-Rich Human-Aided MAchine Translation](https://www.aclweb.org/anthology/W05-0310.pdf)
* [Semantics for Probabilistic Programming](https://ieeexplore.ieee.org/abstract/document/8576406)
* [Semantic Analysis Based on Linguistics and Ontological Resources](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.363.1937&rep=rep1&type=pdf)
* [** NSM Chapter](https://libgen.is/search.php?req=Studies+in+Ethnopragmatics%2C+Cultural+Semantics&open=0&res=25&view=simple&phrase=1&column=def)
* [The Semantic Sphere 1: Computation, Cognition, and Information Economy](https://books.google.de/books?hl=ru&lr=&id=UuQDNOmMvxUC&oi=fnd&pg=PT8&dq=semantic+metalanguages+in+deep+learning&ots=tk7QOdV8gk&sig=-8hWctNgkS1QKkGGP4NWfQDjEF8&redir_esc=y#v=onepage&q&f=false)
* A Brief Introduction to the Natural Semantic Metalanguage Approach (see Studies in Ethnopragmatics, Cultural Semantics, and Intercultural Communication on Drive)
* [libgen.is/search.php?req=Wierzbicka&lg_topic=libgen&open=0&view=simple&res=25&phrase=1&column=def](https://libgen.is/search.php?req=Wierzbicka&lg_topic=libgen&open=0&view=simple&res=25&phrase=1&column=def)
* [en.wikipedia.org/wiki/Semantic_primes#A_universal_syntax_of_meaning](https://en.wikipedia.org/wiki/Semantic_primes#A_universal_syntax_of_meaning)
* key set of components of ideas (elements of thought)
* explore semantic hierarchies (& their cross-lingual variation -> what remains constant?)
* [Analysis of Word Embeddings and Sequence Features for Clinical Information Extraction](https://www.aclweb.org/anthology/U15-1003.pdf)
* [Wikipedia2Vec: An Optimized Implementation for Learning Embeddings from Wikipedia](https://www.reddit.com/r/LanguageTechnology/comments/a8w6nx/wikipedia2vec_an_optimized_implementation_for/)
* [aml-nlp/week3-Embeddings.ipynb at master · gameofdimension/aml-nlp](https://github.com/gameofdimension/aml-nlp/blob/master/week3/week3-Embeddings.ipynb)
* Which papers already look into what individual dimensions mean? What have they done, and how do they do it?
* [Semantics - Meaning Representation in NLP](http://www.bowdoin.edu/~allen/nlp/nlp6.html)
* [What is the future of computational journalism? | School of Engineering](https://engineering.stanford.edu/magazine/article/what-future-computational-journalism)
* [en.wikipedia.org/wiki/Who%27s_Bigger%3F](https://en.wikipedia.org/wiki/Who%27s_Bigger%3F)
* [Glue semantics - Wikipedia](https://en.wikipedia.org/wiki/Glue_semantics)
* [Glue Semantics Bibliography](https://www1.essex.ac.uk/linguistics/external/LFG/lfg-glue/GlueBibliography.html)
* Martin Rosvall and Carl T. Bergstrom
* [Natural Semantic Metalanguage (NSM)
* Semantic atoms and molecules!
* Read Chomsky! Then read everything I have on neuro- and psycholinguistics.
* universal semantic language
* [Download Abstract Meaning Representation (AMR)](https://amr.isi.edu/download.html)
* [SEMANTAX-Form-Independent Semantics for Natural Language Understanding - Edinburgh Research Explorer](https://www.research.ed.ac.uk/portal/en/projects/semantaxformindependent-semantics-for-natural-language-understanding(fcd4442f-d49f-4035-8485-f1f43c2037cf).html)
* semantic universals
* [Sprachtypologie Und Sprachliche Universalien/Language Typology and Language Universals: Ein Internationales Handbuch/an International Handbook (Teilband, 1)](https://libgen.is/book/index.php?md5=414C8F04AE33037721C5C44AF305368F)
* [Semantic language models with deep neural networks - ScienceDirect](https://www.sciencedirect.com/science/article/pii/S0885230815300309)
* [qualitative-research.net/index.php/fqs/article/view/2580/4004](http://www.qualitative-research.net/index.php/fqs/article/view/2580/4004)
* All files starting with "Semantic Representation"
* [A graph model for words and their meanings](https://elib.uni-stuttgart.de/handle/11682/2618)
* topology of word embeddings
* what does each dimension of a word embedding represent
* [How does research happen? | Faculty of Medicine](https://www.medicine.lu.se/research/how-does-research-happen)
* philosophy of scientific research
* [Philosophy and Paradigm of Scientific Research | IntechOpen](https://www.intechopen.com/books/management-culture-and-corporate-social-responsibility/philosophy-and-paradigm-of-scientific-research)
* [Leibniz's Influence on 19th Century Logic](https://plato.stanford.edu/entries/leibniz-logic-influence/)
* topology and word embeddings
* [Characteristica universalis](https://en.wikipedia.org/wiki/Characteristica_universalis)
* [An Essay Towards a Real Character, and a Philosophical Language](https://en.wikipedia.org/wiki/An_Essay_Towards_a_Real_Character,_and_a_Philosophical_Language)
* [Semantics Playlist](https://www.youtube.com/playlist?list=PLINYK44rUHkPUe7qEjNUcvfmUfUvCdUIB)
* [Library Genesis Ockham LA](https://libgen.is/search.php?&req=ockham&phrase=1&view=simple&column=def&sort=language&sortmode=DESC)
* [Guillelmus de Ockham - Vicipaedia](https://la.wikipedia.org/wiki/Guillelmus_de_Ockham)
* [Guillaume d'Ockham](https://fr.wikipedia.org/wiki/Guillaume_d%27Ockham)
* [Locutio angelica: Die Diskussion der Engelsprache als ...](https://books.google.com/books/about/Locutio_angelica.html?hl=it&id=sd6wCQAAQBAJ)
* [Gottfried Wilhelm Leibniz, a cura di Stefano Gensini e Tullio De Mauro - L'armonia delle lingue](https://libgen.is/book/index.php?md5=6852BEEE299D47DD321FEFDB76BFF06E)
* [NSM Lab](https://www.youtube.com/channel/UCLEhrIF9Cnk3P1trmSwMGyg)
* lingua mentalis
* [Nicola Sisti](https://www.lafeltrinelli.it/libri/nicola-sisti/1008135)
* [Alphabet of human thought](https://en.wikipedia.org/wiki/Alphabet_of_human_thought)
* how to come up with good ideas? --> esp. in scientific research. --> how does research occur in other scientific disciplines? (those I am less familiar with)

FIXME### [*Visualizing and Measuring the Geometry of BERT](https://arxiv.org/pdf/1906.02715.pdf)

* [scholar.google.com/scholar?hl=ru&as_sdt=0%2C5&q=word+embeddings&btnG=](https://scholar.google.com/scholar?hl=ru&as_sdt=0%2C5&q=word+embeddings&btnG=)
* [scholar.google.com/scholar?hl=ru&as_sdt=0%2C5&q=word2vec&btnG=](https://scholar.google.com/scholar?hl=ru&as_sdt=0%2C5&q=word2vec&btnG=)
* Research idea: Word2Vec across different languages (cross- or multi-lingual embeddings) -> which aspects of matrix theory to use?
* [A Simplified Topological Representation of Text for Local and Global Context](https://www.southampton.ac.uk/~kf2u17/webfiles/conferences/Sami-acmmm17.pdf)
* word embeddings and universal semantic metalanguage
* semantic embeddings and universal semantic metalanguage
* semantic embeddings and universal semantic metalanguage
* [PCA on word2vec embeddings](https://stackoverflow.com/questions/48019843/pca-on-word2vec-embeddings/53110437#53110437)
* → potential applications of non-circular dictionary
* [en.wikipedia.org/wiki/Natural_semantic_metalanguage](https://en.wikipedia.org/wiki/Natural_semantic_metalanguage)
* Applications of reinforcement learning to word embeddings (& representations in general)
* → potential applications of thesauri to word embeddings
* [FCA](https://en.wikipedia.org/wiki/Formal_concept_analysis)
* Use comparisons of derivational morphology and semantic spaces of morphological roots to refine semantic representations (probably not great; worth playing with; will almost certainly be good for language learning)
* study (clear & consequential) word ambiguities in word embeddings: possible to add "switch" mechanism to determine which of the meanings to use
* → ambiguity spectrum: which words are truly monosemic, which marginally or partially or mostly ambiguous, which undebatably ambiguous?
* [Interpretable and Compositional Relation Learning by Joint Training with an Autoencoder on Vimeo](https://vimeo.com/285805371)
* [machine learning - Dimensionality and Manifold - Data Science Stack Exchange](https://datascience.stackexchange.com/questions/5694/dimensionality-and-manifold)
* [bilinearforms.pdf](https://math.mit.edu/~dav/bilinearforms.pdf)
* [Presentations](https://ilias3.uni-stuttgart.de/goto_Uni_Stuttgart_fold_1992338.html)
* [tianran/glimvec: Graph to linear maps and vectors](https://github.com/tianran/glimvec)
* → TDA on word embeddings to identify (persistent / invariant / etc.) word classes

FIXME## -> day in the life of a ___ researcher (pharmaceutical, engineering)

* [YT Semantik](https://www.youtube.com/results?search_query=Ro%C3%9Fdeutscher+Semantik)
* [La Neuroscienza della Coscienza - con Anil Seth](https://youtu.be/xRel1JKOEbI)
* [Cognitive Neuroscience — Neil Burgess](https://youtu.be/eOaDhCjm5I8)
* [Prof Kate Jeffery | Cognitive Neuroscience and Architecture | Conscious ...](https://youtu.be/WGgbfiQJS4Y)
* [Dr. Octavio Choi presents Brain Basics: An Introduction to Cognitive Neu...](https://youtu.be/SvBfAqk70LU)
* [Big Ideas in Cognitive Neuroscience, CNS 2017: Danielle Bassett](https://youtu.be/O9GPZ-csR60)
* [Content-Based Citation Recommendation - ACL Anthology](https://www.aclweb.org/anthology/N18-1022/)
* [Диссертация на тему «Градуальная семантика русских пословиц»](https://www.dissercat.com/content/gradualnaya-semantika-russkikh-poslovits)
* Study translation variability of words and look into prior research
* [Surfaces and Essences: Analogy as the Fuel and Fire of Thinking](https://twitter.com/pmddomingos/status/1252379773541601280?s=12)
* [Semantics Books](https://www.ims.uni-stuttgart.de/archiv/kamp/bibliography.html)
* [Semantic Relations and the Lexicon: Antonymy, Synonymy and other Paradigms | M. Lynne Murphy | download](https://b-ok.cc/book/828818/ba3311)
* [Lexical-Semantic Relations: Theoretical and practical perspectives (Lingvisticæ Investigationes Supplementa) | Petra Storjohann | download](https://b-ok.cc/book/1269985/2c5a97)
* [Probing Semantic Relations: Exploration and identification in specialized texts | Alain Auger, Caroline Barrière | download](https://b-ok.cc/book/2384263/cf0c9e)
* [Logical and relational learning with 10 tables | Luc De Raedt | download](https://b-ok.cc/book/540763/429428)
* $$$ [Language of thought hypothesis - Wikipedia](https://en.wikipedia.org/wiki/Language_of_thought_hypothesis)
* semantic atoms and word embeddings
* [A Probabilistic Generative Model of Linguistic Typology](https://arxiv.org/pdf/1903.10950.pdf)
* [scholar.google.com/scholar?hl=ru&as_sdt=0%2C5&q=concept+embeddings&btnG=](https://scholar.google.com/scholar?hl=ru&as_sdt=0%2C5&q=concept+embeddings&btnG=)
* Thesis idea? Improving the Interpretability of neural networks using semantic metalanguage.
* the+language+of+thought+in+computational+linguistics
* embedding unfamiliar proper nouns for neural NER applications
* umberto eco perfect language
* umberto eco il linguaggio perfetto
* semantic "metalanguage" and deep learning
* [Library Genesis NSM](https://libgen.is/search.php?req=meaning+and+universal+grammar&open=0&res=25&view=simple&phrase=1&column=def)
* [Semantic primes](https://intranet.secure.griffith.edu.au/schools-departments/natural-semantic-metalanguage/what-is-nsm/semantic-primes)
* [b-ok.cc/s/Семантика](https://b-ok.cc/s/Семантика)
* [b-ok.cc/s/Semantik?order=year](https://b-ok.cc/s/Semantik?order=year)
* semantic universals
* [b-ok.cc/s/Language%20Typology%20and%20Language%20Universals](https://b-ok.cc/s/Language%20Typology%20and%20Language%20Universals)
* [Language Typology and Language Universals / Sprachtypologie und sprachliche ... - Google Libri](https://books.google.de/books?id=7FMONqu1TX4C&pg=PA26&lpg=PA26&dq=indivisible+semantic+elements&source=bl&ots=7I3y_DtCx8&sig=ACfU3U2J6V3fei7cZFWK2aAbp6aZoZXsLg&hl=it&sa=X&ved=2ahUKEwiMxMq1srTnAhVQ3qQKHcfwD60Q6AEwDXoECAIQAQ#v=onepage&q=indivisible%20semantic%20elements&f=false)
* [Modeling Language Variation and Universals: A Survey on Typological Linguistics for Natural Language Processing](https://arxiv.org/pdf/1807.00914.pdf)
* [PsyArXiv Preprints | Topology and Geometry for Small Sample Sizes: An Application to Research on the Profoundly Gifted](https://psyarxiv.com/mknpj/)
* [PsyArXiv Preprints | Topology and Geometry in Machine Learning for Logistic Regression](https://psyarxiv.com/v8jgk)
* [Quantifying the effect of quarantine control in Covid-19 infectious spread using machine learning | medRxiv](https://www.medrxiv.org/content/10.1101/2020.04.03.20052084v1)
* [text_classification_with_transformer - Colaboratory](https://colab.research.google.com/github/keras-team/keras-io/blob/master/examples/nlp/ipynb/text_classification_with_transformer.ipynb)
* [Universal Differential Equations for Scientific Machine Learning](https://arxiv.org/pdf/2001.04385.pdf)
* [Word Embeddings: A Survey](https://arxiv.org/pdf/1901.09069.pdf)
* multilingual+wordnet
* [NSM + LDOCE: A Non-Circular Dictionary of English | International Journal of Lexicography | Oxford Academic](https://academic.oup.com/ijl/article/24/2/226/952719)
* [citing Bullock: NSM+ LDOCE: A non-circular dictionary of English](https://scholar.google.com/scholar?oi=bibs&hl=en&cites=1881948628656335124&as_sdt=5)
* [libgen.is/search.php?req=Cliff+Goddard&column=author](https://libgen.is/search.php?req=Cliff+Goddard&column=author)
* [learnthesewordsfirst.com/about/research-behind-the-dictionary.html](https://learnthesewordsfirst.com/about/research-behind-the-dictionary.html)
* [glossword.biz/](http://glossword.biz/)
* search: 63 semantic concepts
* [word2vec and semantic primes](https://scholar.google.de/scholar?q=word2vec+and+semantic+primes&hl=it&as_sdt=0&as_vis=1&oi=scholart)
* [Combinatoric Properties of Natural Semantic Metalanguage Expressions in Lao](http://pubman.mpdl.mpg.de/pubman/item/escidoc:58041/component/escidoc:218036/Enfield_2002_Combinatoric+properties+of+natural+semantic+metalanguage+expressions+in+Lao.pdf)
* [Improving the Compositionality of Word Embeddings](https://thijs.ai/papers/scheepers-msc-thesis-2017-improving-compositionality-word-embeddings.pdf)
* [towardsdatascience.com/nuances-in-the-usage-of-word-embeddings-semantic-and-syntactic-relationships-780940fe28f](https://towardsdatascience.com/nuances-in-the-usage-of-word-embeddings-semantic-and-syntactic-relationships-780940fe28f)
* [semanticscholar.org/paper/Semantic-primes%2C-semantic-molecules%2C-semantic-Key-Goddard/dc2549ee0eb697b4311db8dce953372cf724c6d0](https://www.semanticscholar.org/paper/Semantic-primes%2C-semantic-molecules%2C-semantic-Key-Goddard/dc2549ee0eb697b4311db8dce953372cf724c6d0)
* [Semantic primes - Wikipedia](https://en.wikipedia.org/wiki/Semantic_primes)
* [Natural semantic metalanguage - Wikipedia](https://en.wikipedia.org/wiki/Natural_semantic_metalanguage)
* [intranet.secure.griffith.edu.au/schools-departments/natural-semantic-metalanguage/what-is-nsm/semantic-primes](https://intranet.secure.griffith.edu.au/schools-departments/natural-semantic-metalanguage/what-is-nsm/semantic-primes)
* [web.stanford.edu/~jurafsky/slp3/6.pdf](https://web.stanford.edu/~jurafsky/slp3/6.pdf)
* word2vec+and+semantic+primes
* [libgen.is/search.php?req=Anna+Wierzbicka&lg_topic=libgen&open=0&view=simple&res=25&phrase=1&column=def](https://libgen.is/search.php?req=Anna+Wierzbicka&lg_topic=libgen&open=0&view=simple&res=25&phrase=1&column=def)
* Conceptual Primes
* [Semantic_decomposition_(natural_language_processing)](https://en.wikipedia.org/wiki/Semantic_decomposition_(natural_language_processing))
* conceptual+primes+and+nlp
* [ru.wikipedia.org/wiki/%D0%92%D0%B5%D0%B6%D0%B1%D0%B8%D1%86%D0%BA%D0%B0%D1%8F,_%D0%90%D0%BD%D0%BD%D0%B0](https://ru.wikipedia.org/wiki/%D0%92%D0%B5%D0%B6%D0%B1%D0%B8%D1%86%D0%BA%D0%B0%D1%8F,_%D0%90%D0%BD%D0%BD%D0%B0)
* [video](https://www.youtube.com/results?search_query=principal+component+analysis)
* [Rayleigh_quotient](https://en.wikipedia.org/wiki/Rayleigh_quotient)
* [people.math.osu.edu/costin.10/5102/Rayleigh%20quotient.pdf](https://people.math.osu.edu/costin.10/5102/Rayleigh%20quotient.pdf)
* [de.wikipedia.org/wiki/Hauptkomponentenanalyse](https://de.wikipedia.org/wiki/Hauptkomponentenanalyse)
* The Compreno Semantic Model as an Integral Framework for a Multilingual Lexical Database

FIXME## Idea Space Modelling

* Elevator Pitch:
  * My work is distinct from previous work in a few ways:
  * it uses high-quality inputs and political writings in addition to social media (hopefully making the model more grounded in the deep theoreticcal issues of politics, not just shallow perceptions)
  * it does not assume a spectrum; rather it uses unsupervised learning to identify clusters and linkages between ideologies
  * it allows for a robust measuring of ideological similarity that is as general as possible, allowing a wide range of comparisons, even potentially across time, language, and culture, because the method is built on attitudes toward nearly-universal ideas and concepts, rather than toward specific people and organizations
  * it brings together several fairly technical NLP/IR/TM methods that have not been used for this before: topic extraction, emotion analysis, opinion mining
  * it combines the above methods with other more common methods, such as clustering, lexical analysis (i.e. tf-idf)
  * it can take advantage of a large and relatively underutilized body of text resources
  * it has the scope for other advanced techniques: topology, measure theory, advanced matrix analysis & linear algebra, etc.
  * it answers intrinsically important and interesting questions, questions of interest to a broad audience (in addition to finer points interesting to a computational linguist)
  * while every algorithm necessarily has assumptions baked into it, this will make explicit assumptions in a way that human annotation would mke impossible
* Interesting method to build on (but automate): Globalization and the transformation of the national political space: Six European countries compared

FIXME### Forschungsfragen:

* Wie realitätsgetreu sind die zwei verbreiteten politischen Spektren?
* a) links-rechts
* b) Political Kompass
* c) Hufeisentheorie

FIXME### -> Black boxes aufmachen

FIXME### -> wie Artikel über Rechtsextremist, aber mit zusätzlicher Frage: wie modellieren wir ihre Beziehung zu anderen?

* Wie viele Hauptkomponente gibt es in der Ideologie?
* Wie interpräterieren wir sie und was bedeuten sie?
* Welche und wie viele politische Cluster gibt es, und wie beziehen sie sich zueinander?
* D.h. welche politische Netzwerke bestehen?
* Wie robust ist diese Analyse?
* a) Wie verändern sich die Ergebnisse, wenn Störtermine eingeführt werden, bzw. wie groß dürfen die Störterme sein, ohne die Cluster und die Hauptkomponente grundsätzlich zu verändern?
* b) Wie viel Text braucht man für eine zuverlässige ideologische Einbettung (oder Klassifikation)?
* Was enthalten die Ideologie-Vektoren?
* a) emotion in Bezug auf t1,...tk
* ==> topic recognition (oder einfache regex) + dependency parsing + emotion analysis
* b) tf-idf von wichtigsten (prädiktivsten?) n-gramme
* Wie verändern sich die Cluster im Laufe der Zeit?
* Wie variieren die Cluster über Landes-, Sprach- und Kulturgrenzen?
* Welche Cluster gibt es in Bezug auf nur eine oder wenige Dimensionen?
* a) ==> Transformation in weniger-dimensionale Räume
* b) ==> Einbettung kleinerer Stichproben
* Lassen sich die Ergebnisse mit Wikipedia-Daten bestätigen?
* a) Einflüsse und Quelltext um Einflüsse herum
* b) Artikel zu den Ideologien und Denker (nichtautomatisch?)
* Wie repräsentieren wir ideologische Ähnlichkeit und relative Position?
* Wie können wir ideologische Ähnlichkeit veranschaulichen?
* a) In Bezug auf Grundmenge bekannter und einflussreicher Denker - entweder k nächste Denker (eventuell aus Grundliste) oder Ähnlichkeit mit vorbestimmter Liste Denker
* b) Hauptkomponente verwenden
* Wie können wir die Methoden flexibler gestalten, damit z.B. neue (spezifischere, vergänglichere) Themen berücksichtigt werden können?

FIXME#### Approach:

* Collect large and varied sample of political writings. Attempt to get a wide variety, approximate representativity is desirable, but perfect representativity is not required for clustering.
* Identify list of political topics, striving for representativity of all possible ideologies.
* For each individual (or for each work), create a vector consisting of attitudes toward the above topics (and normalize?).
* Perform PCA on the matrix of attitude vectors (Monte Carlo?).
* Cluster of principal components.
* Interpret principal components and clusters.
* Examine predictions and test unseen writings.
* Possible extension:
* Train classifier on document (or thinker) tokens and identify most indicative words / n-grams.
* RUN SIMPLE VARIANT FIRSTː k ideologies and thinkers, n questions, PCA and visualization
* 1) select ideologies
* 2) select thinkers
* 3) select questions
* 4) create matrix
* 5) perform PCA
* 6) create visualization
* how to "Monte Carlo" PCA?

FIXME### -> give range (a,b) or even distribution, for each stance (entry in the ideology matrix), then sample from ramges/distributions

FIXME### -> how to aggregate varying results? simple average?

FIXME### -> topological anaylsis to determine invariant relationships?

* Read up onː
  * opinion mining
  * stance detection
  * question answering
  * knowledge discovery
  * semantic relations
  * dimensionality reduction
  * TDA
  * clustering
  * visualization

FIXME### Ideologies

* Confucianism
  * Confucius
* Conservatism / Reactionism
  * Edmund Burke
  * Georges Lemaistre
  * Thomas Hobbes
  * Roger Scruton
  * George F. Will
* Anarchism
  * Mikhail Bakunin
  * Kropotkin
  * Proudhon
* Left
  * Michel Foucault
  * Jean Baudrillard
* Mixed / Other
* Wiki
  * how to create a wiki? (proverbs, ideology matrix, etc.)

FIXME### -> how does Wikipedia work? editing policies, moderation, dispute resolution, etc.

* Other Ideas
* [(PDF) Dimensionality Reduction and Visualisation Tools for Voting Records](https://www.researchgate.net/publication/314102123_Dimensionality_Reduction_and_Visualisation_Tools_for_Voting_Records)
* 0) Assemble dataset of Bundestag voting records
* [Bundestag Roll Call Vote Data (BTVote)](https://dataverse.harvard.edu/dataverse/btvote)
* [Deutscher Bundestag - Open Data](https://www.bundestag.de/services/opendata)
* 1) diachronic network animation, based on pairwise overlap between Abgeordnete in sliding time window
* 2) diachronic animation of 3D PCA model (F1, F2, F3) based on voting records
* -> make personal website to showcase this
* Tools:
* [JuliaPlots/Makie.jl](https://github.com/JuliaPlots/Makie.jl)
* [makie.juliaplots.org/dev/](http://makie.juliaplots.org/dev/)
* [docs.juliaplots.org/latest/animations/](https://docs.juliaplots.org/latest/animations/)
* [docs.juliaplots.org/latest/graphrecipes/introduction/](https://docs.juliaplots.org/latest/graphrecipes/introduction/)
* [docs.juliaplots.org/latest/](http://docs.juliaplots.org/latest/)
* Ideologies:
* [en.wikipedia.org/wiki/List_of_political_ideologies](https://en.wikipedia.org/wiki/List_of_political_ideologies)
* Thinkers
* [en.wikipedia.org/wiki/List_of_political_philosophers](https://en.wikipedia.org/wiki/List_of_political_philosophers)
* [thegreatthinkers.org/thinkers/](https://thegreatthinkers.org/thinkers/)
* [en.wikipedia.org/wiki/Index_of_sociopolitical_thinkers](https://en.wikipedia.org/wiki/Index_of_sociopolitical_thinkers)
* [blogs.lse.ac.uk/impactofsocialsciences/2016/05/12/what-are-the-most-cited-publications-in-the-social-sciences-according-to-google-scholar/](https://blogs.lse.ac.uk/impactofsocialsciences/2016/05/12/what-are-the-most-cited-publications-in-the-social-sciences-according-to-google-scholar/)
* [()](https://www.cambridge.org/core/journals/ps-political-science-and-politics/article/political-science-400-with-citation-counts-by-cohort-gender-and-subfield/C1EDBF7220760F01A5C4A685DB3B3F44)
* [scholar.google.com/citations?view_op=search_authors&hl=en&mauthors=label:political_philosophy](https://scholar.google.com/citations?view_op=search_authors&hl=en&mauthors=label:political_philosophy)
* [leiterreports.typepad.com/blog/2015/05/the-most-cited-living-philosophers-with-public-google-scholar-pages.html](https://leiterreports.typepad.com/blog/2015/05/the-most-cited-living-philosophers-with-public-google-scholar-pages.html)
* [leiterreports.typepad.com/blog/2017/01/most-cited-anglophone-philosophy-books-published-since-wwii.html*](https://leiterreports.typepad.com/blog/2017/01/most-cited-anglophone-philosophy-books-published-since-wwii.html*) [duckduckgo.com/?q=core*](https://duckduckgo.com/?q=core*) [duckduckgo.com/?q=core*](https://duckduckgo.com/?q=core*) [duckduckgo.com/?q=core*](https://duckduckgo.com/?q=core*) [duckduckgo.com/?q=ideological*](https://duckduckgo.com/?q=ideological*) [webscience-journal.net/webscience/article/download/80/50*](https://webscience-journal.net/webscience/article/download/80/50*) [duckduckgo.com/?q=classification](https://duckduckgo.com/?q=classification)
* PCA Issues

FIXME### NLP and Politics

* [connectedresearchers.com/online-tools-for-researchers/](http://connectedresearchers.com/online-tools-for-researchers/)

FIXME### [**Sentiment Political Compass: A Data-driven Analysis of Online Newspapers regarding Political Orientation](https://www.aifb.kit.edu/images/e/e1/IPP2018_Falck.pdf)

* [DARIAH | Digital Research Infrastructure for the Arts and Humanities](https://www.dariah.eu/)
* [DH Funding - Digital Humanities - Research Guides at University of Wisconsin-Madison](https://researchguides.library.wisc.edu/c.php?g=246897&p=1645212)
* [DH Projects in Germany - Digital Humanities in German - LibGuides at University of Illinois at Urbana-Champaign](https://guides.library.illinois.edu/c.php?g=348294&p=2346954)
* [DHd-Blog](https://dhd-blog.org/)
* [Digital Humanities Advancement Grants | National Endowment for the Humanities (NEH)](https://www.neh.gov/grants/odh/digital-humanities-advancement-grants)
* [Digital Humanities Centres | EADH - The European Association for Digital Humanities](https://eadh.org/education/digital-humanities-centres)
* [digital humanities im deutschsprachigen raum](https://dig-hum.de/)
* [External Funding Opportunities | The Center for Digital Humanities at Princeton](https://cdh.princeton.edu/grants/external-funding-opportunities/)
* [External grants & funding | EADH - The European Association for Digital Humanities](https://eadh.org/support/external-grants-funding)
* [Ranking Right-Wing Extremist Social Media Profiles by Similarity to Democratic and Extremist Groups - ACL Anthology](https://www.aclweb.org/anthology/W17-5204/)

FIXME### -> Study networks in political discourse and writing using comp ling techniques.

* test de Turing idéologique
* Which political analytical framework already exist. Which are the best, and how are they structured?
* [Political spectrum - RationalWiki](https://rationalwiki.org/wiki/Political_spectrum)
* [MAPPING THE EUROPEAN LEFT](http://www.rosalux-nyc.org/wp-content/files_mf/theleftineurope_eng.pdf)
* [GoodNewsEveryone: A Corpus of News Headlines Annotated with Emotions, Semantic Roles, and Reader Perception](https://arxiv.org/pdf/1912.03184.pdf)
* map of political networks
* map of ideological networks
* [smrfoundation.org/2018/09/14/research-project-mapping-political-networks/](https://www.smrfoundation.org/2018/09/14/research-project-mapping-political-networks/)
* [christianspreafico.altervista.org/PoliticalNetwork/indexPN.html](http://christianspreafico.altervista.org/PoliticalNetwork/indexPN.html)
* [search?q=ideological+network](https://github.com/search?q=ideological+network)
* [search?q=political+network](https://github.com/search?q=political+network)
* [search?q=political+similarity](https://github.com/search?q=political+similarity)
* A Quantitative Political Spectrum and Forecasting of Social Evolution
* Politometrics: Quantitative Models of Political Institutions (harddrive)
* [Political Space Representations with Approval Data](https://repub.eur.nl/pub/111247)
* [Evolutionary Political Economy: Content and Methods](https://mpra.ub.uni-muenchen.de/75447/1/MPRA_paper_75447.pdf)
* [r/PoliticalScience/search/?q=spectrum&restrict_sr=1](https://www.reddit.com/r/PoliticalScience/search/?q=spectrum&restrict_sr=1)
* [4 humors (politics, quite good)](https://imgur.com/a/xBuWi)
* [^ on Reddit](https://www.reddit.com/r/PoliticalScience/comments/63biqw/the_new_political_spectrum_hobby_horse_diagram/)
* ideological+similarity
* current+research+on+political+cluster+and+networks
* [Already done?](https://manifesto-project.wzb.eu/)
* [r/PoliticalScience/comments/6yj547/is_there_an_authoritative_resource_classifying/](https://www.reddit.com/r/PoliticalScience/comments/6yj547/is_there_an_authoritative_resource_classifying/)
* [r/PoliticalScience/comments/5j7gaj/a_question_about_the_politcal_spectrum/](https://www.reddit.com/r/PoliticalScience/comments/5j7gaj/a_question_about_the_politcal_spectrum/)
* [r/PoliticalScience/comments/6xn8r9/a_3_dimensional_political_compass/](https://www.reddit.com/r/PoliticalScience/comments/6xn8r9/a_3_dimensional_political_compass/)
* [politicalcompass.org/analysis2](https://www.politicalcompass.org/analysis2)
* [politicalcompass.org/reading](https://www.politicalcompass.org/reading)
* Comparative Manifesto Project     * [Moral Foundations of Political Discourse: Comparative Analysis of the Speech Records of the US Congress and the Japanese Diet](https://arxiv.org/pdf/1704.06903.pdf)
* political landscape today
* [scholar.google.de/scholar?q=knowledge+discovery+in+the+political+domain](https://scholar.google.de/scholar?q=knowledge+discovery+in+the+political+domain)
* [jakemsnyder/political-ideology-detection](https://github.com/jakemsnyder/political-ideology-detection)
* Political space representations with approval data (/harddrive)
* [Political space representations with approval data](https://dialnet.unirioja.es/servlet/articulo?codigo=5290872)
* [Political Space Representations with Approval Data Supplementary Online Materials](https://www.researchgate.net/profile/Georg_Granic/publication/275209744_Political_Space_Representations_with_Approval_Data_Supplementary_Online_Materials/links/5534f8a20cf283a8f60c07bc/Political-Space-Representations-with-Approval-Data-Supplementary-Online-Materials.pdf)
* [Party identification and beyond: Representations of voting and party competition](https://books.google.com/books?hl=ru&lr=&id=XclMAQAAQBAJ&oi=fnd&pg=PR15&dq=Political+Space+Representations+with+Approval+Data&ots=U6rTtAsfSd&sig=Sckc00ryFI74DDeljiotB40KDIA)
* how can I combine CompLing/NLP and philosophy/political science?
* MFT
* [hartung2017-NLDB-short](http://www.romanklinger.de/publications/hartung2017-NLDB-short.pdf)
* [Ranking Right-Wing Extremist Social Media Profiles by Similarity to Democratic and Extremist Groups](https://www.aclweb.org/anthology/W17-5204.pdf)
* [Exploring Fine-Tuned Embeddings that Model Intensifiers for Emotion Analysis](https://www.aclweb.org/anthology/W19-1304.pdf)
* [GoodNewsEveryone: A Corpus of News Headlines Annotated with Emotions, Semantic Roles, and Reader Perception](https://arxiv.org/pdf/1912.03184.pdf)
* [^](https://www.groundai.com/project/goodnewseveryone-a-corpus-of-news-headlines-annotated-with-emotions-semantic-roles-and-reader-perception/1)
* [Identifying Right-Wing Extremism in German Twitter Profiles: a Classification Approach](http://www.romanklinger.de/publications/hartung2017-NLDB-short.pdf)
* develop meaningful metric(s) for idiological similarity
* use metric(s) to identify clusters and principal components of ideology
* clustering on: topic selection and sentiment toward topics? citation sentiment networks? both? use of a pre-selected set of words/phrases/topics/ideas? find them with ML methods?
* compare multiple methods (n-gram similarity, citation sentiment networks, etc., also moral foundations theory)
* run additional robustness checks: introduce random error (ar most controversial points), automatic vs human-annotated, random subsets of elements/dimensions, classification of small toy examples, Google/YouTube/Amazon recommendations, intra-thinker variation (across books and articles)
* interpretation of clusters and principal components
* key (=> minimal / optimal sets of) ideological components ('atoms')
* degree of inter-cluster agreement and hostility, as well as interaction (using citations)
* trace ideological journeys of individuals and parties over time
* compare ostensibly similar political parties and movements across countries
* identify degree of linguistic slippage between terms (liberal, libérale, либеральный)
* map the political left (eventually full "spectrum")
* political rhetoric GANS (keep meaning but transform to opposite rhetorical bias)
* [politisches Spektrum](https://scholar.google.de/scholar?hl=it&as_sdt=0%2C5&q=politisches+Spektrum&btnG=#d=gs_qabs&u=%23p%3DjWZFGbYFMQIJ)
* [politisches Spektrum](https://scholar.google.de/scholar?hl=it&as_sdt=0%2C5&q=politisches+Spektrum&btnG=#d=gs_qabs&u=%23p%3DKOPinvIxkJEJ)
* [6 Apparent Political Clusters](https://wthh.dataforprogress.org/blog/2018/11/25/the-six-apparent-political-clusters)
* [Do two parties represent the US? Clustering analysis of US public ideology survey](https://arxiv.org/abs/1710.09347)
* topology+in+natural+language+processing
* [Measuring Proximity Between Newspapers and Political Parties: The Sentiment Political Compass](https://onlinelibrary.wiley.com/doi/abs/10.1002/poi3.222)
* [^ Sentiment Political Compass on Github](https://github.com/JulianMar11/SentimentPoliticalCompass)
* [^ Project Site](http://politicalcompass.de/)
* [Sentiment Political Compass: A Data-driven Analysis of Online Newspapers regarding Political Orientation](http://blogs.oii.ox.ac.uk/policy/wp-content/uploads/sites/77/2018/08/IPP2018_Falck.pdf)
* [A Moral Compass and Modern Propaganda? Charting Ethical and Political Discourse (2014)](https://pdfs.semanticscholar.org/956a/3b6ef87632c892d5e86e7427b353e7714646.pdf)
* [The New Political Compass (2002)
* [The Public’s Compass: Moral Conviction and Political Attitudes](https://journals.sagepub.com/doi/abs/10.1177/1532673X13481842)
* [Twitter and Political Campaigning](https://onlinelibrary.wiley.com/doi/abs/10.1111/soc4.12294)
* [Kosovo’s Political Compass](https://www.researchgate.net/profile/Leon_Malazogu/publication/277543714_Kosovo's_Political_Compass_-_Mapping_Party_Ideology/links/556c4ae608aeccd7773a5002.pdf)
* [Just Freedom: A Moral Compass for a Complex World (Norton Global Ethics Series)](https://books.google.com/books?hl=ru&lr=&id=7hP1AgAAQBAJ&oi=fnd&pg=PR11&dq=political+compass&ots=EkbykO2vXO&sig=bUZSqzONkuEEWPpaoGGt3qadizE)
* [Political discourse analysis: Exploring the language of politics and the politics of language](https://onlinelibrary.wiley.com/doi/abs/10.1002/lnc3.365)
* [Bauman’s compass: Navigating the current interregnum](https://journals.sagepub.com/doi/abs/10.1177/0001699311402229)
* [Internet and the Political Public Sphere](https://onlinelibrary.wiley.com/doi/full/10.1111/soc4.12228)
* [Intellectuals and Politics (Routledge Revivals)](https://www.taylorfrancis.com/books/9780203844625)
* [The Political Compass and Why Libertarianism is Not Right-Wing](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3471899)
* [Core Concept “Political Compass”. How Kitschelt’s Model of Liberal, Socialist, Libertarian and Conservative Orientations Can Fill the Ideology Gap in Civic Education](https://www.jsse.org/index.php/jsse/article/view/541)
* [Dictionary of the History of Ideas](https://libgen.is/search.php?req=Dictionary+of+the+History+of+Ideas&lg_topic=libgen&open=0&view=simple&res=25&phrase=1&column=def)
* [en.wikipedia.org/wiki/History_of_ideas](https://en.wikipedia.org/wiki/History_of_ideas)
* [scholar.google.com/scholar?hl=ru&as_sdt=0%2C5&q=political+spectrum&btnG=](https://scholar.google.com/scholar?hl=ru&as_sdt=0%2C5&q=political+spectrum&btnG=)
* [Parametrizing Brexit: mapping Twitter political space to parliamentary constituencies](https://www.tandfonline.com/doi/abs/10.1080/1369118X.2018.1433224?journalCode=rics20)
* [Triangle Map](https://aquarusa.wordpress.com/tag/mapping-the-political-space/)
* [Political circle with 4 areas](https://aquarusa.wordpress.com/tag/art-and-politics/)
* [Populism and social media: how politicians spread a fragmented ideology](https://www.tandfonline.com/doi/full/10.1080/1369118X.2016.1207697?src=recsys)
* [Digital media, political polarization and challenges to democracy](https://www.tandfonline.com/doi/full/10.1080/1369118X.2018.1451909?src=recsys)
* [Facebook news and (de)polarization: reinforcing spirals in the 2016 US election](https://www.tandfonline.com/doi/full/10.1080/1369118X.2018.1444783?src=recsys)
* [Helping populism win? Social media use, filter bubbles, and support for populist presidential candidates in the 2016 US election campaign](https://www.tandfonline.com/doi/full/10.1080/1369118X.2017.1329334?src=recsys)
* [The echo chamber is overstated: the moderating effect of political interest and diverse media](https://www.tandfonline.com/doi/full/10.1080/1369118X.2018.1428656?src=recsys)
* [Open media or echo chamber: the use of links in audience discussions on the Facebook Pages of partisan news organizations](https://www.tandfonline.com/doi/full/10.1080/1369118X.2015.1064461?src=recsys)
* [Social media use and participation: a meta-analysis of current research](https://www.tandfonline.com/doi/full/10.1080/1369118X.2015.1008542?src=recsys)
* [Who Sides with Whom? Towards Computational Construction of Discourse Networks for Political Debates](https://www.aclweb.org/anthology/P19-1273.pdf)
* [Beyond Binary Labels: Political Ideology Prediction of Twitter Users](https://www.aclweb.org/anthology/P17-1068.pdf)
* [Detecting Perspectives in Political Debates](https://www.aclweb.org/anthology/D17-1165.pdf)
* [Computational Analysis of Political Texts: Bridging Research Efforts Across Communities](https://www.aclweb.org/anthology/P19-4004.pdf)
* [Unsupervised Cross-Lingual Scaling of Political Texts](https://www.aclweb.org/anthology/E17-2109.pdf)
* [An Environment for Relational Annotation of Political Debates](https://www.aclweb.org/anthology/P19-3018.pdf)
* [Modeling Behavioral Aspects of Social Media Discourse for Moral Classification](https://www.aclweb.org/anthology/W19-2112.pdf)
* [Framing and Agenda-setting in Russian News: a Computational Analysis of Intricate Political Strategies](https://www.aclweb.org/anthology/D18-1393.pdf)
* [Truth of Varying Shades: Analyzing Language in Fake News and Political Fact-Checking](https://www.aclweb.org/anthology/D17-1317.pdf)
* [[1710.04484] Dimensionality Reduction Ensembles](https://arxiv.org/abs/1710.04484)
* [Deep learning with graph-structured representations](https://pure.uva.nl/ws/files/46900201/Thesis.pdf) (donloaded)
* [Sciences humaines - Dossier: Les grandes idées politiques](https://www.scienceshumaines.com/couleurs-politiques_fr_36158.html)
* file:///Users/iriley/Downloads/harddrive/Kernel-based%20Data%20Fusion%20for%20Machine%20Learning.%20Methods%20and%20Applications%20in%20Bioinformatics%20and%20Text%20Mining.pdf
* [iss.uni-saarland.de/workspace/documents/ontology-based-natural-language-processing-for-in-store-shopping-situations.pdf](http://iss.uni-saarland.de/workspace/documents/ontology-based-natural-language-processing-for-in-store-shopping-situations.pdf)
* [protege.stanford.edu/publications/ontology_development/ontology101-noy-mcguinness.html](https://protege.stanford.edu/publications/ontology_development/ontology101-noy-mcguinness.html)
* [silviasevilla.wordpress.com/2006/12/19/ontologies-and-nlp/](https://silviasevilla.wordpress.com/2006/12/19/ontologies-and-nlp/)
* CORDIS Project
* [Ontology_learning](https://en.wikipedia.org/wiki/Ontology_learning)
* [Political Bias Analysis](https://cs224d.stanford.edu/reports/MisraBasak.pdf)
* Opinion mining and sentiment analysis. Foundations and trends in information retrieval
* Neural Language Models for the Multilingual, Transcultural, and Multimodal Semantic Web
* [Measuring Ideological Proportions in Political Speeches](https://homes.cs.washington.edu/~nasmith/papers/sim+acree+gross+smith.emnlp13.pdf)
* [Text Classifiers for Political Ideologies](https://nlp.stanford.edu/courses/cs224n/2009/fp/7.pdf)
* [medium.com/@jon.reynolds30/comparing-classification-models-using-lending-clubs-peer-toloan-data-615153db2124](https://medium.com/@jon.reynolds30/comparing-classification-models-using-lending-clubs-peer-toloan-data-615153db2124)
* [monkeylearn.com/text-classification/](https://monkeylearn.com/text-classification/)
* [Actionable and Political Text Classification using Word Embeddings and LSTM](https://sentic.net/wisdom2016rao.pdf)
* [Sentiment Analysis of Political Tweets: Towards an Accurate Classifier](https://www.aclweb.org/anthology/W13-1106.pdf)
* [Towards the Automatic Classification of Speech Subjects in the Danish Parliament Corpus](http://ceur-ws.org/Vol-2364/15_paper.pdf)
* [Word-based Classification of Political Text based on Speaker and Topic labels](http://arno.uvt.nl/show.cgi?fid=133356)
* [Detecting Dutch Political Tweets: A Classifier based on Voting System using Supervised Learning](https://www.scitepress.org/Papers/2018/65920/65920.pdf)
* [Political Ideology Detection Using Recursive Neural Networks](https://www.aclweb.org/anthology/P14-1105.pdf)
* [CORE POLITICAL VALUES? A COMPARATIVE ANALYSIS OF LEFT-RIGHT POLITICAL IDEOLOGY AND CULTURAL ORIENTATIONS AMONG POLICY ELITES AND THE GENERAL PUBLIC](https://poseidon01.ssrn.com/delivery.php?ID=951089070074087020002123107030091002060050030038051052104082028101115070073120087077023022018005104099039122064116077080118116013032027064082025007006089108119118028047042015113010105094088098023121091127124023011068122123118126075010064022112126087102&EXT=pdf)
* [nycdatascience.com/blog/student-works/figuring-out-american-politics-so-easy-a-computer-can-do-it/](https://nycdatascience.com/blog/student-works/figuring-out-american-politics-so-easy-a-computer-can-do-it/)
* [Modeling Political Identity](http://cs229.stanford.edu/proj2016spr/report/035.pdf)
* [China’s Ideological Spectrum](http://jenpan.com/jen_pan/ideology.pdf)
* China’s ideological spectrum: a two-dimensional model of elite intellectuals’ visions (harddrive)
* [Political_spectrum](https://en.wikipedia.org/wiki/Political_spectrum)
* [What Makes Party Systems Different? A Principal Component Analysis of 17 Advanced Democracies 1970-2013](https://escholarship.org/uc/item/1c192923)
* [Online reactions to the 2017 ‘Unite the Right’ rally in Charlottesville: Measuring polarization in Twitter networks using media followership](https://arxiv.org/pdf/1905.07755.pdf)
* [The Perils of Classifying Political Orientation From Text](https://www.cse.wustl.edu/~sanmay/papers/political-orientation.pdf)
* [Automatic detection of political opinions in Tweets](https://gate.ac.uk/sale/eswc11/opinion-mining.pdf)
* [Sentiment analysis of political communication: combining a dictionary approach with crowdcoding](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5635074/)
* [scholar.google.com/scholar?hl=ru&as_sdt=0%2C5&q=eysenck+political+spectrum&btnG=](https://scholar.google.com/scholar?hl=ru&as_sdt=0%2C5&q=eysenck+political+spectrum&btnG=)
* [Globalization and the transformation of the national political space: Six European countries compared](https://ejpr.onlinelibrary.wiley.com/doi/abs/10.1111/j.1475-6765.2006.00644.x)
* [Spatial approval voting](https://www.cambridge.org/core/journals/political-analysis/article/spatial-approval-voting/1130597F8DDCBAC79EF631486DD8AA98)
* [Dimensions of politics in the European Parliament](https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1540-5907.2006.00198.x)
* [Describing society through approval data](https://link.springer.com/chapter/10.1007/978-3-642-02839-7_19)
* factor+analysis+of+ideology
* [courtinnovation.org/publications/commitment-extremist-ideology-using-factor-analysis-move-beyond-binary-measures](https://www.courtinnovation.org/publications/commitment-extremist-ideology-using-factor-analysis-move-beyond-binary-measures)
* corpus+of+political+writings
* [researchgate.net/publication/277703605_Corpus_Analysis_of_Political_Language](https://www.researchgate.net/publication/277703605_Corpus_Analysis_of_Political_Language)
* Citing Eight ways to run the country: A new and revealing look at left and right
* [Decision making in politics and economics: 6. Empirically constructing the German political spectrum](https://www.econstor.eu/handle/10419/109033)
* [The Psychological Spectrum: Political Orientation and its Origins in Perception and Culture](https://www.ujpir-journal.com/articles/10.22599/ujpir.25/)
* [Visualizing the political spectrum of Germany by contiguously ordering the party policy profiles](https://onlinelibrary.wiley.com/doi/abs/10.1002/9781119579465.ch14)
* [The politics of think tanks in social media: FAES, YouTube and free-market ideology](https://www.ingentaconnect.com/content/intellect/mcp/2019/00000015/00000001/art00001)
* [Ideology as Motivated Cultural Cognition](https://www.psa.ac.uk/sites/default/files/conference/papers/2017/Ideology%20as%20Motivated%20Cultural%20Cognition.pdf)
* [Knowledge creation in the intellectual networks](https://brill.com/view/book/edcoll/9789401207447/B9789401207447-s011.xml)
* [Wiktionary and NLP: Improving synonymy networks](https://dl.acm.org/citation.cfm?id=1699768)
* Basic idea: Use syntactic and dependency parsing to identify sentiment toward selected topics. Then use the sentiment vectors to measure ideological similarity and to model the ideological space.
* [Political_philosophy](https://en.wikipedia.org/wiki/Political_philosophy)
* [dailynous.com/2019/01/04/new-map-stanford-encyclopedia-philosophy/](http://dailynous.com/2019/01/04/new-map-stanford-encyclopedia-philosophy/)
* [dailynous.com/2018/10/16/visualizing-structure-philosophy-1950s-today/](http://dailynous.com/2018/10/16/visualizing-structure-philosophy-1950s-today/)
* [homepage.univie.ac.at/noichlm94/posts/structure-of-recent-philosophy-iii/](https://homepage.univie.ac.at/noichlm94/posts/structure-of-recent-philosophy-iii/)
* [homepage.univie.ac.at/noichlm94/](https://homepage.univie.ac.at/noichlm94/)
* [mnoichl](https://github.com/mnoichl)
* Idea: Idea-PCA: method for representing treatment of ideas in documents
* Search: politics natural language processing
* [Multi-dimensional analysis of political language](https://link.springer.com/chapter/10.1007/978-94-007-4516-2_21)
* [Measuring ideological proportions in political speeches](https://www.aclweb.org/anthology/D13-1010.pdf)
* [Natural sentences as valid units for coded political texts](https://www.cambridge.org/core/journals/british-journal-of-political-science/article/natural-sentences-as-valid-units-for-coded-political-texts/CD1343D4D03A009A9B0913D60751C9A4)
* [Analyzing political sentiment on Twitter](https://www.aaai.org/ocs/index.php/SSS/SSS13/paper/viewPaper/5702)
* [Computational techniques in political language processing: AnaDiP-2011](https://link.springer.com/chapter/10.1007/978-3-642-22309-9_23)
* [Corps: A corpus of tagged political speeches for persuasive communication processing](https://www.tandfonline.com/doi/abs/10.1080/19331680802149616)
* [Taking sides: User classification for informal online political discourse](https://www.emerald.com/insight/content/doi/10.1108/10662240810862239/full/html?casa_token=4F264RAT1sEAAAAA:LNPvDNi35LHesw3N_pEm2OYs3FIBbMhedYSLtoGaX7IxMfdb2NDaF8HMU23qW2esSj1Y8VuNm7j7H4z_r9m6hqmtWDvxp6dMIB3K3O8dUAedbpDlE_k)
* ideology+matrix
* identify data sources and doc vectorization/comparison methods for political writings, esp. left (e.g. Chomsky vs Hedges vs Robinson or democratic candidates), also network analysis methods:"; also look at previous related research; --> multilingual?
* [informationisbeautifulawards.com/](https://www.informationisbeautifulawards.com/)
* [Studying the History of Ideas Using Topic Models](https://www.aclweb.org/anthology/D08-1038.pdf)
* [Reading tea leaves: How humans interpret topic models](http://papers.nips.cc/paper/3700-reading-tea-leaves-how-humans-interpret-topic-models.pdf)
* [Topic Modeling of Research Fields: An Interdisciplinary Perspective](https://www.aclweb.org/anthology/R09-1061.pdf)
* [Document Exploration with Topic Modeling: Designing Interactive Visualizations to Support Effective Analysis Workflows](https://mimno.infosci.cornell.edu/nips2013ws/nips2013tm_submission_17.pdf)
* [Interactive topic modeling](https://link.springer.com/article/10.1007/s10994-013-5413-0)
* [Polylingual Topic Models](https://dl.acm.org/doi/10.5555/1699571.1699627)
* [Termite: Visualization techniques for assessing textual topic models](https://dl.acm.org/doi/abs/10.1145/2254556.2254572)
* [Machine reading tea leaves: Automatically evaluating topic coherence and topic model quality](https://www.aclweb.org/anthology/E14-1056.pdf)
* [Syntactic topic models](http://papers.nips.cc/paper/3398-syntactic-topic-models)
* [A two-dimensional topic-aspect model for discovering multi-faceted topics](https://www.aaai.org/ocs/index.php/AAAI/AAAI10/paper/viewPaper/1730)
* [Sentiment analysis of citations using sentence structure-based features](https://dl.acm.org/citation.cfm?id=2000991)
* identify data sources and doc vectorization/comparison methods for political writings, esp. left (e.g. Chomsky vs Hedges vs Robinson or democratic candidates), also network analysis methods:"; also look at previous related research; --> multilingual?
* Which political analytical framework already exist. Which are the best, and how are they structured?
* [mariandoerk.de/edgemaps/demo/](https://mariandoerk.de/edgemaps/demo/)
* [mariandoerk.de/edgemaps/](https://mariandoerk.de/edgemaps/)
* [mariandoerk.de/](https://mariandoerk.de/)
* [nrchtct](https://github.com/nrchtct)
* [An Introduction to a New Text Classification and Visualization for Natural Language Processing Using Topological Data Analysis](https://arxiv.org/abs/1906.01726)
* [Computational historiography: Data mining in a century of classics journals](https://dl.acm.org/doi/abs/10.1145/2160165.2160168)
* [scholar.google.com/scholar?hl=ru&as_sdt=2005&sciodt=0%2C5&cites=18196887914878038842&scipsc=&q=political+sentiment+analysis&btnG=](https://scholar.google.com/scholar?hl=ru&as_sdt=2005&sciodt=0%2C5&cites=18196887914878038842&scipsc=&q=political+sentiment+analysis&btnG=)
* [scholar.google.com/scholar?hl=ru&as_sdt=0%2C5&q=political+opinion+mining&btnG=](https://scholar.google.com/scholar?hl=ru&as_sdt=0%2C5&q=political+opinion+mining&btnG=)
* [scholar.google.com/scholar?hl=ru&as_sdt=0%2C5&q=citation+network&btnG=](https://scholar.google.com/scholar?hl=ru&as_sdt=0%2C5&q=citation+network&btnG=)
* [Efficient algorithms for citation network analysis](https://arxiv.org/abs/cs/0309023)
* [Opinion mining in social media: Modeling, simulating, and forecasting political opinions in the web](https://www.sciencedirect.com/science/article/pii/S0740624X12000901)
* [The ACL anthology network corpus](https://link.springer.com/article/10.1007/s10579-012-9211-2)
* NOMINATE algorithm
* [LeftValues](https://leftvalues.github.io/?fbclid=IwAR0Sb8267m_fdNdLHXvpWR8dn53EhoR2scrX2mPWE8JxSxZecQN7Vqkuk6w)
* [LeftValues/leftvalues.github.io: LeftValues, a leftist political quiz](https://github.com/LeftValues/leftvalues.github.io)
* [Voting Behavior, Coalitions and Government Strength through a Complex Network Analysis](https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0116046)

FIXME### Project

* [Concept-based knowledge discovery in texts extracted from the Web](https://www.researchgate.net/publication/234818008_Concept-based_knowledge_discovery_in_texts_extracted_from_the_Web)
* (?) From KD
* [The Manifesto Corpus: A new resource for research on political parties and quantitative text analysis - Nicolas Merz, Sven Regel, Jirka Lewandowski, 2016](https://journals.sagepub.com/doi/full/10.1177/2053168016643346)
* [The Manifesto Corpus: A new resource for research on political parties and quantitative text analysis](https://ideas.repec.org/a/zbw/espost/172197.html)
* [*Manifesto Project Database](https://manifesto-project.wzb.eu/information/documents/corpus)
* [*Quantitative Analysis of Political Text | Methods Bites](https://www.mzes.uni-mannheim.de/socialsciencedatalab/article/quantitative-analysis-of-political-text/)
* ontology of political concepts
* [Learning Lexical-Semantic Relations Using Intuitive Cognitive Links | SpringerLink](https://link.springer.com/chapter/10.1007/978-3-030-15712-8_1)
* [Corpus of US Supreme Court Opinions](https://www.english-corpora.org/scotus/)
* [SCOTUS Opinions Corpus | Kaggle](https://www.kaggle.com/jboysen/scotus-corpus)
* [BYU Law & Corpus Linguistics](https://lawcorpus.byu.edu/coscous;showCorpusDescription=true/concordances/search)
* [SCOTUS Oral Arguments Corpus](https://ca.talkbank.org/access/SCOTUS/OralArguments.html)
* [BYU Law & Corpus Linguistics](https://lawcorpus.byu.edu/cusc;showCorpusDescription=true/concordances/search)
* [*The Supreme Court Database](http://scdb.wustl.edu/data.php)
* [*Supreme Court Corpus — convokit 2.3.2 documentation](https://convokit.cornell.edu/documentation/supreme.html)
* [The Supreme Court Database](http://scdb.wustl.edu/documentation.php)
* [noajshu/scotus-speech: Corpus of oral arguments (recorded speech + official transcripts) of the United States Supreme Court](https://github.com/noajshu/scotus-speech)
* [bash - How to split a large text file into smaller files with equal number of lines? - Stack Overflow](https://stackoverflow.com/questions/2016894/how-to-split-a-large-text-file-into-smaller-files-with-equal-number-of-lines)
* [Free Law Project](https://free.law/)

FIXME### [*Bulk Data – CourtListener.com](https://www.courtlistener.com/api/bulk-info/)

* [The SFU Opinion and Comments Corpus: A Corpus for the Analysis of Online News Comments | SpringerLink](https://link.springer.com/article/10.1007/s41701-019-00065-w)
* [Advances in Knowledge Discovery and Data Mining: 17th Pacific-Asia ... - Google Книги](https://books.google.de/books?id=jVi5BQAAQBAJ&pg=PA177&lpg=PA177&dq=opinion+column+corpus&source=bl&ots=5LR-xh8t3X&sig=ACfU3U28vE2G1LwH44VjCWfVmYyzynd8Rw&hl=ru&sa=X&ved=2ahUKEwjCh_-E5ojqAhUByaYKHVB4DksQ6AEwDHoECAoQAQ#v=onepage&q=opinion%20column%20corpus&f=false)
* [MPQA Opinion Corpus | MPQA](https://mpqa.cs.pitt.edu/corpora/mpqa_corpus/)
* [MPQA Corpora](https://mpqa.cs.pitt.edu/corpora/)
* [konvens18_11.pdf](https://www.oeaw.ac.at/fileadmin/subsites/academiaecorpora/PDF/konvens18_11.pdf)
* [W15-5614.pdf](https://www.aclweb.org/anthology/W15-5614.pdf)
* [CoRD | The York-Toronto-Helsinki Parsed Corpus of Old English Prose (YCOE)
* [CORPS: A Corpus of Tagged Political Speeches for Persuasive Communication Processing: Journal of Information Technology & Politics: Vol 5, No 1](https://www.tandfonline.com/doi/abs/10.1080/19331680802149616)
* [List of political philosophers - Wikipedia](https://en.wikipedia.org/wiki/List_of_political_philosophers)
* [The 50 Most Influential Living Philosophers | TheBestSchools.org](https://thebestschools.org/features/most-influential-living-philosophers/)
* [ilias3.uni-stuttgart.de/data/Uni_Stuttgart/lm_data/lm_2578750/KD_schedule.html](https://ilias3.uni-stuttgart.de/data/Uni_Stuttgart/lm_data/lm_2578750/KD_schedule.html)

FIXME### [*KD Project Info](https://ilias3.uni-stuttgart.de/data/Uni_Stuttgart/lm_data/lm_2503061/KD_project.html)

* [Presentation Slides](https://ilias3.uni-stuttgart.de/goto_Uni_Stuttgart_fold_1991912.html)
* [MARDY](https://sites.google.com/view/mardy)
* political corpora
* [German Political Speeches Corpus and Visualization](https://adrien.barbaresi.eu/corpora/speeches/)
* [(PDF) Corpus Analysis of Political Language](https://www.researchgate.net/publication/277703605_Corpus_Analysis_of_Political_Language)
* [Corpus of Political Speeches](https://digital.lib.hkbu.edu.hk/corpus/index.php)
* [CAJA: Corpus of Academic Journal Articles | Sketch Engine](https://www.sketchengine.eu/corpus-of-academic-journal-articles-caja/)
* database of political writings
* [A-Z List of Political Science Databases - Political Science - LibGuides at University of Michigan](https://libguides.umflint.edu/politicalscience/databases)
* [[Political Ontology - Oxford Handbooks](https://www.oxfordhandbooks.com/view/10.1093/oxfordhb/9780199604456.001.0001/oxfordhb-9780199604456-e-023#:~:text=Ontology%2C he suggests%2C “refers,” (1993%2C 6).)](https://www.oxfordhandbooks.com/view/10.1093/oxfordhb/9780199604456.001.0001/oxfordhb-9780199604456-e-023#:~:text=Ontology%2C%20he%20suggests%2C%20%E2%80%9Crefers,%E2%80%9D%20(1993%2C%206).))
* [Kaplan: Automatic extraction of citation contexts... - Академия Google](https://scholar.google.com/scholar?cites=1995250074175586754&as_sdt=2005&sciodt=0,5&hl=ru)
* [Detection of implicit citations for sentiment detection | Proceedings of the Workshop on Detecting Structure in Scholarly Discourse](https://dl.acm.org/doi/10.5555/2391171.2391176)
* [Context-enhanced citation sentiment detection | Proceedings of the 2012 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies](https://dl.acm.org/doi/10.5555/2382029.2382125)
* [Weakly Supervised Joint Sentiment-Topic Detection from Text | IEEE Transactions on Knowledge and Data Engineering](https://dl.acm.org/doi/10.1109/TKDE.2011.48)
* [SIGKDD Explorations](https://www.kdd.org/explorations)
* [KD Curriculum Design : Introduction](https://www.kdd.org/curriculum/view/introduction)
* [Knowledge Discovery in Databases – Wikipedia](https://de.wikipedia.org/wiki/Knowledge_Discovery_in_Databases)
* [*Knowledge extraction - Wikipedia](https://en.wikipedia.org/wiki/Knowledge_extraction)
* [Semantics - Wikipedia](https://en.wikipedia.org/wiki/Semantics)
* [Discourse representation theory - Wikipedia](https://en.wikipedia.org/wiki/Discourse_representation_theory)
* [L’analyse textuelle des idées, du discours et des pratiques politiques | Pierre-Marc Daigneault, François Pétry | download](https://b-ok.cc/book/5262883/a1dfdb)
* [*Discourse Representation Theory (Stanford Encyclopedia of Philosophy)](https://plato.stanford.edu/entries/discourse-representation-theory/)
* [A Model of Coherence Based on Distributed Sentence Representation](https://www.aclweb.org/anthology/D14-1218.pdf)
* [11.2 Discourse Representation Structures](http://www.coli.uni-saarland.de/projects/milca/courses/comsem/html/node210.html)
* [*Computational Semantics](http://www.coli.uni-saarland.de/projects/milca/courses/comsem/html/)
* [*11 Discourse Representation Theory](http://www.coli.uni-saarland.de/projects/milca/courses/comsem/html/node205.html)
* [Ideology, Power, and the Structure of Policy Networks](https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1541-0072.2011.00413.x)
* [Typing Together? Clustering of Ideological Types in Online Social Networks](https://www.tandfonline.com/doi/abs/10.1080/19331680903031531?journalCode=witp20)
* [The Social Structure of Political Echo Chambers:﻿Variation in Ideological Homophily in OnlineNetwork](https://pacscenter.stanford.edu/wp-content/uploads/2019/05/2f07d4_8925c23e378940c49f91f91b95f85408.pdf)
* Check out:
  * Tinkerpop
  * pykg2vec (sp?)
  * Neo4j

FIXME### Project Outline

* select "seed lists" on Wikipedia for political thinkers, ideas, and ideologies
* scrape Wikipedia to create a network -articles -addresses -anchor text in links → create general scraper class test on Wiktionary to get etymology tables for Ancient Greek add Wikipedia-specific capabilities and add networkx functionality to create network directly
* perform sentiment/opinion analysis on anchor text in links
* identify clusters in the network
* model ideological space based on links between nodes
* develop distance metrics to map from network with link polarity to vector space
* test different clustering algorithms
* develop clean visualizations
* Use distance between nodes (esp. most important nodes) and their polarities to fill ideology vectors → requires transitivity assumption
* how to recover opinion (~sentiment) from word norms and a dependency parse? → multiplicative relationship? → additional rules governing which dependencies allow for multiplication (i.e. transitivity) → NN? → input format?
* [alexhwilliams.info/itsneuronalblog/2016/03/27/pca/](http://alexhwilliams.info/itsneuronalblog/2016/03/27/pca/)
* [wikidata](https://en.wikipedia.org/wiki/Wikidata?wprov=sfti1)
* [wikilex](https://github.com/mynlp/wikilex)
* [wiki tool](https://github.com/lorenzoranucci/sentimantic)
* [wiki scraper ](https://github.com/martin-majlis/Wikipedia-API)
* [Wikipedia scraper](https://github.com/topics/wikipedia-scraper)
* [big.PCA function | R Documentation](https://www.rdocumentation.org/packages/bigpca/versions/1.1/topics/big.PCA)
* [Freebase](https://en.wikipedia.org/wiki/Freebase_(database))
* Wiki link analysis networkx 
* [Wiktionary Special Export](https://en.wiktionary.org/wiki/Special:Export)
* [Wiki Export Parameters](https://www.mediawiki.org/wiki/Manual:Parameters_to_Special:Export)
* [Wiki Special Export](https://en.wikipedia.org/wiki/Special:Export)
* [Wikimedia Guide](https://en.wikipedia.org/wiki/Wikipedia:Database_download)
* [Wikimedia dumps](https://dumps.wikimedia.org/enwiki/20200901/)
* [How To Create Python Network Graphs || NetworkX Overview](https://youtu.be/7NWeLuG8tVo)
* [Johannes Wachs - Analyzing Networks In Python](https://youtu.be/yMSCWLma46s)
* [Analysing Real World Network Data Sets Using Python Networkx](https://youtu.be/1ErL1z_lKd8)
* [Social Network Analysis - From Graph Theory to Applications](https://youtu.be/px7ff2_Jeqw)
* Basic set of questions that political ideologies may attempt to answer ->
* [en.m.wikipedia.org/wiki/Matrix_completion](https://en.m.wikipedia.org/wiki/Matrix_completion)
* stance detection and interpolation
* opinion interpolation
* transition matrix interpolation
* graph edge interpolation
* opinion matrix interpolation
* Opinion-driven matrix factorization
* [The Matrix of Opinion - Hyperpolitics, an interactive Dictionary of Political Science](http://www.hyperpolitics.net/hyperdictionary/index.php?entry=opinion)**
* [The Political Compass - Wikipedia](https://en.wikipedia.org/wiki/The_Political_Compass)
* [en.wikipedia.org/wiki/Political_spectrum](https://en.wikipedia.org/wiki/Political_spectrum)

FIXME## Misc

* Interdisciplinary
* [Spracherwerb und statistisches Lernen | SpringerLink](https://link.springer.com/article/10.1007%2Fs00115-002-1466-1)
* Other
* Algorithms for optimal assignment of preferences.
* open-source movement, wiki*, and their relation to anarchism and socialism
* NN interpretability
* Machine translation
* PCA
* [DS4G: Environmental Insights Explorer | Kaggle](https://www.kaggle.com/c/ds4g-environmental-insights-explorer/overview/description)
* [Introduction to DataCamp Projects - Online Project](https://www.datacamp.com/projects/33)
* [Projects](https://www.datacamp.com/projects/)
* [Software projects from hackathons · Devpost](https://devpost.com/software?ref_content=footer-projects-link&ref_feature=projects&ref_medium=footer)
* [70+ Machine Learning Datasets & Project Ideas – Work on real-time Data Science projects - DataFlair](https://data-flair.training/blogs/machine-learning-datasets/)
* Book Idea: Linear Algebra: The Intuition Supplement
* Unique insights from each field/profession (engineer, physicist, philologist, painter, gardener)
* matrix methods in natural language processing
* [ru.theanarchistlibrary.org/library/chaos-linguistics](https://ru.theanarchistlibrary.org/library/chaos-linguistics)
* PLTK
* Academic solipsism
* Calculate (in different ways) the centrality of national capitals.
* What are the ethical imperatives of knowledge (to be informed)?
* Wie wäre der perfekte Intellekuelle?
* What makes a good tweet / good comedy? Where are they located within the concept landscape? How do they relate to proverbs and idioms?
* Mathematics of NLP
* Matrix methods
* matrix methods for semantics
* different ways to extract 'semantic essence'
* Quantum
* [Extra History : Quantum Computing](https://www.youtube.com/watch?v=iol5936dZho&list=PLhyKYa0YJ_5ATEDqJRuoIvOH-eVkHP7ms)

FIXME## Scratch

* [April 2020 - NSM Online Seminar - YouTube](https://www.youtube.com/playlist?list=PLnYrArdOUDVbmZiauY3qytX7B3VRz8eZZ)
* [Traduction basé sur les proverbes](https://translationjournal.net/journal/54proverbs_fr.htm)
* [Natural semantic metalanguage - Wikipedia](https://en.wikipedia.org/wiki/Natural_semantic_metalanguage#Semantic_primes)
* [Natural Semantic Metalanguage - YouTube](https://www.youtube.com/results?search_query=Natural+Semantic+Metalanguage)

FIXME## **word/phrase translation embeddings (compute or enhance embeddings using translation information)

* Rehabilitate Patents Project
* Modeling Structure Across Language and Modalities
* → Cross-Lingual Structure Prediction
* → Parsing + Generation ⇒ Translation
* → Code-Switching
* → Multi-Modal Generation
* cross-lingual clustering of non-literal expressions (based on common representation), or matching of the same
* philosophy of science in the NLP context
* [Idea: TTS for classical greek and latin](https://github.com/prakashpandey9/Text-Classification-Pytorch/blob/master/models/LSTM_Attn.py)
* idea: rosetta-nets repo
* make interactive map for cognate families, color-coded (shade for similarity)
* Make more transparent accent mapping using a transducer, sequence prediction task combined with probability of phones, etc.
* model for reasoning about idioms and proverbs ex ante (from literal semantic content)
* project idea: build-your-own-julia (like nand2tetris, but with Julia)
* Alignment idea: create new lightweight alignment for bitexts; using n most frequent words and their most frequent translations to identify corresponding sentences
* Blog/article/book idea: Computational Linguistics and Philosophy of Science
* continuous phonetic representations of speech
* Cross-lingual word embeddings for language similarity
* Cross-lingual word embeddings to identify untranslatables (topology, persistent homology → which patterns and relationships do not hold?)
* [Download all words from Wiktionary for offline use - Software Recommendations Stack Exchange](https://softwarerecs.stackexchange.com/questions/18273/download-all-words-from-wiktionary-for-offline-use)
* [How to retrieve Wiktionary word content? - Stack Overflow](https://stackoverflow.com/questions/2770547/how-to-retrieve-wiktionary-word-content)
* [chronicle.com/article/Maps-of-Citations-Uncover-New/128938/](https://www.chronicle.com/article/Maps-of-Citations-Uncover-New/128938/)
* [Multi-view Models for Political Ideology Detection of News Articles](https://www.aclweb.org/anthology/D18-1388.pdf)
* [PhD position in Natural Language Processing for Political Mining](https://euraxess.ec.europa.eu/jobs/420839)
* pltk
* [Political ideology detection](http://www.marekrei.com/blog/political-ideology-detection/)
* [Sample YT video sub link](http://video.google.com/timedtext?lang=en&v=aircAruvnKk)
* [Sentiment Political Compass: A Data-driven Analysis of Online Newspapers regarding Political Orientation](https://www.aifb.kit.edu/images/e/e1/IPP2018_Falck.pdf)
* [Text Technology Project](https://docs.google.com/spreadsheets/d/1U0VKGtTF4XOXSPsnb8SFIP5z87IOiDTcwSgDv_SUQww/edit?usp=sharing)
* Crash Course
* hishe
* Subtitles:
* vlogbrothers
* Nand2Tetris.jl
* Nand2TetrisHDL.jl

FIXME## Language Similarity

* Similarity of two languages as amount of error that can be reduced by transformation rules, where n is the number of rules, eps(n) is the degree of error following application of rule n. Order the
* [lh5.googleusercontent.com/GYN9j4xAbMLMSLtlh39laEax1mwj6tLAorZSoyxQORX9YbW8SI4rRoqSP9JDqqHaRUA7SRAN-U0P_FIA-rfglEHf4eI88qxM_LJu5QZOt8c9DSsS6dFEIue-fnKd4Z3ZxMecJRscdYUQZ51AxmBBHg](https://lh5.googleusercontent.com/GYN9j4xAbMLMSLtlh39laEax1mwj6tLAorZSoyxQORX9YbW8SI4rRoqSP9JDqqHaRUA7SRAN-U0P_FIA-rfglEHf4eI88qxM_LJu5QZOt8c9DSsS6dFEIue-fnKd4Z3ZxMecJRscdYUQZ51AxmBBHg)
* in order of decreasing error reduction.
* [lh3.googleusercontent.com/6RFXFqvD6XzC2Lw4tjALWwnVXeJ3hdaaS0HqdmvMiim3Zm2t6RFouI8kmpDrIHqkdFFU8spC7A-Mv9Y-orIVLg8zMQyDW6ehCu4g-BZ4ERCp3jwnNyXRrBo-AaBFq4bB8ejFWLLQUtNm9akawOZVgw](https://lh3.googleusercontent.com/6RFXFqvD6XzC2Lw4tjALWwnVXeJ3hdaaS0HqdmvMiim3Zm2t6RFouI8kmpDrIHqkdFFU8spC7A-Mv9Y-orIVLg8zMQyDW6ehCu4g-BZ4ERCp3jwnNyXRrBo-AaBFq4bB8ejFWLLQUtNm9akawOZVgw)
* how to determine n: Apply rules until  is maximized. That is,
* [lh4.googleusercontent.com/AE0atwKJ7M9HGkKuyZtcwtGxazjwh0q5rQCxUBeyh2kySQN-CH2jhj_LM5WpaP_fDckH9HBbOZRD5-vB3aDiUe9U4Ra7b-gUJmcOjgn9O9A22A2XwHjtMq63opQLTuhHSZrvxfRCwRQbnldjDpgRyw](https://lh4.googleusercontent.com/AE0atwKJ7M9HGkKuyZtcwtGxazjwh0q5rQCxUBeyh2kySQN-CH2jhj_LM5WpaP_fDckH9HBbOZRD5-vB3aDiUe9U4Ra7b-gUJmcOjgn9O9A22A2XwHjtMq63opQLTuhHSZrvxfRCwRQbnldjDpgRyw)
* choose
* [lh5.googleusercontent.com/18iKP_WNozMh2i9-ZYBNlVu9TmmtCrHUdfNLNntHkld2LriRzdeoYSXPCmezc9NbcSVIhV2O9VyUMNZunyPfto3KEhH4vQ7aAOBx8QweJ4wGw73xqza3GwiKrsToD2P0hIHdcii4v3NebW1qeLLmJg](https://lh5.googleusercontent.com/18iKP_WNozMh2i9-ZYBNlVu9TmmtCrHUdfNLNntHkld2LriRzdeoYSXPCmezc9NbcSVIhV2O9VyUMNZunyPfto3KEhH4vQ7aAOBx8QweJ4wGw73xqza3GwiKrsToD2P0hIHdcii4v3NebW1qeLLmJg)
* . The second inequality implies that
* [lh5.googleusercontent.com/9VsLCNRuND5S-JNswtAK_8znRgArCsARswZ6x0AMEMU3YQujzXklMYNuZsIEJc8r4Xhjs2tO1Nzh3zCvQqaAAT29RxUXYopBI5ZRWRh4jDsTOk3xTQKi54YDkMbrDztUs6YglOnMna4xtJIB6SdBSw](https://lh5.googleusercontent.com/9VsLCNRuND5S-JNswtAK_8znRgArCsARswZ6x0AMEMU3YQujzXklMYNuZsIEJc8r4Xhjs2tO1Nzh3zCvQqaAAT29RxUXYopBI5ZRWRh4jDsTOk3xTQKi54YDkMbrDztUs6YglOnMna4xtJIB6SdBSw)

FIXME# General Programming Reading List

* [How principled coders outperform the competition](https://m.youtube.com/watch?v=q1qKv5TBaOA&t=4s)
* [cs.cmu.edu/~rwh/pfpl/](https://www.cs.cmu.edu/~rwh/pfpl/)
* [cs.cmu.edu/~rwh/pfpl/](https://www.cs.cmu.edu/~rwh/pfpl/) $$$
* [dev.to/copilotkit/30-app-ideas-with-complete-source-code-5f76](https://dev.to/copilotkit/30-app-ideas-with-complete-source-code-5f76)
* [centercode.com/blog/dogfooding-101](https://www.centercode.com/blog/dogfooding-101)
* [fluxharmonic.com/](https://fluxharmonic.com/)
* [systemcrafters.net/guides/](https://systemcrafters.net/guides/)

FIXME## 1S Video

* [How One Line of Code Almost Blew Up the Internet - YouTube](https://www.youtube.com/watch?v=GEbn3nHyKnA)
* [The Simplest Sorting Algorithm (You’ve Never Heard Of)](https://youtu.be/_W0yUJlscRA)
* [Serialization - A Crash Course](https://www.youtube.com/watch?v=uS37TujnLRw)
* [Почему индийские и китайские разработчики нашим программистам не конкуренты?](https://youtu.be/M4nE1hiSDpQ)
* [How to Contribute to Open Source](https://youtu.be/2L0sxPx4C18)
* [How Quantum Computers Break The Internet... Starting Now - YouTube](https://www.youtube.com/watch?v=-UrdExQW0cs)
* [Branchless Programming: Why "If" is Sloowww... and what we can do about it! - YouTube](https://www.youtube.com/watch?v=bVJ-mWWL7cE)
* [Code Practices - part 3 of 5 - YouTube](https://www.youtube.com/watch?v=2-G5WTghjYk&list=PL28704BC3557868CB&index=4)
* [Build systems - Intro and Make](https://youtu.be/rF--wOD4H8I)
* [What is a cryptocurrency Explained with animations](https://www.youtube.com/watch?v=wHWz6dboFhI)
* [Functional Design Patterns - Scott Wlaschin - YouTube](https://www.youtube.com/watch?v=srQt1NAHYC0)
* [Clean Code - Uncle Bob / Lesson 6 - YouTube](https://www.youtube.com/watch?v=l-gF0vDhJVI&t=1471s)
* [Faster than Rust and C++: the PERFECT hash table - YouTube](https://www.youtube.com/watch?v=DMQ_HcNSOAI)
* ["Clean" Code, Horrible Performance - YouTube](https://www.youtube.com/watch?v=tD5NrevFtbU)
* [What is Dependency Injection? - YouTube](https://www.youtube.com/watch?v=tYZd8hserms)
* [Abstraction Can Make Your Code Worse - YouTube](https://www.youtube.com/watch?v=rQlMtztiAoA)
* [Is Designing Different To Coding? - YouTube](https://www.youtube.com/watch?v=aPSk2f3Vkz0&t=73s)
* [How am I suppose to get a job as a software engineer?](https://www.youtube.com/watch?v=nmhX3_m84Is)
* [Maintaining Motivation as a Software Engineer - YouTube](https://www.youtube.com/watch?v=fBayRA8o3yQ)
* [Fibonacci Heaps or "How to invent an extremely clever data structure" - YouTube](https://www.youtube.com/watch?v=6JxvKfSV9Ns)
* [10 Udemy Courses Every Developer SHOULD Own (NOT just coding) - YouTube](https://www.youtube.com/watch?v=hexfXc7-SsU)
* [🚀 The Art of Visualising Software Architecture (Simon Brown)](https://youtu.be/zcmU-OE452k)
* [Procedural Programming: It's Back? It Never Went Away - YouTube](https://www.youtube.com/watch?v=eEBOvqMfPoI)
* [Introduction to Operating System - YouTube](https://www.youtube.com/watch?v=vBURTt97EkA)
* [ITT 2016 - Kevlin Henney - Seven Ineffective Coding Habits of Many Programmers - YouTube](https://www.youtube.com/watch?v=ZsHMHukIlJY)
* [kubernetes - YouTube](https://www.youtube.com/results?search_query=kubernetes)
* [Object-Oriented Programming is Bad - YouTube](https://www.youtube.com/watch?v=QM1iUe6IofM&t=220s)
* [Operating System Basics - YouTube](https://www.youtube.com/watch?v=9GDX-IyZ_C8)
* [Programming Languages - (part 1 of 7) - YouTube](https://www.youtube.com/watch?v=vjtywpx2SDY&list=PL7141DE955793D3F0&index=1)
* [Replacing the Unix tradition - YouTube](https://www.youtube.com/watch?v=L9v4Mg8wi4U)
* [The S.O.L.I.D. Principles of OO & Agile Design - Uncle Bob Martin - YouTube](https://www.youtube.com/watch?v=t86v3N4OshQ&t=10s)
* [A Comparison of Pathfinding Algorithms](https://youtu.be/GC-nBgi9r0U)
* [Abstraction Can Make Your Code Worse](https://youtu.be/rQlMtztiAoA)
* ["Clean" Code, Horrible Performance - by Casey Muratori](https://www.computerenhance.com/p/clean-code-horrible-performance)
* [How to code like the pros](https://www.youtube.com/watch?v=q1qKv5TBaOA)
* [Arch Serv](https://youtu.be/9mZmc6a0tmM)
* [Testen mit TDD: Eine Einführung in 100 Minuten // deutsch](https://www.youtube.com/watch?v=H943sC8r7nQ)
* [Fundamental Concepts of Object Oriented Programming](https://youtu.be/m_MQYyJpIjg)
* [Intro to Competitive Programming](https://youtu.be/tZ5FBBnHfm4)
* [How Robbing Houses Can Make You Better At Dynamic Programming](https://youtu.be/ClhgydZcFsY)
* [Обговорення розробника: особистий досвід, поради та кар'єра](https://youtube.com/playlist?list=PLJQubE-iTa2GPUrRUgnhGuX4jnOr_p08e)
* [Shimon Schocken: The self-organizing computer course - YouTube](https://www.youtube.com/watch?v=iE7YRHxwoDs)
* [C Programming: Makefiles - YouTube](https://www.youtube.com/watch?v=GExnnTaBELk)
* [2022 Predictions](https://www.youtube.com/watch?v=LOpFYMPXqE4)
* [Don't Write Comments](https://www.youtube.com/watch?v=Bf7vDBBOBUA)
* Code strukturieren // deutsch     * [How I make science animations](https://www.youtube.com/watch?v=yaa13eehgzo)

FIXME## SORT

* [Curso de REDES informáticas. 175 vídeos de calidad - YouTube](https://www.youtube.com/playlist?list=PLomN84AdULIBcoI8Rb98dnompliIktJk9)
* [blog.finxter.com/10-best-bitcoin-books-your-ultimate-guide-for-2023/](https://blog.finxter.com/10-best-bitcoin-books-your-ultimate-guide-for-2023/)
* Adapter, Bridge, Composition over inheritance,
* [Making Snake Boot Sector Game in Assembly (x86) - YouTube](https://www.youtube.com/watch?v%3DtHO5x_Ha6pE)
* free-programming-books/free-programming-books.md at master · EbookFoundation/free-programming-books · GitHub
* OpenHPI Tutorials - YouTube
* So You Wanna Learn How to Code? Going from Zero to Programmer Hero in One Guide, for Great Justice. – Everyday Utilitarian
* [20 Things to Know before You Start Programming](https://learnworthy.net/20-things-to-know-before-you-start-programming/)
* [6 months Educative for free](https://www.educative.io/github-students?aid=5082902844932096)
* [7 Habits of Highly Effective Programmers | SeattleDataGuy in Better Programming](https://medium.com/better-programming/7-habits-of-highly-effective-programmers-563ee3b63f33)
* [Any good beginner programming podcasts?](https://www.reddit.com/r/learnprogramming/comments/1l0cxl/any_good_beginner_programming_podcasts/)
* [Atom Documentation](https://atom.io/docs)
* [Best Learning Strategies for Programmers](https://youtu.be/IHQ-UUj0bxs)
* [Codescracker Online Coding](https://codescracker.com/index.htm)
* [Dashboard | Codecademy](https://www.codecademy.com/es/learn)
* Remote Kernels · Hydrogen
* [flight-manual.atom.io/api/v1.48.0/TextEditor/](https://flight-manual.atom.io/api/v1.48.0/TextEditor/)
* [GraphViz intro](https://ncona.com/2020/06/create-diagrams-with-code-using-graphviz/?mc_cid=76ec3f7e9d&mc_eid=1a0e8f9a2d)
* Top 43 Programming Languages
* [levenez.com/lang/](https://www.levenez.com/lang/)
* [LANGUAGES – The Craft of Coding](https://craftofcoding.wordpress.com/archives/)
* [Языки программирования - просто о сложном](https://www.youtube.com/watch?v=sytkQW7LZak)
* [Popular Programming Languages: 1960 to 2020](http://datascience.getresponse360.com/click.html?x=a62e&lc=5wt&mc=j&s=jFaI&u=F&y=G&z=wuWq5kS&)
* [FCC Translation Effort](https://www.freecodecamp.org/news/world-language-translation-effort/)
* [> ultimate-coding-resources: A collection of the best resources for programming, web development, computer science and more.](https://github.com/PizzaPokerGuy/ultimate-coding-resources)
* [*How to Design Programs, Second Edition](https://htdp.org/2019-02-24/)
* [SICP Course](https://ru.hexlet.io/courses/sicp)
* [ru.hexlet.io/courses/sicp/](https://ru.hexlet.io/courses/sicp/lessons/sicp_what_is_computer_science/theory_unit)
* [opensource.guide/fr/how-to-contribute/](https://opensource.guide/fr/how-to-contribute/)
* [Programmieren, Vorlesung, WS 2020/21](https://www.youtube.com/watch?v=LmgKH0KPH3g&list=PLfk0Dfh13pBOkHJEvgdl1zLOLeOUn2cnq)
* [Интерактивный учебник по информатике](https://www.youtube.com/playlist?list=PL66kIi3dt8A5sa_qBur8uxmtuuwuJQGS1)
* [cs50.harvard.edu/college/2019/fall/](https://cs50.harvard.edu/college/2019/fall/)
* [Informatica generale](https://www.youtube.com/playlist?list=PL27E7ADECF58950DA)
* [Informatique](https://www.youtube.com/watch?v=YUUKZqNneEE&list=PLie7a1OUTSagveVvyORBGKgovTTgjVdmD)
* [Информатика](https://vk.com/wall-16108331_155508)
* [A Practical Approach to Compiler Construction](http://libgen.rs/book/index.php?md5=37877A0A3E6D4C7913BDA9977CB69A58)
* [Formale Sprachen, abstrakte Automaten und Compiler: Lehr- und Arbeitsbuch für Grundstudium und Fortbildung](http://libgen.rs/book/index.php?md5=5ADE808648A5E4DF40CD7291F6BF5E78)
* [Write Your Own Compiler](http://library.lol/main/A26A5975375A5E0CBA831268E78018EF)
* [Grundbegriffe der Informatik, Vorlesung, WS 2020/21](https://www.youtube.com/watch?v=OK39MSCt54o&list=PLfk0Dfh13pBPs9TN7uhkFhJfmM9PaxaZ8)    The Nature of Code
* [CS 320 - Concepts of Programming Languages](http://www.cs.bu.edu/fac/snyder/cs320/)
* [INF4820](https://www.youtube.com/channel/UCufkSSu1trzm9nB-jYOPuvw)
* [...](http://libgen.rs/book/index.php?md5=9BD57A48450569E5AE20296FCD23064F)
* [Let’s build a Compiler](http://libgen.rs/book/index.php?md5=E3C0FAE0C2C0F747BE305C83E837ACFA)
* [Теоретическая информатика | Александр Охотин](https://www.youtube.com/watch?v=IIKffaoU9nk&list=PL-_cKNuVAYAUl_rC3XH9MX63wyX600pcp)
* [Теоретическая информатика | Александр Охотин](https://www.youtube.com/watch?v=ajCG2gBlW3Y&list=PL-_cKNuVAYAXbN083ii8cakfJpy5iGNxu)
* [Vorlesungsaufzeichnung Theoretische Informatik | Hochschule Osnabrück](https://www.hs-osnabrueck.de/prof-dr-karsten-morisse/vorlesungsaufzeichnung-theoretische-informatik/)
* [Теоретическая информатика | Федор Петров](https://www.youtube.com/watch?v=5UhHcFHiUt8&list=PL-_cKNuVAYAXBk4t4WqPyAv__0__0QgUC)
* [Vorkurs Informatik](https://www.youtube.com/watch?v=F1Wml6ayRpY&list=PL-_cKNuVAYAVc-vBx2fQnjy7F18vzi9NK)
* [Vorkurs Informatik](https://www.youtube.com/watch?v=QBS1N9LU4tI&list=PL-_cKNuVAYAWpKLONs_YYrEwH7KrSPn9u)
* [Tree Automata Techniques and Applications](http://denif.ens-lyon.fr/teacher.php?id=43)
* [Informatica I: Modelli dell'Informatica - prof. A. Marchetti Spaccamela - YouTube](https://www.youtube.com/playlist?list=PLAQopGWlIcyalkb2baN9mnotsdBm5Vbkc)
* [Introduction to Theoretical Computer Science ](https://introtcs.org/public/index.html)
* [CS Crash Course](https://www.youtube.com/playlist?list=PL8dPuuaLjXtNlUrzyH5r6jN9ulIgZBpdo)    Computer Science Illuminated
* [ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-004-computation-structures-spring-2017/](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-004-computation-structures-spring-2017/)
* [toc.cryptobook.us/](https://toc.cryptobook.us/)
* [97-things-every-x-should-know.gitbooks.io/97-things-every-programmer-should-know/content/ru/](https://97-things-every-x-should-know.gitbooks.io/97-things-every-programmer-should-know/content/ru/)
* [Basiswissen Informatik - Grundideen einfach und anschaulich erklärt](https://b-ok.cc/book/5246109/66bc21)
* [*Другой GitHub: репозитории по Data Science, визуализации данных и глубокому обучению](http://ai-news.ru/2019/01/drugoj_github_repozitorii_po_data_science_vizualizacii_dannyh_i_glubokomu.html)
* [Как подружить Tensorflow и C++ / Хабрахабр](https://habr.com/post/308002/)
* [sindresorhus/awesome](https://github.com/sindresorhus/awesome)
* [numfocus.org/sponsored-projects/](https://www.numfocus.org/sponsored-projects/)
* [freecodecamp.org/news/free-online-programming-cs-courses/](https://www.freecodecamp.org/news/free-online-programming-cs-courses/)
* [150+ Stanford On-Campus Computer Science Courses Available Online](https://www.classcentral.com/report/stanford-on-campus-courses/)
* [> Old bookmarks](https://docs.google.com/spreadsheets/d/1YVDOe57jjFBpwLrottZvP-ns-86XB0fcZvGfy0NzIfA/edit?usp=sharing)    BYU Major Path
* [Детальный план самообразования в Computer Science за 1.5 года](https://vk.com/@physics_math-detalnyi-plan-samoobrazovaniya-v-computer-science-za-15-goda)
* [eXamen.press](http://libgen.rs/search.php?&req=examen.press&phrase=1&view=simple&column=def&sort=year&sortmode=DESC)
* [Explore - Gitter](https://gitter.im/home/explore)
* [resources.md](https://gist.github.com/gopalindians/a8dae726cb5a03ee4ad4)
* [grokking](https://libgen.is/search.php?req=grokking&lg_topic=libgen&open=0&view=simple&res=25&phrase=1&column=def)
* [MartinThoma](https://github.com/MartinThoma)
* [dl.acm.org/](https://dl.acm.org/)
* [viXra.org open e-Print archive](https://vixra.org/)
* [ArXiv](https://arxiv.org/)
* [dblp: computer science bibliography](https://dblp.org/)
* [ux.stackexchange.com/questions/53275/do-interfaces-evolve](https://ux.stackexchange.com/questions/53275/do-interfaces-evolve)
* [DRM In School eBooks: When Life Imitates Dystopian Stories - GNU Project - Free Software Foundation](https://www.gnu.org/education/drm-in-school-ebooks-when-life-imitates-dystopian-stories.html#content)
* [en.wikipedia.org/wiki/User_interface](https://en.wikipedia.org/wiki/User_interface)
* [The Missing Semester of Your CS Education](https://missing.csail.mit.edu/)
* [150+ Stanford On-Campus Computer Science Courses Available Online](https://www.classcentral.com/report/stanford-on-campus-courses/)
* history of computing: free download. Ebooks library. On-line books store on Z-Library
* [Computerphile YouTube Channel](https://www.youtube.com/channel/UC9-y-6csu5WGm29I7JiwpnA)
* [libgen.is/search.php?req=Parallel+Distributed+Processing+Rumelhart&lg_topic=libgen&open=0&view=simple&res=25&phrase=1&column=def](http://libgen.is/search.php?req=Parallel+Distributed+Processing+Rumelhart&lg_topic=libgen&open=0&view=simple&res=25&phrase=1&column=def)
* [de.wikipedia.org/wiki/Backus-Naur-Form](https://de.wikipedia.org/wiki/Backus-Naur-Form)
* [KIT Kurse](https://www.youtube.com/c/KITWEBCAST/playlists?view=1&sort=dd&flow=grid)
* [Handbook of algorithms and data structures: in Pascal and C](http://library.lol/main/E37057C401A92773B3EAB6E733E1C006)
* [Алгоритмы, языки, автоматы и компиляторы](https://vk.com/doc44301783_609557463?hash=e86afa3249fb42ca98&dl=9a5f98fcf3360d4f22)
* [Гид по Computer Science для каждого программиста [2020]](https://vk.com/doc44301783_609557468?hash=5e45067028938d938e&dl=bdf715d21d7431e67b)
* [Занимательная информатика [2011]](https://vk.com/doc44301783_609557473?hash=894fb3bd23872a3f02&dl=ed6e0be5bb4b908a0e)
* [Quantum Computing](http://libgen.is/search.php?req=quantum+computing&lg_topic=libgen&open=0&view=simple&res=25&phrase=1&column=def)    libgen quantencomputer
* [Основы программирования](https://vk.com/wall-79831840_54479)
* [Информатика](https://stepik.org/course/10829/promo)
* [lelivros.love/book/baixar-livro-metodologia-de-pesquisa-para-ciencia-da-computacao-raul-sidnei-wazlawick-em-pdf-epub-e-mobi/](https://lelivros.love/book/baixar-livro-metodologia-de-pesquisa-para-ciencia-da-computacao-raul-sidnei-wazlawick-em-pdf-epub-e-mobi/)
* [book.kbsu.ru/](http://book.kbsu.ru/)
* [Algorithms and Theory of Computation Handbook, Second Edition, Volume 1: General](http://libgen.rs/book/index.php?md5=5BB041917EFF5A45C3C4EE98F25C4FE9)
* [Data Structures series)
* [2 ed.](http://libgen.rs/book/index.php?md5=5BB041917EFF5A45C3C4EE98F25C4FE9)    Computers and Computation
* [Algorithms and Theory of Computation Handbook, Second Edition, Volume 2: Special](http://libgen.rs/book/index.php?md5=729778F120A1B0A6AFB64DC95177B24A)
* [Data Structures series)
* [2nd Revised edition](http://libgen.rs/book/index.php?md5=729778F120A1B0A6AFB64DC95177B24A)    Computer Science Mathematics
* [Encyclopedia of Algorithms](http://library.lol/main/9F95B6FDE848B3842FFD86F03250A2AF)    Invitation to Computer Science
* [Everyday Cryptography: Fundamental Principles and Applications](http://libgen.rs/book/index.php?md5=5AA35B9F245246ED22C552F850F0DC0B)    A Balanced Introduction to Computer Science
* [Cryptography: The Key to Digital Security, How It Works, and Why It Matters](http://libgen.rs/book/index.php?md5=71B381A4F94A18BBE9D815DA665DC879)    The Bit and the Pendulum
* [This Is How They Tell Me the World Ends: The Cyberweapons Arms Race](http://libgen.rs/book/index.php?md5=F190F10373072DEF1E8173BA4551C126)    Классическая криптография
* [Computer Memory: Develop A Computer Like Memory In 5 Minutes A Day](http://library.lol/main/653D0BF914A487531BD7CAF97A784F79)    Алгоритмы - Дасгупта
* [dorling kindersley computer](https://libgen.rs/search.php?req=dorling+kindersley+computer&open=0&res=25&view=simple&phrase=1&column=def)    Теория алгоритмов
* [Quantum Computers, Explained With Quantum Physics](https://www.youtube.com/watch?v=jHoEjvuPoB8)
* [en.wikipedia.org/wiki/Model_checking](https://en.wikipedia.org/wiki/Model_checking)
* [computersciencewiki.org/index.php/Welcome](https://computersciencewiki.org/index.php/Welcome)
* [Data Structures Easy to Advanced Course](https://youtu.be/RBSGKlAvoiM)
* [Hash Tables and Hash Functions](https://www.youtube.com/watch?v=KyUTuwz_b7Q)
* [3. Non-fungible Tokens (NFTs)](https://www.freecodecamp.org/news/how-to-make-an-nft-and-render-on-opensea-marketplace/)
* [Como funcionaria um algoritmo para prevenir tentativas de enganar bloqueios de palavras (strings)?](https://sg-links.stackoverflow.email/ls/click?upn=FhKQFemTFIJzn5ywFPMHvuUjwMv-2BBhBHqs97P9ba0BEvnQ2HJIO-2FmsVXCbgXZ5nZBSj5awxqdJ3aWERJj6pl5-2BMrXX2-2B3ci0h1wlRS3WDQQ-3DQZGJ_Ok-2F1QZUoWNfwArWx1OpnKP3rAR9xqW9UxFasc9TFWJt2p-2BoSs6-2B2pi664yyZOd8r-2FUcG72mM9F5QB8jryvhMBi5oZW60hikiVN6edAdhwbnwlYjkwX7niQtq5gYql7DgTIozE-2FjxjHb8ZLSl-2BvU3zyblpk-2FnmAQxGUqOYKW09rLl6PwDTdkjjHXAQsHlT8QFvsw2hOPqmB84hXvX-2B3nz-2BDmnz1934iUlkRSMZPWISoAiwJnweVhDSOfk9HLoADLREhT8KoYEE-2Fjw8rqzgNYPLLxeHh0kdlQyfYQAPDn4-2Bh8yeTnWKy9Wt38xAjsqHiWW2J5UUmLbFQuf1nCcQXstQPrW9BPHhAIQwunNminBgwx40yZYTFnh00Ic56KYbBjQGDPad5wb7xArc0fSn7oiXZMua5J6-2BRxCvOyzYhMmhXGgTShQOz980Ra9V86oBTNa9-2F0zjEFDoEM7D5TkvphDY3HQY2-2FxsxGhnhBsWJPkZ8RrZ5R9F1jtQ84pcjXb5XvckhL2UtiONG-2BK4I6rhfbtUw-3D-3D)
* [The Computer Book: From the Abacus to Artificial Intelligence, 250 Milestones in the History of Computer Science | Simson L. Garfinkel, Rachel H. Grunspan | download](https://b-ok.cc/book/3707593/1bd75a)
* [freecodecamp.org/news/free-online-programming-cs-courses/](https://www.freecodecamp.org/news/free-online-programming-cs-courses/)
* [freecodecamp.org/news/big-o-notation/](https://www.freecodecamp.org/news/big-o-notation/)
* [KIT Playlists](https://www.youtube.com/c/KITWEBCAST/playlists)
* [[Tribune] Les machines n’apprennent pas](https://www.usinenouvelle.com/article/tribune-les-machines-n-apprennent-pas.N642748)
* [Action language - Wikipedia](https://en.wikipedia.org/wiki/Action_language)    Article on Turing, complexity, and saltwater desalinization    * [Brown; color is weird](https://www.youtube.com/watch?v=wh4aWZRtTwU&list=WL&index=1474)
* [Decades-Old Computer Science Conjecture Solved in Two Pages](https://www.quantamagazine.org/mathematician-solves-computer-science-conjecture-in-two-pages-20190725/)
* [Economics of Composable, Reusable Analytic Modules](http://datascience.getresponse360.com/click.html?x=a62e&lc=usU&mc=j&s=jFaI&u=F&y=1&z=wuoKefF&)
* [Geek & Chic: Analytics redefining fashion instincts](https://kdnuggets.us12.list-manage.com/track/click?u=4f2891ebb155b23f120ece0bd&id=54de772da4&e=b34ab4e857)
* [...](https://www.youtube.com/watch?v=s9PTrWOnDy8&list=WL&index=395)    Matthias Horx Die Zeit, Computer und KI    * [The Myth of the Machine: Technics and Human Development](http://library.lol/main/8831A5CF68597BB522C9EC4B357CC0F7)
* [Top 10 Technology Trends for 2020](https://kdnuggets.us12.list-manage.com/track/click?u=4f2891ebb155b23f120ece0bd&id=53cc2fdfda&e=b34ab4e857)
* [Top 10 Technology Trends of 2019](https://kdnuggets.us12.list-manage.com/track/click?u=4f2891ebb155b23f120ece0bd&id=b17f92433c&e=b34ab4e857)
* [Visually Explained: What Companies Get Wrong About Failure?](https://www.datasciencecentral.com/profiles/blogs/visually-explained-what-companies-get-wrong-about-failure)
* [Ера технократії або чому «тижпрограміст» — це перемога](https://medium.com/@vitalik/%D0%B5%D1%80%D0%B0-%D1%82%D0%B5%D1%85%D0%BD%D0%BE%D0%BA%D1%80%D0%B0%D1%82%D1%96%D1%97-%D0%B0%D0%B1%D0%BE-%D1%87%D0%BE%D0%BC%D1%83-%D1%82%D0%B8%D0%B6%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D1%96%D1%81%D1%82-%D1%86%D0%B5-%D0%BF%D0%B5%D1%80%D0%B5%D0%BC%D0%BE%D0%B3%D0%B0-d92d842f7b9e)
* [О том, какие современные решения ученые придумали этим современным проблемам — в наших материалах!](https://vk.com/wall-168717779_5751)
* [«Я зверь, а не человек!»](https://kp.ua/life/12201-ya-zver-a-ne-chelovek)
* [Coronavirus. Un prestigioso investigador de Stanford advierte: "estamos tomando decisiones sin datos confiables" - LA NACION](https://www.lanacion.com.ar/el-mundo/coronavirus-un-prestigioso-investigador-stanford-advierte-estamos-nid2344630?fbclid=IwAR1TClqk6zxAIadFw200WMHqaHHFOd2qaNXuKOe-Nl0hh5lFUL8x7HBlGOw)
* [La célula de Ferrel, donde habita el coronavirus](https://www.lavozdegalicia.es/noticia/sociedad/2020/03/13/celula-ferrel-convive-coronavirus/00031584129419085406584.htm?fbclid=IwAR2OxgNKm9StbIS-3VfcdM-G-YLobhJvDRwqbGAlkA6shiQUJp9ATOrcVUw)
* [Los fármacos contra la malaria, nueva baza contra el COVID-19](https://theconversation.com/los-farmacos-contra-la-malaria-nueva-baza-contra-el-covid-19-134013?fbclid=IwAR0O4CjlsUpUbkAguLswOnhPF6ptRs8C1UrRCMiq_-ro5KJIx1wkqtG5hfY)    Repräsentationismus — Was sonst?: Eine kritische Auseinandersetzung mit dem ...
* [cedar.buffalo.edu/papers/articles/Online_Offline_2000.pdf](http://www.cedar.buffalo.edu/papers/articles/Online_Offline_2000.pdf)
* [Notes](https://crypto.stanford.edu/pbc/notes/)
* [Как создать надёжные пароли и защищать систему с их помощью | GeekBrains - образовательный портал](https://geekbrains.ru/posts/kak-sozdat-nadyozhnye-paroli-i-zashchishchat-sistemu-s-ih-pomoshchyu)
* [Квантовая криптография. Хеширование. Цифровая подпись](https://www.youtube.com/watch?v=xphEhrrdqaM&list=PL-_cKNuVAYAUVoBoI-XqbvzPxtDB_1NRi)
* [Классическая Криптография](https://vk.com/wall-16108331_150831)    Криптология и секретная связь. Сделано в СССР    * [Принципы шифрования и криптографии. Расшифруйте послание!](https://www.youtube.com/watch?v=YtFM-smD9fQ&list=WL&index=381)    Программно-аппаратные средства обеспечения информационной безопасности [2019] Душкин
* [Сложность вычислений и основы криптографии | Дмитрий Ицыксон](https://www.youtube.com/watch?v=VLowyJEVFac&list=PL-_cKNuVAYAWh_47wfVOicbNF5Ayt2Rs8)
* [Сложность вычислений и основы криптографии | Эдуард Гирш](https://www.youtube.com/watch?v=oKzBUIr9M-o&list=PL-_cKNuVAYAWsWtxWzS3rLLZ32aFLNN3r)
* [Теоретико-сложностные основы криптографии](https://www.youtube.com/watch?v=cZMfOnxfOFg&list=PL-_cKNuVAYAUAMElAnIED4AVMtFuQmB0J)
* [Шнайер Б. - Секреты и ложь. Безопасность данных в цифровом мире. (Классика Computer Science) - 2003.pdf](https://vk.com/doc44301783_453645337?hash=bce7bed42a41612fea&dl=ed4de3cfab9736f558)
* History of X11 [yt](https://www.youtube.com/watch?v%3DR-N-fgKWYGU)
* [8 ways JavaScript is just... different. - YouTube](https://www.youtube.com/watch?v%3DkYAe7qDGOJw)
* [Bash Reference Manual](https://www.gnu.org/software/bash/manual/bash.html%23Pattern-Matching)
* [Basic Syntax | Markdown Guide](https://www.markdownguide.org/basic-syntax/%23blockquotes-1)
* [Become a bash scripting pro - full course - YouTube](https://www.youtube.com/watch?v%3D4ygaA_y1wvQ)
* [Computer Networking For LANs To WANs: Hardware, Software And security](http://libgen.rs/book/index.php?md5%3DA5D01C0792398CF7CD53977AFA32A2B2) Groups book
* [Dash Documentation & User Guide | Plotly](https://dash.plotly.com/)
* [Dev](https://chat.openai.com/c/c41a9650-39c9-4976-ac60-7ee9b054e3da)
* [Erlang in 100 Seconds - YouTube](https://www.youtube.com/watch?v%3DM7uo5jmFDUw)
* [Every programming language explained in 15 minutes | Prime Reacts - YouTube](https://www.youtube.com/watch?v%3DjQiYW3RXkFU)
* [ForSyDe | A Methodology for Formal System Design](https://forsyde.github.io/)
* [Gleam](https://gleam.run/)
* [How Lisp Became God's Own Programming Language](https://twobithistory.org/2018/10/14/lisp.html)
* [How to Design a Network Messaging Protocol! - YouTube](https://www.youtube.com/watch?v%3DkH7P1ZX44DQ)
* [How to Write a Linux Daemon from Start to Finish! - YouTube](https://www.youtube.com/watch?v%3D9nDYYc_7sKs)
* [Kubernetes Primer: Fundamentals - Chetan Bhasin](https://chetanbhasin.com/articles/kubernetes-primer-fundamentals)
* [Lambda - Haxe - The Cross-platform Toolkit](https://haxe.org/manual/std-Lambda.html)
* [Learn Backend Development the Fun Way | Boot.dev](https://www.boot.dev/)
* [Learn Emacs Lisp in 30 Minutes - YouTube](https://www.youtube.com/watch?v%3D1y__2IK-aLM)
* [Library Genesis: Alberto Pettorossi - Techniques for Searching, Parsing, and Matching](https://libgen.is/book/index.php?md5%3D2784D2D9DF8E02BFA17558101113F5CD)
* [Library Genesis: Andreas M. Antonopoulos, David A. Harding - Mastering Bitcoin: Programming the Open Blockchain](http://libgen.rs/book/index.php?md5%3D89C551A4BE0DDE91D90110C199597E5C)
* [Library Genesis: Andrew S. Tanenbaum, David J. Wetherall, D. Maggiorini (editor), S. Gaito (editor) - Reti di calcolatori. Ediz. Mylab. Con aggiornamento online. Con ebook](http://libgen.rs/book/index.php?md5%3D9219C1ECD26808B82C69E8642F43A00E)# Untitled
* [Library Genesis: Bruno R. Preiss - Lexical Analysis and Parsing using C++](https://libgen.is/book/index.php?md5%3DD20D37C0D1FB9076D518DF519162B7B4)
* [Library Genesis: Bunt Harry, Nijholt Anton (auth.), Harry Bunt, Anton Nijholt (eds.) - Advances in Probabilistic and Other Parsing Technologies](https://libgen.is/book/index.php?md5%3D21B83325AF2B2A3829615464C136E3CE)
* [Library Genesis: Bunt, Harry C(Editor);Merlo, Paola(Editor);Nivre, Joakim(Editor) - Trends In Parsing Technology: Dependency Parsing, Domain Adaptation, And Deep Parsing (Text, Speech And Language Technology)](https://libgen.is/book/index.php?md5%3D1B1B9F8CF07980C83FB25A6E20AD5B0C)
* [Library Genesis: Carlo Milanesi - Creative Projects for Rust Programmers: Build exciting projects on domains such as web apps, WebAssembly, games, and parsing](https://libgen.is/book/index.php?md5%3D623BEC88FB2B2FD627860A706828E8F4)
* [Library Genesis: Charles N. Fischer, Ron K. Cytron, Richard J. LeBlanc - Crafting A Compiler](https://libgen.rs/book/index.php?md5%3D3F7B11BCB59C91689586976AA9977305)
* [Library Genesis: Christian Wagenknecht, Michael Hielscher (auth.) - Formale Sprachen, abstrakte Automaten und Compiler: Lehr- und Arbeitsbuch für Grundstudium und Fortbildung](https://libgen.rs/book/index.php?md5%3D8AB97826A959A37179203BCB94BBF28D)
* [Library Genesis: Dick Grune, Ceriel J.H. Jacobs - Parsing Techniques. A practical Guide](https://libgen.is/book/index.php?md5%3D926AD9324EC0FFA2D2EB46B5628E3C7D)
* [Library Genesis: Greg L. Turnquist - Learning Spring Boot 3.0: Simplify the development of production-grade applications using Java and Spring, 3rd Edition](http://libgen.rs/book/index.php?md5%3D9953E1F476F1CE364CC84F0EAC717EE0)
* [Library Genesis: James F. Kurose; Ángel Pérez de Madrid y Pablo; Carolina Mañoso Hierro; Keith W. Ross; Vuelapluma S.A. - Redes de computadoras: un enfoque descendente](http://libgen.rs/book/index.php?md5%3D4C4AFAC6E258C45AD9D31A148526BCB7)
* [Library Genesis: Jeuring J., Swierstra D. - Grammars and parsing](https://libgen.is/book/index.php?md5%3D4986B6B30293A96D1436D7BA1C80CCDB)
* [Library Genesis: Juha Hinkula - Full Stack Development with Spring Boot 3 and React: Build modern web applications using the power of Java, React, and TypeScript](http://libgen.rs/book/index.php?md5%3DE861A87D02E5B82C064DC1D72BDD8546)
* [Library Genesis: K. Siva Prasad Reddy, Sai Upadhyayul - Beginning Spring Boot 3](http://libgen.rs/book/index.php?md5%3D83AC75188F58A8D90B790CB7BD7C7290)
* [Library Genesis: Keith W. Ross James F. Kurose - Reti di calcolatori e internet. Un approccio top-down. Con aggiornamento online](http://libgen.rs/book/index.php?md5%3D075135A61CB90748F2014D59F181F3D3)
* [Library Genesis: Magnus Larsson - Microservices with Spring Boot 3 and Spring Cloud: Build resilient and scalable microservices [Team-IRA] (True PDF)
* [Library Genesis: Mark Heckler - Spring Boot: Cloud-native Anwendungen mit Java und Kotlin erstellen](http://libgen.rs/book/index.php?md5%3DC99B527E7AB5F96BCCBF1C2C9665AA96)
* [Library Genesis: Mark Heckler - Spring Boot: Up and Running - Building Cloud Native Java and Kotlin Applications](http://libgen.rs/book/index.php?md5%3D920B718A05F31B275CB39F0B323D7361)
* [Library Genesis: Melanie Swan - Blockchain: Blueprint for a New Economy](http://libgen.rs/book/index.php?md5%3DB95D1E4464D572D397F0F60C47553391)
* [Library Genesis: Moisés Macero García, Tarun Telang - Learn Microservices with Spring Boot 3: A Practical Approach Using Event-Driven Architecture, Cloud-Native Patterns, and Containerization](http://libgen.rs/book/index.php?md5%3D543C996C0AA16F9F7977975E81C93F02)
* [Library Genesis: SOURABH SHARMA - Modern API Development with Spring 6 and Spring Boot 3: Design scalable, viable, and reactive APIs with REST, gRPC, and GraphQL](http://libgen.rs/book/index.php?md5%3DC91B962A5E4D8E5027DA678E2094EE71)
* [Library Genesis: Somnath Musib - Spring Boot in Practice](http://libgen.rs/book/index.php?md5%3DFEE6FB20329F9A1DE12C72712E0A6818)
* [Library Genesis: Thomas Vitale - Cloud Native Spring in Action with Spring Boot And Kubernetes](http://libgen.rs/book/index.php?md5%3DDBDD55CEAFC37000741371636011782D)
* [Library Genesis: Thomas Vitale - Cloud Native Spring in Action: With Spring Boot and Kubernetes](http://libgen.rs/book/index.php?md5%3DE956A2261695849B83AE41AD386D6D87)
* [Library Genesis: it-ebooks - Parsing Techniques A Practical Guide](https://libgen.is/book/index.php?md5%3DF90FC0FC737EB67CD983861028D7B380)
* [Library Genesis: Марк Хеклер - Spring Boot по-быстрому](http://libgen.rs/book/index.php?md5%3D379F73AB35B38CA578B0E033F6EBB657)
* [Library Genesis](https://libgen.rs/search.php?%26req%3Dcompiler%26phrase%3D1%26view%3Dsimple%26column%3Ddef%26sort%3Dyear%26sortmode%3DDESC)
* [Mastering Memory: Allocation Techniques in C, C++, and ARM Assembly - YouTube](https://www.youtube.com/watch?v%3DHlUBE70h2C0)
* [Modular Mathematics Series](http://libgen.is/search.php?req%3Dmodular%2Bmathematics%2Bseries%26open%3D0%26res%3D25%26view%3Dsimple%26phrase%3D1%26column%3Ddef) Mathematical Linguistics
* [Parsing TeX into mathematics](https://libgen.is/book/index.php?md5%3D8A3560286D25DA895E17387406FEA865) Теория катигорий для программиста.pdf
* [Rapid Learning for the 21st Century](http://www.troubleshooters.com/bookstore/rl21.htm)
* [Resultados de búsqueda - Google Drive](https://drive.google.com/drive/search?q%3DMathematical%2520Linguistics)
* [Rules of Readability - Spring 2024 - YouTube](https://www.youtube.com/watch?v%3DlIIOrbYlRmU)
* [S-Lang Programmer's Library](https://www.jedsoft.org/slang/)# Untitled
* [SoccerFun: Football simulation framework for teaching functional programming](https://hackage.haskell.org/package/SoccerFun)
* [Svelte UI Libraries Have Leveled Up - YouTube](https://m.youtube.com/watch?v%3DjwRqiCv6Z9k)**
* [Unisay/purescript-lua: Purescript compiler back-end for Lua](https://github.com/Unisay/purescript-lua)
* [WHY IS THE STACK SO FAST? - YouTube](https://www.youtube.com/watch?v%3DN3o5yHYLviQ)
* [forsyde-shallow: ForSyDe's Haskell-embedded Domain Specific Language.](https://hackage.haskell.org/package/forsyde-shallow)
* [bestofjs.org](https://bestofjs.org)
* [blog.logrocket.com/using-dioxus-rust-build-single-page-apps/](https://blog.logrocket.com/using-dioxus-rust-build-single-page-apps/)
* [blog.miguelgrinberg.com/post/microdot-yet-another-python-web-framework](https://blog.miguelgrinberg.com/post/microdot-yet-another-python-web-framework)
* [blog.yoshuawuyts.com/extending-rusts-effect-system/](https://blog.yoshuawuyts.com/extending-rusts-effect-system/)
* [conservatory.scheme.org/schemers/Documents/Standards/R5RS/HTML/](https://conservatory.scheme.org/schemers/Documents/Standards/R5RS/HTML/)
* [dev.epicgames.com/documentation/en-us/uefn/verse-language-reference](https://dev.epicgames.com/documentation/en-us/uefn/verse-language-reference)
* [dev.to/bravinsimiyu/30-best-web-development-frameworks-for-2023-a-comprehensive-guide-512i](https://dev.to/bravinsimiyu/30-best-web-development-frameworks-for-2023-a-comprehensive-guide-512i)
* [discord.com/channels/834325286664929280/877900210297270272/1205164792327831623](https://discord.com/channels/834325286664929280/877900210297270272/1205164792327831623)
* [duckduckgo.com/?q=best](https://duckduckgo.com/?q%3Dbest) framework for a small web service with user authentification and online payment&ko=-1&ia=web
* [fasterthanli.me/series/building-a-rust-service-with-nix/part-10#setting-up-direnv-and-nix-direnv](https://fasterthanli.me/series/building-a-rust-service-with-nix/part-10%23setting-up-direnv-and-nix-direnv)
* [kushall09/the-art-of-command-line](https://github.com/kushall09/the-art-of-command-line)
* [savedra1/clipse](https://github.com/savedra1/clipse)
* [gleam.run/](https://gleam.run/)
* [libgen.rs/book/index.php?md5=7F9996F3FFAC4C7429BF8013D8BA2D59](https://libgen.rs/book/index.php?md5%3D7F9996F3FFAC4C7429BF8013D8BA2D59) Interpreter in Go
* [libgen.rs/book/index.php?md5=AB2EF57DCAAED64759B089E71BFDB58D](https://libgen.rs/book/index.php?md5%3DAB2EF57DCAAED64759B089E71BFDB58D) Compiler in Go
* [libgen.rs/search.php?req=architecture+of+open-source&lg_topic=libgen&open=0&view=simple&res=25&phrase=1&column=def](https://libgen.rs/search.php?req%3Darchitecture%2Bof%2Bopen-source%26lg_topic%3Dlibgen%26open%3D0%26view%3Dsimple%26res%3D25%26phrase%3D1%26column%3Ddef)
* [lisp-journey.gitlab.io/blog/oh-no-i-started-a-magit-like-plugin-for-the-lem-editor/](https://lisp-journey.gitlab.io/blog/oh-no-i-started-a-magit-like-plugin-for-the-lem-editor/)
* [matklad.github.io/2023/03/26/zig-and-rust.html](https://matklad.github.io/2023/03/26/zig-and-rust.html)
* [matklad.github.io/2023/03/26/zig-and-rust.html](https://matklad.github.io/2023/03/26/zig-and-rust.html)
* [opensource.com/article/20/11/cockpit-server-management](https://opensource.com/article/20/11/cockpit-server-management)
* [opensource.stackexchange.com/questions/10644/why-did-google-make-chromium-open-source](https://opensource.stackexchange.com/questions/10644/why-did-google-make-chromium-open-source)
* [pkl-lang.org/blog/introducing-pkl.html](https://pkl-lang.org/blog/introducing-pkl.html)
* [risingstars.js.org/2023/es](https://risingstars.js.org/2023/es)
* [vadimkravcenko.com/shorts/why-software-projects-fail/](https://vadimkravcenko.com/shorts/why-software-projects-fail/)
* [wiki.archlinux.org/title/Environment_variables](https://wiki.archlinux.org/title/Environment_variables)
* [wordsandbuttons.online/the_real_cpp_killers.html](https://wordsandbuttons.online/the_real_cpp_killers.html)
* [atlassian.com/git](https://www.atlassian.com/git)
* [freecodecamp.org/news/learn-app-development-with-spring-boot-3/](https://www.freecodecamp.org/news/learn-app-development-with-spring-boot-3/)
* [freecodecamp.org/news/learn-typescript-for-practical-projects](https://www.freecodecamp.org/news/learn-typescript-for-practical-projects)
* [heise.de/news/Der-Generator-fuer-Programmiersprachen-Langium-wird-schneller-und-schlanker-9649361.html](https://www.heise.de/news/Der-Generator-fuer-Programmiersprachen-Langium-wird-schneller-und-schlanker-9649361.html)
* [heise.de/news/Kotlin-macht-Ernst-mit-der-plattformuebergreifenden-Programmierung-9352485.html](https://www.heise.de/news/Kotlin-macht-Ernst-mit-der-plattformuebergreifenden-Programmierung-9352485.html)
* [heise.de/news/Python-3-13-Endlich-effizienteres-Multithreading-ohne-Global-Interpreter-Lock-9655663.html](https://www.heise.de/news/Python-3-13-Endlich-effizienteres-Multithreading-ohne-Global-Interpreter-Lock-9655663.html)
* [modular.com/blog/how-to-be-confident-in-your-performance-benchmarking](https://www.modular.com/blog/how-to-be-confident-in-your-performance-benchmarking)
* [modular.com/newsletters/modverse-weekly-27](https://www.modular.com/newsletters/modverse-weekly-27)
* [modular.com/newsletters](https://www.modular.com/newsletters)
* [r/functionalprogramming/s/fnze9msZuk](https://www.reddit.com/r/functionalprogramming/s/fnze9msZuk) Nevalang
* [r/functionalprogramming/s/mk8sFg1O8I](https://www.reddit.com/r/functionalprogramming/s/mk8sFg1O8I) Python x Rust
* [shuttle.rs/blog/2024/01/18/parsing-json-rust](https://www.shuttle.rs/blog/2024/01/18/parsing-json-rust)
* [hyprwm/hyprlang: The official implementation library for the hypr config language.](https://github.com/hyprwm/hyprlang)
* [kotlin](https://www.heise.de/news/Kotlin-macht-Ernst-mit-der-plattformuebergreifenden-Programmierung-9352485.html)
* [markdown-guide/_basic-syntax/horizontal-rules.md at master · mattcone/markdown-guide](https://github.com/mattcone/markdown-guide/blob/master/_basic-syntax/horizontal-rules.md)
* [programming languages - Is LISP still useful in today's world? Which version is most used? - Software Engineering Stack Exchange](https://softwareengineering.stackexchange.com/questions/55284/is-lisp-still-useful-in-todays-world-which-version-is-most-used)
* [psychology of computer programming at DuckDuckGo](https://duckduckgo.com/?q%3Dpsychology%2Bof%2Bcomputer%2Bprogramming%26ia%3Dweb)
* [ts vs js](https://blog.logrocket.com/typescript-vs-purescript-not-all-compilers-are-created-equal-c16dadaa7d3e/)
* bash  [The Confusion With Linux Shells - YouTube](https://www.youtube.com/watch?v%3D6FHd-rBM2Mc)
* bash  [dylanaraps/pure-bash-bible: 📖 A collection of pure bash alternatives to external processes.](https://github.com/dylanaraps/pure-bash-bible)
* bash [Xargs Explained - YouTube](https://www.youtube.com/watch?v%3DHK1wAV9x4-A)
* create pomodoro widget for ags
* dash  [dash/dash.git - DASH Shell](https://git.kernel.org/pub/scm/utils/dash/dash.git)
* go [Go is Surprisingly Easy - YouTube](https://www.youtube.com/watch?v%3DE7pxGyEcPNI)
* humor [unixprogram.com/churchofbsd/](https://www.unixprogram.com/churchofbsd/)
* idris [Idris 2: Quantitative Types in Action - Edwin Brady - YouTube](https://www.youtube.com/watch?v%3D0uA-tKR6Ah4)
* js lib books21138741 Wcm 2 JAVASCRIPT Hav 24.01.2024 HHaverbeke, Marijn: JavaScript14220338 Wcg 2 Schmid 24.01.2024 HSchmidt, Maik: Raspberry Pi17205142 Wcg 2 Rueh 24.01.2024 HRühmer, Dennis Pa...: Heimserver mit Raspberry und Banana Pi21177628 Wcm 2 JAVASCRIPT Hor 24.01.2024 HHorstmann, Cay: JavaScript für Ungeduldige15204636 Wcr 7 Glit 24.01.2024 HGlitschka, Von: Basistraining Vektorgrafik19372488 Wcg 2 Kofl 24.01.2024 HKofler, Michael ...: Raspberry Pi19133390 Wcm 2 JAVA Bloc 24.01.2024 HBloch, Joshua: Effective Java01218680 80 Pael 24.01.2024 HDie Pälzer Biwel20367667 Wcm 2 KOTLIN Szwi 24.01.2024 HSzwillus, Karl: Kotlin21216567 Wcm Meye 24.01.2024 HMeyer, Uwe: Grundkurs Compilerbau
* lisp [CLHS: Chapter Index](https://www.lispworks.com/documentation/lw50/CLHS/Front/Contents.htm)
* lisp [Let's make a scripting language using parser combinators in rust - YouTube](https://www.youtube.com/watch?v%3DSfIIxUXRv1Y)
* lisp [Lisp Tutorial - YouTube](https://www.youtube.com/watch?v%3DymSq4wHrqyU%26t%3D115s)
* lisp [cisco.github.io/ChezScheme/](https://cisco.github.io/ChezScheme/)
* lisp [cisco/ChezScheme](https://github.com/cisco/ChezScheme)
* lisp [kspalaiologos/kamilalisp](https://github.com/kspalaiologos/kamilalisp)
* lisp [gnu.org/software/guile/learn/](https://www.gnu.org/software/guile/learn/)
* lisp [r/lisp/s/9gAplgnn9d](https://www.reddit.com/r/lisp/s/9gAplgnn9d) Nyxt to Surf
* lua [Lua Functional Programming/Functions - Wikibooks, open books for an open world](https://en.wikibooks.org/wiki/Lua_Functional_Programming/Functions)
* lua etc  [hengestone/lua-languages: Languages that compile to Lua](https://github.com/hengestone/lua-languages)
* nickel [tweag/nickel/blob/master/RATIONALE.md](https://github.com/tweag/nickel/blob/master/RATIONALE.md)
* nickel [nickel-lang.org/](https://nickel-lang.org/)
* nickel[tweag.io/blog/tags/nickel/](https://www.tweag.io/blog/tags/nickel/)
* perl [Library Genesis: Christopher M. Frenz - Pro Perl Parsing](https://libgen.is/book/index.php?md5%3DF50693F2889EA9C33724592E75D98DF3)
* perl [Library Genesis: Moritz Lenz - Parsing with Perl 6 Regexes and Grammars. A Recursive Descent into Parsing](https://libgen.is/book/index.php?md5%3DC6761CAA2ACF8FD63AB2CC42E5B26011)
* perl [Pearls of Perl: Top 10 Perl Tools & Utilities - ActiveState](https://www.activestate.com/blog/top-10-perl-tools-and-utilities/)
* perl [The Top 10 Programming Tasks That Perl Is Used For - By ActiveState](https://www.activestate.com/blog/top-10-programming-tasks-that-perl-is-used-for/)
* prog prog prog prog prog prog prog prog [DioxusLabs/dioxus](https://github.com/DioxusLabs/dioxus)
* purescript [A Working Stiff's Guide to PureScript](https://reaktor.github.io/purescript-workshop/%23/)
* purescript [High-level overview of PureScript - DEV Community](https://dev.to/zelenya/high-level-overview-of-purescript-37lf)
* purescript [Introduction - PureScript by Example](https://book.purescript.org/chapter1.html)
* purescript [Recommended Tooling for PureScript in 2022 - Chat - PureScript Language Forum](https://discourse.purescript.org/t/recommended-tooling-for-purescript-in-2022/3206)
* purescript [Stack Builders - A Look at PureScript - Part I](https://www.stackbuilders.com/blog/a-look-at-purescript-part-i/)
* purescript [The Prim Module.purs - PureScript: Jordan's Reference](https://jordanmartinez.github.io/purescript-jordans-reference-site/content/11-Syntax/01-Basic-Syntax/src/01-Preliminary-Concepts/03-The-Prim-Module-ps.html)
* purescript [TypeScript vs. PureScript - LogRocket Blog](https://blog.logrocket.com/typescript-vs-purescript-not-all-compilers-are-created-equal-c16dadaa7d3e/)
* purescript [laurentpayot/purescript-for-elm-developers: PureScript crash course targeted at Elm developers](https://github.com/laurentpayot/purescript-for-elm-developers%23readme)
* purescript [purescript blog](https://www.stackbuilders.com/blog/a-look-at-purescript-part-i/)
* purescript [purescript book](https://book.purescript.org/chapter1.html)
* purescript [purescript workshop](https://reaktor.github.io/purescript-workshop/%23/)
* purescript [tooling for ps](https://discourse.purescript.org/t/recommended-tooling-for-purescript-in-2022/3206)
* py  [How do I run all Python unit tests in a directory? - Stack Overflow](https://stackoverflow.com/questions/1732438/how-do-i-run-all-python-unit-tests-in-a-directory)
* py [r/Python/s/wOUoSboBHy](https://www.reddit.com/r/Python/s/wOUoSboBHy) uv: Python packaging
* py js [kovidgoyal/rapydscript-ng: A transpiler for a Python like language to JavaScript](https://github.com/kovidgoyal/rapydscript-ng)
* py rust [baincapitalventures.com/insight/why-more-python-developers-are-using-rust-for-building-libraries/](https://baincapitalventures.com/insight/why-more-python-developers-are-using-rust-for-building-libraries/)
* rust [libgen.rs/search.php?req=code+rust+like+a+pro&lg_topic=libgen&open=0&view=simple&res=25&phrase=1&column=def](https://libgen.rs/search.php?req%3Dcode%2Brust%2Blike%2Ba%2Bpro%26lg_topic%3Dlibgen%26open%3D0%26view%3Dsimple%26res%3D25%26phrase%3D1%26column%3Ddef)
* top-class thread: [discord](https://discord.com/channels/834325286664929280/877900210297270272/1205164792327831623)
* zig [thenewstack.io/introduction-to-zig-a-potential-heir-to-c/](https://thenewstack.io/introduction-to-zig-a-potential-heir-to-c/)
* zip [How (memory) safe is zig?](https://www.scattered-thoughts.net/writing/how-safe-is-zig/)
* [Where does GCC look to find its header files?](https://commandlinefanatic.com/cgi-bin/showarticle.cgi?article=art026)
* FP discussion [r/functionalprogramming/s/mvp30BfqJW](https://www.reddit.com/r/functionalprogramming/s/mvp30BfqJW)
* [thenewstack.io/dev-news-vite-rust-ifies-roc-language-js-framework-sdks/](https://thenewstack.io/dev-news-vite-rust-ifies-roc-language-js-framework-sdks/)
* [Category:Programming language concepts - Wikipedia](https://en.wikipedia.org/wiki/Category:Programming_language_concepts)
* [Getting started - Command Line Applications in Rust](https://rust-cli.github.io/book/index.html)
* [Golang for Python Devs - CodeRed](https://www.coderedcorp.com/blog/golang-for-python-devs/)
* [Introduction to Python Threads](http://troubleshooters.com/codecorn/python/threads_intro.htm)
* [Introdução à programação em Julia](https://juliaintro.github.io/JuliaIntroBR.jl/)
* [John Scholes - APL Wiki](https://aplwiki.com/wiki/John_Scholes)
* [Laurence Tratt: Dynamically Typed Languages](https://tratt.net/laurie/research/pubs/html/tratt__dynamically_typed_languages/)
* [Laurence Tratt: Selected publications](https://tratt.net/laurie/research/pubs/)
* [Linters and formatters — Essential Python Tools 3.7 documentation](https://books.agiliq.com/projects/essential-python-tools/en/latest/linters.html)
* [On Lisp](https://sep.turbifycdn.com/ty/cdn/paulgraham/onlisp.pdf?t%3D1688221954%26)
* [On Understanding Types, Data Abstraction, and Polymorphism](http://lucacardelli.name/Papers/OnUnderstanding.A4.pdf)
* [Programming language - Wikipedia](https://en.wikipedia.org/wiki/Programming_language)
* [Template:Data types - Wikipedia](https://en.wikipedia.org/wiki/Template:Data_types)
* [The Rust Programming Language - The Rust Programming Language](https://doc.rust-lang.org/book/title-page.html)
* [Type Systems.fm - TypeSystems.pdf](http://lucacardelli.name/Papers/TypeSystems.pdf)
* [...](https://tratt.net/laurie/research/pubs/html/tratt__dynamically_typed_languages/)
* [Types and Programming Languages - Wikipedia](https://en.wikipedia.org/wiki/Types_and_Programming_Languages)
* [Typing — pysheeet](https://www.pythonsheets.com/notes/python-typing.html)
* [Usage instructions for pypi-command-line - pypi-command-line](https://wasi-master.github.io/pypi-command-line/usage/)
* [Welcome! — Python for designers](https://pythonfordesigners.com/)
* [Why Rust is the most admired language among developers - The GitHub Blog](https://github.blog/2023-08-30-why-rust-is-the-most-admired-language-among-developers/)
* [Writing an OS in Rust](https://os.phil-opp.com/)
* [pubs.opengroup.org/onlinepubs/9699919799/](https://pubs.opengroup.org/onlinepubs/9699919799/)
* [thenewstack.io/dev-news-vite-rust-ifies-roc-language-js-framework-sdks/](https://thenewstack.io/dev-news-vite-rust-ifies-roc-language-js-framework-sdks/)
* [r/functionalprogramming/s/CbVacarWdY](https://www.reddit.com/r/functionalprogramming/s/CbVacarWdY) functional and typing
* [juliaintro](https://juliaintro.github.io/JuliaIntroBR.jl/)
* [lincc-frameworks/python-project-template: LINCC Frameworks scaffolding for Python project best practices](https://github.com/lincc-frameworks/python-project-template)
* [redas24/idiomatic.js: Principles of Writing Consistent, Idiomatic JavaScript](https://github.com/redas24/idiomatic.js)
* [tqdm/tqdm: :zap: A Fast, Extensible Progress Bar for Python and CLI](https://github.com/tqdm/tqdm)
* [xkcd: Python Environment](https://xkcd.com/1987/)
* bücher19133390 Wcm 2 JAVA Bloc 24.11.2023 HBloch, Joshua: Effective Java10031889 Oel 5 Lang 24.11.2023 HLangenscheidt Taschenwörterbuch...19112688 Tdk Sigg 24.11.2023 HSigg, Timm: Grundlagen der Differenzialgleichunge...20391708 15 Garc 24.11.2023 HGarcía Márquez, G...: Cien anos de soledad13056508 Oel 2 Meye 24.11.2023 HMeyer, Thomas: Grund- und Aufbauwortschatz Griechisch21177628 Wcm 2 JAVASCRIPT Hor 24.11.2023 HHorstmann, Cay: JavaScript für Ungeduldige21218611 Oem 5 Lang 24.11.2023 HLangenscheidt Taschenwörterbuch Latein22102016 Mcl 1 Csik 24.11.2023 HCsikszentmihalyi,...: Flow20367667 Wcm 2 KOTLIN Szwi 24.11.2023 HSzwillus, Karl: Kotlin16123449 Tcn Jaen 24.11.2023 HJänich, Klaus: Lineare Algebra19340869 Mcl 1 Hamm 24.11.2023 HHammer, Matthias: Micro Habits08099468 17 Prim 24.11.2023 HPrima lectio15283163 Tcn Raes 24.11.2023 HRäsch, Thoralf: Lineare Algebra II21138741 Wcm 2 JAVASCRIPT Hav 24.11.2023 HHaverbeke, Marijn: JavaScript
* [coding-challenge.lighthouselabs.ca/register](https://coding-challenge.lighthouselabs.ca/register)
* [no-kill-switch.ghost.io/building-dev-muscle-memory-with-code-kata/](https://no-kill-switch.ghost.io/building-dev-muscle-memory-with-code-kata/)
* [codementor.io/@christianmaioli/how-to-learn-coding-faster-by-applying-neuroscience-celdoytxf](https://www.codementor.io/@christianmaioli/how-to-learn-coding-faster-by-applying-neuroscience-celdoytxf)
* [Принципы разработки программных пакетов. Проектирование повторно используемых компонентов](http://library.lol/main/ADD5CB84843511D677798284EE5820BF)
* [Классические задачи Computer Science на языке Python [2020] Копец Дэвид.pdf](https://vk.com/doc44301783_521365060?hash=32c3e8834fede775a3&dl=32441f13b559c7e753)
* [Классические задачи Computer Science на языке Java [2022] Копец Дэвид.pdf](https://vk.com/doc44301783_619642230?hash=cd855f7862d948a6b9&dl=ba47a9b04dc827b669)
* [Дисциплина программирования [1976]](https://vk.com/doc44301783_619172935?hash=8a46dac62269db80fe&dl=a252fd882723d481f1)
* [Начала программирования [2011]](https://vk.com/doc44301783_619172590?hash=607121b73b5074d54e&dl=89bcef477b9146d64b)
* [Призрак в сети. Мемуары величайшего хакера [2012]](https://vk.com/doc576778753_562289049?hash=2651774fb2774f30f1&dl=55a07d6c78996bc69e)
* [Информационная безопасность - защита и нападение](https://vk.com/doc576778753_562289040?hash=54f8fab4606100f011&dl=12f4ed7d9c87ce77f8)
* [Организационное и правовое обеспечение информационной безопасности](https://vk.com/doc576778753_562289047?hash=1c9f355a85495edff7&dl=152189c26942dbfbca)
* [Steven S. Skiena, Miguel A. Revilla. Programming Challenges](https://vk.com/doc44301783_618719347?hash=5c379dec6a7dd3ea53&dl=3167b7eced693b63d7)
* [Брайан Керниган, Роб Пайк. Практика программирования.pdf](https://vk.com/doc44301783_618719382?hash=86f8a67f99808c6bbe&dl=651d08c399c1216898)
* [Regular Expressions Pocket Primer [2018] Oswald Campesato.pdf](https://vk.com/doc44301783_618904655?hash=763184e38e08300a1b&dl=fae15036d0e64757c4)
* [Регулярные выражения 3-е изд [2018] Джеффри Фридл.pdf](https://vk.com/doc44301783_618904684?hash=5f150feeb8878c5dcc&dl=544aa070346b714e12)
* [Регулярные выражения. Основы [2015] Майкл Фицджеральд.pdf](https://vk.com/doc44301783_618904693?hash=933ab129d6fb7a0fb7&dl=a54e2d2d0cc3724f47)
* [Регулярные выражения. Сборник рецептов [2015]](https://vk.com/doc44301783_618904728?hash=e97776590a674b614f&dl=7b3ec4dc2d67e2984d)
* [Чисто функциональные структуры данных [2016]](https://vk.com/doc44301783_616300906?hash=c3f39124dd7f9de4bf&dl=873cddb4d5fd82ca70)
* [Идеальная архитектура](https://vk.com/doc44301783_609557508?hash=e401fc02733f9d35e4&dl=77c46ee4ee4cb98e53)
* [[Head First. Паттерны проектирования](https://vk.com/doc44301783_616748609?hash=428fffe0936863d835&dl=f3fa0acba679d50691)
* [video](https://www.youtube.com/c/codigofacilito/playlists)
* [video](https://www.youtube.com/c/DobricaPavlinu%C5%A1i%C4%87/playlists)
* [video](https://www.youtube.com/c/Alphorm/playlists)
* [Онлайн-курс "Основи тестування програмного забезпечення](https://www.youtube.com/watch?v=reNfzQtbZF0&list=PLxp0a3ulkwKfYXSo7GVrNeRftZ5NwnxJ2)
* [Code strukturieren](https://www.youtube.com/watch?v=X4-sbLIEC1s)
* [use for MWEs: Branchless Programming: Why "If" is Sloowww... and what we can do about it!](https://youtu.be/bVJ-mWWL7cE)
* [the native web GmbH](https://youtube.com/c/thenativewebGmbH)
* [docker](http://libgen.rs/book/index.php?md5=1863B22A56C3E8E85D9C9786F46BFCEB)
* [GitHub - thenativeweb/techlounge-docker: techlounge-docker contains the samples for the free tech:lounge video course on Docker.](https://github.com/thenativeweb/techlounge-docker)
* [Психологія в IT](https://youtube.com/playlist?list=PLOwnXSCq7AoHlzIWWrso_-UVMn0Fub_Ru)
* [Colin Galen](https://youtube.com/c/ColinGalen)
* [b-ok.cc/s/No%20Starch%20Press](https://b-ok.cc/s/No%20Starch%20Press)
* [book4you.org/s/Pragmatic%20Bookshelf](https://book4you.org/s/Pragmatic%20Bookshelf)
* [<--](https://github.com/jwasham/coding-interview-university)
* [cacher.io/pricing](https://www.cacher.io/pricing)
* [freecodecamp.org/news/quincy-larson-interview-changelog-podcast/](https://www.freecodecamp.org/news/quincy-larson-interview-changelog-podcast/)
* [freecodecamp.org/news/quincy-larson-5-links-worth-your-time-email-full-list/](https://www.freecodecamp.org/news/quincy-larson-5-links-worth-your-time-email-full-list/)
* [freecodecamp.org/news/how-i-used-a-side-project-to-land-a-job/](https://www.freecodecamp.org/news/how-i-used-a-side-project-to-land-a-job/)
* [SICP Course](https://ru.hexlet.io/courses/sicp/lessons/sicp_procedures_as_abstractions/theory_unit)
* [Software Development Interview Quesitons | EDUCBA Resources](https://www.educba.com/category/software-development/software-development-tutorials/top-interview-question/)
* [UML Basics – Build Smart. Build Secure. IBM Developer](https://developer.ibm.com/series/uml-basics/)
* [Call for Code: Technology mini-series – Build Smart. Build Secure. IBM Developer](https://developer.ibm.com/series/call-for-code-technology-mini-series/)
* [bigocheatsheet.com](http://bigocheatsheet.com/)
* [bigocheatsheet.com](http://bigocheatsheet.com/)
* [en.wikipedia.org/wiki/Programming_language](https://en.wikipedia.org/wiki/Programming_language)
* [zhubert.com/blog/2015/06/01/refactoring/](https://www.zhubert.com/blog/2015/06/01/refactoring/)
* [grokbase.com/groups](https://grokbase.com/groups)
* [learnxinyminutes.com/](https://learnxinyminutes.com/)    The True Value of Coding: It Teaches You to Think Differently - YouTube
* [Programming](https://www.youtube.com/watch?v=G0wuG9Zac3Q&list=PLVWtXi_Jrj_14rUJDWFEvyhOmYF2JdHmk)
* [taitems/nearest-color](https://github.com/taitems/nearest-color)    A Control Definition Language (Fisher)
* [Вебинраы о языках программирования](https://vk.com/wall-178774705_17)    The Art of the Metaobject Protocol
* [EbookFoundation/free-programming-books/blob/master/free-programming-books.md](https://github.com/EbookFoundation/free-programming-books/blob/master/free-programming-books.md)
* [hashnode.com/series/codeml-basics-ckc5niuu000eakss1b9xa872z**](https://hashnode.com/series/codeml-basics-ckc5niuu000eakss1b9xa872z**)
* [Rosetta Code](http://www.rosettacode.org/wiki/Rosetta_Code)
* [Github yelircaasi](https://github.com/yelircaasi)
* [gist.github.com/yelircaasi](https://gist.github.com/yelircaasi)
* [Free tutorials to learn C, SQL, Java programming](https://fresh2refresh.com/)
* [syncfusion.com/ebooks/solidprinciplessuccinctly](https://www.syncfusion.com/ebooks/solidprinciplessuccinctly)
* [thautwarm.github.io/Site-32/index.html](https://thautwarm.github.io/Site-32/index.html)
* [Tutorials | DigitalOcean](https://www.digitalocean.com/community/tutorials)
* [Sweet Setup](https://thesweetsetup.com/)
* [console.paperspace.com/](https://console.paperspace.com/)
* [docs.repl.it/tutorials/00-overview](https://docs.repl.it/tutorials/00-overview)
* [repl.it/](https://repl.it/)
* [beginnersbook.com/](https://beginnersbook.com/)
* [What's a Creel?](https://www.youtube.com/c/WhatsACreel)
* [Bashtop (GitHub Repo)](https://github.com/aristocratos/bashtop)
* [Understanding How to Transform Your Economic Value Curve](https://www.newsletter.datasciencecentral.com/click.html?x=a62e&lc=uLX&mc=j&s=jFaI&u=F&y=B&z=wysrWCw&)
* [Why Economics Is the Most Empowering Innovation Concept +](http://datascience.getresponse360.com/click.html?x=a62e&lc=u9J&mc=j&s=jFaI&u=F&y=V&z=wvkl3p&)
* [Code Review Tips](https://andrewking.ca/2020/01/how-to-do-high-bar-code-review-without-being-a-jerk/)
* [Чёртова дюжина ошибок начинающего программиста](https://geekbrains.ru/posts/chyortova-dyuzhina-oshibok-nachinayushchego-programmista)
* [Understanding How to Transform Your Economic Value Curve](https://www.datasciencecentral.com/profiles/blogs/understanding-how-to-transform-your-economic-value-curve)
* [culturesmile.org](http://www.culturesmile.org/)
* [Ask HN: What do top engineers you know do that others don't? | Hacker News](https://news.ycombinator.com/item?id=21870889)
* [Programming FAQ — documentation Python 3.6.3](https://docs.python.org/fr/3/faq/programming.html)
* [huffingtonpost.com/quora/learn-this-language-to-ma_b_7723828.html](https://www.huffingtonpost.com/quora/learn-this-language-to-ma_b_7723828.html)
* [medium.com/@vitalik/%D0%B5%D1%80%D0%B0-%D1%82%D0%B5%D1%85%D0%BD%D0%BE%D0%BA%D1%80%D0%B0%D1%82%D1%96%D1%97-%D0%B0%D0%B1%D0%BE-%D1%87%D0%BE%D0%BC%D1%83-%D1%82%D0%B8%D0%B6%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D1%96%D1%81%D1%82-%D1%86%D0%B5-%D0%BF%D0%B5%D1%80%D0%B5%D0%BC%D0%BE%D0%B3%D0%B0-d92d842f7b9e](https://medium.com/@vitalik/%D0%B5%D1%80%D0%B0-%D1%82%D0%B5%D1%85%D0%BD%D0%BE%D0%BA%D1%80%D0%B0%D1%82%D1%96%D1%97-%D0%B0%D0%B1%D0%BE-%D1%87%D0%BE%D0%BC%D1%83-%D1%82%D0%B8%D0%B6%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D1%96%D1%81%D1%82-%D1%86%D0%B5-%D0%BF%D0%B5%D1%80%D0%B5%D0%BC%D0%BE%D0%B3%D0%B0-d92d842f7b9e)
* [medium.com/osweekends/hace-un-mes-comenc%C3%A9-a-estudiar-programaci%C3%B3n-mundo-completamente-desconocido-para-mi-y-del-que-mis-711b34cdc36c](https://medium.com/osweekends/hace-un-mes-comenc%C3%A9-a-estudiar-programaci%C3%B3n-mundo-completamente-desconocido-para-mi-y-del-que-mis-711b34cdc36c)    Schaum's Outline of Software Engineering ( David Gustafson ). McGraw-Hill 2002, Schaum Colection    Думай как программист: креативный подход к созданию кода (Спрол Антон)    Scrum. Революционный метод управления проектами, Джефф Сазерленд (2016)    Ремесло программиста. Практика написания хорошего кода (Гудлиф П.)
* [Оформление программного кода, А. В. Столяров (2019)

FIXME###  danistefanovic/build-your-own-x: 🤓 Build your own (insert technology here)

* [Computing with Data. An Introduction to the Data Industry.](https://www.abebooks.de/servlet/BookDetailsPL?bi=30531170284&cm_sp=SEARCHREC-_-WIDGET-L-_-BDP-R&searchurl=kn%3DComputing%2Bwith%2BData%26sortby%3D17)
* [From Nand to Tetris Part 1](https://youtube.com/playlist?list=PLrDd_kMiAuNmSb-CKWQqq9oBFN_KNMTaI)
* [From Nand to Tetris Part 2](https://youtube.com/playlist?list=PLrDd_kMiAuNmllp9vuPqCuttC1XL9VyVh)

* [buecher.de/shop/englische-buecher/the-elements-of-computing-systems/nisan-noamschocken-shimon/products_products/detail/prod_id/23304349/](https://www.buecher.de/shop/englische-buecher/the-elements-of-computing-systems/nisan-noamschocken-shimon/products_products/detail/prod_id/23304349/)
* [Concepts, techniques, and models of computer programming](http://library.lol/main/DB945BB2247838385EA4A7FC1EBA38F5)
* [Programmation : Concepts, techniques et modèles](http://library.lol/main/0D56FE10B972B21589F3ED9A3B3F25DE)
* [Scrum UA](https://vk.com/wall-55985842_18991)
* [Structure and Interpretation of Computer Programs: SICP (Coding Tech)](https://www.youtube.com/watch?v=f7s8_PGpVT0)
* [UC Berkeley CS 61A The Structure and Interpretation of Computer Programs, Spring 2010](https://www.youtube.com/watch?v=4leZ1Ca4f0g&list=PLhMnuBfGeCDNgVzLPxF9o5UNKG1b-LFY9)
* [codereport](https://github.com/codereport)
* [code_report](https://www.youtube.com/channel/UC1kBxkk2bcG78YBX7LMl9pQ)
* [codereport/SICP-2020](https://github.com/codereport/SICP-2020)
* [people.eecs.berkeley.edu/~bh/sicp.html](https://people.eecs.berkeley.edu/~bh/sicp.html)
* [Programming Paradigms for Dummies: What Every Programmer Should Know](https://www.info.ucl.ac.be/~pvr/VanRoyChapter.pdf)
* [info.ucl.ac.be/~pvr/cvvanroy.html](https://www.info.ucl.ac.be/~pvr/cvvanroy.html)
* [1 Problem, 16 Programming Languages (C++ vs Rust vs Haskell vs Python vs APL...)](https://www.youtube.com/watch?v=UVUjnzpQKUo)
* [freecodecamp.org/news/aws-certified-cloud-practitioner-certification-study-course-pass-the-exam/](https://www.freecodecamp.org/news/aws-certified-cloud-practitioner-certification-study-course-pass-the-exam/)
* [10 Amazing Developer Tools and Tips](https://youtu.be/wIIQlkyTP_I)
* [freecodecamp.org/news/what-is-infrastructure-as-code/](https://www.freecodecamp.org/news/what-is-infrastructure-as-code/)
* [freecodecamp.org/news/advanced-git-interactive-rebase-cherry-picking-reflog-and-more/](https://www.freecodecamp.org/news/advanced-git-interactive-rebase-cherry-picking-reflog-and-more/)
* [Computing with Data. An Introduction to the Data Industry.](https://www.abebooks.de/servlet/BookDetailsPL?bi=30531170284&cm_sp=SEARCHREC-_-WIDGET-L-_-BDP-R&searchurl=kn%3DComputing%2Bwith%2BData%26sortby%3D17)
* [From Nand to Tetris Part 1](https://youtube.com/playlist?list=PLrDd_kMiAuNmSb-CKWQqq9oBFN_KNMTaI)
* [From Nand to Tetris Part 2](https://youtube.com/playlist?list=PLrDd_kMiAuNmllp9vuPqCuttC1XL9VyVh)
* [Guidelines for collaboration](https://github.com/SciML/ColPrac)
* [Software Project Survival Guide](http://library.lol/main/7A9256D6418E5D3E67C7F55D0014C414)
* [Code Complete](http://library.lol/main/649C8EEE28C38CA1E062691E45DC9883)
* [Kod doskonały. Jak tworzyć oprogramowanie pozbawione błędów](http://library.lol/main/0263B253ECE9F789989F127844F510EC)    Seth Godin lizard brain (talk)
* [Soft Skills. The Software Developer's Life Manual](http://library.lol/main/C4F27D7FE389148D78C5C350581D1429)
* [http://library.lol/main/76E9CCF61C1947992F35ABDDD0DE3EDD)
* [Good API Design](https://github.com/preslavmihaylov/booknotes/tree/master/architecture/good-api-design-jb-talk)
* [invenia/BlueStyle](https://github.com/invenia/BlueStyle)
* [camel.readthedocs.io/en/latest/yamlref.html](https://camel.readthedocs.io/en/latest/yamlref.html)
* [hitchdev.com/strictyaml/](https://hitchdev.com/strictyaml/)
* [code.visualstudio.com/docs/remote/containers](https://code.visualstudio.com/docs/remote/containers)
* [GPGPU Talk](https://youtu.be/0rEOjih_hps)
* [medium.com/coders-mojo/70-amazing-github-repos-for-all-the-developers-part-2-11a40e8c049c](https://medium.com/coders-mojo/70-amazing-github-repos-for-all-the-developers-part-2-11a40e8c049c)
* [medium.com/coders-mojo/70-amazing-github-repos-for-all-the-developers-part-1-181ecfbdf233](https://medium.com/coders-mojo/70-amazing-github-repos-for-all-the-developers-part-1-181ecfbdf233)
* [ziglang.org/](https://ziglang.org/)

* [freecodecamp.org/news/best-tech-podcasts-for-software-developers/](https://www.freecodecamp.org/news/best-tech-podcasts-for-software-developers/)
* [freecodecamp.org/news/how-to-get-things-done-lessons-in-productivity/](https://www.freecodecamp.org/news/how-to-get-things-done-lessons-in-productivity/)
* [freecodecamp.org/news/how-to-get-your-first-freelancing-client-project/](https://www.freecodecamp.org/news/how-to-get-your-first-freelancing-client-project/)
* [freecodecamp.org/news/from-hackathon-to-cto-in-3-years/](https://www.freecodecamp.org/news/from-hackathon-to-cto-in-3-years/)
* [freecodecamp.org/news/model-view-architecture/](https://www.freecodecamp.org/news/model-view-architecture/)
* [freecodecamp.org/news/what-is-an-api-and-how-to-test-it/](https://www.freecodecamp.org/news/what-is-an-api-and-how-to-test-it/)
* [freecodecamp.org/news/whats-fuzzing-fuzz-testing-explained/](https://www.freecodecamp.org/news/whats-fuzzing-fuzz-testing-explained/)
* [stackshare.io/posts/top-developer-tools-2020](https://stackshare.io/posts/top-developer-tools-2020)
* [stackshare.io/posts/top-developer-tools-2020](https://stackshare.io/posts/top-developer-tools-2020)
* [freecodecamp.org/news/20-award-winning-games-explained-code-breakdown/](https://www.freecodecamp.org/news/20-award-winning-games-explained-code-breakdown/)
* [freecodecamp.org/news/tech-talks-software-development-conferences/](https://www.freecodecamp.org/news/tech-talks-software-development-conferences/)
* [freecodecamp.org/news/how-my-musical-training-helped-me-learn-how-to-code/](https://www.freecodecamp.org/news/how-my-musical-training-helped-me-learn-how-to-code/)
* [Unity Tutorial Deutsch / German (Crashkurs)](https://youtube.com/playlist?list=PL_pqkvxZ6ho1g_e56fct7Cm6bgQBhmAqN)
* [medium.mybridge.co/12-free-resources-learn-to-code-while-playing-games-f7333043de11](https://medium.mybridge.co/12-free-resources-learn-to-code-while-playing-games-f7333043de11)
* [The Navigator's Guide to DigitalOcean](https://waves.digitalocean.com/n/Ms0N070aDvw2t00iS0AT0i0)
* [Cloud Computing Basics (Cloud 101) | Coursera](https://www.coursera.org/learn/cloud-computing-basics)
* [Explore | FloydHub](https://www.floydhub.com/explore/templates)
* [freecodecamp.org/news/freecodecamp-2020/](https://www.freecodecamp.org/news/freecodecamp-2020/)
* [projecteuler.chat/viewtopic.php?f=12&t=2636](https://projecteuler.chat/viewtopic.php?f=12&t=2636)
* [projecteuler.net/archives](https://projecteuler.net/archives)
* [youtube.com/c/Codemycom](https://youtube.com/c/Codemycom)
* [b-ok.cc/g/Neal%20Ford (Software Architecture)](https://b-ok.cc/g/Neal%20Ford)
* [digitalocean.com/community/tutorials](https://www.digitalocean.com/community/tutorials)
* [quora.com/q/become-a-great-programmer/My-team-and-I-interview-hundreds-of-developers-and-designers-every-year-Through-this-I-ve-noticed-that-many-of-the-bes?ch=99&share=c2e58263](https://www.quora.com/q/become-a-great-programmer/My-team-and-I-interview-hundreds-of-developers-and-designers-every-year-Through-this-I-ve-noticed-that-many-of-the-bes?ch=99&share=c2e58263)
* [stackoverflow.com/questions/10376923/reading-non-ascii-characters-from-a-text-file](https://stackoverflow.com/questions/10376923/reading-non-ascii-characters-from-a-text-file)
* [freecodecamp.org/news/what-i-learned-from-building-my-first-solo-project/](https://www.freecodecamp.org/news/what-i-learned-from-building-my-first-solo-project/)
* [history of silicon valley: free download. Ebooks library. On-line books store on Z-Library](https://b-ok.cc/s/history%20of%20silicon%20valley)
* [link.springer.com/search?facet-series=%22558%22&facet-content-type=%22Book%22](https://link.springer.com/search?facet-series=%22558%22&facet-content-type=%22Book%22)
* [Marijn's Web Home](https://marijnhaverbeke.nl/)
* [stylewarning.com/posts/quantum-interpreter/](https://www.stylewarning.com/posts/quantum-interpreter/)
* [The Tragedy of systemd](https://www.youtube.com/watch?app=desktop&v=o_AIw9bGogo)
* [Transistor 1953 Documentary](https://www.youtube.com/watch?app=desktop&v=V9xUQWo4vN0)
* [theregister.com/AMP/2023/02/10/googles_go_programming_language_telemetry_debate/](https://www.theregister.com/AMP/2023/02/10/googles_go_programming_language_telemetry_debate/)
* [Linux Audio Explained (ALSA vs PulseAudio vs JACK vs Pipewire Explained)](https://www.youtube.com/watch?app=desktop&v=HxEXMHcwtlI)
* [ublue.it/making-your-own/](https://ublue.it/making-your-own/)
* [r/linuxmemes/comments/v4nl8x/listening_to_the_kernels_soul/](https://www.reddit.com/r/linuxmemes/comments/v4nl8x/listening_to_the_kernels_soul/)
* [distrowatch.com/index-mobile.php](https://distrowatch.com/index-mobile.php)
* [anvaka.github.io/map-of-github/#2/0/0](https://anvaka.github.io/map-of-github/#2/0/0)
* [readme/featured/how-open-is-open-source](https://github.com/readme/featured/how-open-is-open-source)
* [command line - chsh -s /usr/bin/zsh not working - Ask Ubuntu](https://askubuntu.com/questions/195361/chsh-s-usr-bin-zsh-not-working)
* [How Silicon Valley Became Silicon Valley (And Why Boston Came In Second) — Brian Manning](https://www.briancmanning.com/blog/2019/4/7/how-silicon-valley-became-silicon-valley)
* [Google will FORCE Ads on You - YouTube](https://www.youtube.com/watch?v=oQL9dVsEXT0)
* [The Valley of My Dreams: Why Silicon Valley Left Boston's Route 128 In The Dust | TechCrunch](https://techcrunch.com/2009/10/31/the-valley-of-my-dreams-why-silicon-valley-left-bostons-route-128-in-the-dust/?guccounter=1&guce_referrer=aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS8&guce_referrer_sig=AQAAAIA5WaBNLWJjZlFzfmp09Zrc9sqTpxwHLaX-QSE41e5m5rh-6Gnx447HbvVra1UXP26xnmz0h1XSFpzh45yc_gKha9lFRc_P_TwTkDE9au5O5TnRT6RfOLzPc3h8xZNeXXi4-1Gz3K06jW37ZYB8DRIhQSp4A6jlmEkua9pbHdvz)
* [Boston’s Start-Ups Will Never Be Silicon Valley Cool](https://www.bostonmagazine.com/news/2020/02/28/boston-start-ups-cool-silicon-valley/)
* [cambridgeincolour.com/tutorials/image-interpolation.htm](https://www.cambridgeincolour.com/tutorials/image-interpolation.htm)
* [mo8it/How_To_Linux: A book for a Linux course](https://codeberg.org/mo8it/How_To_Linux)
* [Daniel J. Barrett books](http://libgen.rs/search.php?&req=daniel+barrett&phrase=1&view=simple&column=def&sort=year&sortmode=DESC)
* [lxr.linux.no/linux+v2.6.25.6/](https://lxr.linux.no/linux+v2.6.25.6/)
* [lxr.linux.no/linux+v2.6.12/](https://lxr.linux.no/linux+v2.6.12/)
* [lxr.linux.no/linux+v6.0.9/](https://lxr.linux.no/linux+v6.0.9/)
* [soundonsound.com/series/synth-secrets-sound-sound](https://www.soundonsound.com/series/synth-secrets-sound-sound)
* [SysVinit vs Systemd - YouTube](https://www.youtube.com/watch?v=Fz8Ldw-s8_Q)
* [A Visual Introduction to Inner-Workings of the JVM - Douglas Hawkins - YouTube](https://www.youtube.com/watch?v=JLFjY6Ixct8)
* [15 Years Writing C++ - Advice for new programmers - YouTube](https://www.youtube.com/watch?v=37VZu3b045k)
* [Linux Packaging Formats explained: Flatpak vs Snaps vs DEB & RPM vs AppImage vs AUR - YouTube](https://www.youtube.com/watch?v=1lLZ-59xH3Y&t=711s)
* [tb29greene.pdf](https://tug.org/TUGboat/tb11-3/tb29greene.pdf) BaSiX
* [OpenBSD Frequently Asked Questions](https://www.openbsd.org/faq/index.html)
* [Stack Overflow Developer Survey 2019](https://insights.stackoverflow.com/survey/2019#most-loved-dreaded-and-wanted)
* [Stack Overflow Developer Survey 2021](https://insights.stackoverflow.com/survey/2021#technology-most-loved-dreaded-and-wanted)
* [factoryfactoryfactory.net/](https://factoryfactoryfactory.net/)
* [How I over-engineered a Fast Fourier Transform for Arduino.](https://klafyvel.me/blog/articles/fft-arduino/)
* [> see links Creating Multilingual Developer Documentation: Best Practices for Localization and Translation | by Joanna Suau | Jun, 2023 | Bootcamp](https://bootcamp.uxdesign.cc/creating-multilingual-developer-documentation-best-practices-for-localization-and-translation-395f97afd5a9)
* [Programming’s Greatest Mistakes - Mark Rendle - NDC Copenhagen 2022 - YouTube](https://www.youtube.com/watch?v=qC_ioJQpv4E)
* [Writing a 6502 emulator in Python — Dailystuff on the Internet](https://dailystuff.nl/projects/writing-a-6502-emulator-in-python)
* [Making a game from scratch: Map generation - YouTube](https://www.youtube.com/watch?v=mMVjO2ti8Ys)
* [Clean Coders Hate What Happens to Your Code When You Use These Enterprise Programming Tricks - YouTube](https://www.youtube.com/watch?v=FyCYva9DhsI)
* [Introducing GitFlow](http://datasift.github.io/gitflow/IntroducingGitFlow.html)
* [**Linux and glibc API changes](https://man7.org/tlpi/api_changes/index.html)
* [freecodecamp.org/news/what-is-steganography-hide-data-inside-data/](https://www.freecodecamp.org/news/what-is-steganography-hide-data-inside-data/)
* [Pulse 15 - Gen2 - 15,6 inch WQHD 1440p + 100 % sRGB + AMD Ryzen 7 5700U + AMD Radeon Vega 8 Graphics + USB-C (DisplayPort 1.4 & Power Delivery) + max. 4 TB SSD + max. 64GB RAM - TUXEDO Pulse 15 - Gen2 - ANSI Keyboard only - TUXEDO Computers](https://www.tuxedocomputers.com/en/Linux-Hardware/Notebooks/15-16-inch/TUXEDO-Pulse-15-Gen2.tuxedo)
* [Debian 12 Bookworm Installation and First Look - YouTube](https://www.youtube.com/watch?v=omKFEhWJGYg)
* [An Introduction to Infrastructure and Application Monitoring](https://waves.digitalocean.com/n/dt0SA2gsv70Na00Twg000D0)
* [en.wikipedia.org/wiki/Business_models_for_open-source_software](https://en.wikipedia.org/wiki/Business_models_for_open-source_software)
* [vk.com/@php2all-knigi-po-programmirovaniu](https://vk.com/@php2all-knigi-po-programmirovaniu)
* [Cloud Computing Concepts, Part 1 | Coursera](https://www.coursera.org/learn/cloud-computing?ranMID=40328&ranEAID=JVFxdTr9V80&ranSiteID=JVFxdTr9V80-lATsHYmLbWtjEu0NgftWvQ&siteID=JVFxdTr9V80-lATsHYmLbWtjEu0NgftWvQ)
* [Basic Programming Concepts](https://msdn.microsoft.com/en-us/library/x2456k7z(v=vs.80).aspx)
* [exercism.io/](https://exercism.io/)
* [holowczak.com/programming-concepts-tutorial-programmers/](http://holowczak.com/programming-concepts-tutorial-programmers/)
* [rodrik.typepad.com/dani_rodriks_weblog/2007/06/what_does_a_dev.html](http://rodrik.typepad.com/dani_rodriks_weblog/2007/06/what_does_a_dev.html)
* [start-coding.de/](http://start-coding.de/)
* [Основи алгоритмізації та програмування. Збірник завдань | Саволюк А.П. | download](https://b-ok.cc/book/1144341/03eb8f)
* The 25 best programming books of all-time. A data-backed answer
* [30 Seconds of Code](https://www.30secondsofcode.org/list/p/1)
* [codecodex.com/wiki/Main_Page](http://www.codecodex.com/wiki/Main_Page)
* [codegolf.stackexchange.com/](https://codegolf.stackexchange.com/)
* [cs.opensource.google](https://cs.opensource.google/)
* [Aprenda a Pensar Como un Programador](https://argentinaenpython.com/quiero-aprender-python/aprenda-a-pensar-como-un-programador-con-python.pdf)
* [Языки программирования - просто о сложном - YouTube](https://www.youtube.com/watch?v=sytkQW7LZak)
* [Comparison of programming languages - Wikipedia](https://en.wikipedia.org/wiki/Comparison_of_programming_languages)
* [Informatik (Bücher)](https://b-ok.cc/s/informatik%20a-z)
* [Lexikon der Informatik](https://b-ok.cc/book/2034878/fa2dc4)
* [Computational thinking | MIT 18.S191 Fall 2020](https://www.youtube.com/playlist?list=PLP8iPy9hna6Q2Kr16aWPOKE0dz9OnsnIJ)
* [Languages - Python Wiki](https://wiki.python.org/moin/Languages)
* media.ccc.de - YouTube
* [David Giordana](https://www.youtube.com/c/DavidGiordana)
* [code.org/](https://code.org/)
* [de.wikipedia.org/wiki/The_Art_of_Computer_Programming](https://de.wikipedia.org/wiki/The_Art_of_Computer_Programming)
* [twit.tv/shows/coding-101](https://twit.tv/shows/coding-101)
* [Hacking: The Art of Exploitation | Jon Erickson | download](https://b-ok.cc/book/1053096/4eac6c?dsource=recommend)
* [Tecniche di Programmazione - Proff. L. Iocchi, D. Nardi, A. Pretto - YouTube](https://www.youtube.com/playlist?list=PLAQopGWlIcybv3YLRHGS4yZR00X3RvSBm)
* [The Basics: How Programming Works](https://msdn.microsoft.com/en-us/library/ms172579(v=vs.90).aspx)
* [Types and Programming Languages](https://b-ok.cc/book/764580/72fb14)
* [Advanced topics in types and programming languages](https://b-ok.cc/book/490535/9f7156)
* [Awesome Open Source](https://awesomeopensource.com/)
* [What are some things you wish you knew when you started programming?](https://www.quora.com/qemail/track_click?uid=L52Pc3XknCd&al_imp=eyJoYXNoIjogIjgzOTEzNjA0NzA2MTI4OTYzN3wxfDF8MjY5MDcwMTUiLCAidHlwZSI6IDMzfQ%3D%3D&aoid=qW1Xjm3a9Jj&request_id=839136047061289637&aoty=2&et=2&al_pri=QuestionLinkClickthrough&id=5NrceJSpwsWSZhF7KVo4cw%3D%3D&ct=1472258472659363&src=1&ty_data=bJJX3tQbrb6&ty=1&click_pos=1&st=1472258472659363&source=1&stories=1_bJJX3tQbrb6%7C1_13hsstT8ry1%7C1_aqOX7CgAp6B%7C1_RqHYHU7dSh%7C1_aKitAc8QSTa%7C1_4s9feIKmqEj%7C1_znq4rGgJ7Za%7C1_oocO7nBTWIr%7C1_R6fZ33jjJHx%7C1_3o3doYoe1vy&v=0&aty=4)
* [Most Popular and Influential Programming Languages of 2018](https://stackify.com/popular-programming-languages-2018/)
* [Programming paradigm - Wikipedia](https://en.wikipedia.org/wiki/Programming_paradigm)
* [What is there to programming?](https://www.reddit.com/r/learnprogramming/comments/ed7zyn/what_is_there_to_programming/)
* [Мастерство программирования](https://vk.com/@physics_math-masterstvo-programmirovaniya)
* [Becoming a Better Programmer: A Handbook for People Who Care About Code | Pete Goodliffe | download](https://b-ok.cc/book/2468842/e582a3)
* [programming-motherfucker.com/become.html](http://programming-motherfucker.com/become.html)
* [Desarrolladores Google - YouTube - YouTube](https://www.youtube.com/channel/UCeo-MamuQVFRcfQmS2N7fhw)
* [Desenvolvedores Google - YouTube - YouTube](https://www.youtube.com/user/GoogleDevBR)
* [Developpez.com, le club des développeurs et IT Pro](https://www.developpez.com/)
* [LEET CODE](https://leetcode.com/problemset/all/)
* [Брауде Э. - Технология разработки программного обеспечения. (Классика Computer Science) - 2004.djvu](https://vk.com/doc44301783_453645364?hash=e01d7efa8142617ea6&dl=a02724f349befd924d)
* [A community of great programmers and their programming tips](https://coderwall.com/)
* [Programming Languages Guides and Notes | Machine Learning, Deep Learning, and Computer Vision](http://www.ritchieng.com/programming-languages/)
* [Low-level programming language - Wikipedia](https://en.wikipedia.org/wiki/Low-level_programming_language)
* [EnterpriseQualityCoding/FizzBuzzEnterpriseEdition](https://github.com/EnterpriseQualityCoding/FizzBuzzEnterpriseEdition)
* [code.visualstudio.com/docs/?dv=osx](https://code.visualstudio.com/docs/?dv=osx)    Atom Docs
* [Production-Grade Container Orchestration - Kubernetes](https://kubernetes.io/)
* [тестировать API с помощью инструмента Postman.](http://l.geekbrains.ru/u/nrd.php?p=7CHG1cUjE5_244212_1744398_1_33&ems_l=2344886&i=1&d=ZGlnZXN0X2FjdF8wNjAzMjA%3D%7CZGlnZXN0cA%3D%3D%7CMTMwMDQyMjMx%7CN0NIRzFjVWpFNQ%3D%3D%7CMzM4ODkyMA%3D%3D%7C)
* [Docker in 10 minutes](https://www.newsletter.datasciencecentral.com/click.html?x=a62e&lc=u06&mc=j&s=jFaI&u=F&y=A&z=wNLYtiR&)
* [Web UI Development: Why Vue.js is the Idea Choice](https://www.newsletter.datasciencecentral.com/click.html?x=a62e&lc=ukv&mc=j&s=jFaI&u=F&y=s&z=wyMBlxj&)
* [A beginner’s guide to BigQuery Sandbox and exploring public datasets](https://www.newsletter.datasciencecentral.com/click.html?x=a62e&lc=uku&mc=j&s=jFaI&u=F&y=r&z=weA4Wpn&)
* [Kubernetes in 10 minutes](https://www.datasciencecentral.com/profiles/blogs/kubernetes-in-10-minutes)
* [catherineh.github.io/programming/2016/11/25/tkinter-and-pyside-side-by-side](https://catherineh.github.io/programming/2016/11/25/tkinter-and-pyside-side-by-side)
* [http://catherineh.github.io](http://catherineh.github.io/)    Qt vs Tinter vs Kivy
* [Parsing gigabyes of JSON per second in Go](https://www.datasciencecentral.com/profiles/blogs/simdjson-go-parsing-gigabyes-of-json-per-second-in-go)
* [Parsing gigabytes of JSON per second in Go](http://datascience.getresponse360.com/click.html?x=a62e&lc=usr&mc=j&s=jFaI&u=F&y=Y&z=wyzYl9W&)
* [Cloud Adoption: Myths Enterprises Must Steer Clear Of](http://datascience.getresponse360.com/click.html?x=a62e&lc=5wQ&mc=j&s=jFaI&u=F&y=z&z=wW9vSA6&)
* [Kubernetes and high performance object storage are tech's new building blocks](http://datascience.getresponse360.com/click.html?x=a62e&lc=usM&mc=j&s=jFaI&u=F&y=m&z=wFbHj8t&)
* [Deploying machine learning models using Agile](https://www.newsletter.datasciencecentral.com/click.html?x=a62e&lc=upx&mc=j&s=jFaI&u=F&y=M&z=wN9YTeT&)
* [Kubernetes in 10 minutes](https://www.newsletter.datasciencecentral.com/click.html?x=a62e&lc=upX&mc=j&s=jFaI&u=F&y=B&z=wFXSTpE&)
* [Contextual Design: Evolved](http://library.lol/main/FE753E52DD6220020E37CECFAD07B2A7)
* [Optimization of Process Flowsheets through Metaheuristic Techniques_José María Ponce-Ortega, Luis GMeartmjaážnMHiheernljá, nTdadeze-jPBéarjedz, Aleš Ude,_1st ed. 2019](http://link.springer.com/openurl?genre=book&isbn=978-3-319-91722-1)    Querying XML (Melton & Buxton)
* [Quick Start Guide to Verilog_Brock J. LaMeres_1st ed. 2019](http://link.springer.com/openurl?genre=book&isbn=978-3-030-10552-5)
* [Quick Start Guide to VHDL_Brock J. LaMeres_1st ed. 2019](http://link.springer.com/openurl?genre=book&isbn=978-3-030-04516-6)
* [Kubernetes Storage Patterns](http://datascience.getresponse360.com/click.html?x=a62e&lc=u9C&mc=j&s=jFaI&u=F&y=4&z=wlmI5fu&)
* [Apache Flink in 10 Minutes](http://datascience.getresponse360.com/click.html?x=a62e&lc=u9B&mc=j&s=jFaI&u=F&y=R&z=wwZLWSs&)
* [A definitive guide to Power BI](https://www.newsletter.datasciencecentral.com/click.html?x=a62e&lc=uL9&mc=j&s=jFaI&u=F&y=3&z=wlpI5m7&)
* [Question: Selecting forecasting methods using AvgRelMAE in Excel](https://www.newsletter.datasciencecentral.com/click.html?x=a62e&lc=uLd&mc=j&s=jFaI&u=F&y=C&z=wvPvtOr&)
* [Как устроена современная криптография](https://www.youtube.com/watch?v=GsU4TP-n8rg&feature=youtu.be)
* [simplilearn.com/hadoop-tutorial-article](https://www.simplilearn.com/hadoop-tutorial-article)
* [bookflow.ru/docker-spisok-komand-dlya-nachinayushhih/](https://bookflow.ru/docker-spisok-komand-dlya-nachinayushhih/)
* [learntospark.blogspot.com/2020/01/interpolation-using-apache-spark.html](https://learntospark.blogspot.com/2020/01/interpolation-using-apache-spark.html)
* [Blockchain for Fintech: now and tomorrow](https://www.newsletter.datasciencecentral.com/click.html?x=a62e&lc=u0V&mc=j&s=jFaI&u=F&y=l&z=wT8UXXD&)
* [2020 Challenge: Unlearn to Change Your Frame](https://www.newsletter.datasciencecentral.com/click.html?x=a62e&lc=u0D&mc=j&s=jFaI&u=F&y=S&z=wtEj8BN&)
* [The Internet Is Not What You Think It Is](https://justinehsmith.substack.com/p/the-internet-is-not-what-you-think)    ActiveState platform
* [zeromq.org/](https://zeromq.org/)
* [Step 2. Stop a Running Application - Real-Time Analytics with Spark Streaming](https://docs.aws.amazon.com/solutions/latest/real-time-analytics-spark-streaming/step2.html)
* [Learning Path: Kubernetes – Build Smart. Build Secure. IBM Developer](https://developer.ibm.com/series/kubernetes-learning-path/)    The Ultimate Hitchhiker’s Guide: Five Complete Novels and One Story    Snow Crash
* [Bazel Overview - Bazel](https://docs.bazel.build/versions/master/bazel-overview.html)
* [FuzzBench](https://github.com/google/fuzzbench)
* [Fuzzing - Wikipedia](https://en.wikipedia.org/wiki/Fuzzing)
* [Разработка компьютерных игр. Взгляд изнутри](https://www.youtube.com/watch?v=rgmtLEFCYuc&list=PL-_cKNuVAYAW-ZjP0-SLQt9revdbVTsFg)
* [Extract PDF comments into HTML](https://stackoverflow.com/questions/37311216/extract-pdf-comments-into-html)
* [antimander.org/](https://antimander.org/)
* [rangevoting.org/SplitLR.html](https://rangevoting.org/SplitLR.html)    The animated guide to blockchain (Explanimators: Episode 5) - YouTube
* [services.math.duke.edu/projects/gerrymandering/](https://services.math.duke.edu/projects/gerrymandering/)
* [Le bitcoin pour les nuls - Le Temps](https://www.letemps.ch/economie/2017/12/14/bitcoin-nuls)
* [Ricerca Operativa - prof. Massimo Roma - YouTube](https://www.youtube.com/playlist?list=PLAQopGWlIcyZankm1hHCSOdBilSGC3Svg)
* [Inkscape](https://wiki.inkscape.org/wiki/index.php/Release_notes/1.0)
* [Урок 21 Шифр Вернама](https://vk.com/video-16108331_456266508?list=791fc0fb257832d464)
* [en.wikipedia.org/wiki/Process-oriented_programming](https://en.wikipedia.org/wiki/Process-oriented_programming)
* [2. Битовые операции-вентиль Тоффоли, Фредкина, квантивые биты и их состояния, сфера Блоха](https://vk.com/video-51126445_456241154?list=0e88ca1edadb156a3f)
* [Real-Time Rendering 4th Edition [2019] Tomas Akenine-Möller.pdf](https://vk.com/doc44301783_515619511?hash=12e92b88abd94fe7e9&dl=ba0c2372d70865d612)    Программирование. теоремы и задачиАлександр Шень
* [Back to the metal: Top 3 Programming language to develop Big Data frameworks](https://towardsdatascience.com/back-to-the-metal-top-3-programming-language-to-develop-big-data-frameworks-in-2019-69a44a36a842)
* [How Do Game Engines Work?](https://interestingengineering.com/how-game-engines-work#:~:text=A%20game%20engine%20lays%20the,management%2C%20and%20many%20more%20options.)
* [laughingstack](https://github.com/inuitviking/laughingstack?files=1)    Mac OSX Directory Structure Explained
* [Speed up your Python using Rust](https://developers.redhat.com/blog/2017/11/16/speed-python-using-rust/)    What Is A Makefile?
* [Примитивные выражения, комбинирование и абстракция](https://www.youtube.com/watch?time_continue=187&v=Bv3QBzKGMJY&feature=emb_title)
* [numerical.recipes](http://numerical.recipes/)
* [Teorema de Laplace em C](https://www.blogcyberini.com/2017/09/teorema-de-laplace-em-c.html)
* [Teorema de Laplace em Java](https://www.blogcyberini.com/2013/11/algoritmo-teorema-de-laplace-em-java.html)
* [$ Generators and Iterators in Julia and Python - Erik Engheim - Medium](https://medium.com/@Jernfrost/generators-and-iterators-in-julia-and-python-6c9ace18fa93)
* [Fun Retrospectives](https://www.funretrospectives.com/)
* how does random number generation work?
* [r/programming/comments/eyx8e8/learning_about_kubernetes_and_istio_i_opensource/](https://www.reddit.com/r/programming/comments/eyx8e8/learning_about_kubernetes_and_istio_i_opensource/)
* [vatlab/markdown-kernel: A markdown kernel for Jupyter](https://github.com/vatlab/markdown-kernel)
* [$$$ XML large file split](https://stackoverflow.com/questions/700213/xml-split-of-a-large-file)
* [Library Genesis: Jarret Buse - EPUB From the Ground Up: A Hands-On Guide to EPUB 2 and EPUB 3](https://libgen.is/book/index.php?md5=482AAC21A553CF1B439962894A6ADCC0)
* [Khronos OpenGL® and OpenGL® ES Reference Pages - The Khronos Group Inc](https://www.khronos.org/registry/OpenGL-Refpages/)
* [OpenGL SDK](https://www.opengl.org/sdk/)
* [Self-replicating Python code | Quine](https://youtu.be/a-zEbokJAgY)
* [Enum classes in C](https://www.geeksforgeeks.org/enum-classes-in-c-and-their-advantage-over-enum-datatype/)    The Cathedral & The Bazaar by Eric Raymond if anyone's interested to learn more about open source
* [b-ok.cc/s/?q=Parallel+Computing&yearFrom=2012](https://b-ok.cc/s/?q=Parallel+Computing&yearFrom=2012)
* [Основы параллельного программирования | Богачев К.Ю. | download](https://b-ok.cc/book/2720888/529175)
* [parallella.org/2017/04/01/parallel-and-distributed-computing-with-lolcode/](https://www.parallella.org/2017/04/01/parallel-and-distributed-computing-with-lolcode/)
* [1.7 Recursive Functions](https://composingprograms.com/pages/17-recursive-functions.html)
* [web.stanford.edu/class/archive/cs/cs106b/cs106b.1132/handouts/14-Recursion.pdf](http://web.stanford.edu/class/archive/cs/cs106b/cs106b.1132/handouts/14-Recursion.pdf)
* [IDE alternatives for R programming (RStudio, IntelliJ IDEA, Eclipse, Visual Studio) - Data Science Stack Exchange](https://datascience.stackexchange.com/questions/5345/ide-alternatives-for-r-programming-rstudio-intellij-idea-eclipse-visual-stud)
* [Installation · Hydrogen](https://nteract.gitbooks.io/hydrogen/docs/Installation.html)
* [Docker for Sysadmins: Linux Windows VMware](https://b-ok.cc/book/2951654/546619)
* [Logo, PySpark, Google Tag Manager, Adobe InDesign, IFSC Code, SAP Workflow, Scipy, Angular 4, D3js, dcjs, Rich Faces, Spring Boot,SAP Hybris, FlexBox, Axure RP, OpenShift, Apache Bench, qTest, TestLodge, Power BI, Jython, Financial Accounting, Text and Vi](https://www.tutorialspoint.com/index.htm)
* [How to Deploy JupyterHub with Kubernetes on OpenStack](https://blog.jupyter.org/how-to-deploy-jupyterhub-with-kubernetes-on-openstack-f8f6120d4b1)
* [Finally, an IDE that does both Python and R well (Atom)](https://jstaf.github.io/2018/03/25/atom-ide.html)
* [emilengler/sysget: One package manager to rule them all](https://github.com/emilengler/sysget)
* [ray-project](https://github.com/ray-project)
* [sztupy/accentizer](https://github.com/sztupy/accentizer)
* [docs.manim.community/en/v0.3.0/](https://docs.manim.community/en/v0.3.0/)
* [17-hour Data Visualization course](https://www.freecodecamp.org/news/learn-data-visualization-in-this-free-17-hour-course/)    Oracle VirtualBox    Parallels Desktop    VMWare Fusion    Functional
* [Thoughts on Functional Programming Podcast by Eric Normand](https://castbox.fm/channel/id2369186)
* ["The Joy of Functional Programming (for Data Science)"](https://youtu.be/bzUmK0Y07ck)    OO
* [Goodbye, Object Oriented Programming - Charles Scalfani - Medium](https://medium.com/@cscalfani/goodbye-object-oriented-programming-a59cda4c0e53)
* [geeksforgeeks.org/object-oriented-programming-oops-concept-in-java/](https://www.geeksforgeeks.org/object-oriented-programming-oops-concept-in-java/)
* [geeksforgeeks.org/oops-object-oriented-design/](https://www.geeksforgeeks.org/oops-object-oriented-design/)    Предметно-ориентированные языки программирования. Мартин Фаулер
* [en.wikipedia.org/wiki/Object-oriented_programming](https://en.wikipedia.org/wiki/Object-oriented_programming)
* [Object-oriented programming - Wikipedia](https://en.wikipedia.org/wiki/Object-oriented_programming)
* [Object-Oriented Programming (OOP) in Python 3 – Real Python](https://realpython.com/python3-object-oriented-programming/)
* [projectfortress.sun.com/Projects/Community/blog/ObjectOrientedTailRecursion](http://projectfortress.sun.com/Projects/Community/blog/ObjectOrientedTailRecursion)
* [Лафоре Р. - Объектно-ориентированное программирование C++. 4-е изд. (Классика Computer Science) - 2004.pdf](https://vk.com/doc44301783_453645321?hash=e16446b06dedb8eed7&dl=ad9ea040ef44c7ef82)
* [Объектно-ориентированное программированирование](https://vk.com/videos-178774705?section=album_3)
* [Mastering JIRA: Gain expertise in tracking project issues and managing them efficiently using JIRA](http://library.lol/main/00A46A0E915A05CDE163C5322FFCBFE3)
* [Hands-On Agile Software Development with JIRA: Design and manage software projects using the Agile methodology](http://library.lol/main/2D47F2B385329434A21739089F2BE5A0)
* [Jira 8 Essentials : Effective Issue Management and Project Tracking with the Latest Jira Features, 5th Edition.](http://library.lol/main/8338F11AAFD7D456FF5948BCDFC04E06)
* [JIRA Development Cookbook](http://library.lol/main/A832D0A7E1C0A701E3AB2274531144AC)
* [Jira 8 Administration Cookbook](http://library.lol/main/C136E7A20F1C4602A9D9E72F0D5AC344)
* [artima.com/weblogs/viewpost.jsp?thread=331531](http://www.artima.com/weblogs/viewpost.jsp?thread=331531)
* [Nishan Boring repo](https://github.com/nishan-chatterjee/the-boring-repository)
* [Cloud resources](https://svai.gitbook.io/research-to-the-people/hacking-on-the-cloud/getting-set-up-on-google-cloud)    Cloud Computing: Concepts, Technology, Architecture    Cloud Computing For Dummies, 2nd Edition    Cloud Computing (Marinescu)    Cloud Computing (Ruparelia)    Data Science on AWS    tmux    tmux2    tmux Taster    Getting Started with tmux
* [aihub.cloud.google.com/p/products%2F28bd45d7-04f1-43ba-a231-15299cd57ac6](https://aihub.cloud.google.com/p/products%2F28bd45d7-04f1-43ba-a231-15299cd57ac6)    OpenVPN / Wireguard    AWS Student Tier    Github Education pack (student email)
* [analyticsindiamag.com/can-julia-be-the-new-python-heres-what-you-need-to-know/](https://www.analyticsindiamag.com/can-julia-be-the-new-python-heres-what-you-need-to-know/)
* [TIOBE Index | TIOBE - The Software Quality Company](https://www.tiobe.com/tiobe-index/)
* [These programming skills will earn you the most money — Quartz](https://qz.com/298635/these-programming-languages-will-earn-you-the-most-money/)
* [rigaux.org/language-study/syntax-across-languages.html#FnctnFnctCall](http://rigaux.org/language-study/syntax-across-languages.html#FnctnFnctCall)
* [datasciencecentral.com/profiles/blogs/shooting-yourself-in-the-foot-in-various-programming-languages](http://www.datasciencecentral.com/profiles/blogs/shooting-yourself-in-the-foot-in-various-programming-languages)
* [lextrait.com/vincent/implementations.html](http://www.lextrait.com/vincent/implementations.html)
* [rosetta.alhur.es/compare/Java/Python/#](http://rosetta.alhur.es/compare/Java/Python/#)
* [ritchieng.com/programming-languages/](http://www.ritchieng.com/programming-languages/)
* [en.wikipedia.org/wiki/Comparison_of_programming_languages](https://en.wikipedia.org/wiki/Comparison_of_programming_languages)
* [What's the difference between JavaScript and Java? - Stack Overflow](https://stackoverflow.com/questions/245062/whats-the-difference-between-javascript-and-java)
* [(1) Which programming languages are most useful to computational linguists? - Quora](https://www.quora.com/Which-programming-languages-are-most-useful-to-computational-linguists)
* [heise.de/ct/ausgabe/2015-18-Die-passende-Programmiersprache-finden-2767703.html](https://www.heise.de/ct/ausgabe/2015-18-Die-passende-Programmiersprache-finden-2767703.html)
* [Языки программирования - просто о сложном](https://www.youtube.com/watch?v=sytkQW7LZak)
* [codementor.io/codementorteam/beginner-programming-language-job-salary-community-7s26wmbm6](https://www.codementor.io/codementorteam/beginner-programming-language-job-salary-community-7s26wmbm6)
* [stackify.com/popular-programming-languages-2018/](https://stackify.com/popular-programming-languages-2018/)
* [qz.com/298635/these-programming-languages-will-earn-you-the-most-money/](https://qz.com/298635/these-programming-languages-will-earn-you-the-most-money/)
* [en.wikipedia.org/wiki/Non-English-based_programming_languages](https://en.wikipedia.org/wiki/Non-English-based_programming_languages)
* [en.wikipedia.org/wiki/Low-level_programming_language](https://en.wikipedia.org/wiki/Low-level_programming_language)
* [qz.com/298635/these-programming-languages-will-earn-you-the-most-money/](https://qz.com/298635/these-programming-languages-will-earn-you-the-most-money/)
* [stackify.com/popular-programming-languages-2018/](https://stackify.com/popular-programming-languages-2018/)
* [codementor.io/codementorteam/beginner-programming-language-job-salary-community-7s26wmbm6](https://www.codementor.io/codementorteam/beginner-programming-language-job-salary-community-7s26wmbm6)
* [heise.de/ct/ausgabe/2015-18-Die-passende-Programmiersprache-finden-2767703.html](https://www.heise.de/ct/ausgabe/2015-18-Die-passende-Programmiersprache-finden-2767703.html)
* [Design Patterns Elements of Reusable Object-Oriented Software](https://sophia.javeriana.edu.co/~cbustaca/docencia/DSBP-2018-01/recursos/Erich%20Gamma,%20Richard%20Helm,%20Ralph%20Johnson,%20John%20M.%20Vlissides-Design%20Patterns_%20Elements%20of%20Reusable%20Object-Oriented%20Software%20%20-Addison-Wesley%20Professional%20%281994%29.pdf)
* [Dev Tools - ActiveState Platform](https://platform.activestate.com/)
* [Éléments de programmation structurée | Jean Matte, Louis Villardier | download](https://b-ok.cc/book/2880266/a4de01)
* [Find the best online Programming courses and Tutorials - Hackr.io](https://hackr.io/)
* [Full Stack Tutorials | Edureka](https://www.youtube.com/playlist?list=PL9ooVrP1hQOGTHk2auXsk3cyqRBbbsQ6l)
* [Good Resource List](https://www.learneroo.com/modules/12/nodes/96)
* [Great HTML presentations:](https://github.com/hakimel/reveal.js)
* [How does one begin to tackle understanding a large open source code base? - Quora](https://www.quora.com/How-does-one-begin-to-tackle-understanding-a-large-open-source-code-base)
* [How to Contribute to Open Source | Open Source Guides](https://opensource.guide/how-to-contribute/)
* [How To Think Like A Programmer - YouTube](https://www.youtube.com/watch?v=azcrPFhaY9k)
* [How To Think Like A Programmer - YouTube](https://www.youtube.com/watch?v=azcrPFhaY9k)
* [loup-vaillant.fr/tutorials/from-imperative-to-functional](http://loup-vaillant.fr/tutorials/from-imperative-to-functional)
* [videolectures.net/Top/Computer_Science/](http://videolectures.net/Top/Computer_Science/)
* [a16z.com/](https://a16z.com/)
* [bookflow.ru/chto-programmistu-nuzhno-delat-dlya-sovershenstvovaniya-svoih-navykov/](https://bookflow.ru/chto-programmistu-nuzhno-delat-dlya-sovershenstvovaniya-svoih-navykov/)
* [console.paperspace.com/gradient](https://console.paperspace.com/gradient)
* [en.wikipedia.org/wiki/Generational_list_of_programming_languages](https://en.wikipedia.org/wiki/Generational_list_of_programming_languages)
* [en.wikipedia.org/wiki/Non-English-based_programming_languages](https://en.wikipedia.org/wiki/Non-English-based_programming_languages)
* [lehollandaisvolant.net/tuto/#divers](https://lehollandaisvolant.net/tuto/#divers)
* [medium.com/@kamranahmedse/modern-frontend-developer-in-2018-4c2072fa2b9c](https://medium.com/@kamranahmedse/modern-frontend-developer-in-2018-4c2072fa2b9c)
* [riptutorial.com/](https://riptutorial.com/)
* [cs.cmu.edu/~15110-n15/lectures/unit05-1-Recursion.pdf](https://www.cs.cmu.edu/~15110-n15/lectures/unit05-1-Recursion.pdf)
* [pdfdrive.com/programming-languages-books.html](https://www.pdfdrive.com/programming-languages-books.html)
* [hydrogen](https://atom.io/packages/hydrogen)
* [Introduction to Recursion](http://www.compsci.hunter.cuny.edu/~sweiss/course_materials/csci235/lecture_notes/chapter_02.pdf)
* [Jenkov Tutorials](http://tutorials.jenkov.com/)
* [JetBrains Account](https://account.jetbrains.com/licenses/assets)
* [MATLAB–Python–Julia cheatsheet — Cheatsheets by QuantEcon documentation](https://cheatsheets.quantecon.org/)
* [online text editor - collabedit](http://collabedit.com/)
* [Programiz: Learn to Code for Free](https://www.programiz.com/)
* [Programmer Competency Matrix | Sijin Joseph](http://sijinjoseph.com/programmer-competency-matrix/)
* [Programming Projects for Advanced Beginners | Robert Heaton](https://robertheaton.com/2018/12/08/programming-projects-for-advanced-beginners/)
* [Projects - CoCalc yelir_r_caasi2718](https://cocalc.com/projects?session=default)
* [Projects - Coder](https://coder.com/projects)
* [Say 'Hello World' in 28 Different Programming Languages - Excel with Business](https://excelwithbusiness.com/blog/say-hello-world-in-28-different-programming-languages/)
* [Scheme: Repl.it - ThisKhakiEvent](https://repl.it/repls/ThisKhakiEvent)
* [sindresorhus/KeyboardShortcuts: Add user-customizable global keyboard shortcuts to your macOS app in minutes](https://github.com/sindresorhus/KeyboardShortcuts)
* [Slack | general | rosettacode](https://app.slack.com/client/T0CNUL56D/C0CNR53GF)
* [Starting an Open Source Project | Open Source Guides](https://opensource.guide/starting-a-project/)
* [Startseite – ProgrammingWiki](https://programmingwiki.de/Startseite)
* [TLDR Archives](https://www.tldrnewsletter.com/archives)
* [Training Material](https://training-course-material.com/training/Main_Page)
* [yelircaasi - ActiveState Platform](https://platform.activestate.com/yelircaasi)
* [База знаний - Knowledge base](https://maximgorbatyuk.gitbook.io/knowledge-base/)
* [Сонмез Джон Путь программиста (2016).pdf](https://vk.com/doc44301783_480806049?hash=593ef83f0c3720790b&dl=624bfb9e4f27c1ab34)
* Intro to Comp Thinking
* [Dani Rodrik's weblog: What does a development professional need to know?](http://rodrik.typepad.com/dani_rodriks_weblog/2007/06/what_does_a_dev.html)    From Mathematics to Generic Programming
* [Manning books](https://b-ok.cc/s/Manning%20Publications/?yearFrom=2020)
* Wicked Cool Shell Scripts: 101 Scripts for Linux, OS X, and UNIX Systems | Dave Taylor, Brandon Perry | download
* [Learn X in Y Minutes: Scenic Programming Language Tours](https://learnxinyminutes.com/)
* [Home - The Art of Better Programming](https://artofbetterprogramming.com/)
* [Programming Challenges: The Programming Contest Training Manual | Steven S. Skiena, Miguel Revilla | download](https://b-ok.cc/book/465324/b75edb)
* 212Codexpedia
* [Sebastian Laguè](https://www.youtube.com/c/SebastianLague)
* [DIY Guides - Open Sourcerer](http://opensourcerer.diy.org/challenge/3)
* [CodeCodex](http://www.codecodex.com/wiki/Main_Page)
* [Computer Languages History](https://www.levenez.com/lang/)
* [DCP](https://github.com/search?utf8=%E2%9C%93&q=Daily+Coding+Problem&type=)
* [Programming — Amit Saha: Technical Writings](http://echorand.me/site/notes/programming.html)
* [Rosetta Code](http://rosettacode.org/wiki/Rosetta_Code)
* [mashable.com/2015/12/05/learning-to-code/#XWtiYvcxaSq9](https://mashable.com/2015/12/05/learning-to-code/#XWtiYvcxaSq9)
* [opensource.guide/](https://opensource.guide/)
* [uthcode/learntosolveit: Learn How to Solve a problem using your favorite programming language.](https://github.com/uthcode/learntosolveit)
* [Programming Languages — Learn To Solve It](http://www.learntosolveit.com/)
* [uthcode/learntosolveit](https://github.com/uthcode/learntosolveit)
* [edureka!](https://www.youtube.com/user/edurekaIN)
* [freecodecamp.org/news/what-is-git-learn-git-version-control/](https://www.freecodecamp.org/news/what-is-git-learn-git-version-control/)
* [freecodecamp.org/news/boost-programming-skills-read-git-code/](https://www.freecodecamp.org/news/boost-programming-skills-read-git-code/)
* [coursera.org/courses?query=github](https://www.coursera.org/courses?query=github)
* [danielmiessler.com/study/git/](https://danielmiessler.com/study/git/)
* [kbroman.org/github_tutorial/](https://kbroman.org/github_tutorial/)
* [opentechschool.github.io/github-from-scratch/](http://opentechschool.github.io/github-from-scratch/)
* [Git Magic - Preface](https://crypto.stanford.edu/~blynn/gitmagic/)
* [OpenTechSchool – Social Coding with GitHub](http://opentechschool.github.io/social-coding/)
* [Thank You for Downloading GitKraken | Axosoft GitKraken](https://www.gitkraken.com/download/mac)
* [first-contributions/README.md at master · firstcontributions/first-contributions](https://github.com/firstcontributions/first-contributions/blob/master/README.md)
* [First Contributions](https://firstcontributions.github.io/)
* [Github Docs](https://docs.github.com/en)
* [r/learnprogramming/comments/envzsa/learn_git_with_us_using_the_multiplayer_git/](https://www.reddit.com/r/learnprogramming/comments/envzsa/learn_git_with_us_using_the_multiplayer_git/)
* [Creating a pull request - GitHub Help](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-a-pull-request)
* [fabriziocucci/git-bash-for-mac: Git Bash for Mac](https://github.com/fabriziocucci/git-bash-for-mac)
* [Git - Book](https://git-scm.com/book/en/v2)
* [Git Cheat Sheet](https://education.github.com/git-cheat-sheet-education.pdf)
* [git server tutorial](https://www.linux.com/tutorials/how-run-your-own-git-server/)
* [GitHub - YouTube](https://www.youtube.com/GitHub)
* [github/hub: hub helps you win at git.](https://github.com/github/hub)
* [Hello World · GitHub Guides](https://guides.github.com/activities/hello-world/)
* [How the Heck Do I Use GitHub?](https://lifehacker.com/5983680/how-the-heck-do-i-use-github)
* [math.unipd.it/~aiolli/corsi/1213/aa/user_guide-0.12-git.pdf](http://www.math.unipd.it/~aiolli/corsi/1213/aa/user_guide-0.12-git.pdf)
* [git-scm.com/book/en/v2](https://git-scm.com/book/en/v2)
* [fabriziocucci/git-bash-for-mac](https://github.com/fabriziocucci/git-bash-for-mac)
* [github/hub](https://github.com/github/hub)
* [guides.github.com/](https://guides.github.com/)
* [guides.github.com/activities/hello-world/](https://guides.github.com/activities/hello-world/)
* [guides.github.com/features/mastering-markdown/](https://guides.github.com/features/mastering-markdown/)
* [help.github.com/articles/syncing-a-fork/](https://help.github.com/articles/syncing-a-fork/)
* [hub.github.com/](https://hub.github.com/)
* [lifehacker.com/5983680/how-the-heck-do-i-use-github](https://lifehacker.com/5983680/how-the-heck-do-i-use-github)
* [atlassian.com/git](https://www.atlassian.com/git)
* [atlassian.com/git/tutorials/install-git](https://www.atlassian.com/git/tutorials/install-git)
* [atlassian.com/git/tutorials/setting-up-a-repository](https://www.atlassian.com/git/tutorials/setting-up-a-repository)
* [atlassian.com/git/tutorials/what-is-version-control](https://www.atlassian.com/git/tutorials/what-is-version-control)
* [google.com/search?q=update+forked+repo+from+original&rlz=1C1GCEA_enUS779US779&oq=update+forked+repo++from+original&aqs=chrome..69i57.10167j0j7&sourceid=chrome&ie=UTF-8](https://www.google.com/search?q=update+forked+repo+from+original&rlz=1C1GCEA_enUS779US779&oq=update+forked+repo++from+original&aqs=chrome..69i57.10167j0j7&sourceid=chrome&ie=UTF-8)
* [sourcetreeapp.com/](https://www.sourcetreeapp.com/)
* [hub · the command-line wrapper for git](https://hub.github.com/)
* [Learn Git- Git tutorials, workflows and commands | Atlassian Git Tutorial](https://www.atlassian.com/git)
* [Sourcetree | Free Git GUI for Mac and Windows](https://www.sourcetreeapp.com/)
* [update forked repo from original - Buscar con Google](https://www.google.com/search?q=update+forked+repo+from+original&rlz=1C1GCEA_enUS779US779&oq=update+forked+repo++from+original&aqs=chrome..69i57.10167j0j7&sourceid=chrome&ie=UTF-8)    CMD+K - commit    CMD+D - diff    CMD+UPARROW+K = push
* [$$$The beginner’s guide to contributing to a GitHub project – Rob Allen's DevNotes](https://akrabat.com/the-beginners-guide-to-contributing-to-a-github-project/)
* [Discover how to migrate from SVN to Git](https://email.axosoft.com/e2t/tc/VWTcC_5KZXsfVvYGsW7zSr5VW5g6HvJ4gXmvtN8_nRFX3p_8SV1-WJV7CgRN-W687rzv8vQWgxVy6hjd3cCNs0W7STRD85KJqfqW66Hbl24S9xXfW7-Kk1L8MsTwHW27vbgm4dR1C_W8FYRmv24M5G6Vxp5_b5MvL5cVTb7dW5vv3rgW1gzWhf2-p37hN6Ttc8D24S3dW2m3Gqc4CHnjZW7M4VjR5SzW4qW3kQGDg7Ry23-W4VhvKp7bqWB1W1Kxmy96-jCWsN3MFH2T56H-TN5_k6GFLLMRtW7XH3kp14wDLkN3nWs0XrHN-XV3NRqB3qyfrkW7kHTDP93L1Js3nJY1)
* [Gitflow](https://blog.axosoft.com/gitflow/)
* [Token authentication requirements for Git operations](https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/)
* [Git Tutorials | Learn Git](https://www.gitkraken.com/learn/git/tutorials)
* [Watch this intermediate Git tutorial video](https://email.axosoft.com/e2t/tc/VW40Kg7y8YG_W8zLxPJ6NZ9pxW2QY3Nh4jjz8YN2z6H3c3p_9LV1-WJV7CgKHRW55FndK9cdwHyW10RWHw97yw6yW73F3XG2xDkdnW9c6dnR1zwcfGW8Kdm_B7ZsDYVV8CYwr7TD9V_VBSL-S7PP08yW916fpX7NS3mKW3nXbpT2TvqMDW5SMrrK8cSL0xW6mcc2C4ZptRRW5v5bqx5ZP_T8W60RRCH7C7tCBW3jbx0B2lpzf9W5Gz01C3G17nZW8nKSwP6bf-rmW4_nYxT70YMPzW7FYdbF61JXNWW3BRRlB5k_z29W7TlRL_2l5_4gW6FyXPN3-t93pW1v4pnG6S4H4XW4gy5qv1V-QVwW1FBGpG6-pKGjN86ML_b9m7rSW5_rTZB5q6XzDW7CSCMC9cpGMNW1S0rL372-rZn37sV1)
* [Local Mode](https://rasa.com/docs/rasa-x/installation-and-setup/install/local-mode/)
* [Oh-my-zsh, avoid the status check of a git repo](https://blog.42mate.com/oh-my-zsh-avoid-the-status-check-of-a-git-repo/)
* [gitkraken.com/learn/git/branch](https://www.gitkraken.com/learn/git/branch)
* [What is the best branching strategy for Git?](https://email.gitkraken.com/e2t/tc/VVnWVH6DRRBGW4XqnY_6-X0q2W89-nNw4n7PKQN4Tr4NV3p_9LV1-WJV7CgZlyW3xWfx97yjH7WW77b7TQ256H5FW20KPF73YnRhpW9184rC79Jl2ZN3dMZTXRcsFsW8Z34DF2y5ZzVW2wY-jF8wDtzYW98wkmD4z-S_rW7zzS-d8SrxNNW7m9hBg1NdSRkW5SY27q4xGMtBW377qgJ1VT6VXW2DCC1z2RPtlHN7XKc7Vy5WnZW4Z3kpQ7QDw0JW4nczT08-LY2rW8-S5CJ7Wfkk0N3ZpvCtTY7vkW6PdfVX5rC4fSN3r_JQ3wwwjrW70GWkX5kMLM1W1sFSX24pr4NzW7vmgH_7k_NyMW2p_3Sq7QK8skVbVN8Q6QH0FfW6zgZ0X12pkxrW5kYC7T7Sr7CMW2_mKL-8DJrbF3dwb1)
* [What is a remote repository?](https://email.gitkraken.com/e2t/tc/VVnWVH6DRRBGW4XqnY_6-X0q2W89-nNw4n7PKQN4Tr4NV3p_9LV1-WJV7CgQf5W8zCLJB6n2_GXW4LSRC75My9LGW9fxb6z242lzGW3KFybl5C1-MkW2kZ42M7XMHk-W35rhJ72Dt-zdW89V_hK5Cst9_W6mXmGq6VxrcxW2MW4Wv2-cRSZW9lMq424Vhnq7W1RpTt68TqyjBW2_Dz247JVvs-W78J03-8Qs78RW3FDdb97pjNpYW5tYYtC6c8dxfW8rryGw99yYpyW9dCgJM26x8c1W5RjVwL5nwzzkW3VhK-K4hP2D3W3Kkyd68zXP-DW6ByD4H5d8t5_W7hnwh_5tdMQZW815ZFH5QpdH7VJsTPg4fQlfpW8mFGfL3NM22WMSM5lDVJmP1W4t8Gbm6ZQ_kRW6fKby38WhpZR37JH1)
* [How do you pull a remote branch?](https://email.gitkraken.com/e2t/tc/VVnWVH6DRRBGW4XqnY_6-X0q2W89-nNw4n7PKQN4Tr4NV3p_9LV1-WJV7CgWRyW13TX3m2n2RXSW5TxLN21R4lP5W8dbdtH2sFLYJW6tsRxs6tsfKYW3DWrqC46Cs38W1q25xt1ptrskW4l-ygN6tvlxkW71thlt6RD15vW32kFQQ2ptZnCW7RWdsg7XVBbgW8zwvZ88tyLXTN93CRlwt9W9SW6T51Rc6PcklyW6-CBB4969mt7W6yj5kk1S2gJTW7glkrQ3r8VbdW2txvth1t8l--W5wTSGQ9c1W63VqMh3M3j8d3yW4tBC6R3smpw6VDr3ZK5BzzP0W872mVm1QmwnrW293V9p5SL6PSW5QfD747bH7w2W2NhR0365T9L6W2Nm6sy4RYNfhW2xZLrX2QfTlmW6KpgHh763dV03kx51)
* [How do you cherry pick in Git?](https://email.gitkraken.com/e2t/tc/VVnWVH6DRRBGW4XqnY_6-X0q2W89-nNw4n7PKQN4Tr4NB3p_9rV1-WJV7CgJ6PVbM38W7QzG-7F4Nf2kjv67cW27B8rh7J4lsRW13Wf4m8WTJ-QW227Dt874wYBmW7b-8jh5PCmYzW6ZZFcl634XCpW149X4q26PPcdW7YsrTp4vd6hvW5fVkDT7Vt1MkW6-Gvcv1LL3bgW9lSGX857KnSxW58y8Jd4GB137VQCyTc91c2vbW5g5rLZ6Yz11gW5Yj9TT1kbtN6W1hksx41ndPWsW8Y89nK7dG1DTW8w0yhG1w9JQgW4DQNdm83FvM6W1Q0gsj7l3qrgN248WDxbh8fZN4MCjZpQLHcvW6pNz5L5tjsYzW9646Xp61XX_zW87sBJq4gd0XP3nYj1)
* [github.blog/2020-12-15-token-authentication-requirements-for-git-operations/](https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/)
* [Generational list of programming languages - Wikipedia](https://en.wikipedia.org/wiki/Generational_list_of_programming_languages)
* [История создания языков программирования - Научный подход](http://www.shapovalov.org/publ/7-1-0-77)
* [История языков программирования](http://psciences.net/main/sciences/computer_sciences/articles/istyazprog.html)
* [История языков программирования - YouTube](https://www.youtube.com/watch?v=0IkaXvwjDf8)
* [История языков программирования — Википедия](https://ru.wikipedia.org/wiki/%D0%98%D1%81%D1%82%D0%BE%D1%80%D0%B8%D1%8F_%D1%8F%D0%B7%D1%8B%D0%BA%D0%BE%D0%B2_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F)
* [Historia de idiomas de programación ](https://www.levenez.com/lang/lang_a4.pdf)
* [History of Programming Languages](http://alumni.cs.ucr.edu/~vladimir/cs181/history.pdf)
* [psciences.net/main/sciences/computer_sciences/articles/istyazprog.html](http://psciences.net/main/sciences/computer_sciences/articles/istyazprog.html)
* [alumni.cs.ucr.edu/~vladimir/cs181/history.pdf](http://alumni.cs.ucr.edu/~vladimir/cs181/history.pdf)
* [shapovalov.org/publ/7-1-0-77](http://www.shapovalov.org/publ/7-1-0-77)
* [История языков прогопммирования](https://www.youtube.com/watch?v=0IkaXvwjDf8)
* [levenez.com/lang/](https://www.levenez.com/lang/)
* [levenez.com/lang/lang_a4.pdf](https://www.levenez.com/lang/lang_a4.pdf)
* [en.wikipedia.org/wiki/Generational_list_of_programming_languages](https://en.wikipedia.org/wiki/Generational_list_of_programming_languages)
* [alumni.cs.ucr.edu/~vladimir/cs181/history.pdf](http://alumni.cs.ucr.edu/~vladimir/cs181/history.pdf)
* [psciences.net/main/sciences/computer_sciences/articles/istyazprog.html](http://psciences.net/main/sciences/computer_sciences/articles/istyazprog.html)
* [video](https://www.youtube.com/watch?v=0IkaXvwjDf8)
* [two-wrongs.com/](https://two-wrongs.com/)
* [Funktionale Programmierung für Java-Entwickler](https://www.youtube.com/watch?v=gkIgo892N_w)
* [How Do Computers Remember?](https://youtu.be/I0-izyq6q5s)
* [HPE Tech Talk Austria, Germany, Switzerland](https://castbox.fm/vc/4101933)
* [de1lib.org/s/Rheinwerk?order=year](https://de1lib.org/s/Rheinwerk?order=year)
* [James-P-D](https://github.com/James-P-D)
* [shop.heise.de/magazine/ix-magazin/](https://shop.heise.de/magazine/ix-magazin/)
* [stackshare.io/](https://stackshare.io/)
* [thenewstack.io/](https://thenewstack.io/)
* [tldr.tech/newsletter](https://tldr.tech/newsletter)
* [idgshop.de/pcwelt/pcwelt-plus-magazin-hefte-einzel-ausgaben](https://www.idgshop.de/pcwelt/pcwelt-plus-magazin-hefte-einzel-ausgaben)
* [video](https://www.youtube.com/user/videosfromIAS)    Information: A Historical Companion
* [Informatique I [MCIL1] - YouTube](https://www.youtube.com/playlist?list=PLUPAifVWZeKNiehAi8cELQohn71Zz2aDO)
* [La rivoluzione silenziosa. Le grandi idee dell'informatica alla base dell'era digitale](http://libgen.is/book/index.php?md5=6806E6DE5D3588DE13DF0459D2854CF8)
* [Math for Programmers: 3D Graphics, Machine Learning and Simulations with Python | Paul Orland | download](https://de1lib.org/book/9735044/6fa09d?dsource=recommend)
* [OpenTechSchool :: Learning Materials](https://learn.opentechschool.org/)
* [Prüfungstrainer Informatik: 500 Fragen und Antworten für das Bachelor-Studium](https://de1lib.org/book/687903/057c84?dsource=recommend)
* [Tech Talks - YouTube](https://www.youtube.com/playlist?list=PLseEp7p6EwibKzGiX5nt2m4mHIbrlPVva)
* [Tracks – JetBrains Academy](https://hyperskill.org/tracks)
* [Unit 2.1: Binary Numbers | Coursera](https://www.coursera.org/learn/build-a-computer/lecture/zY2v8/unit-2-1-binary-numbers)
* [Daedalus Community - YouTube](https://www.youtube.com/c/DaedalusCommunity/playlists)    Introduction to Theory of Computation - YouTube    * [...](https://www.youtube.com/playlist?list=PLP8iPy9hna6T56GkMHEdSrjCCheNuEwI0)
* [...](https://www.codementor.io/projects)
* [Electronique Numérique [MCIL2] - YouTube](https://www.youtube.com/playlist?list=PLUPAifVWZeKOKTc33966X6uegDJ5e0-If)
* [deeplearningwizard.com/](https://www.deeplearningwizard.com/)
* [Binary number - Wikipedia](https://en.wikipedia.org/wiki/Binary_number)
* [Code Binaire - Conversion Traduction - Logiciel en Ligne](https://www.dcode.fr/code-binaire)
* [Exploring Binary - Binary Numbers, Binary Code, and Binary Logic](http://www.exploringbinary.com/)
* [bioinfo-fr.net/](https://bioinfo-fr.net/)
* [kyb.tuebingen.mpg.de/de](https://www.kyb.tuebingen.mpg.de/de)
* [The Computational Theory of Intelligence: Applications to Genetic Programming and Turing Machines | Sci-napse | Academic search engine for paper](https://scinapse.io/papers/2079219125)
* [Boolean algebra - Wikipedia](https://en.wikipedia.org/wiki/Boolean_algebra)
* [Analysing Complexity | Coursera](https://www.coursera.org/learn/analysing-complexity)
* [bigocheatsheet.com/](https://www.bigocheatsheet.com/)
* [Основы вычислимости и теории сложности](https://www.youtube.com/watch?v=0_CueBlgCLQ&list=PL-_cKNuVAYAVq831LMfQUblpNlLNAbwfP)
* [Принцип простоты и меры сложности | Е. А. Мамчур , Н. Ф. Овчинников, А. И. Уемов | download](https://ru.b-ok2.org/book/1277186/02b53d)
* [Теория сложности вычислений](https://www.youtube.com/watch?v=l2PULtAexsY&list=PL-_cKNuVAYAUti7GAt8AKW-vcXTgXcehk)
* [Глава 1. Криптография. Введение](https://vk.com/video-16108331_456267761?list=ee16978f43258eda16)
* [AES: Referat über den Advanced Encryption Standard (AES) - Informatik](https://www.korelstar.de/informatik/aes.html)
* [Bienvenue sur le site de l'Association de Cryptographie Théorique et Appliquée](http://www.acrypta.com/)
* [Cryptographie et cryptanalyse : Ars Cryptographica](http://www.apprendre-en-ligne.net/crypto/)
* [Curlie - World: Deutsch: Computer: Sicherheit: Kryptographie](https://curlie.org/World/Deutsch/Computer/Sicherheit/Kryptographie/)
* [einfuehrung_verschluesselung](https://www.coufal.biz/download/students/einfuehrung_verschluesselung.pdf)
* [Folien.pdf](http://userpage.zedat.fu-berlin.de/~ywing/Seminar/Folien.pdf)
* [Home DE - CrypTool Portal](https://www.cryptool.org/de/)
* [Index of /crypto/german](http://www.hp-gramatke.de/crypto/german/)
* [Keeping memory contents secret](https://www.reddit.com/r/programming/comments/e1h6nm/keeping_memory_contents_secret/)
* [Kryptographie.pdf](https://www.math.uni-hamburg.de/home/werner/Kryptographie.pdf)
* [Kryptologie: Überblick und Geschichte](http://www.hp-gramatke.de/crypto/german/page0010.htm)
* [Let's Play - Let's Play!](https://crypto.stanford.edu/~blynn/play/)
* [netplanet - Kryptografie im Internet - Einführung in die Kryptologie](https://www.netplanet.org/kryptografie/einfuehrung.shtml)
* [Informatique théorique et programmation distribuée | Rachid Guerraoui - YouTube](https://www.youtube.com/playlist?list=PLie7a1OUTSai2ePns2O7lbfLNGbwipZcj)
* [Reactive Distributed Systems](http://www.kareemalkaseer.com/books/reactive-systems)
* [Распределенные алгоритмы](https://www.youtube.com/watch?v=rApdpBK_q2A&list=PL-_cKNuVAYAUAS81zK0v--gSjoxBr3iIK)
* [Теория распределенных вычислений](https://www.youtube.com/watch?v=wTvOEH4NaBc&list=PL-_cKNuVAYAUEj_exbnxDb5ShFmmk-chT)    Toward Practicing Privacy (Dwork and Pottenger)
* [blog.datadive.net/](https://blog.datadive.net/)
* [Real Programmers](https://ifaq.wap.org/computers/realprogrammers.html)
* [craftofcoding.wordpress.com/](https://craftofcoding.wordpress.com/)
* [Algorithms on Trees and Graphs | Prof. Dr. Gabriel Valiente (auth.) | download](...)
* [techtarget.com/network](http://www.techtarget.com/network)
* [nextjournal.com](https://nextjournal.com/)
* [8d9.ru/](https://8d9.ru/)
* [Computer Networks / Computernetze: Bilingual Edition: English – German / Zweisprachige Ausgabe: Englisch – Deutsch | Christian Baun | download](https://b-ok.cc/book/5245432/8390d2)
* [Lineare Optimierung und Netzwerkoptimierung: Zweisprachige Ausgabe Deutsch Englisch 2., verbesserte Auflage | Prof. Dr. Horst W. Hamacher, Prof. Dr. Kathrin Klamroth (auth.) | download](https://b-ok.cc/book/2332468/2e2c22)
* [Networking tutorial - YouTube](https://www.youtube.com/playlist?list=PLowKtXNTBypH19whXTVoG3oKSuOcw_XeW)
* [redes Cheat Sheet by veridattein](https://cheatography.com/veridattein/cheat-sheets/redes/)
* [Компьютерные сети](https://www.youtube.com/watch?v=CBoBWx02TZE&list=PL-_cKNuVAYAWsN0rOSQKv-EICXJVWf8lC)
* [Локальные сети. Архитектура, алгоритмы, проектирование | Новиков Ю. В., Кондратенко С. В. | download](https://b-ok.cc/book/468957/5b8eec)
* [Таненбаум Э. - Компьютерные сети. 4-е изд. (Классика Computer Science) - 2003.djvu](https://vk.com/doc44301783_453645326?hash=1dc2af7a91942652bd&dl=5a5d116c81435c6c11)
* [Ontologien](https://b-ok.cc/book/1055972/545bec)
* [Параллельное программирование](https://www.youtube.com/watch?v=wdvjdChFUgo&list=PL-_cKNuVAYAWTad_Phkj6zvKZRD4MFZ8_)
* [Параллельное программирование](https://www.youtube.com/watch?v=jog9chgDbYM&list=PL-_cKNuVAYAWpJ_t_8YLSvkoxA9GsQYVQ)
* [Параллельное программирование](https://www.youtube.com/watch?v=3DSVdiOo30c&list=PL-_cKNuVAYAXvfZKstyQ3O2gWyE8P3Pw5)
* [Параллельные вычисления с использованием стандартов MPI, OpenMP, OpenACC](https://www.youtube.com/watch?v=cNz3PlR8SyA&list=PL-_cKNuVAYAWPC1WfK7_6v-gFOm4i7RKy)
* [Эффективные параллельные алгоритмы: методика BSP](https://www.youtube.com/watch?v=BstADiRrutI&list=PL-_cKNuVAYAUPCTQRFAKa7sCVr6meNod0)
* [Эффективные параллельные алгоритмы: методика BSP | Александр Тискин](https://www.youtube.com/watch?v=2slF9KeiclA&list=PL-_cKNuVAYAWNqwumC--Zw3p4jqwKaBCU)
* [Skript zur Vorlesung Parallele Algorithmen](https://b-ok.cc/book/1353030/1467d5)
* [Introduction to Parallel Computing_Roman Trobec, Boštjan Slivnik, Patricio Bulić, Borut Robič_1st ed. 2018](http://link.springer.com/openurl?genre=book&isbn=978-3-319-98833-7)
* [Multithreading Architecture](http://library.lol/main/70F06C2E80F6223F77DCEFEBFD83ECEB)
* [Kadir94](https://github.com/Kadir94)
* [Google Cloud Platform](https://www.youtube.com/c/googlecloudplatform)
* [b-ok.cc/s/?q=Cloud+Computing&yearFrom=2012](https://b-ok.cc/s/?q=Cloud+Computing&yearFrom=2012)
* [Data Center Networks: Topologies, Architectures and Fault-Tolerance Characteristics | Yang Liu, Jogesh K. Muppala, Malathi Veeraraghavan, Dong Lin, Mounir Hamdi (auth.) | download](https://b-ok.cc/book/2172668/a0bb8c)
* [External data: Drive, Sheets, and Cloud Storage - Colaboratory](https://colab.research.google.com/notebooks/io.ipynb#scrollTo=eikfzi8ZT_rW)
* [Getting Started With Google Colab](https://towardsdatascience.com/getting-started-with-google-colab-f2fff97f594c)
* [collabedit.com/](http://collabedit.com/)
* [b-ok.cc/s/?q=Amazon+Web+Services&yearFrom=2012](https://b-ok.cc/s/?q=Amazon+Web+Services&yearFrom=2012)
* [bigquery.cloud.google.com/dataset/patents-public-data:patents](https://bigquery.cloud.google.com/dataset/patents-public-data:patents)
* [Amazon Web Services™ For Dummies®](https://fit.mta.edu.vn/files/DanhSach/Book_Amazon%20webservices%20for%20dummies.pdf)
* [openstack.org/](https://www.openstack.org/)
* [Primer for Learning Google Colab –](http://dair.ai/)    – Medium
* [Slurm Workload Manager](https://slurm.schedmd.com/srun.html)
* [Timeline of Amazon Web Services - Wikipedia](https://en.wikipedia.org/wiki/Timeline_of_Amazon_Web_Services)
* [Tutoriels de 10 minutes avec Amazon Web Services (AWS)](https://aws.amazon.com/fr/getting-started/tutorials/)
* [Cloud Computing Specialization](https://coursera.org/specialization/cloud-computing)
* [lowendbox.com/tag/germany/](https://lowendbox.com/tag/germany/)

FIXME### Big Data, Cloud Computing, Data Science & Engineering | Roger Lee | download

FIXME### *Cloud Computing: Theory and Practice | Dan C. Marinescu | download

* [Cloud Native Infrastructure: Patterns for Scalable Infrastructure and Applications in a Dynamic Environment | Justin Garrison, Kris Nova | download](https://b-ok.cc/book/3428382/9ea9a3)
* [Pragmatic AI: An Introduction to Cloud-Based Machine Learning | Noah Gift | download](https://b-ok.cc/book/3682557/a90a58)

FIXME### *Cloud Computing and Big Data: Technologies, Applications and Security | Mostapha Zbakh, Mohammed Essaaidi, Pierre Manneback, Chunming Rong | download

FIXME###  Cloud Computing | Nayan B. Ruparelia | download

* [Beginning Serverless Computing: Developing with Amazon Web Services, Microsoft Azure, and Google Cloud | Maddie Stigler (auth.) | download](https://b-ok.cc/book/3420253/afe3cc)
* [An overview of the new IBM Cloud Satellite distributed cloud – Build Smart. Build Secure. IBM Developer](https://developer.ibm.com/articles/overview-of-the-new-ibm-cloud-satellite-distributed-cloud/)
* [An overview of the new IBM Cloud Satellite distributed cloud – Build Smart. Build Secure. IBM Developer](https://developer.ibm.com/articles/overview-of-the-new-ibm-cloud-satellite-distributed-cloud/)
* [us-east-2.console.aws.amazon.com/console/home?region=us-east-2#](https://us-east-2.console.aws.amazon.com/console/home?region=us-east-2#)
* [shell.cloud.google.com/?walkthrough_tutorial_url=https%3A%2F%2Fwalkthroughs.googleusercontent.com%2Fcontent%2Fgke_cloud_code_create_app%2Fgke_cloud_code_create_app.md&show=ide&environment_deployment=ide&authuser=1&fromcloudshell=true](https://shell.cloud.google.com/?walkthrough_tutorial_url=https%3A%2F%2Fwalkthroughs.googleusercontent.com%2Fcontent%2Fgke_cloud_code_create_app%2Fgke_cloud_code_create_app.md&show=ide&environment_deployment=ide&authuser=1&fromcloudshell=true)

* [styfle/awesome-online-ide](https://github.com/styfle/awesome-online-ide)
* [lightsail.aws.amazon.com/ls/webapp/create/instance?region=eu-central-1](https://lightsail.aws.amazon.com/ls/webapp/create/instance?region=eu-central-1)
* [google.com/search?client=firefox-b-d&q=data+science+in+the+cloud](https://www.google.com/search?client=firefox-b-d&q=data+science+in+the+cloud)
* [r/cloudcomputing/](https://www.reddit.com/r/cloudcomputing/)
* [google.com/search?client=firefox-b-d&q=cloud+computing+forum](https://www.google.com/search?client=firefox-b-d&q=cloud+computing+forum)
* [sso.redhat.com/auth/realms/redhat-external/login-actions/registration?client_id=crtoolchain-public&tab_id=GHtVfFaLNVo](https://sso.redhat.com/auth/realms/redhat-external/login-actions/registration?client_id=crtoolchain-public&tab_id=GHtVfFaLNVo)
* [cloud.google.com/blog/products/application-development/introducing-cloud-shell-editor](https://cloud.google.com/blog/products/application-development/introducing-cloud-shell-editor)
* [aws.amazon.com/de/getting-started/hands-on/launch-a-virtual-machine/](https://aws.amazon.com/de/getting-started/hands-on/launch-a-virtual-machine/)
* [freecodecamp.org/news/how-to-receive-emails-via-your-sites-contact-us-form-with-aws-ses-lambda-api-gateway/](https://www.freecodecamp.org/news/how-to-receive-emails-via-your-sites-contact-us-form-with-aws-ses-lambda-api-gateway/)
* [kubernetes.io/docs/reference/kubectl/overview/](https://kubernetes.io/docs/reference/kubectl/overview/)
* [digitalocean.com/community/curriculums/kubernetes-for-full-stack-developers](https://www.digitalocean.com/community/curriculums/kubernetes-for-full-stack-developers)
* [digitalocean.com/community/tutorial_series/the-navigator-s-guide-to-digitalocean](https://www.digitalocean.com/community/tutorial_series/the-navigator-s-guide-to-digitalocean)
* [freecodecamp.org/news/learn-the-basics-of-amazon-web-services/](https://www.freecodecamp.org/news/learn-the-basics-of-amazon-web-services/)
* [syntax across languages (One Big Page)
* [Shooting yourself in the foot in various programming languages - Data Science Central](http://www.datasciencecentral.com/profiles/blogs/shooting-yourself-in-the-foot-in-various-programming-languages)
* [Die passende Programmiersprache finden | c't Magazin](https://www.heise.de/ct/ausgabe/2015-18-Die-passende-Programmiersprache-finden-2767703.html)

FIXME## 1S reading

* [jetbrains.com/lp/devecosystem-2022/](https://www.jetbrains.com/lp/devecosystem-2022/)
* [freecodecamp.org/news/file-systems-architecture-explained/*](https://www.freecodecamp.org/news/file-systems-architecture-explained/*) [hdmi](https://www.quora.com/q/source-code/How-does-a-single-wire-control-every-pixel-on-an-entire-TV-screen-How-can-it-convey-enough-information-for-that-many-pi?ch=99&share=7b9bf8c1&srid=HPb8)
* [quora.com/How-does-open-source-software-gets-funded/answer/Andreas-Gei%C3%9Finger-1](https://www.quora.com/How-does-open-source-software-gets-funded/answer/Andreas-Gei%C3%9Finger-1)
* [Enhance your understanding of pull requests](https://email.axosoft.com/e2t/tc/VWTcC_5KZXsfVvYGsW7zSr5VW5g6HvJ4gXmvtN8_nRGc3p_97V1-WJV7CgBljW1WhfbF6wlsLqW5kNfyC1B-kCDW2Y0Klb1mBJWZW4ldV1V8nHFDnVhGHqz3mKG4YW9dQ_vP7tgG7CV_46kZ3wb1CcW7DjdHc7yzWmcW6zN6yp7m1W0WW8GlRGq3D2826N1GTVCWCM2pQW48MjSF8zx1zcW3j4wCL7d4wqJW2CX2Db2QcXq1W5r1MQZ1wl9CrN4CjtRM2z1QnW3zpjRY4dMJcBW4VhBdF6sYgrkW7KXgW68tml6_W36jyNJ4ZG-WhW1y6bcc2XjBQ8W8YsR5C5Snm83W6m4tdt8wfwc_W2hJjCF4ptGrj3h381)
* [Virtual environments for Python, Ruby and Java](https://medium.com/@bhagavathidhass/virtual-environments-for-python-ruby-and-java-87743478ae38)
* [observablehq.com/collection/@observablehq/2020-year-in-review](https://observablehq.com/collection/@observablehq/2020-year-in-review)
* [freecodecamp.org/news/the-crazy-history-of-the-100daysofcode-challenge-and-why-you-should-try-it-for-2018-6c89a76e298d/](https://www.freecodecamp.org/news/the-crazy-history-of-the-100daysofcode-challenge-and-why-you-should-try-it-for-2018-6c89a76e298d/)
* [freecodecamp.org/news/learn-how-to-build-and-publish-an-android-app-from-scratch/](https://www.freecodecamp.org/news/learn-how-to-build-and-publish-an-android-app-from-scratch/)
* [freecodecamp.org/news/what-is-freelancing/](https://www.freecodecamp.org/news/what-is-freelancing/)
* [dataquest.io/blog/web-scraping-beautifulsoup/](https://www.dataquest.io/blog/web-scraping-beautifulsoup/)
* [blog.paperspace.com/web-console-2-0/](https://blog.paperspace.com/web-console-2-0/)
* [freecodecamp.org/news/what-is-a-software-post-mortem/](https://www.freecodecamp.org/news/what-is-a-software-post-mortem/)
* [freecodecamp.org/news/learn-dynamic-programing-to-solve-coding-challenges/](https://www.freecodecamp.org/news/learn-dynamic-programing-to-solve-coding-challenges/)
* [tweag.io/blog/2022-12-01-higherorderness-is-interaction/](https://www.tweag.io/blog/2022-12-01-higherorderness-is-interaction/)
* [death.andgravity.com/limit-concurrency](https://death.andgravity.com/limit-concurrency)
* [spektrum.de/kolumne/kryptografie-der-algorithmus-der-die-nsa-in-den-wahnsinn-trieb/2101827](https://www.spektrum.de/kolumne/kryptografie-der-algorithmus-der-die-nsa-in-den-wahnsinn-trieb/2101827)
* [Unix File Permissions](https://www.unix.com/tips-and-tutorials/19060-unix-file-permissions.html)
* [Why, on Unix systems, is the directory called usr instead of user? - Quora](https://www.quora.com/Why-on-Unix-systems-is-the-directory-called-usr-instead-of-user)
* [unix.stackexchange.com/questions/254359/terminal-vs-terminal-emulator](https://unix.stackexchange.com/questions/254359/terminal-vs-terminal-emulator)
* [15 Must-Have Cheatsheets for Developers🚀 - DEV Community 👩‍💻👨‍💻](https://dev.to/ishratumar/15-must-have-cheatsheets-for-developers-1n92)
* [A Deep Introduction to JIT Compilers: JITs are not very Just-in-time | kipply's Blog](https://carolchen.me/blog/technical/jits-intro/)
* [arstechnica.com/information-technology/2023/04/developer-creates-self-healing-programs-that-fix-themselves-thanks-to-gpt-4](https://arstechnica.com/information-technology/2023/04/developer-creates-self-healing-programs-that-fix-themselves-thanks-to-gpt-4)
* [belitsoft.com/php-development-services/top-software-developers-after-40-50-and-60](https://belitsoft.com/php-development-services/top-software-developers-after-40-50-and-60)
* [blog.finxter.com/the-state-of-crypto-in-2023](https://blog.finxter.com/the-state-of-crypto-in-2023)
* [Why 3%: How Toptal Finds Top Talent | Toptal®](https://www.toptal.com/top-3-percent)
* [Clean Architecture: Patterns, Practices, and Principles - Matthewrenze](https://matthewrenze.com/presentations/clean-architecture/)
* [Clean Code Summary](https://gist.github.com/wojteklu/73c6914cc446146b8b533c0988cf8d29)
* [increment.com/programming-languages/crash-course-in-compilers/](https://increment.com/programming-languages/crash-course-in-compilers/)
* [Coding Won’t Exist In 5 Years. This Is Why | by Somnath Singh | Jan, 2023 | JavaScript in Plain English](https://javascript.plainenglish.io/coding-wont-exist-in-5-years-this-is-why-6da748ba676c)
* The Embedded Pattern (1-to-1, 1-to-many, and many-to-many)The Partial Embed Pattern (1-to-1, 1-to-many, and many-to-many)The Aggregate PatternThe Polymorphic PatternThe Bucket PatternThe Revision PatternThe Tree and Graph PatternThe Schema Version Pattern
* [heise.de/blog/Die-Struktur-von-Patterns-in-der-Softwareentwicklung-7215710.html](https://www.heise.de/blog/Die-Struktur-von-Patterns-in-der-Softwareentwicklung-7215710.html)
* [heise.de/blog/Woran-erkennt-man-eine-gute-Softwarearchitektur-7541527.html](https://www.heise.de/blog/Woran-erkennt-man-eine-gute-Softwarearchitektur-7541527.html)
* [mitadmissions.org/blogs/entry/becoming-a-better-programmer/](https://mitadmissions.org/blogs/entry/becoming-a-better-programmer/)
* [heise.de/blog/Die-Struktur-von-Patterns-in-der-Softwareentwicklung-7215710.html](https://www.heise.de/blog/Die-Struktur-von-Patterns-in-der-Softwareentwicklung-7215710.html)
* [heise.de/blog/Klassifizierung-von-Design-Patterns-in-der-Softwareentwicklung-7194039.html](https://www.heise.de/blog/Klassifizierung-von-Design-Patterns-in-der-Softwareentwicklung-7194039.html)
* [Що таке Патерн?](https://refactoring.guru/uk/design-patterns/what-is-pattern)
* [Undefined behavior, and the Sledgehammer Principle | The Pasture](https://thephd.dev//c-undefined-behavior-and-the-sledgehammer-guideline)
* [Exocompilation for productive programming of hardware accelerators](https://dl.acm.org/doi/abs/10.1145/3519939.3523446)
* [Styling and Formatting Code - Made With ML](https://madewithml.com/courses/mlops/styling/)
* [XDG Base Directory Specification](https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html)
* [freecodecamp.org/news/real-world-coding-interview-for-software-engineering/](https://www.freecodecamp.org/news/real-world-coding-interview-for-software-engineering/)
* [terminal - What causes this green background in ls output? - Unix & Linux Stack Exchange](https://unix.stackexchange.com/questions/94498/what-causes-this-green-background-in-ls-output)
* [dzone.com/refcardz/designing-quality-software](https://dzone.com/refcardz/designing-quality-software)
* [dzone.com/refcardz/refactoring-patterns](https://dzone.com/refcardz/refactoring-patterns)
* [How Deno’s Founder Is Rebuilding the Runtime of the Web](https://programmerweekly.us2.list-manage.com/track/click?u=72f68dcee17c92724bc7822fb&id=885c7973ff&e=b5a8df9a4a) This article provides an overview of the Deno JavaScript/TypeScript  runtime and its features, highlighting its improved security, simplified  module system, and better developer experience compared to Node.js.
* [Beautiful Branchless Binary Search](https://programmerweekly.us2.list-manage.com/track/click?u=72f68dcee17c92724bc7822fb&id=f825542ccb&e=b5a8df9a4a) This post explains how to implement a branchless binary search algorithm
 that is both faster and more power-efficient than traditional binary search algorithms. It provides a detailed  alkthrough of the implementation and offers benchmarks to showcase its effectiveness.
* [Thoughtworks Technology Radar 28](https://programmerweekly.us2.list-manage.com/track/click?u=72f68dcee17c92724bc7822fb&id=2f07685780&e=b5a8df9a4a) A latest issue of the Technology Radar which is an opinionated guide to technology frontiers.
* [The future of programming: Research at CHI 2023](https://programmerweekly.us2.list-manage.com/track/click?u=72f68dcee17c92724bc7822fb&id=9fce33eaae&e=b5a8df9a4a) Research on programming tools published at CHI 2023.
* [Navigating the High Cost of AI Compute](https://programmerweekly.us2.list-manage.com/track/click?u=72f68dcee17c92724bc7822fb&id=8045e2278a&e=b5a8df9a4a)The generative AI boom is compute-bound and, as a result, a predominant factor driving the industry is simply the cost of training and inference.* [How LinkedIn Adopted A GraphQL Architecture for Product Development](https://programmerweekly.us2.list-manage.com/track/click?u=72f68dcee17c92724bc7822fb&id=debd7c2b1a&e=b5a8df9a4a) In our previous post on GraphQL, we explained how LinkedIn uses GraphQL to expedite the process of onboarding new use-cases for external API
* partners. In this blog post, we will cover how the GraphQL layer is architected for use by our internal engineers to build member and customer facing applications. Specifically, we will dive into some of the architectural choices that are unique to LinkedIn and why we chose each one of them.
* [Avoiding the Rewrite Trap](https://programmerweekly.us2.list-manage.com/track/click?u=72f68dcee17c92724bc7822fb&id=cdbca5b89f&e=b5a8df9a4a)Before you commit to rewriting an old system, here are some reasons it's (almost always) a bad idea.
* [CLI tricks every developer should know](https://programmerweekly.us2.list-manage.com/track/click?u=72f68dcee17c92724bc7822fb&id=7c2af18da5&e=b5a8df9a4a) Learn some tips, tricks, and tools for mastering the command line from GitHub’s own developers.* [Using ChatGPT as a technical writing assistant](https://programmerweekly.us2.list-manage.com/track/click?u=72f68dcee17c92724bc7822fb&id=1ec1f7ac36&e=b5a8df9a4a) An experienced technical author explores using ChatGPT to assist with a  number of writing projects. He finds ChatGPT can provide time-savings through drafts and prompting for additional content, but lacks accuracy and depth - as well as suffering from bubbly optimism. Overall it is
* useful if you work iteratively, asking for small chunks with well-crafted prompts.* [Bootstrapping Uber’s Infrastructure on arm64 with Zig](https://programmerweekly.us2.list-manage.com/track/click?u=72f68dcee17c92724bc7822fb&id=343f76acc7&e=b5a8df9a4a) In November 2021 we decided to evaluate arm64 for Uber. Most of our services are written in either Go or Java, but our build systems only supported compiling to x86_64. Today, thanks to Open Source collaboration, Uber has a system-independent (hermetic) build toolchain
* that seamlessly powers multiple architectures. We used this toolchain to  bootstrap our arm64 hosts. This post is a story with how we went about it, our early thinking, problems, some achievements, and next steps.* [eBay’s Blazingly Fast Billion-Scale Vector Similarity Engine](https://programmerweekly.us2.list-manage.com/track/click?u=72f68dcee17c92724bc7822fb&id=fea573defd&e=b5a8df9a4a) This article takes a look at the architecture we constructed for  vector-based similarity, meeting the scale using data sharding, partitioning and replication, and features including attribute-based features and a pluggable ANN backend based on index building, recall accuracy, latencies and memory footprint.
* [freecodecamp.org/news/coding-interviews-for-dummies-5e048933b82b/](https://www.freecodecamp.org/news/coding-interviews-for-dummies-5e048933b82b/)
* [freecodecamp.org/news/level-up-developer-portfolio/](https://www.freecodecamp.org/news/level-up-developer-portfolio/)
* [freecodecamp.org/news/your-developer-career-questions-answered/](https://www.freecodecamp.org/news/your-developer-career-questions-answered/)
* [guru99.com/jira-tutorial-a-complete-guide-for-beginners.html](https://www.guru99.com/jira-tutorial-a-complete-guide-for-beginners.html)
* [r/ProgrammingLanguages/comments/spkvqz/im_creating_a_clike_programming_language_any_tips/](https://www.reddit.com/r/ProgrammingLanguages/comments/spkvqz/im_creating_a_clike_programming_language_any_tips/)
* [it.wikipedia.org/wiki/Millennium_bug](https://it.wikipedia.org/wiki/Millennium_bug)
* [aesthetics.fandom.com/wiki/Y2K](https://aesthetics.fandom.com/wiki/Y2K)
* [freecodecamp.org/news/file-systems-architecture-explained/](https://www.freecodecamp.org/news/file-systems-architecture-explained/)
* [en.wikipedia.org/wiki/SOLID](https://en.wikipedia.org/wiki/SOLID)
* [arstechnica.com/information-technology/2022/01/a-bug-lurking-for-12-years-gives-attackers-root-on-every-major-linux-distro/](https://arstechnica.com/information-technology/2022/01/a-bug-lurking-for-12-years-gives-attackers-root-on-every-major-linux-distro/)
* [r/ProgrammingLanguages/comments/seu238/concise_language_to_write_an_interpreter_for/](https://www.reddit.com/r/ProgrammingLanguages/comments/seu238/concise_language_to_write_an_interpreter_for/)
* [Думай как информатик](https://vk.com/@education_digital-dumai-kak-informatik)
* [Computational thinking - Wikipedia](https://en.wikipedia.org/wiki/Computational_thinking)
* [Мастерство программирования](https://vk.com/@physics_math-masterstvo-programmirovaniya)
* [How to Hack Together Your Own CS Degree Online for Free](https://www.freecodecamp.org/news/how-to-hack-your-own-cs-degree-for-free/)
* [habr.com/ru/company/ods/blog/485122/](https://habr.com/ru/company/ods/blog/485122/)
* [rasa.com/docs/rasa/docker/deploying-in-docker-compose](https://rasa.com/docs/rasa/docker/deploying-in-docker-compose)
* [rath.org/matlab-is-a-terrible-programming-language.html](https://www.rath.org/matlab-is-a-terrible-programming-language.html)
* [encoding - How to convert a file to utf-8 in Python? - Stack Overflow](https://stackoverflow.com/questions/191359/how-to-convert-a-file-to-utf-8-in-python)
* how does SVG work internally?* [ionos.de/digitalguide/online-marketing/verkaufen-im-internet/microsoft-visio-alternativen/](https://www.ionos.de/digitalguide/online-marketing/verkaufen-im-internet/microsoft-visio-alternativen/)
* [blog.sigfpe.com/2006/08/you-could-have-invented-monads-and.html](http://blog.sigfpe.com/2006/08/you-could-have-invented-monads-and.html)
* [plato.stanford.edu/entries/turing-machine/](https://plato.stanford.edu/entries/turing-machine/)
* [mishadoff.com/blog/clojure-design-patterns/](http://mishadoff.com/blog/clojure-design-patterns/)
* [en.wikipedia.org/wiki/Extreme_programming](https://en.wikipedia.org/wiki/Extreme_programming)
* [w3schools.com/xml/xpath_syntax.asp](https://www.w3schools.com/xml/xpath_syntax.asp)
* [[recursive progrmamming with multiple nodes - Поиск в Google](](https://www.google.com/search?rlz=1C1GCEA_enUS832&ei=pPZBXIXjFoHW_wSVgp6YDg&q=recursive+progrmamming+with+multiple+nodes&oq=recursive+progrmamming+with+multiple+nodes&gs_l=psy-ab.3...71004.90841..90970...4.0..0.190.5543.3j43)
* [stackoverflow.com/questions/38643261/how-to-write-a-terminal-emulator-from-scratch-or-not-from-scratch#38658235](https://stackoverflow.com/questions/38643261/how-to-write-a-terminal-emulator-from-scratch-or-not-from-scratch#38658235)
* [freecodecamp.org/news/the-design-thinking-process-explained/](https://www.freecodecamp.org/news/the-design-thinking-process-explained/)
* [ericlippert.com/category/monads/page/2/](https://ericlippert.com/category/monads/page/2/)
* [stackoverflow.com/questions/2704652/monad-in-plain-english-for-the-oop-programmer-with-no-fp-background](https://stackoverflow.com/questions/2704652/monad-in-plain-english-for-the-oop-programmer-with-no-fp-background)
* [blog.jcoglan.com/2011/03/05/translation-from-haskell-to-javascript-of-selected-portions-of-the-best-introduction-to-monads-ive-ever-read/](https://blog.jcoglan.com/2011/03/05/translation-from-haskell-to-javascript-of-selected-portions-of-the-best-introduction-to-monads-ive-ever-read/)

FIXME# General Resources for Programming and Computer Science

FIXME## Sort

* [Curated learning resources](https://learnbyexample.github.io/curated_resources/) — Computer Science and Programming, Linux, Vim, Perl, Git and GitHub
* [Hexlet](https://en.hexlet.io/): Practical programming courses (JavaScript, PHP, Unix, databases, functional programming). A steady path from the first line of code to the first job.
* [preslavmihaylov/booknotes](https://github.com/preslavmihaylov/booknotes)
* [video](https://www.youtube.com/@IogaMaster)
* [prmadev](https://github.com/prmadev)
 [m7.rs/](https://m7.rs/)
I* [dmulholl](https://www.dmulholl.com/notes.html)

FIXME## Cheatsheets, Reference, Wikipedia

* [Cheatsheets Index | Codecademy](https://www.codecademy.com/resources/cheatsheets/all)
* [en.wikipedia.org/wiki/Template:Information_theory](https://en.wikipedia.org/wiki/Template:Information_theory)
* [en.wikipedia.org/wiki/Template:Program_execution](https://en.wikipedia.org/wiki/Template:Program_execution)
* [dzone.com/refcardz](https://dzone.com/refcardz)
* [dzone.com/refcardz](https://dzone.com/refcardz)
* [freecodecamp.org/news/markdown-cheat-sheet/](https://www.freecodecamp.org/news/markdown-cheat-sheet/)
* [planetgeek.ch/wp-content/uploads/2013/06/Clean-Code-V2.1.pdf](https://www.planetgeek.ch/wp-content/uploads/2013/06/Clean-Code-V2.1.pdf)
* [Computer science - Wikipedia](https://en.wikipedia.org/wiki/Computer_science#Computer_architecture_and_computer_engineering)
* [opensource.com/downloads/cheat-sheets](https://opensource.com/downloads/cheat-sheets)

FIXME## Small Projects* [itp.nyu.edu/classes/cc-f21/little-coding-project-kaleidoscope/](https://itp.nyu.edu/classes/cc-f21/little-coding-project-kaleidoscope/)

* [Project Based Curriculum Lesson Plans](https://docs.google.com/spreadsheets/d/1KXEJvgnAziiePMp2Ovf_ssDqCFFWYuycXWBNp91k3qM/edit#gid=561004611)
* [5 Projects Every Programmer Should Try - YouTube](https://www.youtube.com/watch?v=jOFco1xuIeo&feature=youtu.be)

FIXME## My Writing

* [dev.to/yelircaasi](https://dev.to/yelircaasi)

FIXME## Hardware

* [ryf.fsf.org/categories/laptops](https://ryf.fsf.org/categories/laptops)
* [r/GUIX/comments/l1xx3g/laptop_recommendations_for_gnu_guix/](https://www.reddit.com/r/GUIX/comments/l1xx3g/laptop_recommendations_for_gnu_guix/)
* [libreplanet.org/wiki/Group:Hardware/TODO/DUPLICATE_INFO/Freest](https://libreplanet.org/wiki/Group:Hardware/TODO/DUPLICATE_INFO/Freest)
* [h-node.org/hardware/catalogue/en](https://www.h-node.org/hardware/catalogue/en)
* [libreboot.org/docs/hardware/](https://libreboot.org/docs/hardware/)
* [r/pcmasterrace/comments/1bh6t1p/what_would_you_change/](https://www.reddit.com/r/pcmasterrace/comments/1bh6t1p/what_would_you_change/)

FIXME## Orgs

* [higherorderco.com/](https://higherorderco.com/)
* [ourcodingclub.github.io/](https://ourcodingclub.github.io/)
* [midstall.com/](https://midstall.com/)

FIXME## General Educational Resources

* → [top resources insta](https://www.instagram.com/p/CqQQ2C5jUUa/?igshid=MDJmNzVkMjY=)
* [CS Wikipedia](https://en.wikipedia.org/wiki/Template:Computer_science)
* [wiki.archlinux.org/](https://wiki.archlinux.org/)
* [it.wikipedia.org/wiki/Informatica](https://it.wikipedia.org/wiki/Informatica)
* [pt.wikipedia.org/wiki/Predefini%C3%A7%C3%A3o:Ci%C3%AAncia_da_computa%C3%A7%C3%A3o](https://pt.wikipedia.org/wiki/Predefini%C3%A7%C3%A3o:Ci%C3%AAncia_da_computa%C3%A7%C3%A3o)
* [it.wikipedia.org/wiki/Template:Informatica](https://it.wikipedia.org/wiki/Template:Informatica)
* [de.wikibooks.org/wiki/Regal:EDV](https://de.wikibooks.org/wiki/Regal:EDV)
* [devopedia.org/](https://devopedia.org/)
* [freecodecamp.org/](https://www.freecodecamp.org/)
* [jwasham/coding-interview-university](https://github.com/jwasham/coding-interview-university)
* [Developer Roadmaps](https://roadmap.sh/roadmaps)
* [zetcode.com/](https://zetcode.com/)
* [GeeksforGeeks | A computer science portal for geeks](https://www.geeksforgeeks.org/)
* [freecodecamp.org/learn](https://www.freecodecamp.org/learn)
* [Formale Sprachen, Automaten, Compiler und Interpreter](https://flaci.com/home/)
* [KIT Playlists](https://www.youtube.com/c/KITWEBCAST/playlists)
* [video](https://www.youtube.com/@drawingboxes)
* [NLogSpace](https://www.youtube.com/channel/UCMWYg3eBFp5bbqjlllUku_w)
* [video](https://www.youtube.com/@hnasr/playlists)
* [interstices.info/](https://interstices.info/)
* [habr.com](http://habr.com/)
* [distill.pub/](https://distill.pub/)
* [Two Minute Papers - YouTube](https://www.youtube.com/user/keeroyz)
* [edureka!](https://www.youtube.com/user/edurekaIN)
* [Neso Academy](http://www.nesoacademy.org/)
* [denif.ens-lyon.fr/index.php](http://denif.ens-lyon.fr/index.php)
* [Notions et concepts base informatique](https://www.culture-informatique.net/)
* [Sebastian Lague](https://www.youtube.com/channel/UCmtyQOKKmrMVaKuRXz02jbQ) YouTube Channel
* [Computerphile YouTube Channel](https://www.youtube.com/channel/UC9-y-6csu5WGm29I7JiwpnA)
* [skillbasics.com/](https://www.skillbasics.com/)
* [Hexlet University (RU)](https://www.youtube.com/user/HexletUniversity/playlists)
* [bogotobogo.com/index.php](http://www.bogotobogo.com/index.php)
* [tutorialspoint.com/index.htm](https://www.tutorialspoint.com/index.htm)
* [zestedesavoir.com/](https://zestedesavoir.com/)
* [video](https://www.youtube.com/c/PacktVideo/playlists)
* [Гоша Дударь](https://www.youtube.com/c/gosha_dudar)
* [Ch-13 Computer Science and Engineering](https://www.youtube.com/channel/UC0kHwbaDzMbdiIu1QGfEftQ)
* [beginnersbook.com/](https://beginnersbook.com/)
* [sanfoundry.com/](https://www.sanfoundry.com/)
* [codecademy.com/catalog](https://www.codecademy.com/catalog)
* [programcreek.com](https://www.programcreek.com/python/example/108008/torchvision.models.resnet101)
* [programmingbasics.org/es/](http://www.programmingbasics.org/es/)
* [*Reference answers to frequently asked questions - Computer Science Meta Stack Exchange](https://cs.meta.stackexchange.com/questions/599/reference-answers-to-frequently-asked-questions)
* [Frame of Essence](https://www.youtube.com/c/frameofessence)
* [QWERTY](https://www.youtube.com/c/QWRTru)
* [Stack Abuse Github](https://github.com/StackAbuse)
* [Stack Abuse](https://stackabuse.com/)
* [**Neso Academy - YouTube](https://www.youtube.com/user/nesoacademy)
* [**Packt Video - YouTube](https://www.youtube.com/user/packt1000/search?query=julia)
* [*Better Coder](https://www.bettercoder.io/)
* [*Computer Science Center - YouTube](https://www.youtube.com/channel/UC0YHNueF-3Nh3uQT0P4YQZw/playlists)
* [*Dashboard | HackerRank](https://www.hackerrank.com/dashboard)
* [*Download Free Cheat Sheets or Create Your Own! - Cheatography.com: Cheat Sheets For Every Occasion](https://cheatography.com/)
* [*Find Courses by Topic | MIT OpenCourseWare | CS](https://ocw.mit.edu/courses/find-by-topic/#cat=engineering&subcat=computerscience)
* [*GeeksforGeeks | A computer science portal for geeks](https://www.geeksforgeeks.org/)
* [*MIT CS Notes](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-01sc-introduction-to-electrical-engineering-and-computer-science-i-spring-2011/syllabus/MIT6_01SCS11_notes.pdf)
* [*Open Source Guides | Learn how to launch and grow your project.](https://opensource.guide/)
* [*Teach Yourself Computer Science](https://teachyourselfcs.com/)
* [Derek Banas](https://www.youtube.com/user/derekbanas) ()
* [Computer Science Center](https://compscicenter.ru/)
* [Computer Science Center](https://www.youtube.com/c/CompscicenterRu)
* [roadmap.sh/](https://roadmap.sh/) 
* [NLogSpace (esp. formal languages)](https://www.youtube.com/user/leifaktor)
* [Carlos Andres Delgado](https://www.youtube.com/user/carlosUnivalle)
* [Хекслет](https://www.youtube.com/user/HexletUniversity)
* [Franneck](https://www.youtube.com/user/FranneckLP)
* [Code Bullet](https://www.youtube.com/c/CodeBullet)
* [Software Quality](https://www.youtube.com/playlist?list=PLEMXAbCVnmY4JbNByvpgEzWsLRKVaF_pk)
* [APDaga's DumpBox](https://www.apdaga.com/)
* [Pico Bianco](https://www.youtube.com/channel/UCJGgu88qagSi145Q7LCe9KA)
* [coderwall.com/](https://coderwall.com/)
* [DevDungeon | Virtual Hackerspace](https://www.devdungeon.com/)
* [Microsoft Research](https://www.youtube.com/user/MicrosoftResearch)
* [My CS](https://www.youtube.com/channel/UCq8JbYayUHvKvjimPV0TCqQ)
* [Neso Academy](https://www.youtube.com/user/nesoacademy)
* [NLogSpace](https://www.youtube.com/user/leifaktor)
* [Notions et concepts base informatique](https://www.culture-informatique.net/)
* [Onigiri](https://www.youtube.com/c/OnigiriScience)
* [overVolt](https://www.youtube.com/channel/UCw6ekhAtFahKr7gImCIoYwg)
* [Plan CS ](https://vk.com/@physics_math-detalnyi-plan-samoobrazovaniya-v-computer-science-za-15-goda)
* [Tutorials | Daniel Miessler](https://danielmiessler.com/study/)
* [Two Minute Papers](https://www.youtube.com/c/K%C3%A1rolyZsolnai)
* [Академия Яндекса - YouTube](https://www.youtube.com/channel/UCTUyoZMfksbNIHfWJjwr5aQ/playlists)
* [Каталог – Stepik](https://stepik.org/catalog?q=%D0%9B%D0%B8%D0%BD%D0%B3%D0%B2%D0%B8%D1%81%D1%82%D0%B8%D0%BA%D0%B0)
* [Компьютерные науки - YouTube](https://www.youtube.com/channel/UCKFojzto0n4Ab3CRQRZ2zYA/playlists)
* [My edX Search | 212 search results for Spanish](https://www.edx.org/course?language=Spanish)
* [My edX Search | 49 search results for French](https://www.edx.org/course/?language=French)
* [Обучение в Яндексе](https://academy.yandex.ru/)
* [Computer science - Topics](https://en.wikipedia.org/wiki/Template:Computer_science)
* [CS Wiki](https://computersciencewiki.org/index.php/Welcome)
* [Dot CSV](https://www.youtube.com/channel/UCy5znSnfMsDwaLlROnZ7Qbg)
* [EdEra – студія онлайн-освіти](https://www.ed-era.com/)
* [edureka!](https://www.youtube.com/c/edurekaIN)
* [Gary Explains](https://www.youtube.com/c/GaryExplains)
* [Geek's Lesson](https://www.youtube.com/c/GeeksLesson)
* [george boole](https://www.youtube.com/c/hobokengar)
* [Google Developers](https://www.youtube.com/googlecode)
* [html.rincondelvago.com/glosario-computacional-terminos-informaticos.html](http://html.rincondelvago.com/glosario-computacional-terminos-informaticos.html)
* [iesmonre.educa.aragon.es/dep/mates/webtic/glosario/](http://iesmonre.educa.aragon.es/dep/mates/webtic/glosario/)
* [it-uroki.ru/](http://it-uroki.ru/)
* [platea.pntic.mec.es/jdelucas/terminos.htm](http://platea.pntic.mec.es/jdelucas/terminos.htm)
* [Learn Computer Science – JetBrains Academy](https://hyperskill.org/onboarding?track=java)
* [Microsoft Developer Russia](https://www.youtube.com/c/TechDaysRussia)
* [Stepik CS Center](https://stepik.org/org/compscicenter)
* [geeksforgeeks.org/](https://www.geeksforgeeks.org/)
* [jeapostrophe.github.io/home/#%28part._.Teaching%29](http://jeapostrophe.github.io/home/#%28part._.Teaching%29)
* [CSC Wiki](https://wiki.compscicenter.ru/index.php/CSC_Wiki)
* [whatis.techtarget.com/](http://whatis.techtarget.com/)
* [artec.unirc.it/pac/glossario.pdf](http://www.artec.unirc.it/pac/glossario.pdf)
* [dave-cushman.net/computing/glossary.html](http://www.dave-cushman.net/computing/glossary.html)
* [docteurordinateur.com/dictionnaire-de-termes-techniques-informatiques.html](http://www.docteurordinateur.com/dictionnaire-de-termes-techniques-informatiques.html)
* [pc-facile.com/glossario/](http://www.pc-facile.com/glossario/)
* [compscicenter.ru/online/](https://compscicenter.ru/online/)
* [Мои курсы - Hexlet](https://ru.hexlet.io/my)
* [ru.hexlet.io/courses](https://www.youtube.com/redirect?q=https%3A%2F%2Fru.hexlet.io%2Fcourses%2Flogic&redir_token=OofVtG3MBtYKF8FVLlFpPLQZXRJ8MTUyOTE5MzI2NUAxNTI5MTA2ODY1&v=eXI_TFW5Cdo&event=video_description)
* [ru.hexlet.io/my](https://www.quora.com/What-is-the-best-free-online-code-editor)
* [stackoverrun.com/](https://stackoverrun.com/)
* [stepik.org/users/67386252/courses](https://stepik.org/users/67386252/courses)
* [cours-gratuit.com/](https://www.cours-gratuit.com/)
* [culture-informatique.net/](https://www.culture-informatique.net/)
* [shorttutorials.com/index.php](https://www.shorttutorials.com/index.php)
* [video](https://www.youtube.com/user/MIT/playlists)
* [interdisciplinary-college.org/](https://interdisciplinary-college.org/)
* [Informatik Lexikon / Glossar](https://www.informatik-verstehen.de/lexikon/#2)
* [Interstices - Explorez les sciences du numérique - Accueil](https://interstices.info/jcms/jalios_5127/accueil)
* [Открытое образование - Курсы](https://openedu.ru/course/)
* [NPTEL :: Courses](https://nptel.ac.in/course.html)
* [OpenHPI Tutorials](https://www.youtube.com/user/xhakil26/playlists)
* [OpenTechSchool :: Learning Materials](https://learn.opentechschool.org/)
* [Packt · GitHub](https://github.com/PacktPublishing)
* [VideoLectures.NET - VideoLectures.NET](http://videolectures.net/)
* [W3Schools Online Web Tutorials](https://www.w3schools.com/)
* [stackexchange.com/sites](https://stackexchange.com/sites)
* [video](https://www.youtube.com/c/Geekific/playlists)
* [programiz.com](https://www.programiz.com/)
* [ Learn X in Y Minutes: Scenic Programming Language Tours](https://learnxinyminutes.com/)
* [exercism.io/my/tracks](https://exercism.io/my/tracks)
* [asmarterwaytolearn.com/](https://www.asmarterwaytolearn.com/)
* [libgen.rs/search.php?&req=a+smarter+way+to+learn&phrase=1&view=simple&column=def&sort=year&sortmode=DESC](http://libgen.rs/search.php?&req=a+smarter+way+to+learn&phrase=1&view=simple&column=def&sort=year&sortmode=DESC)
* [Interactive Tutorials](https://github.com/ronreiter/interactive-tutorials)
* [guru99.com/](https://www.guru99.com/)
* [8 BIT AVENUE - If you are mentally stable do not enter](http://www.8bitavenue.com/)
* [Home - deep ideas](http://www.deepideas.net/)
* [Machine Thoughts](https://machinethoughts.wordpress.com/)
* [Open Source: 2018 - Java/C++/Python/BigData/Android/](http://www.bogotobogo.com/index.php)

FIXME## Gen * Media & People

* [srid.ca/](https://srid.ca/)
* [rainingcomputers.blog/](https://rainingcomputers.blog/)
* [martinheinz.dev/blog/101](https://martinheinz.dev/blog/101)
* [video](https://www.youtube.com/@ciraolone) (tech IT)
* [video](https://www.youtube.com/@minuxkoda)
* [linuxlads.com/episodes/97/](https://linuxlads.com/episodes/97/)
* [video](https://www.youtube.com/@LocosporLinux)
* [dynomight.net/](https://dynomight.net/)
* [CMM ⋅ Plume](https://fediverse.blog/~/Cmm)
* [Home | ejmastnak](https://www.ejmastnak.com/)
* [technologyreview.es/](https://www.technologyreview.es/)
* [technologyreview.es/](https://www.technologyreview.es/)
* [builtin.com/tech-topics](https://builtin.com/tech-topics)
* [bdtechtalks.com/](https://bdtechtalks.com/)
* [max397574](https://github.com/max397574)
* [Home | mo8it.com](https://mo8it.com/) (Rust)
* [jacobzelko.com/](https://jacobzelko.com/)
* [fasterthanli.me/](https://fasterthanli.me/)
* [programmierbar.buzzsprout.com/](https://programmierbar.buzzsprout.com/) → News AI
* [programming.dev/](https://programming.dev/)
* [yapjh.xyz/](https://yapjh.xyz/)
* [ariadne.space/](https://ariadne.space/)
* [molleweide](https://github.com/molleweide)
* [morioh.com/](https://morioh.com/)
* [jonathanlorimer.dev/](https://jonathanlorimer.dev/)
* [freecodecamp.org/news/freecodecamp-podcast-season-2-developer-interviews/](https://www.freecodecamp.org/news/freecodecamp-podcast-season-2-developer-interviews/)
* [vsedov (Viv Sedov)](https://github.com/vsedov/)
* [Welcome! - Max’s Homepage](https://mrossinek.gitlab.io/)
* [Samuel Albanie - YouTube](https://www.youtube.com/@SamuelAlbanie1)
* [No Boilerplate - YouTube](https://www.youtube.com/@NoBoilerplate)
* [Zed - Code at the speed of thought](https://zed.dev/)
* [Uncertain Systems - YouTube](https://www.youtube.com/@UncertainSystems)
* [grok.computer - YouTube](https://www.youtube.com/@grok.computer)
* [Home](https://yapjh.xyz/)
* [TomS - YouTube](https://www.youtube.com/@YTomS)
* [Dmitry Soshnikov - YouTube](https://www.youtube.com/@DmitrySoshnikov-education/playlists)
* [Morphocular - YouTube](https://www.youtube.com/@morphocular)
* [Visually Explained - YouTube](https://www.youtube.com/@VisuallyExplained)
* [Home](https://jacobzelko.com/)
* [Improbable Matter - YouTube](https://www.youtube.com/@ImprobableMatter)
* [Home — Dailystuff on the Internet](https://dailystuff.nl/)
* [What Are the Best, Regularly Updated Machine Learning Blogs or Resources Available?](https://neptune.ai/blog/the-best-regularly-updated-machine-learning-blogs-or-resources)
* [Branch Education - YouTube](https://www.youtube.com/@BranchEducation)
* [Anders Pink Blog | Anders Pink](https://anderspink.com/)
* [journal.platonic.systems/](https://journal.platonic.systems/)
* Linux Lads 103
* [UnkertMedia.com – Welcome to UnkertMedia, the Trendiest Tech Blog](https://unkertmedia.com/)
* search "Gradient" on spotify or other podcast search engine
* [Top 11 Forums for Developers to Collaborate and Grow](https://www.codemonk.ai/insights/best-developer-forums)
* [video](https://www.youtube.com/@Gonkee)
* [video](https://www.youtube.com/@adibhanna)

FIXME## Blogs / Sites / Fora

* [devtalk](https://devtalk.com/) -* Discussion forum around many different development topics/languages, ran as a joint venture between a lot of great programming publishers like Manning and Pragmatic Bookshelf.
* [dev.to](https://dev.to/) -* Popular development community with an open source back end that was created as an alternative to Medium.
* [thenewstack.io/](https://thenewstack.io/)
* [thenewstack.io/](https://thenewstack.io/)
* [abstractexpr.com/](https://abstractexpr.com/)
* [gutier.io/](https://gutier.io/)
* [Essential Reading](https://rhodesmill.org/brandon/essential-reading/)
* [isthisit.nz/](https://isthisit.nz/)
* [humanreadablemag.com/](https://humanreadablemag.com/)
* [hackaday.com/](https://hackaday.com/)
* [spectrum.ieee.org/](https://spectrum.ieee.org/)
* [flet.dev/](https://flet.dev/)
* [Homepage - MarkTechPost](https://www.marktechpost.com/)
* [medevel.com/](https://medevel.com/)
* [Gitter](https://gitter.im/home/explore)
* [developpez.com/](https://www.developpez.com/)
* [dev.to/t/explainlikeimfive](https://dev.to/t/explainlikeimfive)
* [plainenglish.io/](https://plainenglish.io/)
* [planetgeek.ch/category/book/](https://www.planetgeek.ch/category/book/)
* [Overflow Blog](https://stackoverflow.blog/)
* [heise.de/developer/](https://www.heise.de/developer/)
* [cleancoder.com](http://cleancoder.com/)
* [thenewstack.io/](https://thenewstack.io/)
* [golem.de/](https://www.golem.de/)
* [openwebinars.net/blog/](https://openwebinars.net/blog/)
* [coriers.com/](https://www.coriers.com/)
* [marekrei.com/blog/](http://www.marekrei.com/blog/)
* [OpenGenus](https://iq.opengenus.org/)
* [*DevURLs – World's simplest developer news aggregator](https://devurls.com/)
* [opensource.com/](https://opensource.com/)
* [Stackshare](https://stackshare.io/onboarding/welcome)
* [oreilly.com/ideas](https://www.oreilly.com/ideas)
* [lobste.rs/](https://lobste.rs/)
* [dev.to/](https://dev.to/)
* [blog.joseluisq.net/](https://blog.joseluisq.net/)
* [hackaday.com/](https://hackaday.com/)
* [janakiev.com/](https://janakiev.com/)
* [Samuel Evans-Powell](http://sevanspowell.net/posts/learning-nasm-on-macos.html)
* [The Verge](https://www.theverge.com/)
* [Jousef Murad](https://www.youtube.com/channel/UCNm2TzhsV5wGlFIAcpCx9hQ)
* [cognitivemedium.com/](http://cognitivemedium.com/)
* [CODE BLOG – Программирование и IT – Python – C# – Шванов Вадим](https://shwanoff.ru/)
* [News, Tips, and Advice for Technology Professionals - TechRepublic](https://www.techrepublic.com/)
* [Hacker News](https://news.ycombinator.com/news)
* [dou.ua/](https://dou.ua/)
* [r/regex/](https://www.reddit.com/r/regex/)
* [techtarget.com/network](http://www.techtarget.com/network)
* [habr.com/](https://habr.com/)
* [computerra.ru/](https://www.computerra.ru/)
* [For learning, refreshing, or just for fun!](https://www.reddit.com/r/dailyprogrammer/)
* [Programming Praxis | A collection of etudes, updated weekly, for the education and enjoyment of the savvy programmer](https://programmingpraxis.com/)
* [uidotdev](https://www.youtube.com/channel/UCbAn7pVK2VIyo-UysfWGdZQ)
* [$$$Brendan Fortuner – Medium](https://medium.com/@bfortuner)

FIXME## YouTube

* [video](https://www.youtube.com/@KIT-Lehre-und-Wissen/playlists)
* [video](https://www.youtube.com/@TraversyMedia)
* [video](https://www.youtube.com/@Florian.Dalwigk)
* Th Morpheus Tutorials
* [video](https://www.youtube.com/@ExplainingComputers)
* [video](https://www.youtube.com/@codeaffinitydev)
* [video](https://www.youtube.com/@simondev758)
* [video](https://www.youtube.com/@TheoremofBeethoven)
* [video](https://www.youtube.com/@TheFrugalComputerGuy)
* [video](https://www.youtube.com/@samwitteveenai)
* [video](https://www.youtube.com/@voxelrifts)
* [video](https://www.youtube.com/@PowerCertAnimatedVideos)
* [video](https://www.youtube.com/@PapersWeLove)
* [video](https://www.youtube.com/@crr0ww)
* [video](https://www.youtube.com/@CodeCast)
* [aarthificial - YouTube](https://www.youtube.com/@aarthificial)
* [Tony Zhang - YouTube](https://www.youtube.com/@TonyZhang01/playlists)
* [Naresh i Technologies - YouTube](https://www.youtube.com/@NareshIT)
* [A Byte of Code - YouTube](https://m.youtube.com/@AByteofCode)
* [bashbunni](https://youtube.com/@bashbunni)
* [video](https://www.youtube.com/@dreamsofcode)
* [video](https://www.youtube.com/@codepersist)
* [youtube.com/@devonduty](https://youtube.com/@devonduty)
* [Code 2020](https://youtube.com/@Code2020)
* [Informatik - simpleclub](https://www.youtube.com/c/TheSimpleInformatics)
* [video](https://www.youtube.com/user/briantwill/playlists)
* [Up and Atom](https://www.youtube.com/c/UpandAtom)
* [Aaron Jack](https://www.youtube.com/c/AaronJack)
* [Andy Sterkowitz](https://www.youtube.com/c/AndySterkowitz)
* [Next Day Video](https://www.youtube.com/c/NextDayVideo)
* [Niklas Steenfatt](https://www.youtube.com/c/NiklasSteenfatt)
* [Pasja informatyki](https://www.youtube.com/c/Pasjainformatykitutoriale)
* [Paul Stringer's Mobile Tech](https://www.youtube.com/c/ExpertTalksMobile)
* [TechLead](https://www.youtube.com/c/TechLead)
* [javidx9](https://www.youtube.com/c/javidx9)
* [JCharisTech & J-Secur1ty](https://www.youtube.com/channel/UC2wMHF4HBkTMGLsvZAIWzRg)
* [Metosin](https://www.youtube.com/c/Metosin)
* [Corey Schafer](https://www.youtube.com/c/Coreyms)
* [Creel](https://www.youtube.com/c/WhatsACreel)
* [CS Dojo](https://www.youtube.com/c/CSDojo)
* [Dai xination](https://www.youtube.com/user/xination2001)
* [DorianDotSlash](https://www.youtube.com/c/Doriandotslash)
* [EducationAboutStuff](https://www.youtube.com/channel/UCwe4KT7J7C-HiJ9JLRDnecg)
* [Engineer Man](https://www.youtube.com/channel/UCrUL8K81R4VBzm-KOYwrcxQ)
* [Hilfesteller](https://www.youtube.com/user/Hilfesteller)
* [NDC Conferences](https://www.youtube.com/c/NDCConferences)
* [Programación ATS](https://www.youtube.com/c/Programaci%C3%B3nATS)
* [SEPL Goethe University Frankfurt](https://www.youtube.com/channel/UCpSoGwyH5yHHvQut3x6c_2g)
* [Codecademy](https://www.youtube.com/c/codecademy)
* [CodeEmporium](https://www.youtube.com/channel/UC5_6ZD6s8klmMu9TXEB_1IA)
* [CodeParade](https://www.youtube.com/c/CodeParade)
* [Coding Tech](https://www.youtube.com/c/CodingTech)
* [Healthy Software Developer](https://www.youtube.com/c/JaymeEdwardsMedia)
* [freeCodeCamp.org](https://www.youtube.com/c/Freecodecamp)
* [GOTO Conferences](https://www.youtube.com/c/GotoConferences)
* [Nerdisch](https://www.youtube.com/channel/UC0Ez864V-I_Z0-FfFI2Xlfg)
* [Franneck](https://www.youtube.com/user/FranneckLP)
* [hackerdashery](https://www.youtube.com/c/hackerdashery)
* [HackerRank](https://www.youtube.com/c/HackerrankOfficial)
* [HackUCF](https://www.youtube.com/channel/UCmCAVPGJTOrOc-Ux7Y0DHiw)
* [Технострим Mail.Ru Group](https://www.youtube.com/user/TPMGTU)
* [ФКН ВШЭ](https://www.youtube.com/c/%D0%A4%D0%9A%D0%9D%D0%92%D0%A8%D0%AD)
* [Академия Яндекса](https://www.youtube.com/channel/UCTUyoZMfksbNIHfWJjwr5aQ/playlists)
* [Компьютерные науки](https://www.youtube.com/channel/UCKFojzto0n4Ab3CRQRZ2zYA/playlists)
* [Academind](https://www.youtube.com/c/Academind)
* [Geek's Lesson](https://www.youtube.com/channel/UCKXx22vOENUyHrVAADq7Z_g)
* [Barry Brown Tutorials](https://www.youtube.com/user/profbbrown/videos)
* [BGZDevTips](https://www.youtube.com/channel/UCUxAK9NfJ92lj2aekp8EJdA)
* [BitMerge](https://www.youtube.com/c/BitMerge)
* [BP Learning](https://www.youtube.com/c/BPLearningTV)
* [brainfaqk](https://www.youtube.com/c/brainfaqk)
* [Brian Will](https://www.youtube.com/user/briantwill)
* [caltech](https://www.youtube.com/user/caltech)
* [Computer Science](https://www.youtube.com/c/ComputerScienceLessons)
* [Computerphile](https://www.youtube.com/user/Computerphile)
* [Context Free](https://www.youtube.com/channel/UCS4FAVeYW_IaZqAbqhlvxlA)
* [Luís Fred](https://www.youtube.com/c/Lu%C3%ADsFred)
* [Right2Trick](https://www.youtube.com/c/Right2Trick)
* [tanmay bakshi](https://www.youtube.com/channel/UCqufIGIYauviVaKyJUzKvQw)
* [Tech With Tim](https://www.youtube.com/c/TechWithTim)
* [Techquickie](https://www.youtube.com/c/Techquickie)
* [Tom Wildenhain](https://www.youtube.com/channel/UCgO8vdeWcywARd99Od-H_8A)
* [CSSSR](https://www.youtube.com/c/CSSSR_dev)
* [IT ШКОЛА SAMSUNG](https://www.youtube.com/channel/UCeXayKzDFcPaGunm1Vwto6w)
* [J-Secur1ty](https://www.youtube.com/channel/UC2wMHF4HBkTMGLsvZAIWzRg)
* [Jabrils](https://www.youtube.com/c/Jabrils) (gaming and ml)
* [Jombo](https://www.youtube.com/c/Jombo1)
* [JP Zhang](https://www.youtube.com/channel/UCz1kf6oWUnAqbVq62FGQp4Q)
* [Kalle Hallden](https://www.youtube.com/c/KalleHallden)
* [Keith Galli](https://www.youtube.com/c/KGMIT)
* [Kim B. Bruce](https://cs.pomona.edu/~kim/)
* [Knowledge Center](https://www.youtube.com/channel/UCMn3_305DqmTylxJPFA8OJA)
* [Google Developers Italia - YouTube - YouTube](https://www.youtube.com/user/DevelopersItaly)
* [Hyperplexed](https://youtube.com/@Hyperplexed)

FIXME## Podcasts

* [open.spotify.com/show/2nggqvCf2zVyRec9sFaZMY?si=ky0t23B1QuakyQ3-X1bmXQ](https://open.spotify.com/show/2nggqvCf2zVyRec9sFaZMY?si=ky0t23B1QuakyQ3-X1bmXQ)
* [open.spotify.com/episode/4AN0l5IYZpLm9ND5UgJKT5?si=ET4a5PGxRaOE_cNIIqXdGg](https://open.spotify.com/episode/4AN0l5IYZpLm9ND5UgJKT5?si=ET4a5PGxRaOE_cNIIqXdGg)
* [open.spotify.com/show/533UgDRbx1qIdY1IrwJp1l?si=aE_syY6oRGmHQKdxnIG34A](https://open.spotify.com/show/533UgDRbx1qIdY1IrwJp1l?si=aE_syY6oRGmHQKdxnIG34A)
* [Code Newbie Podcast](http://www.codenewbie.org/) -* Great interviews with programmers and advice for those just starting to learn to program.
* [Learn to Code with Me](http://learntocodewith.me/podcast/) -* Another great podcast geared towards beginning programmers.
* [Front End Happy Hour](http://frontendhappyhour.com/) -* Fun podcast with a roundtable of professional developers that tackle languages, frameworks, and other related things.
* [The Changelog](https://changelog.com/podcast) -* Conversations with the hackers, the leaders, and the innovators of software development.
* [devtools.fm/episodes](https://www.devtools.fm/episodes)
changelog master feed
* [adspthepodcast.com/2022/04/08/Episode-72.html](https://adspthepodcast.com/2022/04/08/Episode-72.html)
* [fossandcrafts.org/](https://fossandcrafts.org/)
* the technium
* hacker public radio
* [Command Line Heroes Podcast](https://open.spotify.com/show/4Jgtgr4mHXNDyLldHkfEMz?si=0_SJ-3Y2SmWj0bPVA84c9Q)
* [tlbh.it/index.html](https://tlbh.it/index.html)
* how to Code Well
* [codenewbie.org/podcast](http://www.codenewbie.org/podcast)
* [heise.de/Hoeren-Sie-von-uns-die-heise-Podcasts-4206659.html](https://www.heise.de/Hoeren-Sie-von-uns-die-heise-Podcasts-4206659.html)
* [stackoverflow.blog/podcast/](https://stackoverflow.blog/podcast/)
* [codenewbie.org/podcast](https://www.codenewbie.org/podcast)
* [http://n00bcore.de](http://n00bcore.de/)
* [learntocodewith.me/podcast/introducing-the-ltcwm-podcast/](http://learntocodewith.me/podcast/introducing-the-ltcwm-podcast/)
* [codertomorrow.com/coding/podcasts/2014/06/10/learn-how-to-code-with-podcasts.html](http://www.codertomorrow.com/coding/podcasts/2014/06/10/learn-how-to-code-with-podcasts.html)
* [radiopanik.org/actus/les-podcasts-de-la-programmation,182](http://www.radiopanik.org/actus/les-podcasts-de-la-programmation,182)
* [medium.freecodecamp.com/the-best-podcasts-for-new-coders-and-the-best-tools-for-listening-to-them-df393b1c8dc#.p7xjhbtvh](https://medium.freecodecamp.com/the-best-podcasts-for-new-coders-and-the-best-tools-for-listening-to-them-df393b1c8dc#.p7xjhbtvh)
* [simpleprogrammer.com/2014/03/10/ultimate-list-developer-podcasts/](https://simpleprogrammer.com/2014/03/10/ultimate-list-developer-podcasts/)
* [quora.com/What-are-the-best-podcasts-for-software-developers](https://www.quora.com/What-are-the-best-podcasts-for-software-developers)
* [Kolophon Podcast | Die Gesprächsserie von O'Reilly Deutschland mit Tim Pritlove](https://kolophon.oreilly.de/)

FIXME## [** [D] Does anyone know of any good ML podcasts I can listen to while at work? : MachineLearning](https://www.reddit.com/r/MachineLearning/comments/eoljno/d_does_anyone_know_of_any_good_ml_podcasts_i_can/)

* [podcasts.apple.com/us/podcast/oreilly-data-show-podcast/id944929220](https://podcasts.apple.com/us/podcast/oreilly-data-show-podcast/id944929220)
* [Pocho Costa](https://mytuner-radio.com/da/podcast/inteligencia-artificial-pocho-costa-1447402113)
* [Pocho Costa](https://podcasts.google.com/feed/aHR0cHM6Ly9wb2Nob2Nvc3RhLmNvbS9zZXJpZXMvaW50ZWxpZ2VuY2lhLWFydGlmaWNpYWwvZmVlZC8)
* [Cabeça de Lab - LuizaLabs | Magalu](https://podcasts.google.com/feed/aHR0cHM6Ly9hbmNob3IuZm0vcy9hNGZlOWY4L3BvZGNhc3QvcnNz)
* herzbergs Hörsaal. Informatik studieren mit den Ohren

FIXME## Tools

* [tweag](https://github.com/tweag)
* [taskflow.github.io/](https://taskflow.github.io/)
* [cloud.google.com/assured-open-source-software/docs/supported-packages](https://cloud.google.com/assured-open-source-software/docs/supported-packages)
* [moonrepo.dev/](https://moonrepo.dev/)
* [TOML: Tom's Obvious Minimal Language](https://toml.io/en/)
* [jdxcode/rtx](https://github.com/jdxcode/rtx)
* [twpayne/chezmoi](https://github.com/twpayne/chezmoi)
* [llvm.org/docs/index.html](https://llvm.org/docs/index.html)
* [gnu.org/software/make/](https://www.gnu.org/software/make/)
* [cmake.org/](https://cmake.org/)
* [swmath.org/](https://swmath.org/)
* [spack.readthedocs.io/en/latest/](https://spack.readthedocs.io/en/latest/)
* [probonopd/linuxdeployqt](https://github.com/probonopd/linuxdeployqt)
* [opendatastructures.org/](https://opendatastructures.org/)
* [redox-os.org/](https://www.redox-os.org/)
* [fuchsia.dev/](https://fuchsia.dev/)
* [meilisearch/meilisearch](https://github.com/meilisearch/meilisearch)
* [nvbn/thefuck](https://github.com/nvbn/thefuck)
* [BuilderIO/partytown](https://github.com/BuilderIO/partytown)
* [trpc/trpc](https://github.com/trpc/trpc)
* [javascriptdata/danfojs](https://github.com/javascriptdata/danfojs)
* [supertokens/supertokens-core](https://github.com/supertokens/supertokens-core)
* [zinclabs/zinc](https://github.com/zinclabs/zinc)
* [mantine.dev/](https://mantine.dev/)
* [nocodb/nocodb](https://github.com/nocodb/nocodb)
* [tsivinsky/hi-mom](https://github.com/tsivinsky/hi-mom)
* [hoppscotch/hoppscotch](https://github.com/hoppscotch/hoppscotch)
* [amplication/amplication](https://github.com/amplication/amplication)
* [ageitgey/node-unfluff](https://github.com/ageitgey/node-unfluff)
* [ageitgey/node-pullquoter](https://github.com/ageitgey/node-pullquoter)
* [graphviz.org/](http://www.graphviz.org/)
* [doxygen.nl/](https://www.doxygen.nl/)
* [tomtom-international/cpp-dependencies](https://github.com/tomtom-international/cpp-dependencies)
* [bouml.fr/](https://www.bouml.fr/)
* [llvm.org/](https://llvm.org/)
flex
* bison
* yacc
* [swig.org/](https://www.swig.org/)
* byacc
* ANTLR
* Xgettext
* Automake
* Gperf
* [cvxopt/cvxopt](https://github.com/cvxopt/cvxopt)
* [BVLC](https://github.com/BVLC)
* [nbviewer.jupyter.org/](http://nbviewer.jupyter.org/)

FIXME## Career

* Ivy: [deep-ivy-ltd.breezy.hr/,](https://deep-ivy-ltd.breezy.hr/) [deep-ivy-ltd.breezy.hr/p/47a8d305734301-core-contributor](https://deep-ivy-ltd.breezy.hr/p/47a8d305734301-core-contributor)

FIXME## Code Execution

* [dev.to/](https://dev.to/)
* [replit.com/](https://replit.com/)
* [wandbox.org/](https://wandbox.org/)
* [onecompiler.com/](https://onecompiler.com/)
* [godbolt.org/](https://godbolt.org/)
* [coliru.stacked-crooked.com/](https://coliru.stacked-crooked.com/)

FIXME## Institutions

* [Fachgruppe Maschinelle Sprachverarbeitung – Homepage der Fachgruppe Maschinelle Sprachverarbeitung](https://msv.stuvus.uni-stuttgart.de/?fbclid=IwAR1wk0uYyUTYrycXjEkCSe4dmui65CiOCq9ViV7HSVW66UUracxVKMXs9s0)
* [FachschaftSprachwissenschaft](http://www.fs-sprachwissenschaft.uni-tuebingen.de/wiki/index.php?title=Main_Page)
* [FAQs: Ministerium für Wissenschaft, Forschung und Kunst Baden-Württemberg](https://mwk.baden-wuerttemberg.de/de/hochschulen-studium/studienfinanzierung/gebuehren-fuer-internationale-studierende-und-zweitstudium/faqs/)
* [IMS-Bibliographie | Institut für Maschinelle Sprachverarbeitung | Universität Stuttgart](https://www.ims.uni-stuttgart.de/forschung/publikationen/bibliographie/)
* [mpi.nl/](http://www.mpi.nl/)
* [hsbi.hse.ru/](https://hsbi.hse.ru/)
* [Theunissen Lab - Home Page](http://theunissen.berkeley.edu/)
* [Research at Yandex](https://research.yandex.com/)
* [Microsoft Research – Emerging Technology, Computer, and Software Research](https://www.microsoft.com/en-us/research/?from=http%3A%2F%2Fresearch.microsoft.com%2Fresearch%2Fnlp%2F)
* [UZH - Institute of Computational Linguistics](https://www.cl.uzh.ch/en.html)
* [Welcome to the Max Planck Institute for Psycholinguistics — Max Planck Institute for Psycholinguistics](http://www.mpi.nl/)
* [Яндекс — інформація про компанію](https://yandex.ua/company/?ncrnd=2855)

FIXME## People

* pers [Elteoremadebeethoven (Alexander Vázquez)](https://github.com/Elteoremadebeethoven) (manim)
* perso  [xuefuzhao.github.io/](https://xuefuzhao.github.io/)
* perso [Archives - Eli Bendersky's website](https://eli.thegreenplace.net/archives/all)
* perso [ArrynDoesTech - YouTube](https://www.youtube.com/@arryndoestech)
* perso [Chris Portela - Cloud, Software, and Photography](https://www.chrisportela.com/)
* perso [Chronicles of Weird ThingsChronicae Novis Rebus](https://chronicles.mad-scientist.club/) (Nix etc)
* perso [Emma Böcker (@boecker@chaos.social) - rheinneckar.social](https://rheinneckar.social/@boecker@chaos.social)
* perso [Ephoto :: Stephen Houston — Software Engineer](https://www.smhouston.us/ephoto/)
* perso [Hugo Barrera's site](https://whynothugo.nl/)
* perso [Monster](https://monster.codeberg.page/)
* perso [Projects - Eli Bendersky's website](https://eli.thegreenplace.net/pages/projects)
* perso [Projects - Federico Terzi - A Software Engineering Journey](https://federicoterzi.com/projects)
* perso [Victor Zheng](https://victor-zheng.com/)
* perso [ansidev's blog | Le Minh Tri | Substack](https://ansidev.substack.com/p/wezterm-cheatsheet)
* perso [bespinian Blog](https://blog.bespinian.io/)
* perso [bespinian Blog](https://blog.bespinian.io/)
* perso [SergioRibera](https://github.com/SergioRibera)
* perso [radicle.xyz/](https://radicle.xyz/)
* perso [linkedin.com/in/manuel-epp/](https://www.linkedin.com/in/manuel-epp/)
* perso [video](https://www.youtube.com/@devaslife)
* perso [video](https://www.youtube.com/@devopstoolbox)
* perso [video](https://www.youtube.com/@levonog)
* person ansidev's blog
* [migalmoreno.com/](https://migalmoreno.com/)
* [doctorfree](https://github.com/doctorfree)
* [samwho.dev/](https://samwho.dev/) 
* [srid.ca/-/all](https://srid.ca/-/all)
* [sommaa.github.io/](https://sommaa.github.io/)
* [chrisatmachine.com/](https://www.chrisatmachine.com/)
* [gutier.io/authors/julio/](https://gutier.io/authors/julio/)
* [nicco.love/](https://nicco.love/)
* [dimbleby](https://github.com/dimbleby)
* [wzchen.com/](http://www.wzchen.com/)
* [BrodieRobertson](https://github.com/BrodieRobertson)
* [wmvanvliet](https://github.com/wmvanvliet)
* [ianyepan.github.io/](https://ianyepan.github.io/)
* [dioptricdesign.com/](https://www.dioptricdesign.com/)
* [jmbuhr.de/](https://jmbuhr.de/)
* [preciouschicken.com/blog/](https://www.preciouschicken.com/blog/) (great stack)
* [sookocheff.com/](https://sookocheff.com/)
* [drasite.com/](https://drasite.com/)
* [thorsten-hans.com/](https://www.thorsten-hans.com/)
* [thadryanjs.github.io/](https://thadryanjs.github.io/)
* [julianhofer.eu/](https://julianhofer.eu/)
* [monster.codeberg.page/](https://monster.codeberg.page/)
* [matthewrhone.dev/](https://matthewrhone.dev/)

FIXME## Coding Challenges and Education

* [thecodingtrain.com/CodingChallenges/](https://thecodingtrain.com/CodingChallenges/)
* [app.codility.com/programmers/](https://app.codility.com/programmers/)
* [2000 Tutorials Digital Ocean](https://waves.digitalocean.com/n/gM0awsS07004TN0tD000fWA)
* [code.org/learn](https://code.org/learn)
* [Code Courses](https://www.freecodecamp.org/news/coursera-free-online-courses-6d84cdb30da/)
* [10 Git Repositories to Help You Prepare for Your Next Technical Interview](https://medium.com/better-programming/10-git-repositories-to-help-you-prepare-for-your-next-technical-interview-f965bfd1adc5)
* [freecodecamp.org/news/most-popular-free-online-courses/](https://www.freecodecamp.org/news/most-popular-free-online-courses/)
* [prometheus.org.ua/prometheus-plus/pm-lits-course/](https://prometheus.org.ua/prometheus-plus/pm-lits-course/)
* [freecodecamp.org/news/how-i-learned-to-code-without-a-cs-degree-or-bootcamp/](https://www.freecodecamp.org/news/how-i-learned-to-code-without-a-cs-degree-or-bootcamp/)
* [gocoder.one/](https://www.gocoder.one/)
* [app.codility.com/programmers/](https://app.codility.com/programmers/)
* [Weekly Contest 169](https://leetcode.com/T7KxOs/?DRVUUAkwARUGHGpKABwBGQcWalAB=820&DRVUUAk%3D=isaac.r.riley%40gmail.com&BBFbUjoBEx0N=contest_link_in_text&DgpaVDoKHxEBFGpaCQYRGw%3D%3D=%7B%22Gx1bXTocFwMbEVpXOgYW%22%3A+820%2C+%22DRVUUAk%3D%22%3A+%22isaac.r.riley%40gmail.com%22%2C+%22HBlHXgAbLQUaFEY%3D%22%3A+%5B%22RxtaVxEKAQRHGUVQShgXFQMUTBQGABwEDQtBFFRZS18aHVJQFhsXAg%3D%3D%22%2C+%22RxtaVxEKAQRHD1BcDgMLXQsXW00AHAZdWU4MFg%3D%3D%22%2C+%22RxtaVxEKAQRHGUVQSg0bBw0dXlUcQhEfBgxQShFCQ0ZHClBeDBwGFRo%3D%22%2C+%22RxtaVxEKAQRHGlxOAAoZHBFVVlYLGxcDHFUED0o%3D%22%5D%7D&DhFbWAkwBwIE=https://leetcode.com/contest/weekly-contest-169/)
* [Biweekly Contest 16](https://leetcode.com/T7KxOs/?DRVUUAkwARUGHGpKABwBGQcWalAB=820&DRVUUAk%3D=isaac.r.riley%40gmail.com&BBFbUjoBEx0N=biweekly_contest_link_in_text&DgpaVDoKHxEBFGpaCQYRGw%3D%3D=%7B%22Gx1bXTocFwMbEVpXOgYW%22%3A+820%2C+%22DRVUUAk%3D%22%3A+%22isaac.r.riley%40gmail.com%22%2C+%22HBlHXgAbLQUaFEY%3D%22%3A+%5B%22RxtaVxEKAQRHGUVQShgXFQMUTBQGABwEDQtBFFRZS18aHVJQFhsXAg%3D%3D%22%2C+%22RxtaVxEKAQRHD1BcDgMLXQsXW00AHAZdWU4MFg%3D%3D%22%2C+%22RxtaVxEKAQRHGUVQSg0bBw0dXlUcQhEfBgxQShFCQ0ZHClBeDBwGFRo%3D%22%2C+%22RxtaVxEKAQRHGlxOAAoZHBFVVlYLGxcDHFUED0o%3D%22%5D%7D&DhFbWAkwBwIE=https://leetcode.com/contest/biweekly-contest-16/)
* [leetcode.com/problems/two-sum/](https://leetcode.com/problems/two-sum/)
* [Convert excel column names to numbers](https://stackoverflow.com/questions/34537243/convert-excel-column-names-to-numbers)
* Excel Challenge Problem
* [Hackerrank Print Prime Numbers](https://www.hackerrank.com/challenges/print-prime-numbers/problem)
* [adventofcode.com/](https://adventofcode.com/)
* [codescracker.com/index.htm](https://codescracker.com/index.htm)
* [r/dailyprogrammer/comments/9dv08q/20180907_challenge_367_hard_the_mondrian_puzzle/?st=JOHVYFQM&sh=42a19ef7](https://www.reddit.com/r/dailyprogrammer/comments/9dv08q/20180907_challenge_367_hard_the_mondrian_puzzle/?st=JOHVYFQM&sh=42a19ef7)

FIXME## People 2

* [Anaphory](https://github.com/Anaphory)
* [Colin Galen](https://www.youtube.com/@ColinGalen)
* [bigboxSWE](https://www.youtube.com/@bigboxSWE)
* [video](https://www.youtube.com/@AByteofCode)
* [strager](https://github.com/strager)
* [Dima Maleev](https://youtube.com/c/SunnyDimKo)
* [Brian Will – Medium](https://medium.com/@brianwill)
* [youtube.com/@EberhardWolff](https://youtube.com/@EberhardWolff)
* [tsoding / porth · GitLab](https://gitlab.com/tsoding/porth)
* [video](https://www.youtube.com/c/Cleancoders)
* Igor Zhirkov (interests)
* [ianthehenry.com/](https://ianthehenry.com/)
* [markwatson.com/](https://markwatson.com/)
* [daniel-siepmann.de/](https://daniel-siepmann.de/)
* [sbr.pm/](https://sbr.pm/)
* → [gideonwolfe.com/](https://gideonwolfe.com/)
* [kobzol](https://github.com/kobzol)

FIXME## Media, Channels

* [refactoring.guru/uk](https://refactoring.guru/uk)
* [VD](https://thevaluable.dev/page/about/)
* [Сообщества свободного ПО](https://telegra.ph/Soobshchestva-svobodnogo-PO-07-24)
* [Journal of Open Source Software](https://joss.theoj.org/)
* [derstandard.de/web/innovationen](https://www.derstandard.de/web/innovationen)
* [engineersjournal.substack.com/archive](https://engineersjournal.substack.com/archive)
* [Blogerator's newsline - новостной HTTP-блог об ИТ](http://blogerator.org/)
* [queue.acm.org/topics.cfm](https://queue.acm.org/topics.cfm)
* [increment.com/programming-languages/](https://increment.com/programming-languages/)
* [increment.com/topics/](https://increment.com/topics/)
* [increment.com/issues/](https://increment.com/issues/)
* [towardsdatascience.com/a-primer-on-architectural-patterns-fd1b22a4389d](https://towardsdatascience.com/a-primer-on-architectural-patterns-fd1b22a4389d)
* [Software Engineering Blog & Programming Tutorials | Toptal®](https://www.toptal.com/developers/blog)
LibHunt - Trending open-source projects and their alternatives
* [yet another insignificant… Programming Notes](https://www3.ntu.edu.sg/home/ehchua/programming/index.html)
* [blog. - Jayway](https://blog.jayway.com/)
* [codemotion.com/magazine](https://www.codemotion.com/magazine)
* [planetgeek.ch/](https://www.planetgeek.ch/)
* [loftblog](https://youtube.com/user/loftblog)
* [planetgeek.ch/category/presentation/](https://www.planetgeek.ch/category/presentation/)
* [thevaluable.dev/](https://thevaluable.dev/)
* [themouseless.dev/posts/](https://themouseless.dev/posts/)
* [habr.com/ru/all/](https://habr.com/ru/all/)
* [vk.com/physics_math](https://vk.com/physics_math)
* [themouseless.dev/posts/](https://themouseless.dev/posts/)
* [proglib.io/](https://proglib.io/)
* [dev.to/](https://dev.to/)
* [sirupsen.com/](https://sirupsen.com/)
* [GolemDE](https://www.youtube.com/channel/UChf2SMcCmP-dlsWleaNo6oQ)
* [marcus-s](https://www.youtube.com/channel/UCdHDE389WqZX-TP6wPN1Llg)
* [GamingTux](https://www.youtube.com/channel/UCnaGZJh-fOxB5milR43h66Q)
* [titanwolf.org](https://titanwolf.org/)
* [Código Fonte TV](https://www.youtube.com/user/codigofontetv)
* [Alura Cursos Online](https://www.youtube.com/user/aluracursosonline)
* [Programador BR](https://www.youtube.com/channel/UCrdgeUeCll2QKmqmihIgKBQ)
* [Hipsters Ponto Tech](https://www.listennotes.com/podcasts/hipsters-ponto-tech-alura-mKJV43-8j7g/)
* [video](https://www.youtube.com/@devopstoolbox) 
* [zestedesavoir.com/bibliotheque/informatique/](https://zestedesavoir.com/bibliotheque/informatique/)

FIXME## Course / Tutorial

* [From Nand to Tetris Part 1](https://www.youtube.com/playlist?list=PLrDd_kMiAuNmSb-CKWQqq9oBFN_KNMTaI)
* [ACME 2022-2023 Materials](https://acme.byu.edu/2022-2023-materials)
**Reddit - recommendation of a hands-on programming language course
* [academic-resources/stared-repos](https://github.com/academic-resources/stared-repos)
* [Machine Learning Foundations Course – Regression Analysis](https://programmerweekly.us2.list-manage.com/track/click?u=72f68dcee17c92724bc7822fb&id=522e67d953&e=b5a8df9a4a) This course is designed to help you build a solid foundation in machine learning, focusing on core concepts and in-depth explanations of regression analysis, which is often overlooked in other courses. Whether  you're a beginner or someone looking to strengthen your understanding of machine learning, this course is for you!* [How To Build A Control Plane To Manage Kubernetes Clusters With kcp?](https://programmerweekly.us2.list-manage.com/track/click?u=72f68dcee17c92724bc7822fb&id=1548b0c657&e=b5a8df9a4a) kcp is a Kubernetes cluster that cannot even run Pods (container). Instead, it is a specialized Kubernetes distribution that acts as a control plane for Kubernetes clusters.
* [guru99.com/agile-testing-course.html](https://www.guru99.com/agile-testing-course.html)
* [GitHub - donnemartin/system-design-primer: Learn how to design large-scale systems. Prep for the system design interview. Includes Anki flashcards.](https://github.com/donnemartin/system-design-primer)
* [Developer-Y/cs-video-courses](https://github.com/Developer-Y/cs-video-courses)
* [training-course-material.com/training/Main_Page](https://training-course-material.com/training/Main_Page)
* [Docker For Beginners: From Docker Desktop to Deployment](https://www.youtube.com/watch?v=i7ABlHngi1Q)
* [video](https://www.youtube.com/c/ProgramiranjeTutorijali/playlists)
* [video](https://www.youtube.com/channel/UCSYrkPyht9PAXMhAbkGTbsQ/playlists)
* [digitalocean.com/community/tutorials](https://www.digitalocean.com/community/tutorials)
* [journaldev.com/](https://www.journaldev.com/)
* [aws.amazon.com/blogs/opensource/why-use-docker-containers-for-machine-learning-development/](https://aws.amazon.com/blogs/opensource/why-use-docker-containers-for-machine-learning-development/)
* [freecodecamp.org/news/what-is-devsecops/](https://www.freecodecamp.org/news/what-is-devsecops/)
* [freecodecamp.org/news/how-to-run-linux-apps-on-windows-10-11-using-wsl/](https://www.freecodecamp.org/news/how-to-run-linux-apps-on-windows-10-11-using-wsl/)
* [freecodecamp.org/news/linked-lists-in-technical-interviews/](https://www.freecodecamp.org/news/linked-lists-in-technical-interviews/)
* [freecodecamp.org/news/svg-tutorial-learn-to-code-images/](https://www.freecodecamp.org/news/svg-tutorial-learn-to-code-images/)
* [freecodecamp.org/news/learn-how-to-build-apps-from-a-business-perspective/](https://www.freecodecamp.org/news/learn-how-to-build-apps-from-a-business-perspective/)
* [freecodecamp.org/news/can-you-code-on-a-phone/](https://www.freecodecamp.org/news/can-you-code-on-a-phone/)
* [freecodecamp.org/news/2021-new-coder-survey-18000-people-share-how-theyre-learning-to-code/](https://www.freecodecamp.org/news/2021-new-coder-survey-18000-people-share-how-theyre-learning-to-code/)
* [freecodecamp.org/ukrainian/learn/](https://www.freecodecamp.org/ukrainian/learn/)
* [Tutorials Point (India) Ltd.](https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg)

FIXME## Projects, Tools, Libraries

* [orsinium-labs/python-lambda-calculus: Lambda Calculus things implemented on Python](https://github.com/orsinium-labs/python-lambda-calculus)
* [Mojo](https://programmerweekly.us2.list-manage.com/track/click?u=72f68dcee17c92724bc7822fb&id=506258937d&e=b5a8df9a4a) A new programming language for all AI developers. Mojo combines the usability of Python with the performance of C, unlocking unparalleled programmability of AI hardware and extensibility of AI models
* [mlc-llm](https://programmerweekly.us2.list-manage.com/track/click?u=72f68dcee17c92724bc7822fb&id=b0444df446&e=b5a8df9a4a) Enable everyone to develop, optimize and deploy AI models natively on everyone's devices
* [Trawler](https://programmerweekly.us2.list-manage.com/track/click?u=72f68dcee17c92724bc7822fb&id=a704dd8458&e=b5a8df9a4a) PowerShell script to help Incident Responders discover adversary persistence mechanisms
* [tutim](https://programmerweekly.us2.list-manage.com/track/click?u=72f68dcee17c92724bc7822fb&id=30a93f90cc&e=b5a8df9a4a) The open-source wizard form infrastructure for web applications
* [nango](https://programmerweekly.us2.list-manage.com/track/click?u=72f68dcee17c92724bc7822fb&id=d9ac2ed1a5&e=b5a8df9a4a) Pre-built OAuth flows & secure token management for 90+ APIs
* [Teletrace](https://programmerweekly.us2.list-manage.com/track/click?u=72f68dcee17c92724bc7822fb&id=4e35a87f18&e=b5a8df9a4a) Open-Source Tracing Platform
* [IntelliNode](https://programmerweekly.us2.list-manage.com/track/click?u=72f68dcee17c92724bc7822fb&id=5904481f92&e=b5a8df9a4a) Unified access to various AI models, such as ChatGPT, Diffusion, Cohere, and others, using a few Javascript lines
* [rustic](https://programmerweekly.us2.list-manage.com/track/click?u=72f68dcee17c92724bc7822fb&id=6cffd8871f&e=b5a8df9a4a) Fast, encrypted, deduplicated backups powered by Rust
* [Tempo](https://programmerweekly.us2.list-manage.com/track/click?u=72f68dcee17c92724bc7822fb&id=35a3c6cd2b&e=b5a8df9a4a) Low latency, cross-platform, end-to-end typesafe APIs.
* [HigherOrderCO/HVM](https://github.com/HigherOrderCO/HVM)
* [gnuplot.info/](http://www.gnuplot.info/)
* [hub.docker.com/](https://hub.docker.com/)
* [yamlchecker.com/](https://yamlchecker.com/)
* [antlr.org/](https://www.antlr.org/)
* [fosspost.org/open-source-cad-programs-autocad-alternative/](https://fosspost.org/open-source-cad-programs-autocad-alternative/)
* [app.diagrams.net/](https://app.diagrams.net/)
* minder
* lowchart
* gnuplot ASCII mode
* [codesandbox.io/](https://codesandbox.io/)

FIXME## Very Best Resources

* [The Twelve-Factor App](https://12factor.net/config)
* [roadmap.sh/](https://roadmap.sh/)
* [up-for-grabs.net/#/](https://up-for-grabs.net/#/)
* [showthedocs.com/](http://showthedocs.com/)
* [The ReadME Project · Meet the people behind the projects you love](https://github.com/readme)
* [semver.org/](https://semver.org/)
* [developers.google.com/learn](https://developers.google.com/learn)
* [developers.google.com/web/fundamentals/codelabs](https://developers.google.com/web/fundamentals/codelabs)
* [it-tools.tech/](https://it-tools.tech/)
* [God-Tier Development Roadmap](https://youtu.be/pEfrdAtAmqk)
* [GitHub - 0voice/interview_internal_reference: 2021年最新总结，阿里，腾讯，百度，美团，头条等技术面试题目，以及答案，专家出题人分析汇总。](https://github.com/0voice/interview_internal_reference)
* [guru99.com/](https://www.guru99.com/)
* [stackoverflow.com/users/8964686/i-riley](https://stackoverflow.com/users/8964686/i-riley)
* [devdocs.io](https://devdocs.io/)
* [awesomeopensource.com/project/webpro/programming-principles](https://awesomeopensource.com/project/webpro/programming-principles)
* [awesomeopensource.com/](https://awesomeopensource.com/)
* [codereview.stackexchange.com/](https://codereview.stackexchange.com/)
* FreeCodeCamp

FIXME## Courses

* [refactoring.guru/uk](https://refactoring.guru/uk)
* [Foundations-of-Applied-Mathematics](https://github.com/Foundations-of-Applied-Mathematics)
* [The Missing Semester of Your CS Education](https://missing.csail.mit.edu/)
* [csunplugged](http://csunplugged.org/wp-content/uploads/2015/03/CSUnplugged_OS_2015_v3.1.pdf)
* [Computer Science Unplugged](https://classic.csunplugged.org/)

FIXME## Docs

* [makeareadme.com/](https://www.makeareadme.com/)
* [Beautiful Docs](https://github.com/matheusfelipeog/beautiful-docs) → create pull request, add Julia
* [matiassingers/awesome-readme](https://github.com/matiassingers/awesome-readme)

FIXME## Learning

* [The BEST Coding Interview Roadmap in 2023 (free)](https://www.youtube.com/watch?v=jgQjes7MgTM)

FIXME## Project Resources

* [github.blog/2023-04-03-calling-all-open-source-maintainers/](https://github.blog/2023-04-03-calling-all-open-source-maintainers/)
* [Martyr2's Mega Project Ideas List! - Share Your Project | Dream.In.Code](https://www.dreamincode.net/forums/topic/78802-martyr2s-mega-project-ideas-list/)
* [10 Great Programming Projects to Improve Your Resume and Learn to Program](https://levelup.gitconnected.com/10-great-programming-projects-to-improve-your-resume-and-learn-to-program-74b14d3e9e16)
* [btakita/philosophy](https://github.com/btakita/philosophy)
* [noggatur/philosophy](https://github.com/noggatur/philosophy)
* [rigelrozanski/philosophy](https://github.com/rigelrozanski/philosophy)
* [projects for coding](https://github.com/karan/Projects)
* [GH Collab Reddit](https://www.reddit.com/r/githubcollab/)
* [Free Code Camp Project](https://www.freecodecamp.org/news/plan-code-and-deploy-a-startup-in-2-hours/)
* [Software Tools for Hobby-Scale Projects](https://rickcarlino.com/2019/11/02/software-tools-for-hobby-sized-projects-html.html)

FIXME## Cheatsheets

* [cheat-sheets.org/](http://www.cheat-sheets.org/)
* [bookflow.ru/?s=%D0%A8%D0%BF%D0%B0%D1%80%D0%B3%D0%B0%D0%BB%D0%BA%D0%B0](https://bookflow.ru/?s=%D0%A8%D0%BF%D0%B0%D1%80%D0%B3%D0%B0%D0%BB%D0%BA%D0%B0)
* [codecademy.com/resources/cheatsheets/all](https://www.codecademy.com/resources/cheatsheets/all)
* [cheatography.com/programming/](https://cheatography.com/programming/)
* [dev.to/devmount/a-cheatsheet-of-128-cheatsheets-for-developers-f4m](https://dev.to/devmount/a-cheatsheet-of-128-cheatsheets-for-developers-f4m)
* [onecompiler.com/cheatsheets](https://onecompiler.com/cheatsheets)
* [bookflow.ru/besplatnye-materialy-dlya-programmistov/](https://bookflow.ru/besplatnye-materialy-dlya-programmistov/)
* [cheatography.com/](https://www.cheatography.com/)

FIXME## Resources

* [Reddit - Cheat sheet repository for beginners.](https://www.reddit.com/r/learnprogramming/comments/110v8kw/cheat_sheet_repository_for_beginners/)
* [Awesome Open Source](https://awesomeopensource.com/)
* [sweb.inf.ed.ac.uk/bundy/how-tos/resbible.html](https://sweb.inf.ed.ac.uk/bundy/how-tos/resbible.html)
* [Computed Diff - Diff Checker](https://www.diffchecker.com/diff)
* [labnol.org/](http://www.labnol.org/)
* [EduCBA Tutorials](https://www.educba.com/tutorials/)
* [The Programming Languages Beacon](http://www.lextrait.com/vincent/implementations.html)
* [Спортивное программирование Часть 1](https://vk.com/wall-16108331_152620)
* [Спортивное программирование Часть 2](https://vk.com/wall-16108331_152694)
* [en.wikipedia.org/wiki/Programming_paradigm](https://en.wikipedia.org/wiki/Programming_paradigm)
* [mame/quine-relay](https://github.com/mame/quine-relay)
* [mame/quine-relay](https://github.com/mame/quine-relay)
* [programminghistorian.org/](https://programminghistorian.org/)
* [In favour of recursive functions, not imperative constructs,, to make loops](https://www.gresearch.co.uk/article/in-favour-of-recursive-functions-not-imperative-constructs-to-make-loops/)
    Java, Python, React, Angular, PP, PostgreSQL, Redis, MogoDB, AWS, S3, EC2, ECS, EKS, *nix system administration, Git and CI with TDD, Docker, Kubernetes
* [exams.ubccsss.org/potential/](https://exams.ubccsss.org/potential/)
* [gitter.im/home/explore](https://gitter.im/home/explore)
* [meetup.com/](https://www.meetup.com/)

FIXME## Media

* [Sympolymathesy, by Chris Krycho](https://v5.chriskrycho.com/)
* [joshcollinsworth.com/](https://joshcollinsworth.com/)
* [eugeneyan.com/](https://eugeneyan.com/)
* [catskull.net/html.html](https://catskull.net/html.html)
* [rednafi.com/](https://rednafi.com/)
* [praveshkoirala.com/](https://praveshkoirala.com/)
* [hirrolot.github.io/](https://hirrolot.github.io/)
* [coderslegacy.com/](https://coderslegacy.com/)
* [mathspp.com/blog](https://mathspp.com/blog)
* [elevanth.org/blog/](https://elevanth.org/blog/)
* [lexfridman.com/](https://lexfridman.com/)
* [drorpoleg.com/](https://www.drorpoleg.com/)
* [coderwall.com/](https://coderwall.com/)
* [blog.paperspace.com/](https://blog.paperspace.com/)
* [observablehq.com/community](https://observablehq.com/community)
* [InfoQ FR: Infos sur le Développement Logiciel, Vidéos et Livres](https://www.infoq.com/fr/)
* [Stack Advice | StackShare](https://stackshare.io/feed)
* [lobste.rs/](https://lobste.rs/)
* [sicpers.info](https://www.sicpers.info/)
* [video](https://www.youtube.com/@g5min) (Graphics, gen CS)
* [video](https://www.youtube.com/@strager_)
* [video](https://www.youtube.com/@chrisatmachine)
* [video](https://www.youtube.com/@cpow85)
* [video](https://www.youtube.com/@StudyingWithAlex?app=desktop)
* [video](https://www.youtube.com/@saraepaolo)

FIXME### Podcasts 2

* [Take Up Code](https://open.spotify.com/show/5i2jy4xzmOqUOvWmwrSOsm?si=ttxaYE9FSYCvzdzhMM5QrQ)
Techtiefen
* [deploy.codenation.com.br/podcasts/home](https://deploy.codenation.com.br/podcasts/home)
* Programming Throwdown
* [radiopublic.com/commit-WYMXMl](https://radiopublic.com/commit-WYMXMl)
* Kopec Explains Software

FIXME### Video

* [video](https://www.youtube.com/c/EngineerMan/playlists)
* [engineer-man/youtube](https://github.com/engineer-man/youtube)
* [Лекторий ФПМИ](https://youtube.com/c/%D0%9B%D0%B5%D0%BA%D1%82%D0%BE%D1%80%D0%B8%D0%B9%D0%A4%D0%9F%D0%9C%D0%98)
* [Onigiri - YouTube](https://www.youtube.com/c/OnigiriScience)
* [Quartier Génial](https://www.youtube.com/channel/UCqMbspvn2Nw94kL0l-lXgWg)
* [Programmieren Starten](https://youtube.com/c/ProgrammierenStarten)
* [video](https://www.youtube.com/@mycodeschool)

FIXME### Newsletters

* [techleaddigest.net/digests](https://techleaddigest.net/digests)
* [programmingdigest.net/digests](https://programmingdigest.net/digests)
* [dailytech.email/digests](https://dailytech.email/digests)

FIXME## Tools and Software Resources

* [nbviewer.jupyter.org/](https://nbviewer.jupyter.org/)
* [faust.grame.fr/](https://faust.grame.fr/) functional programming language for signal processing
* [Top 20 Developer Tools for 2020](https://blog.axosoft.com/top-developer-tools-2020/)
* [repl.it/site/pricing](https://repl.it/site/pricing)
* [jdoodle.com](https://www.jdoodle.com/)
* [colab.research.google.com/drive/1RYWJaMEHVeN8yI83QtL35GOSFQBRgLaX](https://colab.research.google.com/drive/1RYWJaMEHVeN8yI83QtL35GOSFQBRgLaX) BehaviorSuite
* [console.paperspace.com/teukn6ij6/projects](https://console.paperspace.com/teukn6ij6/projects)
* GraphicsMagick GM Utility
* [Textualize/rich-cli](https://github.com/Textualize/rich-cli)
* [opensource.com/](https://opensource.com/) 
* [Play with Docker](https://www.docker.com/play-with-docker)
* [Diagram Software and Flowchart Maker](https://www.diagrams.net/)
* [paketo.io/docs/](https://paketo.io/docs/)
* [nodepit.com/](https://nodepit.com/)

FIXME### Build Systems

* [makefiletutorial.com/](https://makefiletutorial.com/)
* [gnu.org/software/make/manual/make.html](https://www.gnu.org/software/make/manual/make.html)
* [mesonbuild.com/](https://mesonbuild.com/)
* [mesonbuild/meson](https://github.com/mesonbuild/meson)

FIXME# Meetups, Social, etc

* [rheinneckar.social/@NixRust](https://rheinneckar.social/@NixRust)
* [rheinneckar.events/events/f5549ff6-4317-4f2f-918b-6aef822a459a](https://rheinneckar.events/events/f5549ff6-4317-4f2f-918b-6aef822a459a)

FIXME# Institutions, Organizations, etc.

* [alugha.com/](https://alugha.com/)
* [aleph-alpha.com/](https://aleph-alpha.com/)
* [deepl.com/blog](https://www.deepl.com/blog)
